

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 10 14:50:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84  0000                     
    85                           ; Version 2.05
    86                           ; Generated 20/12/2018 GMT
    87                           ; 
    88                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4620 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataBANK1
   121  004800                     __pidataBANK1:
   122                           	opt callstack 0
   123                           
   124                           ;initializer for _BallDispensed
   125  004800  FFFF               	dw	65535
   126  004802  FFFF               	dw	65535
   127  004804  FFFF               	dw	65535
   128  004806  FFFF               	dw	65535
   129  004808  FFFF               	dw	65535
   130  00480A  FFFF               	dw	65535
   131  00480C  FFFF               	dw	65535
   132  00480E  FFFF               	dw	65535
   133  004810  FFFF               	dw	65535
   134  004812  FFFF               	dw	65535
   135                           
   136                           ;initializer for _DistanceCanister
   137  004814  FFFF               	dw	65535
   138  004816  FFFF               	dw	65535
   139  004818  FFFF               	dw	65535
   140  00481A  FFFF               	dw	65535
   141  00481C  FFFF               	dw	65535
   142  00481E  FFFF               	dw	65535
   143  004820  FFFF               	dw	65535
   144  004822  FFFF               	dw	65535
   145  004824  FFFF               	dw	65535
   146  004826  FFFF               	dw	65535
   147                           
   148                           ;initializer for _State
   149  004828  FFFF               	dw	65535
   150  00482A  FFFF               	dw	65535
   151  00482C  FFFF               	dw	65535
   152  00482E  FFFF               	dw	65535
   153  004830  FFFF               	dw	65535
   154  004832  FFFF               	dw	65535
   155  004834  FFFF               	dw	65535
   156  004836  FFFF               	dw	65535
   157  004838  FFFF               	dw	65535
   158  00483A  FFFF               	dw	65535
   159                           
   160                           	psect	mediumconst
   161  00FE12                     __pmediumconst:
   162                           	opt callstack 0
   163  00FE12  00                 	db	0
   164  00FE13                     _keys:
   165                           	opt callstack 0
   166  00FE13  31                 	db	49
   167  00FE14  32                 	db	50
   168  00FE15  33                 	db	51
   169  00FE16  41                 	db	65
   170  00FE17  34                 	db	52
   171  00FE18  35                 	db	53
   172  00FE19  36                 	db	54
   173  00FE1A  42                 	db	66
   174  00FE1B  37                 	db	55
   175  00FE1C  38                 	db	56
   176  00FE1D  39                 	db	57
   177  00FE1E  43                 	db	67
   178  00FE1F  2A                 	db	42
   179  00FE20  30                 	db	48
   180  00FE21  23                 	db	35
   181  00FE22  44                 	db	68
   182  00FE23  00                 	db	0
   183  00FE24                     __end_of_keys:
   184                           	opt callstack 0
   185  00FE24  50                 	db	80
   186  00FE25                     __end_of_LCD_LINE4_ADDR:
   187                           	opt callstack 0
   188  00FE25  10                 	db	16
   189  00FE26                     __end_of_LCD_LINE3_ADDR:
   190                           	opt callstack 0
   191  00FE26  40                 	db	64
   192  00FE27                     __end_of_LCD_LINE2_ADDR:
   193                           	opt callstack 0
   194  00FE27  00                 	db	0
   195  00FE28                     __end_of_LCD_LINE1_ADDR:
   196                           	opt callstack 0
   197  00FE28                     _LCD_SIZE_VERT:
   198                           	opt callstack 0
   199  00FE28  04                 	db	4
   200  00FE29                     __end_of_LCD_SIZE_VERT:
   201                           	opt callstack 0
   202  00FE29                     _LCD_SIZE_HORZ:
   203                           	opt callstack 0
   204  00FE29  10                 	db	16
   205  00FE2A                     __end_of_LCD_SIZE_HORZ:
   206                           	opt callstack 0
   207  0000                     _SSPBUF	set	4041
   208  0000                     _SSPCON2bits	set	4037
   209  0000                     _SSPCON1	set	4038
   210  0000                     _SSPADD	set	4040
   211  0000                     _SSPCON1bits	set	4038
   212  0000                     _SSPCON2	set	4037
   213  0000                     _SSPSTAT	set	4039
   214  0000                     _EECON2	set	4007
   215  0000                     _EEDATA	set	4008
   216  0000                     _EEADR	set	4009
   217  0000                     _EECON1bits	set	4006
   218  0000                     _ADRESL	set	4035
   219  0000                     _ADRESH	set	4036
   220  0000                     _ADCON0bits	set	4034
   221  0000                     _ADCON0	set	4034
   222  0000                     _PORTAbits	set	3968
   223  0000                     _LATAbits	set	3977
   224  0000                     _PORTCbits	set	3970
   225  0000                     _TMR1L	set	4046
   226  0000                     _TMR1H	set	4047
   227  0000                     _PORTB	set	3969
   228  0000                     _PORTBbits	set	3969
   229  0000                     _TRISAbits	set	3986
   230  0000                     _LATCbits	set	3979
   231  0000                     _TRISCbits	set	3988
   232  0000                     _LATBbits	set	3978
   233  0000                     _TRISBbits	set	3987
   234  0000                     _TMR0H	set	4055
   235  0000                     _TMR0L	set	4054
   236  0000                     _ADCON2bits	set	4032
   237  0000                     _ADCON1	set	4033
   238  0000                     _TRISD	set	3989
   239  0000                     _LATD	set	3980
   240  0000                     _LATDbits	set	3980
   241  0000                     _INTCONbits	set	4082
   242  0000                     _INT1IF	set	32640
   243  0000                     _TMR0IF	set	32658
   244  0000                     _GIE	set	32663
   245  0000                     _WREN	set	32050
   246  0000                     _ADON	set	32272
   247  0000                     _TMR1ON	set	32360
   248  0000                     _TMR0IE	set	32661
   249  0000                     _PSA	set	32427
   250  0000                     _T0SE	set	32428
   251  0000                     _T0CS	set	32429
   252  0000                     _T08BIT	set	32430
   253  0000                     _TMR0ON	set	32431
   254  0000                     _INT1IE	set	32643
   255  00FE2A                     STR_7:
   256                           
   257                           ; BSR set to: 1
   258  00FE2A  66                 	db	102	;'f'
   259  00FE2B  3A                 	db	58	;':'
   260  00FE2C  25                 	db	37
   261  00FE2D  64                 	db	100	;'d'
   262  00FE2E  2C                 	db	44
   263  00FE2F  70                 	db	112	;'p'
   264  00FE30  3A                 	db	58	;':'
   265  00FE31  25                 	db	37
   266  00FE32  64                 	db	100	;'d'
   267  00FE33  2C                 	db	44
   268  00FE34  70                 	db	112	;'p'
   269  00FE35  32                 	db	50	;'2'
   270  00FE36  3A                 	db	58	;':'
   271  00FE37  25                 	db	37
   272  00FE38  64                 	db	100	;'d'
   273  00FE39  00                 	db	0
   274  00FE3A                     STR_31:
   275                           
   276                           ; BSR set to: 1
   277  00FE3A  49                 	db	73	;'I'
   278  00FE3B  6E                 	db	110	;'n'
   279  00FE3C  64                 	db	100	;'d'
   280  00FE3D  69                 	db	105	;'i'
   281  00FE3E  76                 	db	118	;'v'
   282  00FE3F  69                 	db	105	;'i'
   283  00FE40  64                 	db	100	;'d'
   284  00FE41  75                 	db	117	;'u'
   285  00FE42  61                 	db	97	;'a'
   286  00FE43  6C                 	db	108	;'l'
   287  00FE44  20                 	db	32
   288  00FE45  49                 	db	73	;'I'
   289  00FE46  6E                 	db	110	;'n'
   290  00FE47  66                 	db	102	;'f'
   291  00FE48  6F                 	db	111	;'o'
   292  00FE49  00                 	db	0
   293  00FE4A                     STR_33:
   294                           
   295                           ; BSR set to: 1
   296  00FE4A  50                 	db	80	;'P'
   297  00FE4B  72                 	db	114	;'r'
   298  00FE4C  65                 	db	101	;'e'
   299  00FE4D  73                 	db	115	;'s'
   300  00FE4E  73                 	db	115	;'s'
   301  00FE4F  20                 	db	32
   302  00FE50  30                 	db	48	;'0'
   303  00FE51  20                 	db	32
   304  00FE52  74                 	db	116	;'t'
   305  00FE53  6F                 	db	111	;'o'
   306  00FE54  20                 	db	32
   307  00FE55  25                 	db	37
   308  00FE56  64                 	db	100	;'d'
   309  00FE57  20                 	db	32
   310  00FE58  00                 	db	0
   311  00FE59                     STR_24:
   312                           
   313                           ; BSR set to: 1
   314  00FE59  4F                 	db	79	;'O'
   315  00FE5A  70                 	db	112	;'p'
   316  00FE5B  65                 	db	101	;'e'
   317  00FE5C  72                 	db	114	;'r'
   318  00FE5D  61                 	db	97	;'a'
   319  00FE5E  74                 	db	116	;'t'
   320  00FE5F  69                 	db	105	;'i'
   321  00FE60  6F                 	db	111	;'o'
   322  00FE61  6E                 	db	110	;'n'
   323  00FE62  20                 	db	32
   324  00FE63  54                 	db	84	;'T'
   325  00FE64  69                 	db	105	;'i'
   326  00FE65  6D                 	db	109	;'m'
   327  00FE66  65                 	db	101	;'e'
   328  00FE67  00                 	db	0
   329  00FE68                     STR_42:
   330                           
   331                           ; BSR set to: 1
   332  00FE68  44                 	db	68	;'D'
   333  00FE69  69                 	db	105	;'i'
   334  00FE6A  73                 	db	115	;'s'
   335  00FE6B  74                 	db	116	;'t'
   336  00FE6C  61                 	db	97	;'a'
   337  00FE6D  6E                 	db	110	;'n'
   338  00FE6E  63                 	db	99	;'c'
   339  00FE6F  65                 	db	101	;'e'
   340  00FE70  20                 	db	32
   341  00FE71  25                 	db	37
   342  00FE72  64                 	db	100	;'d'
   343  00FE73  20                 	db	32
   344  00FE74  63                 	db	99	;'c'
   345  00FE75  6D                 	db	109	;'m'
   346  00FE76  00                 	db	0
   347  00FE77                     STR_26:
   348                           
   349                           ; BSR set to: 1
   350  00FE77  23                 	db	35
   351  00FE78  20                 	db	32
   352  00FE79  6F                 	db	111	;'o'
   353  00FE7A  66                 	db	102	;'f'
   354  00FE7B  20                 	db	32
   355  00FE7C  43                 	db	67	;'C'
   356  00FE7D  61                 	db	97	;'a'
   357  00FE7E  6E                 	db	110	;'n'
   358  00FE7F  69                 	db	105	;'i'
   359  00FE80  73                 	db	115	;'s'
   360  00FE81  74                 	db	116	;'t'
   361  00FE82  65                 	db	101	;'e'
   362  00FE83  72                 	db	114	;'r'
   363  00FE84  73                 	db	115	;'s'
   364  00FE85  00                 	db	0
   365  00FE86                     STR_2:
   366                           
   367                           ; BSR set to: 1
   368  00FE86  25                 	db	37
   369  00FE87  30                 	db	48	;'0'
   370  00FE88  32                 	db	50	;'2'
   371  00FE89  78                 	db	120	;'x'
   372  00FE8A  2F                 	db	47
   373  00FE8B  25                 	db	37
   374  00FE8C  30                 	db	48	;'0'
   375  00FE8D  32                 	db	50	;'2'
   376  00FE8E  78                 	db	120	;'x'
   377  00FE8F  2F                 	db	47
   378  00FE90  25                 	db	37
   379  00FE91  30                 	db	48	;'0'
   380  00FE92  32                 	db	50	;'2'
   381  00FE93  78                 	db	120	;'x'
   382  00FE94  00                 	db	0
   383  00FE95                     STR_3:
   384                           
   385                           ; BSR set to: 1
   386  00FE95  25                 	db	37
   387  00FE96  30                 	db	48	;'0'
   388  00FE97  32                 	db	50	;'2'
   389  00FE98  78                 	db	120	;'x'
   390  00FE99  3A                 	db	58	;':'
   391  00FE9A  25                 	db	37
   392  00FE9B  30                 	db	48	;'0'
   393  00FE9C  32                 	db	50	;'2'
   394  00FE9D  78                 	db	120	;'x'
   395  00FE9E  3A                 	db	58	;':'
   396  00FE9F  25                 	db	37
   397  00FEA0  30                 	db	48	;'0'
   398  00FEA1  32                 	db	50	;'2'
   399  00FEA2  78                 	db	120	;'x'
   400  00FEA3  00                 	db	0
   401  00FEA4                     STR_22:
   402                           
   403                           ; BSR set to: 1
   404  00FEA4  43                 	db	67	;'C'
   405  00FEA5  61                 	db	97	;'a'
   406  00FEA6  6E                 	db	110	;'n'
   407  00FEA7  69                 	db	105	;'i'
   408  00FEA8  73                 	db	115	;'s'
   409  00FEA9  74                 	db	116	;'t'
   410  00FEAA  65                 	db	101	;'e'
   411  00FEAB  72                 	db	114	;'r'
   412  00FEAC  20                 	db	32
   413  00FEAD  49                 	db	73	;'I'
   414  00FEAE  6E                 	db	110	;'n'
   415  00FEAF  64                 	db	100	;'d'
   416  00FEB0  65                 	db	101	;'e'
   417  00FEB1  78                 	db	120	;'x'
   418  00FEB2  00                 	db	0
   419  00FEB3                     STR_46:
   420                           
   421                           ; BSR set to: 1
   422  00FEB3  43                 	db	67	;'C'
   423  00FEB4  61                 	db	97	;'a'
   424  00FEB5  6E                 	db	110	;'n'
   425  00FEB6  69                 	db	105	;'i'
   426  00FEB7  73                 	db	115	;'s'
   427  00FEB8  74                 	db	116	;'t'
   428  00FEB9  65                 	db	101	;'e'
   429  00FEBA  72                 	db	114	;'r'
   430  00FEBB  20                 	db	32
   431  00FEBC  45                 	db	69	;'E'
   432  00FEBD  6D                 	db	109	;'m'
   433  00FEBE  70                 	db	112	;'p'
   434  00FEBF  74                 	db	116	;'t'
   435  00FEC0  79                 	db	121	;'y'
   436  00FEC1  00                 	db	0
   437  00FEC2                     STR_50:
   438                           
   439                           ; BSR set to: 1
   440  00FEC2  4E                 	db	78	;'N'
   441  00FEC3  6F                 	db	111	;'o'
   442  00FEC4  20                 	db	32
   443  00FEC5  42                 	db	66	;'B'
   444  00FEC6  61                 	db	97	;'a'
   445  00FEC7  6C                 	db	108	;'l'
   446  00FEC8  6C                 	db	108	;'l'
   447  00FEC9  20                 	db	32
   448  00FECA  41                 	db	65	;'A'
   449  00FECB  64                 	db	100	;'d'
   450  00FECC  64                 	db	100	;'d'
   451  00FECD  65                 	db	101	;'e'
   452  00FECE  64                 	db	100	;'d'
   453  00FECF  00                 	db	0
   454  00FED0                     STR_45:
   455                           
   456                           ; BSR set to: 1
   457  00FED0  43                 	db	67	;'C'
   458  00FED1  61                 	db	97	;'a'
   459  00FED2  6E                 	db	110	;'n'
   460  00FED3  69                 	db	105	;'i'
   461  00FED4  73                 	db	115	;'s'
   462  00FED5  74                 	db	116	;'t'
   463  00FED6  65                 	db	101	;'e'
   464  00FED7  72                 	db	114	;'r'
   465  00FED8  20                 	db	32
   466  00FED9  46                 	db	70	;'F'
   467  00FEDA  75                 	db	117	;'u'
   468  00FEDB  6C                 	db	108	;'l'
   469  00FEDC  6C                 	db	108	;'l'
   470  00FEDD  00                 	db	0
   471  00FEDE                     STR_37:
   472                           
   473                           ; BSR set to: 1
   474  00FEDE  50                 	db	80	;'P'
   475  00FEDF  69                 	db	105	;'i'
   476  00FEE0  63                 	db	99	;'c'
   477  00FEE1  6B                 	db	107	;'k'
   478  00FEE2  20                 	db	32
   479  00FEE3  70                 	db	112	;'p'
   480  00FEE4  72                 	db	114	;'r'
   481  00FEE5  65                 	db	101	;'e'
   482  00FEE6  76                 	db	118	;'v'
   483  00FEE7  69                 	db	105	;'i'
   484  00FEE8  6F                 	db	111	;'o'
   485  00FEE9  75                 	db	117	;'u'
   486  00FEEA  73                 	db	115	;'s'
   487  00FEEB  00                 	db	0
   488  00FEEC                     STR_34:
   489                           
   490                           ; BSR set to: 1
   491  00FEEC  56                 	db	86	;'V'
   492  00FEED  69                 	db	105	;'i'
   493  00FEEE  65                 	db	101	;'e'
   494  00FEEF  77                 	db	119	;'w'
   495  00FEF0  20                 	db	32
   496  00FEF1  70                 	db	112	;'p'
   497  00FEF2  72                 	db	114	;'r'
   498  00FEF3  65                 	db	101	;'e'
   499  00FEF4  76                 	db	118	;'v'
   500  00FEF5  69                 	db	105	;'i'
   501  00FEF6  6F                 	db	111	;'o'
   502  00FEF7  75                 	db	117	;'u'
   503  00FEF8  73                 	db	115	;'s'
   504  00FEF9  00                 	db	0
   505  00FEFA                     STR_27:
   506                           
   507                           ; BSR set to: 1
   508  00FEFA  25                 	db	37
   509  00FEFB  64                 	db	100	;'d'
   510  00FEFC  20                 	db	32
   511  00FEFD  43                 	db	67	;'C'
   512  00FEFE  61                 	db	97	;'a'
   513  00FEFF  6E                 	db	110	;'n'
   514  00FF00  69                 	db	105	;'i'
   515  00FF01  73                 	db	115	;'s'
   516  00FF02  74                 	db	116	;'t'
   517  00FF03  65                 	db	101	;'e'
   518  00FF04  72                 	db	114	;'r'
   519  00FF05  73                 	db	115	;'s'
   520  00FF06  00                 	db	0
   521  00FF07                     STR_21:
   522                           
   523                           ; BSR set to: 1
   524  00FF07  76                 	db	118	;'v'
   525  00FF08  69                 	db	105	;'i'
   526  00FF09  65                 	db	101	;'e'
   527  00FF0A  77                 	db	119	;'w'
   528  00FF0B  20                 	db	32
   529  00FF0C  72                 	db	114	;'r'
   530  00FF0D  65                 	db	101	;'e'
   531  00FF0E  73                 	db	115	;'s'
   532  00FF0F  75                 	db	117	;'u'
   533  00FF10  6C                 	db	108	;'l'
   534  00FF11  74                 	db	116	;'t'
   535  00FF12  73                 	db	115	;'s'
   536  00FF13  00                 	db	0
   537  00FF14                     STR_39:
   538                           
   539                           ; BSR set to: 1
   540  00FF14  30                 	db	48	;'0'
   541  00FF15  20                 	db	32
   542  00FF16  69                 	db	105	;'i'
   543  00FF17  73                 	db	115	;'s'
   544  00FF18  20                 	db	32
   545  00FF19  43                 	db	67	;'C'
   546  00FF1A  75                 	db	117	;'u'
   547  00FF1B  72                 	db	114	;'r'
   548  00FF1C  72                 	db	114	;'r'
   549  00FF1D  65                 	db	101	;'e'
   550  00FF1E  6E                 	db	110	;'n'
   551  00FF1F  74                 	db	116	;'t'
   552  00FF20  00                 	db	0
   553  00FF21                     STR_23:
   554                           
   555                           ; BSR set to: 1
   556  00FF21  73                 	db	115	;'s'
   557  00FF22  74                 	db	116	;'t'
   558  00FF23  61                 	db	97	;'a'
   559  00FF24  72                 	db	114	;'r'
   560  00FF25  74                 	db	116	;'t'
   561  00FF26  73                 	db	115	;'s'
   562  00FF27  20                 	db	32
   563  00FF28  61                 	db	97	;'a'
   564  00FF29  74                 	db	116	;'t'
   565  00FF2A  20                 	db	32
   566  00FF2B  30                 	db	48	;'0'
   567  00FF2C  00                 	db	0
   568  00FF2D                     STR_41:
   569                           
   570                           ; BSR set to: 1
   571  00FF2D  43                 	db	67	;'C'
   572  00FF2E  61                 	db	97	;'a'
   573  00FF2F  6E                 	db	110	;'n'
   574  00FF30  73                 	db	115	;'s'
   575  00FF31  69                 	db	105	;'i'
   576  00FF32  74                 	db	116	;'t'
   577  00FF33  65                 	db	101	;'e'
   578  00FF34  72                 	db	114	;'r'
   579  00FF35  20                 	db	32
   580  00FF36  25                 	db	37
   581  00FF37  63                 	db	99	;'c'
   582  00FF38  00                 	db	0
   583  00FF39                     STR_32:
   584                           
   585                           ; BSR set to: 1
   586  00FF39  6F                 	db	111	;'o'
   587  00FF3A  66                 	db	102	;'f'
   588  00FF3B  20                 	db	32
   589  00FF3C  43                 	db	67	;'C'
   590  00FF3D  61                 	db	97	;'a'
   591  00FF3E  6E                 	db	110	;'n'
   592  00FF3F  69                 	db	105	;'i'
   593  00FF40  73                 	db	115	;'s'
   594  00FF41  74                 	db	116	;'t'
   595  00FF42  65                 	db	101	;'e'
   596  00FF43  72                 	db	114	;'r'
   597  00FF44  00                 	db	0
   598  00FF45                     STR_4:
   599                           
   600                           ; BSR set to: 1
   601  00FF45  44                 	db	68	;'D'
   602  00FF46  69                 	db	105	;'i'
   603  00FF47  73                 	db	115	;'s'
   604  00FF48  74                 	db	116	;'t'
   605  00FF49  3A                 	db	58	;':'
   606  00FF4A  20                 	db	32
   607  00FF4B  25                 	db	37
   608  00FF4C  2E                 	db	46
   609  00FF4D  33                 	db	51	;'3'
   610  00FF4E  66                 	db	102	;'f'
   611  00FF4F  00                 	db	0
   612  00FF50                     STR_20:
   613                           
   614                           ; BSR set to: 1
   615  00FF50  50                 	db	80	;'P'
   616  00FF51  72                 	db	114	;'r'
   617  00FF52  65                 	db	101	;'e'
   618  00FF53  73                 	db	115	;'s'
   619  00FF54  73                 	db	115	;'s'
   620  00FF55  20                 	db	32
   621  00FF56  41                 	db	65	;'A'
   622  00FF57  20                 	db	32
   623  00FF58  74                 	db	116	;'t'
   624  00FF59  6F                 	db	111	;'o'
   625  00FF5A  00                 	db	0
   626  00FF5B                     STR_25:
   627                           
   628                           ; BSR set to: 1
   629  00FF5B  25                 	db	37
   630  00FF5C  64                 	db	100	;'d'
   631  00FF5D  20                 	db	32
   632  00FF5E  73                 	db	115	;'s'
   633  00FF5F  65                 	db	101	;'e'
   634  00FF60  63                 	db	99	;'c'
   635  00FF61  6F                 	db	111	;'o'
   636  00FF62  6E                 	db	110	;'n'
   637  00FF63  64                 	db	100	;'d'
   638  00FF64  73                 	db	115	;'s'
   639  00FF65  00                 	db	0
   640  00FF66                     STR_28:
   641                           
   642                           ; BSR set to: 1
   643  00FF66  23                 	db	35
   644  00FF67  20                 	db	32
   645  00FF68  6F                 	db	111	;'o'
   646  00FF69  66                 	db	102	;'f'
   647  00FF6A  20                 	db	32
   648  00FF6B  42                 	db	66	;'B'
   649  00FF6C  61                 	db	97	;'a'
   650  00FF6D  6C                 	db	108	;'l'
   651  00FF6E  6C                 	db	108	;'l'
   652  00FF6F  73                 	db	115	;'s'
   653  00FF70  00                 	db	0
   654  00FF71                     STR_1:
   655                           
   656                           ; BSR set to: 1
   657  00FF71  41                 	db	65	;'A'
   658  00FF72  20                 	db	32
   659  00FF73  74                 	db	116	;'t'
   660  00FF74  6F                 	db	111	;'o'
   661  00FF75  20                 	db	32
   662  00FF76  73                 	db	115	;'s'
   663  00FF77  74                 	db	116	;'t'
   664  00FF78  61                 	db	97	;'a'
   665  00FF79  72                 	db	114	;'r'
   666  00FF7A  74                 	db	116	;'t'
   667  00FF7B  00                 	db	0
   668  00FF7C                     STR_13:
   669                           
   670                           ; BSR set to: 1
   671  00FF7C  55                 	db	85	;'U'
   672  00FF7D  6C                 	db	108	;'l'
   673  00FF7E  74                 	db	116	;'t'
   674  00FF7F  72                 	db	114	;'r'
   675  00FF80  61                 	db	97	;'a'
   676  00FF81  3A                 	db	58	;':'
   677  00FF82  20                 	db	32
   678  00FF83  25                 	db	37
   679  00FF84  64                 	db	100	;'d'
   680  00FF85  00                 	db	0
   681  00FF86                     STR_18:
   682                           
   683                           ; BSR set to: 1
   684  00FF86  72                 	db	114	;'r'
   685  00FF87  69                 	db	105	;'i'
   686  00FF88  67                 	db	103	;'g'
   687  00FF89  68                 	db	104	;'h'
   688  00FF8A  74                 	db	116	;'t'
   689  00FF8B  3A                 	db	58	;':'
   690  00FF8C  20                 	db	32
   691  00FF8D  25                 	db	37
   692  00FF8E  64                 	db	100	;'d'
   693  00FF8F  00                 	db	0
   694  00FF90                     STR_17:
   695                           
   696                           ; BSR set to: 1
   697  00FF90  6C                 	db	108	;'l'
   698  00FF91  65                 	db	101	;'e'
   699  00FF92  66                 	db	102	;'f'
   700  00FF93  74                 	db	116	;'t'
   701  00FF94  79                 	db	121	;'y'
   702  00FF95  3A                 	db	58	;':'
   703  00FF96  20                 	db	32
   704  00FF97  25                 	db	37
   705  00FF98  64                 	db	100	;'d'
   706  00FF99  00                 	db	0
   707  00FF9A                     STR_43:
   708                           
   709                           ; BSR set to: 1
   710  00FF9A  23                 	db	35
   711  00FF9B  20                 	db	32
   712  00FF9C  74                 	db	116	;'t'
   713  00FF9D  6F                 	db	111	;'o'
   714  00FF9E  20                 	db	32
   715  00FF9F  65                 	db	101	;'e'
   716  00FFA0  78                 	db	120	;'x'
   717  00FFA1  69                 	db	105	;'i'
   718  00FFA2  74                 	db	116	;'t'
   719  00FFA3  00                 	db	0
   720  00FFA4                     STR_36:
   721                           
   722                           ; BSR set to: 1
   723  00FFA4  50                 	db	80	;'P'
   724  00FFA5  72                 	db	114	;'r'
   725  00FFA6  65                 	db	101	;'e'
   726  00FFA7  73                 	db	115	;'s'
   727  00FFA8  73                 	db	115	;'s'
   728  00FFA9  20                 	db	32
   729  00FFAA  42                 	db	66	;'B'
   730  00FFAB  20                 	db	32
   731  00FFAC  00                 	db	0
   732  00FFAD                     STR_12:
   733                           
   734                           ; BSR set to: 1
   735  00FFAD  63                 	db	99	;'c'
   736  00FFAE  6F                 	db	111	;'o'
   737  00FFAF  6D                 	db	109	;'m'
   738  00FFB0  70                 	db	112	;'p'
   739  00FFB1  3A                 	db	58	;':'
   740  00FFB2  20                 	db	32
   741  00FFB3  25                 	db	37
   742  00FFB4  64                 	db	100	;'d'
   743  00FFB5  00                 	db	0
   744  00FFB6                     STR_29:
   745                           
   746                           ; BSR set to: 1
   747  00FFB6  73                 	db	115	;'s'
   748  00FFB7  75                 	db	117	;'u'
   749  00FFB8  70                 	db	112	;'p'
   750  00FFB9  70                 	db	112	;'p'
   751  00FFBA  6C                 	db	108	;'l'
   752  00FFBB  69                 	db	105	;'i'
   753  00FFBC  65                 	db	101	;'e'
   754  00FFBD  64                 	db	100	;'d'
   755  00FFBE  00                 	db	0
   756  00FFBF                     STR_30:
   757                           
   758                           ; BSR set to: 1
   759  00FFBF  25                 	db	37
   760  00FFC0  64                 	db	100	;'d'
   761  00FFC1  20                 	db	32
   762  00FFC2  62                 	db	98	;'b'
   763  00FFC3  61                 	db	97	;'a'
   764  00FFC4  6C                 	db	108	;'l'
   765  00FFC5  6C                 	db	108	;'l'
   766  00FFC6  73                 	db	115	;'s'
   767  00FFC7  00                 	db	0
   768  00FFC8                     STR_40:
   769                           
   770                           ; BSR set to: 1
   771  00FFC8  30                 	db	48	;'0'
   772  00FFC9  20                 	db	32
   773  00FFCA  74                 	db	116	;'t'
   774  00FFCB  6F                 	db	111	;'o'
   775  00FFCC  20                 	db	32
   776  00FFCD  34                 	db	52	;'4'
   777  00FFCE  20                 	db	32
   778  00FFCF  00                 	db	0
   779  00FFD0                     STR_11:
   780                           
   781                           ; BSR set to: 1
   782  00FFD0  63                 	db	99	;'c'
   783  00FFD1  6E                 	db	110	;'n'
   784  00FFD2  74                 	db	116	;'t'
   785  00FFD3  3A                 	db	58	;':'
   786  00FFD4  20                 	db	32
   787  00FFD5  25                 	db	37
   788  00FFD6  64                 	db	100	;'d'
   789  00FFD7  00                 	db	0
   790  00FFD8                     STR_6:
   791                           
   792                           ; BSR set to: 1
   793  00FFD8  63                 	db	99	;'c'
   794  00FFD9  6C                 	db	108	;'l'
   795  00FFDA  6F                 	db	111	;'o'
   796  00FFDB  73                 	db	115	;'s'
   797  00FFDC  65                 	db	101	;'e'
   798  00FFDD  64                 	db	100	;'d'
   799  00FFDE  00                 	db	0
   800  00FFDF                     STR_35:
   801                           
   802                           ; BSR set to: 1
   803  00FFDF  74                 	db	116	;'t'
   804  00FFE0  72                 	db	114	;'r'
   805  00FFE1  69                 	db	105	;'i'
   806  00FFE2  61                 	db	97	;'a'
   807  00FFE3  6C                 	db	108	;'l'
   808  00FFE4  73                 	db	115	;'s'
   809  00FFE5  00                 	db	0
   810  00FFE6                     STR_8:
   811                           
   812                           ; BSR set to: 1
   813  00FFE6  6F                 	db	111	;'o'
   814  00FFE7  70                 	db	112	;'p'
   815  00FFE8  65                 	db	101	;'e'
   816  00FFE9  6E                 	db	110	;'n'
   817  00FFEA  00                 	db	0
   818  00FFEB                     STR_52:
   819                           
   820                           ; BSR set to: 1
   821  00FFEB  49                 	db	73	;'I'
   822  00FFEC  4E                 	db	78	;'N'
   823  00FFED  46                 	db	70	;'F'
   824  00FFEE  00                 	db	0
   825  00FFEF                     STR_56:
   826                           
   827                           ; BSR set to: 1
   828  00FFEF  4E                 	db	78	;'N'
   829  00FFF0  41                 	db	65	;'A'
   830  00FFF1  4E                 	db	78	;'N'
   831  00FFF2  00                 	db	0
   832  00FFF3                     STR_53:
   833                           
   834                           ; BSR set to: 1
   835  00FFF3  69                 	db	105	;'i'
   836  00FFF4  6E                 	db	110	;'n'
   837  00FFF5  66                 	db	102	;'f'
   838  00FFF6  00                 	db	0
   839  00FFF7                     STR_57:
   840                           
   841                           ; BSR set to: 1
   842  00FFF7  6E                 	db	110	;'n'
   843  00FFF8  61                 	db	97	;'a'
   844  00FFF9  6E                 	db	110	;'n'
   845  00FFFA  00                 	db	0
   846  00FFFB                     STR_60:
   847                           
   848                           ; BSR set to: 1
   849  00FFFB  6C                 	db	108	;'l'
   850  00FFFC  66                 	db	102	;'f'
   851  00FFFD  00                 	db	0
   852  0000                     
   853                           ; #config settings
   854  00FFFE  00                 	db	0	; dummy byte at the end
   855  0000                     
   856                           	psect	cinit
   857  00469A                     __pcinit:
   858                           	opt callstack 0
   859  00469A                     start_initialization:
   860                           	opt callstack 0
   861  00469A                     __initialization:
   862                           	opt callstack 0
   863                           
   864                           ; Initialize objects allocated to BANK1 (60 bytes)
   865                           ; load TBLPTR registers with __pidataBANK1
   866  00469A  0E00               	movlw	low __pidataBANK1
   867  00469C  6EF6               	movwf	tblptrl,c
   868  00469E  0E48               	movlw	high __pidataBANK1
   869  0046A0  6EF7               	movwf	tblptrh,c
   870  0046A2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   871  0046A4  6EF8               	movwf	tblptru,c
   872  0046A6  EE01  F0A0         	lfsr	0,__pdataBANK1
   873  0046AA  EE10 F03C          	lfsr	1,60
   874  0046AE                     copy_data0:
   875  0046AE  0009               	tblrd		*+
   876  0046B0  CFF5 FFEE          	movff	tablat,postinc0
   877  0046B4  50E5               	movf	postdec1,w,c
   878  0046B6  50E1               	movf	fsr1l,w,c
   879  0046B8  E1FA               	bnz	copy_data0
   880                           
   881                           ; Clear objects allocated to BANK1 (95 bytes)
   882  0046BA  EE01  F000         	lfsr	0,__pbssBANK1
   883  0046BE  0E5F               	movlw	95
   884  0046C0                     clear_0:
   885  0046C0  6AEE               	clrf	postinc0,c
   886  0046C2  06E8               	decf	wreg,f,c
   887  0046C4  E1FD               	bnz	clear_0
   888                           
   889                           ; Clear objects allocated to BANK0 (2 bytes)
   890  0046C6  0100               	movlb	0
   891  0046C8  6BF1               	clrf	(__pbssBANK0+1)& (0+255),b
   892  0046CA  6BF0               	clrf	__pbssBANK0& (0+255),b
   893                           
   894                           ; Clear objects allocated to COMRAM (14 bytes)
   895  0046CC  EE00  F066         	lfsr	0,__pbssCOMRAM
   896  0046D0  0E0E               	movlw	14
   897  0046D2                     clear_1:
   898  0046D2  6AEE               	clrf	postinc0,c
   899  0046D4  06E8               	decf	wreg,f,c
   900  0046D6  E1FD               	bnz	clear_1
   901  0046D8                     end_of_initialization:
   902                           	opt callstack 0
   903  0046D8                     __end_of__initialization:
   904                           	opt callstack 0
   905  0046D8  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   906  0046DA  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   907  0046DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   908  0046DE  6EF8               	movwf	tblptru,c
   909  0046E0  0100               	movlb	0
   910  0046E2  EF09  F000         	goto	_main	;jump to C main() function
   911                           
   912                           	psect	bssCOMRAM
   913  000066                     __pbssCOMRAM:
   914                           	opt callstack 0
   915  000066                     floorf@F524:
   916                           	opt callstack 0
   917  000066                     	ds	4
   918  00006A                     ___fpclassifyf@F463:
   919                           	opt callstack 0
   920  00006A                     	ds	4
   921  00006E                     _width:
   922                           	opt callstack 0
   923  00006E                     	ds	2
   924  000070                     _prec:
   925                           	opt callstack 0
   926  000070                     	ds	2
   927  000072                     _flags:
   928                           	opt callstack 0
   929  000072                     	ds	2
   930                           
   931                           	psect	bssBANK0
   932  0000F0                     __pbssBANK0:
   933                           	opt callstack 0
   934  0000F0                     _nout:
   935                           	opt callstack 0
   936  0000F0                     	ds	2
   937                           
   938                           	psect	bssBANK1
   939  000100                     __pbssBANK1:
   940                           	opt callstack 0
   941  000100                     _timer:
   942                           	opt callstack 0
   943  000100                     	ds	4
   944  000104                     _balls:
   945                           	opt callstack 0
   946  000104                     	ds	2
   947  000106                     _Canister:
   948                           	opt callstack 0
   949  000106                     	ds	2
   950  000108                     _time:
   951                           	opt callstack 0
   952  000108                     	ds	2
   953  00010A                     _keypress:
   954                           	opt callstack 0
   955  00010A                     	ds	1
   956  00010B                     _start:
   957                           	opt callstack 0
   958  00010B                     	ds	1
   959  00010C                     _exit_key:
   960                           	opt callstack 0
   961  00010C                     	ds	1
   962  00010D                     _B_was_pressed:
   963                           	opt callstack 0
   964  00010D                     	ds	1
   965  00010E                     _key_was_pressed:
   966                           	opt callstack 0
   967  00010E                     	ds	1
   968  00010F                     _dbuf:
   969                           	opt callstack 0
   970  00010F                     	ds	80
   971                           
   972                           	psect	dataBANK1
   973  0001A0                     __pdataBANK1:
   974                           	opt callstack 0
   975  0001A0                     _BallDispensed:
   976                           	opt callstack 0
   977  0001A0                     	ds	20
   978  0001B4                     _DistanceCanister:
   979                           	opt callstack 0
   980  0001B4                     	ds	20
   981  0001C8                     _State:
   982                           	opt callstack 0
   983  0001C8                     	ds	20
   984                           
   985                           	psect	cstackBANK1
   986  00015F                     __pcstackBANK1:
   987                           	opt callstack 0
   988  00015F                     main@countl:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x0
   992  00015F                     	ds	2
   993  000161                     main@countr:
   994                           	opt callstack 0
   995                           
   996                           ; 2 bytes @ 0x2
   997  000161                     	ds	2
   998  000163                     main@back:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x4
  1002  000163                     	ds	2
  1003  000165                     main@now:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x6
  1007  000165                     	ds	2
  1008  000167                     main@number_pressed:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x8
  1012  000167                     	ds	2
  1013  000169                     main@clock:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 7 bytes @ 0xA
  1017  000169                     	ds	7
  1018  000170                     main@dispense:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x11
  1022  000170                     	ds	2
  1023  000172                     main@miniTick:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x13
  1027  000172                     	ds	2
  1028  000174                     main@tick:
  1029                           	opt callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x15
  1032  000174                     	ds	2
  1033  000176                     main@compare:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x17
  1037  000176                     	ds	2
  1038  000178                     main@number_pressed_1025:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x19
  1042  000178                     	ds	2
  1043  00017A                     main@j:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x1B
  1047  00017A                     	ds	1
  1048  00017B                     main@circ:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x1C
  1052  00017B                     	ds	4
  1053  00017F                     main@miniClear:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x20
  1057  00017F                     	ds	2
  1058  000181                     main@keypress:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x22
  1062  000181                     	ds	1
  1063  000182                     main@prev2:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x23
  1067  000182                     	ds	2
  1068  000184                     main@miniState:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x25
  1072  000184                     	ds	2
  1073  000186                     main@statright:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x27
  1077  000186                     	ds	2
  1078  000188                     main@statleft:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x29
  1082  000188                     	ds	2
  1083  00018A                     main@prev:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x2B
  1087  00018A                     	ds	2
  1088  00018C                     main@lefty:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x2D
  1092  00018C                     	ds	2
  1093  00018E                     main@righty:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x2F
  1097  00018E                     	ds	2
  1098  000190                     main@state:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x31
  1102  000190                     	ds	2
  1103  000192                     main@clear:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x33
  1107  000192                     	ds	2
  1108  000194                     main@front:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x35
  1112  000194                     	ds	2
  1113  000196                     main@x:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x37
  1117  000196                     	ds	4
  1118  00019A                     main@count:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x3B
  1122  00019A                     	ds	2
  1123  00019C                     main@Distance:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x3D
  1127  00019C                     	ds	4
  1128                           
  1129                           	psect	cstackBANK0
  1130  000080                     __pcstackBANK0:
  1131                           	opt callstack 0
  1132  000080                     efgtoa@ou:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x0
  1136  000080                     	ds	4
  1137  000084                     _efgtoa$1359:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x4
  1141  000084                     	ds	2
  1142  000086                     _efgtoa$1360:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x6
  1146  000086                     	ds	2
  1147  000088                     _efgtoa$1364:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x8
  1151  000088                     	ds	2
  1152  00008A                     _efgtoa$1368:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 2 bytes @ 0xA
  1156  00008A                     	ds	2
  1157  00008C                     _efgtoa$1369:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 2 bytes @ 0xC
  1161  00008C                     	ds	2
  1162  00008E                     _efgtoa$1370:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 2 bytes @ 0xE
  1166  00008E                     	ds	2
  1167  000090                     efgtoa@t:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x10
  1171  000090                     	ds	2
  1172  000092                     efgtoa@pp:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x12
  1176  000092                     	ds	2
  1177  000094                     efgtoa@m:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x14
  1181  000094                     	ds	2
  1182  000096                     efgtoa@ne:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x16
  1186  000096                     	ds	2
  1187  000098                     efgtoa@d:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x18
  1191  000098                     	ds	2
  1192  00009A                     efgtoa@sign:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x1A
  1196  00009A                     	ds	2
  1197  00009C                     efgtoa@p:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x1C
  1201  00009C                     	ds	2
  1202  00009E                     efgtoa@nmode:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 1 bytes @ 0x1E
  1206  00009E                     	ds	1
  1207  00009F                     efgtoa@w:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x1F
  1211  00009F                     	ds	2
  1212  0000A1                     efgtoa@mode:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x21
  1216  0000A1                     	ds	1
  1217  0000A2                     efgtoa@h:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x22
  1221  0000A2                     	ds	4
  1222  0000A6                     efgtoa@l:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x26
  1226  0000A6                     	ds	4
  1227  0000AA                     efgtoa@i:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x2A
  1231  0000AA                     	ds	2
  1232  0000AC                     efgtoa@g:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x2C
  1236  0000AC                     	ds	4
  1237  0000B0                     efgtoa@e:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x30
  1241  0000B0                     	ds	2
  1242  0000B2                     efgtoa@n:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x32
  1246  0000B2                     	ds	2
  1247  0000B4                     efgtoa@u:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x34
  1251  0000B4                     	ds	4
  1252  0000B8                     ?_vfpfcnvrt:
  1253                           	opt callstack 0
  1254  0000B8                     vfpfcnvrt@fp:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x38
  1258  0000B8                     	ds	2
  1259  0000BA                     vfpfcnvrt@fmt:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x3A
  1263  0000BA                     	ds	2
  1264  0000BC                     vfpfcnvrt@ap:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x3C
  1268  0000BC                     	ds	2
  1269  0000BE                     vfpfcnvrt@ll:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 8 bytes @ 0x3E
  1273  0000BE                     	ds	8
  1274  0000C6                     vfpfcnvrt@llu:
  1275                           	opt callstack 0
  1276                           
  1277                           ; 8 bytes @ 0x46
  1278  0000C6                     	ds	8
  1279  0000CE                     vfpfcnvrt@done:
  1280                           	opt callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x4E
  1283  0000CE                     	ds	2
  1284  0000D0                     _vfpfcnvrt$1395:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x50
  1288  0000D0                     	ds	2
  1289  0000D2                     _vfpfcnvrt$1396:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x52
  1293  0000D2                     	ds	2
  1294  0000D4                     _vfpfcnvrt$1402:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x54
  1298  0000D4                     	ds	2
  1299  0000D6                     vfpfcnvrt@f:
  1300                           	opt callstack 0
  1301                           
  1302                           ; 4 bytes @ 0x56
  1303  0000D6                     	ds	4
  1304  0000DA                     vfpfcnvrt@ct:
  1305                           	opt callstack 0
  1306                           
  1307                           ; 3 bytes @ 0x5A
  1308  0000DA                     	ds	3
  1309  0000DD                     vfpfcnvrt@c:
  1310                           	opt callstack 0
  1311                           
  1312                           ; 1 bytes @ 0x5D
  1313  0000DD                     	ds	1
  1314  0000DE                     ?_vfprintf:
  1315                           	opt callstack 0
  1316  0000DE                     vfprintf@fp:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x5E
  1320  0000DE                     	ds	2
  1321  0000E0                     vfprintf@fmt:
  1322                           	opt callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x60
  1325  0000E0                     	ds	2
  1326  0000E2                     vfprintf@ap:
  1327                           	opt callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x62
  1330  0000E2                     	ds	2
  1331  0000E4                     ?_printf:
  1332                           	opt callstack 0
  1333  0000E4                     printf@fmt:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x64
  1337  0000E4                     	ds	10
  1338  0000EE                     printf@ap:
  1339                           	opt callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x6E
  1342  0000EE                     	ds	2
  1343                           
  1344                           	psect	cstackCOMRAM
  1345  000001                     __pcstackCOMRAM:
  1346                           	opt callstack 0
  1347  000001                     ??_interruptHandler:
  1348  000001                     
  1349                           ; 1 bytes @ 0x0
  1350  000001                     	ds	8
  1351  000009                     interruptHandler@i:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x8
  1355  000009                     	ds	2
  1356  00000B                     ??_forward:
  1357  00000B                     ??_left:
  1358  00000B                     ??_right:
  1359  00000B                     ??_backdrive:
  1360  00000B                     ??_backright:
  1361  00000B                     ??_backleft:
  1362  00000B                     ??_I2C_Master_Wait:
  1363  00000B                     ?_strlen:
  1364                           	opt callstack 0
  1365  00000B                     ?___fpclassifyf:
  1366                           	opt callstack 0
  1367  00000B                     ?_isupper:
  1368                           	opt callstack 0
  1369  00000B                     ?_isalpha:
  1370                           	opt callstack 0
  1371  00000B                     ?_isdigit:
  1372                           	opt callstack 0
  1373  00000B                     ?_strncmp:
  1374                           	opt callstack 0
  1375  00000B                     ?_isspace:
  1376                           	opt callstack 0
  1377  00000B                     ?_islower:
  1378                           	opt callstack 0
  1379  00000B                     ?___wmul:
  1380                           	opt callstack 0
  1381  00000B                     ?___awdiv:
  1382                           	opt callstack 0
  1383  00000B                     ?___awmod:
  1384                           	opt callstack 0
  1385  00000B                     ?___lldiv:
  1386                           	opt callstack 0
  1387  00000B                     ?___flneg:
  1388                           	opt callstack 0
  1389  00000B                     ?___aodiv:
  1390                           	opt callstack 0
  1391  00000B                     ?___aomod:
  1392                           	opt callstack 0
  1393  00000B                     pulse_e@interruptState:
  1394                           	opt callstack 0
  1395  00000B                     EEPROM_WriteByte@eepromData:
  1396                           	opt callstack 0
  1397  00000B                     EEPROM_ReadByte@eepromAddress:
  1398                           	opt callstack 0
  1399  00000B                     ___wmul@multiplier:
  1400                           	opt callstack 0
  1401  00000B                     ___awdiv@dividend:
  1402                           	opt callstack 0
  1403  00000B                     ___awmod@dividend:
  1404                           	opt callstack 0
  1405  00000B                     isalpha@c:
  1406                           	opt callstack 0
  1407  00000B                     isdigit@c:
  1408                           	opt callstack 0
  1409  00000B                     isspace@c:
  1410                           	opt callstack 0
  1411  00000B                     isupper@c:
  1412                           	opt callstack 0
  1413  00000B                     strcpy@dest:
  1414                           	opt callstack 0
  1415  00000B                     strlen@s:
  1416                           	opt callstack 0
  1417  00000B                     strncmp@_l:
  1418                           	opt callstack 0
  1419  00000B                     islower@c:
  1420                           	opt callstack 0
  1421  00000B                     ___lldiv@dividend:
  1422                           	opt callstack 0
  1423  00000B                     ___fleq@ff1:
  1424                           	opt callstack 0
  1425  00000B                     ___flneg@f1:
  1426                           	opt callstack 0
  1427  00000B                     ___fpclassifyf@x:
  1428                           	opt callstack 0
  1429  00000B                     ___aodiv@dividend:
  1430                           	opt callstack 0
  1431  00000B                     ___aomod@dividend:
  1432                           	opt callstack 0
  1433                           
  1434                           ; 8 bytes @ 0xA
  1435  00000B                     	ds	1
  1436  00000C                     send_nibble@data:
  1437                           	opt callstack 0
  1438  00000C                     EEPROM_WriteByte@eepromAddress:
  1439                           	opt callstack 0
  1440  00000C                     I2C_Master_Read@ackBit:
  1441                           	opt callstack 0
  1442  00000C                     I2C_Master_Write@byteToWrite:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 2 bytes @ 0xB
  1446  00000C                     	ds	1
  1447  00000D                     ??_isupper:
  1448  00000D                     ??_isalpha:
  1449  00000D                     ??_isdigit:
  1450  00000D                     ??_isspace:
  1451  00000D                     ??_islower:
  1452  00000D                     send_byte@data:
  1453                           	opt callstack 0
  1454  00000D                     EEPROM_WriteByte@gie_Status:
  1455                           	opt callstack 0
  1456  00000D                     I2C_Master_Read@receivedByte:
  1457                           	opt callstack 0
  1458  00000D                     ___wmul@multiplicand:
  1459                           	opt callstack 0
  1460  00000D                     ___awdiv@divisor:
  1461                           	opt callstack 0
  1462  00000D                     ___awmod@divisor:
  1463                           	opt callstack 0
  1464  00000D                     strcpy@src:
  1465                           	opt callstack 0
  1466  00000D                     strlen@a:
  1467                           	opt callstack 0
  1468  00000D                     strncmp@_r:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 2 bytes @ 0xC
  1472  00000D                     	ds	1
  1473  00000E                     lcdInst@data:
  1474                           	opt callstack 0
  1475  00000E                     putch@data:
  1476                           	opt callstack 0
  1477                           
  1478                           ; 1 bytes @ 0xD
  1479  00000E                     	ds	1
  1480  00000F                     ??___fpclassifyf:
  1481  00000F                     ??_strcpy:
  1482  00000F                     ??_initLCD:
  1483  00000F                     ___awdiv@counter:
  1484                           	opt callstack 0
  1485  00000F                     ___awmod@counter:
  1486                           	opt callstack 0
  1487  00000F                     ___wmul@product:
  1488                           	opt callstack 0
  1489  00000F                     fputc@c:
  1490                           	opt callstack 0
  1491  00000F                     strncmp@n:
  1492                           	opt callstack 0
  1493  00000F                     ___lldiv@divisor:
  1494                           	opt callstack 0
  1495  00000F                     ___fleq@ff2:
  1496                           	opt callstack 0
  1497                           
  1498                           ; 4 bytes @ 0xE
  1499  00000F                     	ds	1
  1500  000010                     ___awdiv@sign:
  1501                           	opt callstack 0
  1502  000010                     ___awmod@sign:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 1 bytes @ 0xF
  1506  000010                     	ds	1
  1507  000011                     ??_EEPROM_save:
  1508  000011                     ??_strncmp:
  1509  000011                     ?_tolower:
  1510                           	opt callstack 0
  1511  000011                     ?_toupper:
  1512                           	opt callstack 0
  1513  000011                     ?___xxtofl:
  1514                           	opt callstack 0
  1515  000011                     _isspace$1916:
  1516                           	opt callstack 0
  1517  000011                     EEPROM_prev@trial:
  1518                           	opt callstack 0
  1519  000011                     ___awdiv@quotient:
  1520                           	opt callstack 0
  1521  000011                     fputc@fp:
  1522                           	opt callstack 0
  1523  000011                     strcpy@s:
  1524                           	opt callstack 0
  1525  000011                     tolower@c:
  1526                           	opt callstack 0
  1527  000011                     toupper@c:
  1528                           	opt callstack 0
  1529  000011                     ___xxtofl@val:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 4 bytes @ 0x10
  1533  000011                     	ds	1
  1534  000012                     ?_atoi:
  1535                           	opt callstack 0
  1536  000012                     atoi@s:
  1537                           	opt callstack 0
  1538  000012                     strncmp@l:
  1539                           	opt callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x11
  1542  000012                     	ds	1
  1543  000013                     ??_EEPROM_prev:
  1544  000013                     ??_fputc:
  1545  000013                     ??_tolower:
  1546  000013                     ??_toupper:
  1547  000013                     ??___fleq:
  1548  000013                     ?_frontsensor:
  1549                           	opt callstack 0
  1550  000013                     EEPROM_save@x:
  1551                           	opt callstack 0
  1552  000013                     ___fpclassifyf@e:
  1553                           	opt callstack 0
  1554  000013                     strcpy@d:
  1555                           	opt callstack 0
  1556  000013                     ___lldiv@quotient:
  1557                           	opt callstack 0
  1558  000013                     ___aodiv@divisor:
  1559                           	opt callstack 0
  1560  000013                     ___aomod@divisor:
  1561                           	opt callstack 0
  1562                           
  1563                           ; 8 bytes @ 0x12
  1564  000013                     	ds	1
  1565  000014                     ??_atoi:
  1566  000014                     strncmp@r:
  1567                           	opt callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x13
  1570  000014                     	ds	1
  1571  000015                     ??_frontsensor:
  1572  000015                     ??___xxtofl:
  1573  000015                     EEPROM_save@temp:
  1574                           	opt callstack 0
  1575  000015                     EEPROM_prev@temp:
  1576                           	opt callstack 0
  1577  000015                     ___fpclassifyf@u:
  1578                           	opt callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x14
  1581  000015                     	ds	2
  1582  000017                     ___lldiv@counter:
  1583                           	opt callstack 0
  1584  000017                     EEPROM_save@loop:
  1585                           	opt callstack 0
  1586  000017                     EEPROM_prev@loop:
  1587                           	opt callstack 0
  1588  000017                     _tolower$1990:
  1589                           	opt callstack 0
  1590  000017                     _toupper$2005:
  1591                           	opt callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x16
  1594  000017                     	ds	1
  1595  000018                     atoi@neg:
  1596                           	opt callstack 0
  1597  000018                     fputs@s:
  1598                           	opt callstack 0
  1599  000018                     I2C_Master_Init@clockFreq:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 4 bytes @ 0x17
  1603  000018                     	ds	1
  1604  000019                     ___xxtofl@sign:
  1605                           	opt callstack 0
  1606  000019                     frontsensor@time:
  1607                           	opt callstack 0
  1608  000019                     EEPROM_save@loop_1106:
  1609                           	opt callstack 0
  1610  000019                     EEPROM_prev@loop_1114:
  1611                           	opt callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x18
  1614  000019                     	ds	1
  1615  00001A                     ___xxtofl@exp:
  1616                           	opt callstack 0
  1617  00001A                     _atoi$1876:
  1618                           	opt callstack 0
  1619  00001A                     fputs@fp:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x19
  1623  00001A                     	ds	1
  1624  00001B                     ___aodiv@counter:
  1625                           	opt callstack 0
  1626  00001B                     ___aomod@counter:
  1627                           	opt callstack 0
  1628  00001B                     frontsensor@front:
  1629                           	opt callstack 0
  1630  00001B                     EEPROM_save@loop_1107:
  1631                           	opt callstack 0
  1632  00001B                     EEPROM_prev@loop_1115:
  1633                           	opt callstack 0
  1634  00001B                     ___xxtofl@arg:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 4 bytes @ 0x1A
  1638  00001B                     	ds	1
  1639  00001C                     ??_I2C_Master_Init:
  1640  00001C                     ___aodiv@sign:
  1641                           	opt callstack 0
  1642  00001C                     ___aomod@sign:
  1643                           	opt callstack 0
  1644  00001C                     fputs@c:
  1645                           	opt callstack 0
  1646  00001C                     _atoi$1878:
  1647                           	opt callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x1B
  1650  00001C                     	ds	1
  1651  00001D                     ?_abs:
  1652                           	opt callstack 0
  1653  00001D                     EEPROM_save@shift:
  1654                           	opt callstack 0
  1655  00001D                     EEPROM_prev@x:
  1656                           	opt callstack 0
  1657  00001D                     abs@a:
  1658                           	opt callstack 0
  1659  00001D                     fputs@i:
  1660                           	opt callstack 0
  1661  00001D                     ___aodiv@quotient:
  1662                           	opt callstack 0
  1663                           
  1664                           ; 8 bytes @ 0x1C
  1665  00001D                     	ds	1
  1666  00001E                     _atoi$1877:
  1667                           	opt callstack 0
  1668                           
  1669                           ; 1 bytes @ 0x1D
  1670  00001E                     	ds	1
  1671  00001F                     ??_abs:
  1672  00001F                     ?_pad:
  1673                           	opt callstack 0
  1674  00001F                     ?___fldiv:
  1675                           	opt callstack 0
  1676  00001F                     ?___flmul:
  1677                           	opt callstack 0
  1678  00001F                     EEPROM_prev@shift:
  1679                           	opt callstack 0
  1680  00001F                     pad@fp:
  1681                           	opt callstack 0
  1682  00001F                     atoi@n:
  1683                           	opt callstack 0
  1684  00001F                     ___fldiv@b:
  1685                           	opt callstack 0
  1686  00001F                     ___flmul@b:
  1687                           	opt callstack 0
  1688                           
  1689                           ; 4 bytes @ 0x1E
  1690  00001F                     	ds	2
  1691  000021                     pad@buf:
  1692                           	opt callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x20
  1695  000021                     	ds	2
  1696  000023                     pad@p:
  1697                           	opt callstack 0
  1698  000023                     ___fldiv@a:
  1699                           	opt callstack 0
  1700  000023                     ___flmul@a:
  1701                           	opt callstack 0
  1702                           
  1703                           ; 4 bytes @ 0x22
  1704  000023                     	ds	2
  1705  000025                     ??_pad:
  1706                           
  1707                           ; 1 bytes @ 0x24
  1708  000025                     	ds	1
  1709  000026                     pad@i:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x25
  1713  000026                     	ds	1
  1714  000027                     ??___fldiv:
  1715  000027                     ??___flmul:
  1716                           
  1717                           ; 1 bytes @ 0x26
  1718  000027                     	ds	1
  1719  000028                     pad@w:
  1720                           	opt callstack 0
  1721                           
  1722                           ; 2 bytes @ 0x27
  1723  000028                     	ds	2
  1724  00002A                     ?_ctoa:
  1725                           	opt callstack 0
  1726  00002A                     ?_dtoa:
  1727                           	opt callstack 0
  1728  00002A                     ?_xtoa:
  1729                           	opt callstack 0
  1730  00002A                     ctoa@fp:
  1731                           	opt callstack 0
  1732  00002A                     dtoa@fp:
  1733                           	opt callstack 0
  1734  00002A                     xtoa@fp:
  1735                           	opt callstack 0
  1736                           
  1737                           ; 2 bytes @ 0x29
  1738  00002A                     	ds	1
  1739  00002B                     ___flmul@sign:
  1740                           	opt callstack 0
  1741  00002B                     ___fldiv@rem:
  1742                           	opt callstack 0
  1743                           
  1744                           ; 4 bytes @ 0x2A
  1745  00002B                     	ds	1
  1746  00002C                     ctoa@c:
  1747                           	opt callstack 0
  1748  00002C                     ___flmul@aexp:
  1749                           	opt callstack 0
  1750  00002C                     dtoa@d:
  1751                           	opt callstack 0
  1752  00002C                     xtoa@d:
  1753                           	opt callstack 0
  1754                           
  1755                           ; 8 bytes @ 0x2B
  1756  00002C                     	ds	1
  1757  00002D                     ctoa@w:
  1758                           	opt callstack 0
  1759  00002D                     ___flmul@grs:
  1760                           	opt callstack 0
  1761                           
  1762                           ; 4 bytes @ 0x2C
  1763  00002D                     	ds	2
  1764  00002F                     ___fldiv@sign:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 1 bytes @ 0x2E
  1768  00002F                     	ds	1
  1769  000030                     ___fldiv@new_exp:
  1770                           	opt callstack 0
  1771                           
  1772                           ; 2 bytes @ 0x2F
  1773  000030                     	ds	1
  1774  000031                     ___flmul@bexp:
  1775                           	opt callstack 0
  1776                           
  1777                           ; 1 bytes @ 0x30
  1778  000031                     	ds	1
  1779  000032                     ___fldiv@grs:
  1780                           	opt callstack 0
  1781  000032                     ___flmul@prod:
  1782                           	opt callstack 0
  1783                           
  1784                           ; 4 bytes @ 0x31
  1785  000032                     	ds	2
  1786  000034                     ??_dtoa:
  1787  000034                     xtoa@x:
  1788                           	opt callstack 0
  1789                           
  1790                           ; 1 bytes @ 0x33
  1791  000034                     	ds	1
  1792  000035                     ??_xtoa:
  1793                           
  1794                           ; 1 bytes @ 0x34
  1795  000035                     	ds	1
  1796  000036                     ___fldiv@bexp:
  1797                           	opt callstack 0
  1798  000036                     ___flmul@temp:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 2 bytes @ 0x35
  1802  000036                     	ds	1
  1803  000037                     ___fldiv@aexp:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 1 bytes @ 0x36
  1807  000037                     	ds	1
  1808  000038                     ?_readADC:
  1809                           	opt callstack 0
  1810  000038                     ?_floorf:
  1811                           	opt callstack 0
  1812  000038                     ?___fladd:
  1813                           	opt callstack 0
  1814  000038                     ___fladd@b:
  1815                           	opt callstack 0
  1816  000038                     floorf@x:
  1817                           	opt callstack 0
  1818                           
  1819                           ; 4 bytes @ 0x37
  1820  000038                     	ds	4
  1821  00003C                     ??_readADC:
  1822  00003C                     ??_floorf:
  1823  00003C                     _dtoa$1336:
  1824                           	opt callstack 0
  1825  00003C                     ___fladd@a:
  1826                           	opt callstack 0
  1827                           
  1828                           ; 4 bytes @ 0x3B
  1829  00003C                     	ds	1
  1830  00003D                     _xtoa$1380:
  1831                           	opt callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x3C
  1834  00003D                     	ds	1
  1835  00003E                     readADC@channel:
  1836                           	opt callstack 0
  1837  00003E                     dtoa@p:
  1838                           	opt callstack 0
  1839                           
  1840                           ; 2 bytes @ 0x3D
  1841  00003E                     	ds	1
  1842  00003F                     _xtoa$1381:
  1843                           	opt callstack 0
  1844  00003F                     ___flge@ff1:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 4 bytes @ 0x3E
  1848  00003F                     	ds	1
  1849  000040                     ??___fladd:
  1850  000040                     dtoa@w:
  1851                           	opt callstack 0
  1852                           
  1853                           ; 2 bytes @ 0x3F
  1854  000040                     	ds	1
  1855  000041                     xtoa@p:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 2 bytes @ 0x40
  1859  000041                     	ds	1
  1860  000042                     dtoa@s:
  1861                           	opt callstack 0
  1862  000042                     floorf@m:
  1863                           	opt callstack 0
  1864                           
  1865                           ; 4 bytes @ 0x41
  1866  000042                     	ds	1
  1867  000043                     xtoa@w:
  1868                           	opt callstack 0
  1869  000043                     ___flge@ff2:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 4 bytes @ 0x42
  1873  000043                     	ds	1
  1874  000044                     ___fladd@signs:
  1875                           	opt callstack 0
  1876  000044                     dtoa@n:
  1877                           	opt callstack 0
  1878                           
  1879                           ; 8 bytes @ 0x43
  1880  000044                     	ds	1
  1881  000045                     ___fladd@aexp:
  1882                           	opt callstack 0
  1883  000045                     xtoa@n:
  1884                           	opt callstack 0
  1885                           
  1886                           ; 8 bytes @ 0x44
  1887  000045                     	ds	1
  1888  000046                     ___fladd@bexp:
  1889                           	opt callstack 0
  1890  000046                     floorf@e:
  1891                           	opt callstack 0
  1892                           
  1893                           ; 2 bytes @ 0x45
  1894  000046                     	ds	1
  1895  000047                     ??___flge:
  1896  000047                     ___fladd@grs:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 1 bytes @ 0x46
  1900  000047                     	ds	1
  1901  000048                     ?___flsub:
  1902                           	opt callstack 0
  1903  000048                     ?___fltol:
  1904                           	opt callstack 0
  1905  000048                     ___fltol@f1:
  1906                           	opt callstack 0
  1907  000048                     ___flsub@b:
  1908                           	opt callstack 0
  1909  000048                     floorf@u:
  1910                           	opt callstack 0
  1911                           
  1912                           ; 4 bytes @ 0x47
  1913  000048                     	ds	4
  1914  00004C                     ??___fltol:
  1915  00004C                     dtoa@i:
  1916                           	opt callstack 0
  1917  00004C                     ___flsub@a:
  1918                           	opt callstack 0
  1919                           
  1920                           ; 4 bytes @ 0x4B
  1921  00004C                     	ds	1
  1922  00004D                     xtoa@i:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 2 bytes @ 0x4C
  1926  00004D                     	ds	2
  1927  00004F                     xtoa@c:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 2 bytes @ 0x4E
  1931  00004F                     	ds	1
  1932  000050                     ___fltol@sign1:
  1933                           	opt callstack 0
  1934                           
  1935                           ; 1 bytes @ 0x4F
  1936  000050                     	ds	1
  1937  000051                     ___fltol@exp1:
  1938                           	opt callstack 0
  1939                           
  1940                           ; 1 bytes @ 0x50
  1941  000051                     	ds	1
  1942  000052                     ?_efgtoa:
  1943                           	opt callstack 0
  1944  000052                     efgtoa@fp:
  1945                           	opt callstack 0
  1946                           
  1947                           ; 2 bytes @ 0x51
  1948  000052                     	ds	2
  1949  000054                     efgtoa@f:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 4 bytes @ 0x53
  1953  000054                     	ds	4
  1954  000058                     efgtoa@c:
  1955                           	opt callstack 0
  1956                           
  1957                           ; 1 bytes @ 0x57
  1958  000058                     	ds	1
  1959  000059                     ??_efgtoa:
  1960                           
  1961                           ; 1 bytes @ 0x58
  1962  000059                     	ds	5
  1963  00005E                     ??_vfpfcnvrt:
  1964                           
  1965                           ; 1 bytes @ 0x5D
  1966  00005E                     	ds	4
  1967  000062                     vfprintf@cfmt:
  1968                           	opt callstack 0
  1969                           
  1970                           ; 2 bytes @ 0x61
  1971  000062                     	ds	2
  1972  000064                     ??_main:
  1973                           
  1974                           ; 1 bytes @ 0x63
  1975  000064                     	ds	2
  1976                           
  1977 ;;
  1978 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1979 ;;
  1980 ;; *************** function _main *****************
  1981 ;; Defined at:
  1982 ;;		line 53 in file "main.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  miniState       2   37[BANK1 ] int 
  1987 ;;  miniClear       2   32[BANK1 ] int 
  1988 ;;  number_press    2   25[BANK1 ] int 
  1989 ;;  miniTick        2   19[BANK1 ] int 
  1990 ;;  keypress        1   34[BANK1 ] unsigned char 
  1991 ;;  number_press    2    8[BANK1 ] int 
  1992 ;;  j               1   27[BANK1 ] unsigned char 
  1993 ;;  clock           7   10[BANK1 ] unsigned char [7]
  1994 ;;  Distance        4   61[BANK1 ] float 
  1995 ;;  x               4   55[BANK1 ] float 
  1996 ;;  circ            4   28[BANK1 ] float 
  1997 ;;  count           2   59[BANK1 ] int 
  1998 ;;  front           2   53[BANK1 ] int 
  1999 ;;  clear           2   51[BANK1 ] int 
  2000 ;;  state           2   49[BANK1 ] int 
  2001 ;;  righty          2   47[BANK1 ] int 
  2002 ;;  lefty           2   45[BANK1 ] int 
  2003 ;;  prev            2   43[BANK1 ] int 
  2004 ;;  statleft        2   41[BANK1 ] int 
  2005 ;;  statright       2   39[BANK1 ] int 
  2006 ;;  prev2           2   35[BANK1 ] int 
  2007 ;;  compare         2   23[BANK1 ] int 
  2008 ;;  tick            2   21[BANK1 ] int 
  2009 ;;  dispense        2   17[BANK1 ] int 
  2010 ;;  now             2    6[BANK1 ] int 
  2011 ;;  back            2    4[BANK1 ] int 
  2012 ;;  countr          2    2[BANK1 ] int 
  2013 ;;  countl          2    0[BANK1 ] int 
  2014 ;;  num             2    0        int 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         0       0      65       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         2       0      65       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:       67 bytes
  2029 ;; Hardware stack levels required when called:   12
  2030 ;; This function calls:
  2031 ;;		_EEPROM_prev
  2032 ;;		_EEPROM_save
  2033 ;;		_I2C_Master_Init
  2034 ;;		_I2C_Master_Read
  2035 ;;		_I2C_Master_Start
  2036 ;;		_I2C_Master_Stop
  2037 ;;		_I2C_Master_Write
  2038 ;;		___awmod
  2039 ;;		___fladd
  2040 ;;		___fldiv
  2041 ;;		___flge
  2042 ;;		___flmul
  2043 ;;		___flsub
  2044 ;;		___fltol
  2045 ;;		___xxtofl
  2046 ;;		_backdrive
  2047 ;;		_backleft
  2048 ;;		_backright
  2049 ;;		_forward
  2050 ;;		_frontsensor
  2051 ;;		_initLCD
  2052 ;;		_lcdInst
  2053 ;;		_left
  2054 ;;		_printf
  2055 ;;		_readADC
  2056 ;;		_right
  2057 ;; This function is called by:
  2058 ;;		Startup code after reset
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text0
  2063  000012                     __ptext0:
  2064                           	opt callstack 0
  2065  000012                     _main:
  2066                           	opt callstack 19
  2067                           
  2068                           ;main.c: 57:     LATD = 0x00;
  2069                           
  2070                           ;incstack = 0
  2071  000012  0E00               	movlw	0
  2072  000014  6E8C               	movwf	3980,c	;volatile
  2073                           
  2074                           ;main.c: 58:     TRISD = 0x00;
  2075  000016  0E00               	movlw	0
  2076  000018  6E95               	movwf	3989,c	;volatile
  2077                           
  2078                           ;main.c: 61:     ADCON1 = 0b00001101;
  2079  00001A  0E0D               	movlw	13
  2080  00001C  6EC1               	movwf	4033,c	;volatile
  2081                           
  2082                           ;main.c: 63:     ADCON2bits.ADFM = 1;
  2083  00001E  8EC0               	bsf	4032,7,c	;volatile
  2084                           
  2085                           ;main.c: 66:     INT1IE = 1;
  2086  000020  86F0               	bsf	4080,3,c	;volatile
  2087                           
  2088                           ;main.c: 69:     initLCD();
  2089  000022  EC6E  F022         	call	_initLCD	;wreg free
  2090                           
  2091                           ;main.c: 72:     (INTCONbits.GIE = 1);
  2092  000026  8EF2               	bsf	4082,7,c	;volatile
  2093                           
  2094                           ;main.c: 75:     I2C_Master_Init(100000);
  2095  000028  0EA0               	movlw	160
  2096  00002A  6E18               	movwf	I2C_Master_Init@clockFreq,c
  2097  00002C  0E86               	movlw	134
  2098  00002E  6E19               	movwf	I2C_Master_Init@clockFreq+1,c
  2099  000030  0E01               	movlw	1
  2100  000032  6E1A               	movwf	I2C_Master_Init@clockFreq+2,c
  2101  000034  0E00               	movlw	0
  2102  000036  6E1B               	movwf	I2C_Master_Init@clockFreq+3,c
  2103  000038  ECA3  F022         	call	_I2C_Master_Init	;wreg free
  2104                           
  2105                           ;main.c: 80:     TMR0ON = 1;
  2106  00003C  8ED5               	bsf	4053,7,c	;volatile
  2107                           
  2108                           ;main.c: 82:     T08BIT = 0;
  2109  00003E  9CD5               	bcf	4053,6,c	;volatile
  2110                           
  2111                           ;main.c: 84:     T0CS = 0;
  2112  000040  9AD5               	bcf	4053,5,c	;volatile
  2113                           
  2114                           ;main.c: 85:     T0SE = 0;
  2115  000042  98D5               	bcf	4053,4,c	;volatile
  2116                           
  2117                           ;main.c: 87:     PSA = 1;
  2118  000044  86D5               	bsf	4053,3,c	;volatile
  2119                           
  2120                           ;main.c: 90:     TMR0L = 0b00000000;
  2121  000046  0E00               	movlw	0
  2122  000048  6ED6               	movwf	4054,c	;volatile
  2123                           
  2124                           ;main.c: 91:     TMR0H = 0b00000000;
  2125  00004A  0E00               	movlw	0
  2126  00004C  6ED7               	movwf	4055,c	;volatile
  2127                           
  2128                           ;main.c: 96:     TRISBbits.TRISB2 = 0;
  2129  00004E  9493               	bcf	3987,2,c	;volatile
  2130                           
  2131                           ;main.c: 97:     TRISBbits.TRISB3 = 0;
  2132  000050  9693               	bcf	3987,3,c	;volatile
  2133                           
  2134                           ;main.c: 98:     LATBbits.LATB2 = 0;
  2135  000052  948A               	bcf	3978,2,c	;volatile
  2136                           
  2137                           ;main.c: 99:     LATBbits.LATB3 = 0;
  2138  000054  968A               	bcf	3978,3,c	;volatile
  2139                           
  2140                           ;main.c: 101:     TRISCbits.RC7 = 0;
  2141  000056  9E94               	bcf	3988,7,c	;volatile
  2142                           
  2143                           ;main.c: 102:     LATCbits.LATC7 = 0;
  2144  000058  9E8B               	bcf	3979,7,c	;volatile
  2145                           
  2146                           ;main.c: 105:     TRISCbits.RC2 = 1;
  2147  00005A  8494               	bsf	3988,2,c	;volatile
  2148                           
  2149                           ;main.c: 106:     TRISCbits.RC1 = 0;
  2150  00005C  9294               	bcf	3988,1,c	;volatile
  2151                           
  2152                           ;main.c: 109:     TRISAbits.RA4 = 1;
  2153  00005E  8892               	bsf	3986,4,c	;volatile
  2154                           
  2155                           ;main.c: 110:     TRISAbits.RA5 = 0;
  2156  000060  9A92               	bcf	3986,5,c	;volatile
  2157                           
  2158                           ;main.c: 112:     TRISBbits.RB0 = 0;
  2159  000062  9093               	bcf	3987,0,c	;volatile
  2160                           
  2161                           ;main.c: 113:     LATBbits.LATB0 = 0;
  2162  000064  908A               	bcf	3978,0,c	;volatile
  2163                           
  2164                           ;main.c: 115:     TRISCbits.RC6 = 0;
  2165  000066  9C94               	bcf	3988,6,c	;volatile
  2166                           
  2167                           ;main.c: 116:     LATCbits.LATC6 = 0;
  2168  000068  9C8B               	bcf	3979,6,c	;volatile
  2169                           
  2170                           ;main.c: 118:     TRISAbits.RA2 = 1;
  2171  00006A  8492               	bsf	3986,2,c	;volatile
  2172                           
  2173                           ;main.c: 119:     TRISAbits.RA3 = 1;
  2174  00006C  8692               	bsf	3986,3,c	;volatile
  2175                           
  2176                           ;main.c: 122:     float x = 1.5;
  2177  00006E  0E00               	movlw	0
  2178  000070  0101               	movlb	1	; () banked
  2179  000072  6F96               	movwf	main@x& (0+255),b
  2180  000074  0E00               	movlw	0
  2181  000076  6F97               	movwf	(main@x+1)& (0+255),b
  2182  000078  0EC0               	movlw	192
  2183  00007A  6F98               	movwf	(main@x+2)& (0+255),b
  2184  00007C  0E3F               	movlw	63
  2185  00007E  6F99               	movwf	(main@x+3)& (0+255),b
  2186                           
  2187                           ;main.c: 123:     float circ = 8.8 * 3.14159265358979323846;
  2188  000080  0E0A               	movlw	10
  2189  000082  6F7B               	movwf	main@circ& (0+255),b
  2190  000084  0E2B               	movlw	43
  2191  000086  6F7C               	movwf	(main@circ+1)& (0+255),b
  2192  000088  0EDD               	movlw	221
  2193  00008A  6F7D               	movwf	(main@circ+2)& (0+255),b
  2194  00008C  0E41               	movlw	65
  2195  00008E  6F7E               	movwf	(main@circ+3)& (0+255),b
  2196                           
  2197                           ;main.c: 125:     int lefty = 0;
  2198  000090  0E00               	movlw	0
  2199  000092  6F8D               	movwf	(main@lefty+1)& (0+255),b
  2200  000094  0E00               	movlw	0
  2201  000096  6F8C               	movwf	main@lefty& (0+255),b
  2202                           
  2203                           ;main.c: 126:     int righty = 0;
  2204  000098  0E00               	movlw	0
  2205  00009A  6F8F               	movwf	(main@righty+1)& (0+255),b
  2206  00009C  0E00               	movlw	0
  2207  00009E  6F8E               	movwf	main@righty& (0+255),b
  2208                           
  2209                           ;main.c: 127:     int countl = 0;
  2210  0000A0  0E00               	movlw	0
  2211  0000A2  6F60               	movwf	(main@countl+1)& (0+255),b
  2212  0000A4  0E00               	movlw	0
  2213  0000A6  6F5F               	movwf	main@countl& (0+255),b
  2214                           
  2215                           ;main.c: 128:     int countr = 0;
  2216  0000A8  0E00               	movlw	0
  2217  0000AA  6F62               	movwf	(main@countr+1)& (0+255),b
  2218  0000AC  0E00               	movlw	0
  2219  0000AE  6F61               	movwf	main@countr& (0+255),b
  2220                           
  2221                           ;main.c: 129:     int statright = 0;
  2222  0000B0  0E00               	movlw	0
  2223  0000B2  6F87               	movwf	(main@statright+1)& (0+255),b
  2224  0000B4  0E00               	movlw	0
  2225  0000B6  6F86               	movwf	main@statright& (0+255),b
  2226                           
  2227                           ;main.c: 130:     int statleft = 0;
  2228  0000B8  0E00               	movlw	0
  2229  0000BA  6F89               	movwf	(main@statleft+1)& (0+255),b
  2230  0000BC  0E00               	movlw	0
  2231  0000BE  6F88               	movwf	main@statleft& (0+255),b
  2232                           
  2233                           ;main.c: 132:     int front= 0;
  2234  0000C0  0E00               	movlw	0
  2235  0000C2  6F95               	movwf	(main@front+1)& (0+255),b
  2236  0000C4  0E00               	movlw	0
  2237  0000C6  6F94               	movwf	main@front& (0+255),b
  2238                           
  2239                           ;main.c: 133:     int back = 0;
  2240  0000C8  0E00               	movlw	0
  2241  0000CA  6F64               	movwf	(main@back+1)& (0+255),b
  2242  0000CC  0E00               	movlw	0
  2243  0000CE  6F63               	movwf	main@back& (0+255),b
  2244                           
  2245                           ;main.c: 134:     int prev = 0;
  2246  0000D0  0E00               	movlw	0
  2247  0000D2  6F8B               	movwf	(main@prev+1)& (0+255),b
  2248  0000D4  0E00               	movlw	0
  2249  0000D6  6F8A               	movwf	main@prev& (0+255),b
  2250                           
  2251                           ;main.c: 135:     int prev2 = 0;
  2252  0000D8  0E00               	movlw	0
  2253  0000DA  6F83               	movwf	(main@prev2+1)& (0+255),b
  2254  0000DC  0E00               	movlw	0
  2255  0000DE  6F82               	movwf	main@prev2& (0+255),b
  2256                           
  2257                           ;main.c: 137:     int compare = 0;
  2258  0000E0  0E00               	movlw	0
  2259  0000E2  6F77               	movwf	(main@compare+1)& (0+255),b
  2260  0000E4  0E00               	movlw	0
  2261  0000E6  6F76               	movwf	main@compare& (0+255),b
  2262                           
  2263                           ;main.c: 139:     float Distance = 0;
  2264  0000E8  0E00               	movlw	0
  2265  0000EA  6F9C               	movwf	main@Distance& (0+255),b
  2266  0000EC  0E00               	movlw	0
  2267  0000EE  6F9D               	movwf	(main@Distance+1)& (0+255),b
  2268  0000F0  0E00               	movlw	0
  2269  0000F2  6F9E               	movwf	(main@Distance+2)& (0+255),b
  2270  0000F4  0E00               	movlw	0
  2271  0000F6  6F9F               	movwf	(main@Distance+3)& (0+255),b
  2272                           
  2273                           ;main.c: 141:     int tick = 0;
  2274  0000F8  0E00               	movlw	0
  2275  0000FA  6F75               	movwf	(main@tick+1)& (0+255),b
  2276  0000FC  0E00               	movlw	0
  2277  0000FE  6F74               	movwf	main@tick& (0+255),b
  2278                           
  2279                           ;main.c: 143:     int num;;main.c: 144:     int count = 0;
  2280  000100  0E00               	movlw	0
  2281  000102  6F9B               	movwf	(main@count+1)& (0+255),b
  2282  000104  0E00               	movlw	0
  2283  000106  6F9A               	movwf	main@count& (0+255),b
  2284                           
  2285                           ;main.c: 145:     int now = 0;
  2286  000108  0E00               	movlw	0
  2287  00010A  6F66               	movwf	(main@now+1)& (0+255),b
  2288  00010C  0E00               	movlw	0
  2289  00010E  6F65               	movwf	main@now& (0+255),b
  2290                           
  2291                           ;main.c: 147:     while (readADC(2) < x && readADC(2) < x){
  2292  000110  D05C               	goto	l9158
  2293  000112                     l9142:
  2294                           
  2295                           ;main.c: 148:         if (readADC(2) < x) {
  2296  000112  0E02               	movlw	2
  2297  000114  ECB4  F020         	call	_readADC
  2298  000118  C038  F03F         	movff	?_readADC,___flge@ff1
  2299  00011C  C039  F040         	movff	?_readADC+1,___flge@ff1+1
  2300  000120  C03A  F041         	movff	?_readADC+2,___flge@ff1+2
  2301  000124  C03B  F042         	movff	?_readADC+3,___flge@ff1+3
  2302  000128  C196  F043         	movff	main@x,___flge@ff2
  2303  00012C  C197  F044         	movff	main@x+1,___flge@ff2+1
  2304  000130  C198  F045         	movff	main@x+2,___flge@ff2+2
  2305  000134  C199  F046         	movff	main@x+3,___flge@ff2+3
  2306  000138  ECED  F01E         	call	___flge	;wreg free
  2307  00013C  B0D8               	btfsc	status,0,c
  2308  00013E  D017               	goto	l9150
  2309                           
  2310                           ;main.c: 150:             LATBbits.LATB2 = 1 ;
  2311  000140  848A               	bsf	3978,2,c	;volatile
  2312                           
  2313                           ;main.c: 151:             _delay((unsigned long)((1200)*(10000000/4000000.0)));
  2314  000142  0E04               	movlw	4
  2315  000144  6E64               	movwf	??_main& (0+255),c
  2316  000146  0EE4               	movlw	228
  2317  000148                     u12137:
  2318  000148  2EE8               	decfsz	wreg,f,c
  2319  00014A  D7FE               	bra	u12137
  2320  00014C  2E64               	decfsz	??_main& (0+255),f,c
  2321  00014E  D7FC               	bra	u12137
  2322  000150  D000               	nop2	
  2323                           
  2324                           ;main.c: 152:             LATBbits.LATB2 = 0 ;
  2325  000152  948A               	bcf	3978,2,c	;volatile
  2326                           
  2327                           ;main.c: 153:             _delay((unsigned long)((600)*(10000000/4000000.0)));
  2328  000154  0ED6               	movlw	214
  2329  000156                     u12147:
  2330  000156  D000               	nop2	
  2331  000158  D000               	nop2	
  2332  00015A  2EE8               	decfsz	wreg,f,c
  2333  00015C  D7FC               	bra	u12147
  2334  00015E  D000               	nop2	
  2335                           
  2336                           ;main.c: 154:             _delay((unsigned long)((1000)*(10000000/4000000.0)));
  2337  000160  0E04               	movlw	4
  2338  000162  6E64               	movwf	??_main& (0+255),c
  2339  000164  0E3E               	movlw	62
  2340  000166                     u12157:
  2341  000166  2EE8               	decfsz	wreg,f,c
  2342  000168  D7FE               	bra	u12157
  2343  00016A  2E64               	decfsz	??_main& (0+255),f,c
  2344  00016C  D7FC               	bra	u12157
  2345  00016E                     l9150:
  2346                           
  2347                           ;main.c: 156:         if (readADC(3) < x) {
  2348  00016E  0E03               	movlw	3
  2349  000170  ECB4  F020         	call	_readADC
  2350  000174  C038  F03F         	movff	?_readADC,___flge@ff1
  2351  000178  C039  F040         	movff	?_readADC+1,___flge@ff1+1
  2352  00017C  C03A  F041         	movff	?_readADC+2,___flge@ff1+2
  2353  000180  C03B  F042         	movff	?_readADC+3,___flge@ff1+3
  2354  000184  C196  F043         	movff	main@x,___flge@ff2
  2355  000188  C197  F044         	movff	main@x+1,___flge@ff2+1
  2356  00018C  C198  F045         	movff	main@x+2,___flge@ff2+2
  2357  000190  C199  F046         	movff	main@x+3,___flge@ff2+3
  2358  000194  ECED  F01E         	call	___flge	;wreg free
  2359  000198  B0D8               	btfsc	status,0,c
  2360  00019A  D017               	goto	l9158
  2361                           
  2362                           ;main.c: 158:             LATBbits.LATB3 = 1 ;
  2363  00019C  868A               	bsf	3978,3,c	;volatile
  2364                           
  2365                           ;main.c: 159:             _delay((unsigned long)((1200)*(10000000/4000000.0)));
  2366  00019E  0E04               	movlw	4
  2367  0001A0  6E64               	movwf	??_main& (0+255),c
  2368  0001A2  0EE4               	movlw	228
  2369  0001A4                     u12167:
  2370  0001A4  2EE8               	decfsz	wreg,f,c
  2371  0001A6  D7FE               	bra	u12167
  2372  0001A8  2E64               	decfsz	??_main& (0+255),f,c
  2373  0001AA  D7FC               	bra	u12167
  2374  0001AC  D000               	nop2	
  2375                           
  2376                           ;main.c: 160:             _delay((unsigned long)((600)*(10000000/4000000.0)));
  2377  0001AE  0ED6               	movlw	214
  2378  0001B0                     u12177:
  2379  0001B0  D000               	nop2	
  2380  0001B2  D000               	nop2	
  2381  0001B4  2EE8               	decfsz	wreg,f,c
  2382  0001B6  D7FC               	bra	u12177
  2383  0001B8  D000               	nop2	
  2384                           
  2385                           ;main.c: 161:             LATBbits.LATB3 = 0 ;
  2386  0001BA  968A               	bcf	3978,3,c	;volatile
  2387                           
  2388                           ;main.c: 162:             _delay((unsigned long)((1000)*(10000000/4000000.0)));
  2389  0001BC  0E04               	movlw	4
  2390  0001BE  6E64               	movwf	??_main& (0+255),c
  2391  0001C0  0E3E               	movlw	62
  2392  0001C2                     u12187:
  2393  0001C2  2EE8               	decfsz	wreg,f,c
  2394  0001C4  D7FE               	bra	u12187
  2395  0001C6  2E64               	decfsz	??_main& (0+255),f,c
  2396  0001C8  D7FC               	bra	u12187
  2397  0001CA                     l9158:
  2398                           
  2399                           ;main.c: 147:     while (readADC(2) < x && readADC(2) < x){
  2400  0001CA  0E02               	movlw	2
  2401  0001CC  ECB4  F020         	call	_readADC
  2402  0001D0  C038  F03F         	movff	?_readADC,___flge@ff1
  2403  0001D4  C039  F040         	movff	?_readADC+1,___flge@ff1+1
  2404  0001D8  C03A  F041         	movff	?_readADC+2,___flge@ff1+2
  2405  0001DC  C03B  F042         	movff	?_readADC+3,___flge@ff1+3
  2406  0001E0  C196  F043         	movff	main@x,___flge@ff2
  2407  0001E4  C197  F044         	movff	main@x+1,___flge@ff2+1
  2408  0001E8  C198  F045         	movff	main@x+2,___flge@ff2+2
  2409  0001EC  C199  F046         	movff	main@x+3,___flge@ff2+3
  2410  0001F0  ECED  F01E         	call	___flge	;wreg free
  2411  0001F4  B0D8               	btfsc	status,0,c
  2412  0001F6  D017               	goto	u11410
  2413  0001F8  0E02               	movlw	2
  2414  0001FA  ECB4  F020         	call	_readADC
  2415  0001FE  C038  F03F         	movff	?_readADC,___flge@ff1
  2416  000202  C039  F040         	movff	?_readADC+1,___flge@ff1+1
  2417  000206  C03A  F041         	movff	?_readADC+2,___flge@ff1+2
  2418  00020A  C03B  F042         	movff	?_readADC+3,___flge@ff1+3
  2419  00020E  C196  F043         	movff	main@x,___flge@ff2
  2420  000212  C197  F044         	movff	main@x+1,___flge@ff2+1
  2421  000216  C198  F045         	movff	main@x+2,___flge@ff2+2
  2422  00021A  C199  F046         	movff	main@x+3,___flge@ff2+3
  2423  00021E  ECED  F01E         	call	___flge	;wreg free
  2424  000222  A0D8               	btfss	status,0,c
  2425  000224  D776               	goto	l9142
  2426  000226                     u11410:
  2427                           
  2428                           ;main.c: 166:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2429  000226  0E0C               	movlw	12
  2430  000228  ECED  F025         	call	_lcdInst
  2431                           
  2432                           ;main.c: 167:     unsigned char clock[7];;main.c: 169:     while(!start){
  2433  00022C  D07A               	goto	l9204
  2434  00022E                     l9164:
  2435                           
  2436                           ; BSR set to: 1
  2437                           ;main.c: 171:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2438  00022E  0E01               	movlw	1
  2439  000230  ECED  F025         	call	_lcdInst
  2440  000234  0E11               	movlw	17
  2441  000236  6E64               	movwf	??_main& (0+255),c
  2442  000238  0E3A               	movlw	58
  2443  00023A                     u12197:
  2444  00023A  2EE8               	decfsz	wreg,f,c
  2445  00023C  D7FE               	bra	u12197
  2446  00023E  2E64               	decfsz	??_main& (0+255),f,c
  2447  000240  D7FC               	bra	u12197
  2448  000242  D000               	nop2	
  2449                           
  2450                           ;main.c: 172:         printf("A to start");
  2451  000244  0E71               	movlw	low STR_1
  2452  000246  0100               	movlb	0	; () banked
  2453  000248  6FE4               	movwf	printf@fmt& (0+255),b
  2454  00024A  0EFF               	movlw	high STR_1
  2455  00024C  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  2456  00024E  EC3F  F025         	call	_printf	;wreg free
  2457  000252  0EC0               	movlw	192
  2458  000254  ECED  F025         	call	_lcdInst
  2459                           
  2460                           ;main.c: 176:         I2C_Master_Start();
  2461  000258  ECFC  F025         	call	_I2C_Master_Start	;wreg free
  2462                           
  2463                           ;main.c: 177:         I2C_Master_Write(0b11010000);
  2464  00025C  0E00               	movlw	0
  2465  00025E  6E0D               	movwf	I2C_Master_Write@byteToWrite+1,c
  2466  000260  0ED0               	movlw	208
  2467  000262  6E0C               	movwf	I2C_Master_Write@byteToWrite,c
  2468  000264  ECF3  F025         	call	_I2C_Master_Write	;wreg free
  2469                           
  2470                           ;main.c: 178:         I2C_Master_Write(0x00);
  2471  000268  0E00               	movlw	0
  2472  00026A  6E0D               	movwf	I2C_Master_Write@byteToWrite+1,c
  2473  00026C  0E00               	movlw	0
  2474  00026E  6E0C               	movwf	I2C_Master_Write@byteToWrite,c
  2475  000270  ECF3  F025         	call	_I2C_Master_Write	;wreg free
  2476                           
  2477                           ;main.c: 179:         I2C_Master_Stop();
  2478  000274  ECF8  F025         	call	_I2C_Master_Stop	;wreg free
  2479                           
  2480                           ;main.c: 182:         I2C_Master_Start();
  2481  000278  ECFC  F025         	call	_I2C_Master_Start	;wreg free
  2482                           
  2483                           ;main.c: 183:         I2C_Master_Write(0b11010001);
  2484  00027C  0E00               	movlw	0
  2485  00027E  6E0D               	movwf	I2C_Master_Write@byteToWrite+1,c
  2486  000280  0ED1               	movlw	209
  2487  000282  6E0C               	movwf	I2C_Master_Write@byteToWrite,c
  2488  000284  ECF3  F025         	call	_I2C_Master_Write	;wreg free
  2489                           
  2490                           ;main.c: 184:         for(unsigned char j = 0; j < 6; j++){
  2491  000288  0E00               	movlw	0
  2492  00028A  0101               	movlb	1	; () banked
  2493  00028C  6F7A               	movwf	main@j& (0+255),b
  2494  00028E                     l9186:
  2495                           
  2496                           ; BSR set to: 1
  2497  00028E  0E05               	movlw	5
  2498  000290  657A               	cpfsgt	main@j& (0+255),b
  2499  000292  D001               	goto	l9190
  2500  000294  D00D               	goto	l9196
  2501  000296                     l9190:
  2502                           
  2503                           ; BSR set to: 1
  2504                           ;main.c: 185:             clock[j] = I2C_Master_Read(0);
  2505  000296  0E69               	movlw	low main@clock
  2506  000298  257A               	addwf	main@j& (0+255),w,b
  2507  00029A  6ED9               	movwf	fsr2l,c
  2508  00029C  6ADA               	clrf	fsr2h,c
  2509  00029E  0E01               	movlw	high main@clock
  2510  0002A0  22DA               	addwfc	fsr2h,f,c
  2511  0002A2  0E00               	movlw	0
  2512  0002A4  ECAE  F025         	call	_I2C_Master_Read
  2513  0002A8  6EDF               	movwf	indf2,c
  2514                           
  2515                           ;main.c: 186:         }
  2516  0002AA  0101               	movlb	1	; () banked
  2517  0002AC  2B7A               	incf	main@j& (0+255),f,b
  2518  0002AE  D7EF               	goto	l9186
  2519  0002B0                     l9196:
  2520                           
  2521                           ; BSR set to: 1
  2522                           ;main.c: 187:         clock[6] = I2C_Master_Read(1);
  2523  0002B0  0E01               	movlw	1
  2524  0002B2  ECAE  F025         	call	_I2C_Master_Read
  2525  0002B6  0101               	movlb	1	; () banked
  2526  0002B8  6F6F               	movwf	(main@clock+6)& (0+255),b
  2527                           
  2528                           ;main.c: 188:         I2C_Master_Stop();
  2529  0002BA  ECF8  F025         	call	_I2C_Master_Stop	;wreg free
  2530  0002BE  0EC0               	movlw	192
  2531  0002C0  ECED  F025         	call	_lcdInst
  2532                           
  2533                           ;main.c: 192:         printf("%02x/%02x/%02x", clock[6],clock[5],clock[4]);
  2534  0002C4  0E86               	movlw	low STR_2
  2535  0002C6  0100               	movlb	0	; () banked
  2536  0002C8  6FE4               	movwf	printf@fmt& (0+255),b
  2537  0002CA  0EFE               	movlw	high STR_2
  2538  0002CC  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  2539  0002CE  C16F  F0E6         	movff	main@clock+6,?_printf+2
  2540  0002D2  6BE7               	clrf	(?_printf+3)& (0+255),b
  2541  0002D4  C16E  F0E8         	movff	main@clock+5,?_printf+4
  2542  0002D8  6BE9               	clrf	(?_printf+5)& (0+255),b
  2543  0002DA  C16D  F0EA         	movff	main@clock+4,?_printf+6
  2544  0002DE  6BEB               	clrf	(?_printf+7)& (0+255),b
  2545  0002E0  EC3F  F025         	call	_printf	;wreg free
  2546  0002E4  0E90               	movlw	144
  2547  0002E6  ECED  F025         	call	_lcdInst
  2548                           
  2549                           ;main.c: 194:         printf("%02x:%02x:%02x", clock[2],clock[1],clock[0]);
  2550  0002EA  0E95               	movlw	low STR_3
  2551  0002EC  0100               	movlb	0	; () banked
  2552  0002EE  6FE4               	movwf	printf@fmt& (0+255),b
  2553  0002F0  0EFE               	movlw	high STR_3
  2554  0002F2  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  2555  0002F4  C16B  F0E6         	movff	main@clock+2,?_printf+2
  2556  0002F8  6BE7               	clrf	(?_printf+3)& (0+255),b
  2557  0002FA  C16A  F0E8         	movff	main@clock+1,?_printf+4
  2558  0002FE  6BE9               	clrf	(?_printf+5)& (0+255),b
  2559  000300  C169  F0EA         	movff	main@clock,?_printf+6
  2560  000304  6BEB               	clrf	(?_printf+7)& (0+255),b
  2561  000306  EC3F  F025         	call	_printf	;wreg free
  2562                           
  2563                           ;main.c: 195:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  2564  00030A  0E0D               	movlw	13
  2565  00030C  6E65               	movwf	(??_main+1)& (0+255),c
  2566  00030E  0EAF               	movlw	175
  2567  000310  6E64               	movwf	??_main& (0+255),c
  2568  000312  0EB6               	movlw	182
  2569  000314                     u12207:
  2570  000314  2EE8               	decfsz	wreg,f,c
  2571  000316  D7FE               	bra	u12207
  2572  000318  2E64               	decfsz	??_main& (0+255),f,c
  2573  00031A  D7FC               	bra	u12207
  2574  00031C  2E65               	decfsz	(??_main+1)& (0+255),f,c
  2575  00031E  D7FA               	bra	u12207
  2576  000320  D000               	nop2	
  2577  000322                     l9204:
  2578                           
  2579                           ;main.c: 169:     while(!start){
  2580  000322  0101               	movlb	1	; () banked
  2581  000324  510B               	movf	_start& (0+255),w,b	;volatile
  2582  000326  B4D8               	btfsc	status,2,c
  2583  000328  D782               	goto	l9164
  2584                           
  2585                           ; BSR set to: 1
  2586                           ;main.c: 198:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2587  00032A  0E01               	movlw	1
  2588  00032C  ECED  F025         	call	_lcdInst
  2589  000330  0E11               	movlw	17
  2590  000332  6E64               	movwf	??_main& (0+255),c
  2591  000334  0E3A               	movlw	58
  2592  000336                     u12217:
  2593  000336  2EE8               	decfsz	wreg,f,c
  2594  000338  D7FE               	bra	u12217
  2595  00033A  2E64               	decfsz	??_main& (0+255),f,c
  2596  00033C  D7FC               	bra	u12217
  2597  00033E  D000               	nop2	
  2598                           
  2599                           ;main.c: 199:     TMR0IE = 1;
  2600  000340  8AF2               	bsf	4082,5,c	;volatile
  2601                           
  2602                           ;main.c: 201:     int dispense = 0;
  2603  000342  0E00               	movlw	0
  2604  000344  0101               	movlb	1	; () banked
  2605  000346  6F71               	movwf	(main@dispense+1)& (0+255),b
  2606  000348  0E00               	movlw	0
  2607  00034A  6F70               	movwf	main@dispense& (0+255),b
  2608                           
  2609                           ;main.c: 203:     while(timer*0.0262144 < 100 && Distance < 400 && Canister < 11) {
  2610  00034C  D38D               	goto	l9416
  2611  00034E                     l9214:
  2612                           
  2613                           ; BSR set to: 1
  2614                           ;main.c: 205:         _delay((unsigned long)((10)*(10000000/4000.0)));
  2615  00034E  0E21               	movlw	33
  2616  000350  6E64               	movwf	??_main& (0+255),c
  2617  000352  0E76               	movlw	118
  2618  000354                     u12227:
  2619  000354  2EE8               	decfsz	wreg,f,c
  2620  000356  D7FE               	bra	u12227
  2621  000358  2E64               	decfsz	??_main& (0+255),f,c
  2622  00035A  D7FC               	bra	u12227
  2623  00035C  D000               	nop2	
  2624                           
  2625                           ;main.c: 206:         front = frontsensor();
  2626  00035E  ECC2  F021         	call	_frontsensor	;wreg free
  2627  000362  C013  F194         	movff	?_frontsensor,main@front
  2628  000366  C014  F195         	movff	?_frontsensor+1,main@front+1
  2629                           
  2630                           ;main.c: 210:             if (lefty == righty) {
  2631  00036A  0101               	movlb	1	; () banked
  2632  00036C  518E               	movf	main@righty& (0+255),w,b
  2633  00036E  198C               	xorwf	main@lefty& (0+255),w,b
  2634  000370  E107               	bnz	l9222
  2635  000372  518F               	movf	(main@righty+1)& (0+255),w,b
  2636  000374  198D               	xorwf	(main@lefty+1)& (0+255),w,b
  2637  000376  A4D8               	btfss	status,2,c
  2638  000378  D003               	goto	l9222
  2639                           
  2640                           ; BSR set to: 1
  2641                           ;main.c: 211:                 forward();
  2642  00037A  ECCE  F024         	call	_forward	;wreg free
  2643                           
  2644                           ;main.c: 212:             }
  2645  00037E  D00F               	goto	l9228
  2646  000380                     l9222:
  2647                           
  2648                           ; BSR set to: 1
  2649  000380  518E               	movf	main@righty& (0+255),w,b
  2650  000382  5D8C               	subwf	main@lefty& (0+255),w,b
  2651  000384  518D               	movf	(main@lefty+1)& (0+255),w,b
  2652  000386  0A80               	xorlw	128
  2653  000388  6E64               	movwf	??_main& (0+255),c
  2654  00038A  518F               	movf	(main@righty+1)& (0+255),w,b
  2655  00038C  0A80               	xorlw	128
  2656  00038E  5864               	subwfb	??_main& (0+255),w,c
  2657  000390  B0D8               	btfsc	status,0,c
  2658  000392  D003               	goto	l9226
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;main.c: 214:                 left();
  2662  000394  EC78  F025         	call	_left	;wreg free
  2663                           
  2664                           ;main.c: 215:             }
  2665  000398  D002               	goto	l9228
  2666  00039A                     l9226:
  2667                           
  2668                           ; BSR set to: 1
  2669                           ;main.c: 217:                 right();
  2670  00039A  EC66  F025         	call	_right	;wreg free
  2671  00039E                     l9228:
  2672                           
  2673                           ;main.c: 221:             if (readADC(2) > x && statright == 0){
  2674  00039E  C196  F03F         	movff	main@x,___flge@ff1
  2675  0003A2  C197  F040         	movff	main@x+1,___flge@ff1+1
  2676  0003A6  C198  F041         	movff	main@x+2,___flge@ff1+2
  2677  0003AA  C199  F042         	movff	main@x+3,___flge@ff1+3
  2678  0003AE  0E02               	movlw	2
  2679  0003B0  ECB4  F020         	call	_readADC
  2680  0003B4  C038  F043         	movff	?_readADC,___flge@ff2
  2681  0003B8  C039  F044         	movff	?_readADC+1,___flge@ff2+1
  2682  0003BC  C03A  F045         	movff	?_readADC+2,___flge@ff2+2
  2683  0003C0  C03B  F046         	movff	?_readADC+3,___flge@ff2+3
  2684  0003C4  ECED  F01E         	call	___flge	;wreg free
  2685  0003C8  B0D8               	btfsc	status,0,c
  2686  0003CA  D052               	goto	l9244
  2687  0003CC  0101               	movlb	1	; () banked
  2688  0003CE  5186               	movf	main@statright& (0+255),w,b
  2689  0003D0  1187               	iorwf	(main@statright+1)& (0+255),w,b
  2690  0003D2  A4D8               	btfss	status,2,c
  2691  0003D4  D04D               	goto	l9244
  2692                           
  2693                           ; BSR set to: 1
  2694                           ;main.c: 222:                 statright = 1;
  2695  0003D6  0E00               	movlw	0
  2696  0003D8  6F87               	movwf	(main@statright+1)& (0+255),b
  2697  0003DA  0E01               	movlw	1
  2698  0003DC  6F86               	movwf	main@statright& (0+255),b
  2699                           
  2700                           ; BSR set to: 1
  2701                           ;main.c: 223:                 righty++;
  2702  0003DE  4B8E               	infsnz	main@righty& (0+255),f,b
  2703  0003E0  2B8F               	incf	(main@righty+1)& (0+255),f,b
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;main.c: 224:                 Distance += (circ / 12.0);
  2707  0003E2  C19C  F038         	movff	main@Distance,___fladd@b
  2708  0003E6  C19D  F039         	movff	main@Distance+1,___fladd@b+1
  2709  0003EA  C19E  F03A         	movff	main@Distance+2,___fladd@b+2
  2710  0003EE  C19F  F03B         	movff	main@Distance+3,___fladd@b+3
  2711  0003F2  0E00               	movlw	0
  2712  0003F4  6E23               	movwf	___fldiv@a,c
  2713  0003F6  0E00               	movlw	0
  2714  0003F8  6E24               	movwf	___fldiv@a+1,c
  2715  0003FA  0E40               	movlw	64
  2716  0003FC  6E25               	movwf	___fldiv@a+2,c
  2717  0003FE  0E41               	movlw	65
  2718  000400  6E26               	movwf	___fldiv@a+3,c
  2719  000402  C17B  F01F         	movff	main@circ,___fldiv@b
  2720  000406  C17C  F020         	movff	main@circ+1,___fldiv@b+1
  2721  00040A  C17D  F021         	movff	main@circ+2,___fldiv@b+2
  2722  00040E  C17E  F022         	movff	main@circ+3,___fldiv@b+3
  2723  000412  EC0D  F016         	call	___fldiv	;wreg free
  2724  000416  C01F  F03C         	movff	?___fldiv,___fladd@a
  2725  00041A  C020  F03D         	movff	?___fldiv+1,___fladd@a+1
  2726  00041E  C021  F03E         	movff	?___fldiv+2,___fladd@a+2
  2727  000422  C022  F03F         	movff	?___fldiv+3,___fladd@a+3
  2728  000426  EC87  F014         	call	___fladd	;wreg free
  2729  00042A  C038  F19C         	movff	?___fladd,main@Distance
  2730  00042E  C039  F19D         	movff	?___fladd+1,main@Distance+1
  2731  000432  C03A  F19E         	movff	?___fladd+2,main@Distance+2
  2732  000436  C03B  F19F         	movff	?___fladd+3,main@Distance+3
  2733                           
  2734                           ;main.c: 225:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  2735  00043A  0E01               	movlw	1
  2736  00043C  ECED  F025         	call	_lcdInst
  2737  000440  0E11               	movlw	17
  2738  000442  6E64               	movwf	??_main& (0+255),c
  2739  000444  0E3A               	movlw	58
  2740  000446                     u12237:
  2741  000446  2EE8               	decfsz	wreg,f,c
  2742  000448  D7FE               	bra	u12237
  2743  00044A  2E64               	decfsz	??_main& (0+255),f,c
  2744  00044C  D7FC               	bra	u12237
  2745  00044E  D000               	nop2	
  2746                           
  2747                           ;main.c: 226:                 printf("Dist: %.3f", Distance);
  2748  000450  0E45               	movlw	low STR_4
  2749  000452  0100               	movlb	0	; () banked
  2750  000454  6FE4               	movwf	printf@fmt& (0+255),b
  2751  000456  0EFF               	movlw	high STR_4
  2752  000458  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  2753  00045A  C19C  F0E6         	movff	main@Distance,?_printf+2
  2754  00045E  C19D  F0E7         	movff	main@Distance+1,?_printf+3
  2755  000462  C19E  F0E8         	movff	main@Distance+2,?_printf+4
  2756  000466  C19F  F0E9         	movff	main@Distance+3,?_printf+5
  2757  00046A  EC3F  F025         	call	_printf	;wreg free
  2758                           
  2759                           ;main.c: 228:             }
  2760  00046E  D020               	goto	l9250
  2761  000470                     l9244:
  2762  000470  0E02               	movlw	2
  2763  000472  ECB4  F020         	call	_readADC
  2764  000476  C038  F03F         	movff	?_readADC,___flge@ff1
  2765  00047A  C039  F040         	movff	?_readADC+1,___flge@ff1+1
  2766  00047E  C03A  F041         	movff	?_readADC+2,___flge@ff1+2
  2767  000482  C03B  F042         	movff	?_readADC+3,___flge@ff1+3
  2768  000486  0E00               	movlw	0
  2769  000488  6E43               	movwf	___flge@ff2,c
  2770  00048A  0E00               	movlw	0
  2771  00048C  6E44               	movwf	___flge@ff2+1,c
  2772  00048E  0E80               	movlw	128
  2773  000490  6E45               	movwf	___flge@ff2+2,c
  2774  000492  0E3F               	movlw	63
  2775  000494  6E46               	movwf	___flge@ff2+3,c
  2776  000496  ECED  F01E         	call	___flge	;wreg free
  2777  00049A  B0D8               	btfsc	status,0,c
  2778  00049C  D009               	goto	l9250
  2779  00049E  0101               	movlb	1	; () banked
  2780  0004A0  0586               	decf	main@statright& (0+255),w,b
  2781  0004A2  1187               	iorwf	(main@statright+1)& (0+255),w,b
  2782  0004A4  A4D8               	btfss	status,2,c
  2783  0004A6  D004               	goto	l9250
  2784                           
  2785                           ; BSR set to: 1
  2786                           ;main.c: 230:                 statright = 0;
  2787  0004A8  0E00               	movlw	0
  2788  0004AA  6F87               	movwf	(main@statright+1)& (0+255),b
  2789  0004AC  0E00               	movlw	0
  2790  0004AE  6F86               	movwf	main@statright& (0+255),b
  2791  0004B0                     l9250:
  2792                           
  2793                           ;main.c: 234:             if (readADC(3) > x && statleft == 0){
  2794  0004B0  C196  F03F         	movff	main@x,___flge@ff1
  2795  0004B4  C197  F040         	movff	main@x+1,___flge@ff1+1
  2796  0004B8  C198  F041         	movff	main@x+2,___flge@ff1+2
  2797  0004BC  C199  F042         	movff	main@x+3,___flge@ff1+3
  2798  0004C0  0E03               	movlw	3
  2799  0004C2  ECB4  F020         	call	_readADC
  2800  0004C6  C038  F043         	movff	?_readADC,___flge@ff2
  2801  0004CA  C039  F044         	movff	?_readADC+1,___flge@ff2+1
  2802  0004CE  C03A  F045         	movff	?_readADC+2,___flge@ff2+2
  2803  0004D2  C03B  F046         	movff	?_readADC+3,___flge@ff2+3
  2804  0004D6  ECED  F01E         	call	___flge	;wreg free
  2805  0004DA  B0D8               	btfsc	status,0,c
  2806  0004DC  D052               	goto	l9266
  2807  0004DE  0101               	movlb	1	; () banked
  2808  0004E0  5188               	movf	main@statleft& (0+255),w,b
  2809  0004E2  1189               	iorwf	(main@statleft+1)& (0+255),w,b
  2810  0004E4  A4D8               	btfss	status,2,c
  2811  0004E6  D04D               	goto	l9266
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;main.c: 235:                 statleft = 1;
  2815  0004E8  0E00               	movlw	0
  2816  0004EA  6F89               	movwf	(main@statleft+1)& (0+255),b
  2817  0004EC  0E01               	movlw	1
  2818  0004EE  6F88               	movwf	main@statleft& (0+255),b
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;main.c: 236:                 lefty++;
  2822  0004F0  4B8C               	infsnz	main@lefty& (0+255),f,b
  2823  0004F2  2B8D               	incf	(main@lefty+1)& (0+255),f,b
  2824                           
  2825                           ; BSR set to: 1
  2826                           ;main.c: 237:                 Distance += (circ / 12.0);
  2827  0004F4  C19C  F038         	movff	main@Distance,___fladd@b
  2828  0004F8  C19D  F039         	movff	main@Distance+1,___fladd@b+1
  2829  0004FC  C19E  F03A         	movff	main@Distance+2,___fladd@b+2
  2830  000500  C19F  F03B         	movff	main@Distance+3,___fladd@b+3
  2831  000504  0E00               	movlw	0
  2832  000506  6E23               	movwf	___fldiv@a,c
  2833  000508  0E00               	movlw	0
  2834  00050A  6E24               	movwf	___fldiv@a+1,c
  2835  00050C  0E40               	movlw	64
  2836  00050E  6E25               	movwf	___fldiv@a+2,c
  2837  000510  0E41               	movlw	65
  2838  000512  6E26               	movwf	___fldiv@a+3,c
  2839  000514  C17B  F01F         	movff	main@circ,___fldiv@b
  2840  000518  C17C  F020         	movff	main@circ+1,___fldiv@b+1
  2841  00051C  C17D  F021         	movff	main@circ+2,___fldiv@b+2
  2842  000520  C17E  F022         	movff	main@circ+3,___fldiv@b+3
  2843  000524  EC0D  F016         	call	___fldiv	;wreg free
  2844  000528  C01F  F03C         	movff	?___fldiv,___fladd@a
  2845  00052C  C020  F03D         	movff	?___fldiv+1,___fladd@a+1
  2846  000530  C021  F03E         	movff	?___fldiv+2,___fladd@a+2
  2847  000534  C022  F03F         	movff	?___fldiv+3,___fladd@a+3
  2848  000538  EC87  F014         	call	___fladd	;wreg free
  2849  00053C  C038  F19C         	movff	?___fladd,main@Distance
  2850  000540  C039  F19D         	movff	?___fladd+1,main@Distance+1
  2851  000544  C03A  F19E         	movff	?___fladd+2,main@Distance+2
  2852  000548  C03B  F19F         	movff	?___fladd+3,main@Distance+3
  2853                           
  2854                           ;main.c: 238:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  2855  00054C  0E01               	movlw	1
  2856  00054E  ECED  F025         	call	_lcdInst
  2857  000552  0E11               	movlw	17
  2858  000554  6E64               	movwf	??_main& (0+255),c
  2859  000556  0E3A               	movlw	58
  2860  000558                     u12247:
  2861  000558  2EE8               	decfsz	wreg,f,c
  2862  00055A  D7FE               	bra	u12247
  2863  00055C  2E64               	decfsz	??_main& (0+255),f,c
  2864  00055E  D7FC               	bra	u12247
  2865  000560  D000               	nop2	
  2866                           
  2867                           ;main.c: 239:                 printf("Dist: %.3f", Distance);
  2868  000562  0E45               	movlw	low STR_4
  2869  000564  0100               	movlb	0	; () banked
  2870  000566  6FE4               	movwf	printf@fmt& (0+255),b
  2871  000568  0EFF               	movlw	high STR_4
  2872  00056A  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  2873  00056C  C19C  F0E6         	movff	main@Distance,?_printf+2
  2874  000570  C19D  F0E7         	movff	main@Distance+1,?_printf+3
  2875  000574  C19E  F0E8         	movff	main@Distance+2,?_printf+4
  2876  000578  C19F  F0E9         	movff	main@Distance+3,?_printf+5
  2877  00057C  EC3F  F025         	call	_printf	;wreg free
  2878                           
  2879                           ;main.c: 241:             }
  2880  000580  D020               	goto	l9272
  2881  000582                     l9266:
  2882  000582  0E03               	movlw	3
  2883  000584  ECB4  F020         	call	_readADC
  2884  000588  C038  F03F         	movff	?_readADC,___flge@ff1
  2885  00058C  C039  F040         	movff	?_readADC+1,___flge@ff1+1
  2886  000590  C03A  F041         	movff	?_readADC+2,___flge@ff1+2
  2887  000594  C03B  F042         	movff	?_readADC+3,___flge@ff1+3
  2888  000598  0E00               	movlw	0
  2889  00059A  6E43               	movwf	___flge@ff2,c
  2890  00059C  0E00               	movlw	0
  2891  00059E  6E44               	movwf	___flge@ff2+1,c
  2892  0005A0  0E80               	movlw	128
  2893  0005A2  6E45               	movwf	___flge@ff2+2,c
  2894  0005A4  0E3F               	movlw	63
  2895  0005A6  6E46               	movwf	___flge@ff2+3,c
  2896  0005A8  ECED  F01E         	call	___flge	;wreg free
  2897  0005AC  B0D8               	btfsc	status,0,c
  2898  0005AE  D009               	goto	l9272
  2899  0005B0  0101               	movlb	1	; () banked
  2900  0005B2  0588               	decf	main@statleft& (0+255),w,b
  2901  0005B4  1189               	iorwf	(main@statleft+1)& (0+255),w,b
  2902  0005B6  A4D8               	btfss	status,2,c
  2903  0005B8  D004               	goto	l9272
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;main.c: 243:                 statleft = 0;
  2907  0005BA  0E00               	movlw	0
  2908  0005BC  6F89               	movwf	(main@statleft+1)& (0+255),b
  2909  0005BE  0E00               	movlw	0
  2910  0005C0  6F88               	movwf	main@statleft& (0+255),b
  2911  0005C2                     l9272:
  2912                           
  2913                           ;main.c: 249:             if (prev2 < 17 && prev < 17 && front < 17 && count == 0 ) {
  2914  0005C2  0101               	movlb	1	; () banked
  2915  0005C4  BF83               	btfsc	(main@prev2+1)& (0+255),7,b
  2916  0005C6  D006               	goto	u11540
  2917  0005C8  5183               	movf	(main@prev2+1)& (0+255),w,b
  2918  0005CA  E103               	bnz	u11541
  2919  0005CC  0E11               	movlw	17
  2920  0005CE  5D82               	subwf	main@prev2& (0+255),w,b
  2921  0005D0  B0D8               	btfsc	status,0,c
  2922  0005D2                     u11541:
  2923  0005D2  D0A6               	goto	l9310
  2924  0005D4                     u11540:
  2925                           
  2926                           ; BSR set to: 1
  2927  0005D4  BF8B               	btfsc	(main@prev+1)& (0+255),7,b
  2928  0005D6  D006               	goto	u11550
  2929  0005D8  518B               	movf	(main@prev+1)& (0+255),w,b
  2930  0005DA  E103               	bnz	u11551
  2931  0005DC  0E11               	movlw	17
  2932  0005DE  5D8A               	subwf	main@prev& (0+255),w,b
  2933  0005E0  B0D8               	btfsc	status,0,c
  2934  0005E2                     u11551:
  2935  0005E2  D09E               	goto	l9310
  2936  0005E4                     u11550:
  2937                           
  2938                           ; BSR set to: 1
  2939  0005E4  BF95               	btfsc	(main@front+1)& (0+255),7,b
  2940  0005E6  D006               	goto	u11560
  2941  0005E8  5195               	movf	(main@front+1)& (0+255),w,b
  2942  0005EA  E103               	bnz	u11561
  2943  0005EC  0E11               	movlw	17
  2944  0005EE  5D94               	subwf	main@front& (0+255),w,b
  2945  0005F0  B0D8               	btfsc	status,0,c
  2946  0005F2                     u11561:
  2947  0005F2  D096               	goto	l9310
  2948  0005F4                     u11560:
  2949                           
  2950                           ; BSR set to: 1
  2951  0005F4  519A               	movf	main@count& (0+255),w,b
  2952  0005F6  119B               	iorwf	(main@count+1)& (0+255),w,b
  2953  0005F8  A4D8               	btfss	status,2,c
  2954  0005FA  D092               	goto	l9310
  2955                           
  2956                           ; BSR set to: 1
  2957                           ;main.c: 251:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  2958  0005FC  0E01               	movlw	1
  2959  0005FE  ECED  F025         	call	_lcdInst
  2960  000602  0E11               	movlw	17
  2961  000604  6E64               	movwf	??_main& (0+255),c
  2962  000606  0E3A               	movlw	58
  2963  000608                     u12257:
  2964  000608  2EE8               	decfsz	wreg,f,c
  2965  00060A  D7FE               	bra	u12257
  2966  00060C  2E64               	decfsz	??_main& (0+255),f,c
  2967  00060E  D7FC               	bra	u12257
  2968  000610  D000               	nop2	
  2969  000612  0E90               	movlw	144
  2970  000614  ECED  F025         	call	_lcdInst
  2971                           
  2972                           ;main.c: 253:                 printf("closed");
  2973  000618  0ED8               	movlw	low STR_6
  2974  00061A  0100               	movlb	0	; () banked
  2975  00061C  6FE4               	movwf	printf@fmt& (0+255),b
  2976  00061E  0EFF               	movlw	high STR_6
  2977  000620  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  2978  000622  EC3F  F025         	call	_printf	;wreg free
  2979  000626  0ED0               	movlw	208
  2980  000628  ECED  F025         	call	_lcdInst
  2981                           
  2982                           ;main.c: 255:                 printf("f:%d,p:%d,p2:%d", front, prev, prev2);
  2983  00062C  0E2A               	movlw	low STR_7
  2984  00062E  0100               	movlb	0	; () banked
  2985  000630  6FE4               	movwf	printf@fmt& (0+255),b
  2986  000632  0EFE               	movlw	high STR_7
  2987  000634  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  2988  000636  C194  F0E6         	movff	main@front,?_printf+2
  2989  00063A  C195  F0E7         	movff	main@front+1,?_printf+3
  2990  00063E  C18A  F0E8         	movff	main@prev,?_printf+4
  2991  000642  C18B  F0E9         	movff	main@prev+1,?_printf+5
  2992  000646  C182  F0EA         	movff	main@prev2,?_printf+6
  2993  00064A  C183  F0EB         	movff	main@prev2+1,?_printf+7
  2994  00064E  EC3F  F025         	call	_printf	;wreg free
  2995                           
  2996                           ;main.c: 256:                 LATCbits.LATC6 = 1;
  2997  000652  8C8B               	bsf	3979,6,c	;volatile
  2998                           
  2999                           ;main.c: 258:                 _delay((unsigned long)((2000)*(10000000/4000.0)));
  3000  000654  0E1A               	movlw	26
  3001  000656  6E65               	movwf	(??_main+1)& (0+255),c
  3002  000658  0E5E               	movlw	94
  3003  00065A  6E64               	movwf	??_main& (0+255),c
  3004  00065C  0E6E               	movlw	110
  3005  00065E                     u12267:
  3006  00065E  2EE8               	decfsz	wreg,f,c
  3007  000660  D7FE               	bra	u12267
  3008  000662  2E64               	decfsz	??_main& (0+255),f,c
  3009  000664  D7FC               	bra	u12267
  3010  000666  2E65               	decfsz	(??_main+1)& (0+255),f,c
  3011  000668  D7FA               	bra	u12267
  3012  00066A  D000               	nop2	
  3013                           
  3014                           ;main.c: 259:                 LATCbits.LATC6 = 0;
  3015  00066C  9C8B               	bcf	3979,6,c	;volatile
  3016                           
  3017                           ;main.c: 261:                 State[Canister] = 0;
  3018  00066E  90D8               	bcf	status,0,c
  3019  000670  0101               	movlb	1	; () banked
  3020  000672  3506               	rlcf	_Canister& (0+255),w,b
  3021  000674  6ED9               	movwf	fsr2l,c
  3022  000676  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3023  000678  6EDA               	movwf	fsr2h,c
  3024  00067A  0EC8               	movlw	low _State
  3025  00067C  26D9               	addwf	fsr2l,f,c
  3026  00067E  0E01               	movlw	high _State
  3027  000680  22DA               	addwfc	fsr2h,f,c
  3028  000682  0E00               	movlw	0
  3029  000684  6EDE               	movwf	postinc2,c
  3030  000686  0E00               	movlw	0
  3031  000688  6EDD               	movwf	postdec2,c
  3032                           
  3033                           ; BSR set to: 1
  3034                           ;main.c: 262:                 DistanceCanister[Canister] = Distance;
  3035  00068A  C19C  F048         	movff	main@Distance,___fltol@f1
  3036  00068E  C19D  F049         	movff	main@Distance+1,___fltol@f1+1
  3037  000692  C19E  F04A         	movff	main@Distance+2,___fltol@f1+2
  3038  000696  C19F  F04B         	movff	main@Distance+3,___fltol@f1+3
  3039  00069A  ECBB  F01F         	call	___fltol	;wreg free
  3040  00069E  90D8               	bcf	status,0,c
  3041  0006A0  0101               	movlb	1	; () banked
  3042  0006A2  3506               	rlcf	_Canister& (0+255),w,b
  3043  0006A4  6ED9               	movwf	fsr2l,c
  3044  0006A6  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3045  0006A8  6EDA               	movwf	fsr2h,c
  3046  0006AA  0EB4               	movlw	low _DistanceCanister
  3047  0006AC  26D9               	addwf	fsr2l,f,c
  3048  0006AE  0E01               	movlw	high _DistanceCanister
  3049  0006B0  22DA               	addwfc	fsr2h,f,c
  3050  0006B2  C048  FFDE         	movff	?___fltol,postinc2
  3051  0006B6  C049  FFDD         	movff	?___fltol+1,postdec2
  3052                           
  3053                           ; BSR set to: 1
  3054                           ;main.c: 263:                 BallDispensed[Canister] = 0;
  3055  0006BA  90D8               	bcf	status,0,c
  3056  0006BC  3506               	rlcf	_Canister& (0+255),w,b
  3057  0006BE  6ED9               	movwf	fsr2l,c
  3058  0006C0  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3059  0006C2  6EDA               	movwf	fsr2h,c
  3060  0006C4  0EA0               	movlw	low _BallDispensed
  3061  0006C6  26D9               	addwf	fsr2l,f,c
  3062  0006C8  0E01               	movlw	high _BallDispensed
  3063  0006CA  22DA               	addwfc	fsr2h,f,c
  3064  0006CC  0E00               	movlw	0
  3065  0006CE  6EDE               	movwf	postinc2,c
  3066  0006D0  0E00               	movlw	0
  3067  0006D2  6EDD               	movwf	postdec2,c
  3068                           
  3069                           ; BSR set to: 1
  3070                           ;main.c: 264:                 Canister ++;
  3071  0006D4  4B06               	infsnz	_Canister& (0+255),f,b
  3072  0006D6  2B07               	incf	(_Canister+1)& (0+255),f,b
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;main.c: 265:                 compare = Distance + 30;
  3076  0006D8  0E00               	movlw	0
  3077  0006DA  6E3C               	movwf	___fladd@a,c
  3078  0006DC  0E00               	movlw	0
  3079  0006DE  6E3D               	movwf	___fladd@a+1,c
  3080  0006E0  0EF0               	movlw	240
  3081  0006E2  6E3E               	movwf	___fladd@a+2,c
  3082  0006E4  0E41               	movlw	65
  3083  0006E6  6E3F               	movwf	___fladd@a+3,c
  3084  0006E8  C19C  F038         	movff	main@Distance,___fladd@b
  3085  0006EC  C19D  F039         	movff	main@Distance+1,___fladd@b+1
  3086  0006F0  C19E  F03A         	movff	main@Distance+2,___fladd@b+2
  3087  0006F4  C19F  F03B         	movff	main@Distance+3,___fladd@b+3
  3088  0006F8  EC87  F014         	call	___fladd	;wreg free
  3089  0006FC  C038  F048         	movff	?___fladd,___fltol@f1
  3090  000700  C039  F049         	movff	?___fladd+1,___fltol@f1+1
  3091  000704  C03A  F04A         	movff	?___fladd+2,___fltol@f1+2
  3092  000708  C03B  F04B         	movff	?___fladd+3,___fltol@f1+3
  3093  00070C  ECBB  F01F         	call	___fltol	;wreg free
  3094  000710  C048  F176         	movff	?___fltol,main@compare
  3095  000714  C049  F177         	movff	?___fltol+1,main@compare+1
  3096  000718                     l9308:
  3097                           
  3098                           ;main.c: 268:                 count++ ;
  3099  000718  0101               	movlb	1	; () banked
  3100  00071A  4B9A               	infsnz	main@count& (0+255),f,b
  3101  00071C  2B9B               	incf	(main@count+1)& (0+255),f,b
  3102                           
  3103                           ;main.c: 271:             }
  3104  00071E  D103               	goto	l9362
  3105  000720                     l9310:
  3106                           
  3107                           ; BSR set to: 1
  3108  000720  BF83               	btfsc	(main@prev2+1)& (0+255),7,b
  3109  000722  D006               	goto	u11580
  3110  000724  5183               	movf	(main@prev2+1)& (0+255),w,b
  3111  000726  E103               	bnz	u11581
  3112  000728  0E32               	movlw	50
  3113  00072A  5D82               	subwf	main@prev2& (0+255),w,b
  3114  00072C  B0D8               	btfsc	status,0,c
  3115  00072E                     u11581:
  3116  00072E  D0FB               	goto	l9362
  3117  000730                     u11580:
  3118                           
  3119                           ; BSR set to: 1
  3120  000730  BF8B               	btfsc	(main@prev+1)& (0+255),7,b
  3121  000732  D006               	goto	u11590
  3122  000734  518B               	movf	(main@prev+1)& (0+255),w,b
  3123  000736  E103               	bnz	u11591
  3124  000738  0E32               	movlw	50
  3125  00073A  5D8A               	subwf	main@prev& (0+255),w,b
  3126  00073C  B0D8               	btfsc	status,0,c
  3127  00073E                     u11591:
  3128  00073E  D0F3               	goto	l9362
  3129  000740                     u11590:
  3130                           
  3131                           ; BSR set to: 1
  3132  000740  BF95               	btfsc	(main@front+1)& (0+255),7,b
  3133  000742  D006               	goto	u11600
  3134  000744  5195               	movf	(main@front+1)& (0+255),w,b
  3135  000746  E103               	bnz	u11601
  3136  000748  0E32               	movlw	50
  3137  00074A  5D94               	subwf	main@front& (0+255),w,b
  3138  00074C  B0D8               	btfsc	status,0,c
  3139  00074E                     u11601:
  3140  00074E  D0EB               	goto	l9362
  3141  000750                     u11600:
  3142                           
  3143                           ; BSR set to: 1
  3144  000750  519A               	movf	main@count& (0+255),w,b
  3145  000752  119B               	iorwf	(main@count+1)& (0+255),w,b
  3146  000754  A4D8               	btfss	status,2,c
  3147  000756  D0E7               	goto	l9362
  3148                           
  3149                           ; BSR set to: 1
  3150                           ;main.c: 276:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3151  000758  0E01               	movlw	1
  3152  00075A  ECED  F025         	call	_lcdInst
  3153  00075E  0E11               	movlw	17
  3154  000760  6E64               	movwf	??_main& (0+255),c
  3155  000762  0E3A               	movlw	58
  3156  000764                     u12277:
  3157  000764  2EE8               	decfsz	wreg,f,c
  3158  000766  D7FE               	bra	u12277
  3159  000768  2E64               	decfsz	??_main& (0+255),f,c
  3160  00076A  D7FC               	bra	u12277
  3161  00076C  D000               	nop2	
  3162  00076E  0E90               	movlw	144
  3163  000770  ECED  F025         	call	_lcdInst
  3164                           
  3165                           ;main.c: 278:                 printf("open");
  3166  000774  0EE6               	movlw	low STR_8
  3167  000776  0100               	movlb	0	; () banked
  3168  000778  6FE4               	movwf	printf@fmt& (0+255),b
  3169  00077A  0EFF               	movlw	high STR_8
  3170  00077C  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3171  00077E  EC3F  F025         	call	_printf	;wreg free
  3172  000782  0ED0               	movlw	208
  3173  000784  ECED  F025         	call	_lcdInst
  3174                           
  3175                           ;main.c: 280:                 printf("f:%d,p:%d,p2:%d", front, prev, prev2);
  3176  000788  0E2A               	movlw	low STR_7
  3177  00078A  0100               	movlb	0	; () banked
  3178  00078C  6FE4               	movwf	printf@fmt& (0+255),b
  3179  00078E  0EFE               	movlw	high STR_7
  3180  000790  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3181  000792  C194  F0E6         	movff	main@front,?_printf+2
  3182  000796  C195  F0E7         	movff	main@front+1,?_printf+3
  3183  00079A  C18A  F0E8         	movff	main@prev,?_printf+4
  3184  00079E  C18B  F0E9         	movff	main@prev+1,?_printf+5
  3185  0007A2  C182  F0EA         	movff	main@prev2,?_printf+6
  3186  0007A6  C183  F0EB         	movff	main@prev2+1,?_printf+7
  3187  0007AA  EC3F  F025         	call	_printf	;wreg free
  3188                           
  3189                           ;main.c: 281:                 LATCbits.LATC6 = 1;
  3190  0007AE  8C8B               	bsf	3979,6,c	;volatile
  3191                           
  3192                           ;main.c: 284:                 if (compare < Distance ){
  3193  0007B0  C176  F011         	movff	main@compare,___xxtofl@val
  3194  0007B4  C177  F012         	movff	main@compare+1,___xxtofl@val+1
  3195  0007B8  0E00               	movlw	0
  3196  0007BA  BE12               	btfsc	___xxtofl@val+1,7,c
  3197  0007BC  0EFF               	movlw	-1
  3198  0007BE  6E13               	movwf	___xxtofl@val+2,c
  3199  0007C0  6E14               	movwf	___xxtofl@val+3,c
  3200  0007C2  0E01               	movlw	1
  3201  0007C4  ECA4  F01C         	call	___xxtofl
  3202  0007C8  C011  F03F         	movff	?___xxtofl,___flge@ff1
  3203  0007CC  C012  F040         	movff	?___xxtofl+1,___flge@ff1+1
  3204  0007D0  C013  F041         	movff	?___xxtofl+2,___flge@ff1+2
  3205  0007D4  C014  F042         	movff	?___xxtofl+3,___flge@ff1+3
  3206  0007D8  C19C  F043         	movff	main@Distance,___flge@ff2
  3207  0007DC  C19D  F044         	movff	main@Distance+1,___flge@ff2+1
  3208  0007E0  C19E  F045         	movff	main@Distance+2,___flge@ff2+2
  3209  0007E4  C19F  F046         	movff	main@Distance+3,___flge@ff2+3
  3210  0007E8  ECED  F01E         	call	___flge	;wreg free
  3211  0007EC  B0D8               	btfsc	status,0,c
  3212  0007EE  D058               	goto	l9348
  3213                           
  3214                           ;main.c: 286:                     dispense = 1;
  3215  0007F0  0E00               	movlw	0
  3216  0007F2  0101               	movlb	1	; () banked
  3217  0007F4  6F71               	movwf	(main@dispense+1)& (0+255),b
  3218  0007F6  0E01               	movlw	1
  3219  0007F8  6F70               	movwf	main@dispense& (0+255),b
  3220                           
  3221                           ; BSR set to: 1
  3222                           ;main.c: 289:                     State[Canister] = 1;
  3223  0007FA  90D8               	bcf	status,0,c
  3224  0007FC  3506               	rlcf	_Canister& (0+255),w,b
  3225  0007FE  6ED9               	movwf	fsr2l,c
  3226  000800  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3227  000802  6EDA               	movwf	fsr2h,c
  3228  000804  0EC8               	movlw	low _State
  3229  000806  26D9               	addwf	fsr2l,f,c
  3230  000808  0E01               	movlw	high _State
  3231  00080A  22DA               	addwfc	fsr2h,f,c
  3232  00080C  0E01               	movlw	1
  3233  00080E  6EDE               	movwf	postinc2,c
  3234  000810  0E00               	movlw	0
  3235  000812  6EDD               	movwf	postdec2,c
  3236                           
  3237                           ; BSR set to: 1
  3238                           ;main.c: 290:                     DistanceCanister[Canister] = Distance;
  3239  000814  C19C  F048         	movff	main@Distance,___fltol@f1
  3240  000818  C19D  F049         	movff	main@Distance+1,___fltol@f1+1
  3241  00081C  C19E  F04A         	movff	main@Distance+2,___fltol@f1+2
  3242  000820  C19F  F04B         	movff	main@Distance+3,___fltol@f1+3
  3243  000824  ECBB  F01F         	call	___fltol	;wreg free
  3244  000828  90D8               	bcf	status,0,c
  3245  00082A  0101               	movlb	1	; () banked
  3246  00082C  3506               	rlcf	_Canister& (0+255),w,b
  3247  00082E  6ED9               	movwf	fsr2l,c
  3248  000830  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3249  000832  6EDA               	movwf	fsr2h,c
  3250  000834  0EB4               	movlw	low _DistanceCanister
  3251  000836  26D9               	addwf	fsr2l,f,c
  3252  000838  0E01               	movlw	high _DistanceCanister
  3253  00083A  22DA               	addwfc	fsr2h,f,c
  3254  00083C  C048  FFDE         	movff	?___fltol,postinc2
  3255  000840  C049  FFDD         	movff	?___fltol+1,postdec2
  3256                           
  3257                           ; BSR set to: 1
  3258                           ;main.c: 291:                     BallDispensed[Canister] = 1;
  3259  000844  90D8               	bcf	status,0,c
  3260  000846  3506               	rlcf	_Canister& (0+255),w,b
  3261  000848  6ED9               	movwf	fsr2l,c
  3262  00084A  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3263  00084C  6EDA               	movwf	fsr2h,c
  3264  00084E  0EA0               	movlw	low _BallDispensed
  3265  000850  26D9               	addwf	fsr2l,f,c
  3266  000852  0E01               	movlw	high _BallDispensed
  3267  000854  22DA               	addwfc	fsr2h,f,c
  3268  000856  0E01               	movlw	1
  3269  000858  6EDE               	movwf	postinc2,c
  3270  00085A  0E00               	movlw	0
  3271  00085C  6EDD               	movwf	postdec2,c
  3272                           
  3273                           ; BSR set to: 1
  3274                           ;main.c: 292:                     Canister ++;
  3275  00085E  4B06               	infsnz	_Canister& (0+255),f,b
  3276  000860  2B07               	incf	(_Canister+1)& (0+255),f,b
  3277                           
  3278                           ; BSR set to: 1
  3279                           ;main.c: 293:                     balls++;
  3280  000862  4B04               	infsnz	_balls& (0+255),f,b
  3281  000864  2B05               	incf	(_balls+1)& (0+255),f,b
  3282                           
  3283                           ; BSR set to: 1
  3284                           ;main.c: 294:                     compare = Distance + 30;
  3285  000866  0E00               	movlw	0
  3286  000868  6E3C               	movwf	___fladd@a,c
  3287  00086A  0E00               	movlw	0
  3288  00086C  6E3D               	movwf	___fladd@a+1,c
  3289  00086E  0EF0               	movlw	240
  3290  000870  6E3E               	movwf	___fladd@a+2,c
  3291  000872  0E41               	movlw	65
  3292  000874  6E3F               	movwf	___fladd@a+3,c
  3293  000876  C19C  F038         	movff	main@Distance,___fladd@b
  3294  00087A  C19D  F039         	movff	main@Distance+1,___fladd@b+1
  3295  00087E  C19E  F03A         	movff	main@Distance+2,___fladd@b+2
  3296  000882  C19F  F03B         	movff	main@Distance+3,___fladd@b+3
  3297  000886  EC87  F014         	call	___fladd	;wreg free
  3298  00088A  C038  F048         	movff	?___fladd,___fltol@f1
  3299  00088E  C039  F049         	movff	?___fladd+1,___fltol@f1+1
  3300  000892  C03A  F04A         	movff	?___fladd+2,___fltol@f1+2
  3301  000896  C03B  F04B         	movff	?___fladd+3,___fltol@f1+3
  3302  00089A  ECBB  F01F         	call	___fltol	;wreg free
  3303  00089E  D738               	goto	L1
  3304  0008A0                     l9348:
  3305                           
  3306                           ;main.c: 300:                     State[Canister] = 1;
  3307  0008A0  90D8               	bcf	status,0,c
  3308  0008A2  0101               	movlb	1	; () banked
  3309  0008A4  3506               	rlcf	_Canister& (0+255),w,b
  3310  0008A6  6ED9               	movwf	fsr2l,c
  3311  0008A8  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3312  0008AA  6EDA               	movwf	fsr2h,c
  3313  0008AC  0EC8               	movlw	low _State
  3314  0008AE  26D9               	addwf	fsr2l,f,c
  3315  0008B0  0E01               	movlw	high _State
  3316  0008B2  22DA               	addwfc	fsr2h,f,c
  3317  0008B4  0E01               	movlw	1
  3318  0008B6  6EDE               	movwf	postinc2,c
  3319  0008B8  0E00               	movlw	0
  3320  0008BA  6EDD               	movwf	postdec2,c
  3321                           
  3322                           ; BSR set to: 1
  3323                           ;main.c: 301:                     DistanceCanister[Canister] = Distance;
  3324  0008BC  C19C  F048         	movff	main@Distance,___fltol@f1
  3325  0008C0  C19D  F049         	movff	main@Distance+1,___fltol@f1+1
  3326  0008C4  C19E  F04A         	movff	main@Distance+2,___fltol@f1+2
  3327  0008C8  C19F  F04B         	movff	main@Distance+3,___fltol@f1+3
  3328  0008CC  ECBB  F01F         	call	___fltol	;wreg free
  3329  0008D0  90D8               	bcf	status,0,c
  3330  0008D2  0101               	movlb	1	; () banked
  3331  0008D4  3506               	rlcf	_Canister& (0+255),w,b
  3332  0008D6  6ED9               	movwf	fsr2l,c
  3333  0008D8  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3334  0008DA  6EDA               	movwf	fsr2h,c
  3335  0008DC  0EB4               	movlw	low _DistanceCanister
  3336  0008DE  26D9               	addwf	fsr2l,f,c
  3337  0008E0  0E01               	movlw	high _DistanceCanister
  3338  0008E2  22DA               	addwfc	fsr2h,f,c
  3339  0008E4  C048  FFDE         	movff	?___fltol,postinc2
  3340  0008E8  C049  FFDD         	movff	?___fltol+1,postdec2
  3341                           
  3342                           ; BSR set to: 1
  3343                           ;main.c: 302:                     BallDispensed[Canister] = 0;
  3344  0008EC  90D8               	bcf	status,0,c
  3345  0008EE  3506               	rlcf	_Canister& (0+255),w,b
  3346  0008F0  6ED9               	movwf	fsr2l,c
  3347  0008F2  3507               	rlcf	(_Canister+1)& (0+255),w,b
  3348  0008F4  6EDA               	movwf	fsr2h,c
  3349  0008F6  0EA0               	movlw	low _BallDispensed
  3350  0008F8  26D9               	addwf	fsr2l,f,c
  3351  0008FA  0E01               	movlw	high _BallDispensed
  3352  0008FC  22DA               	addwfc	fsr2h,f,c
  3353  0008FE  0E00               	movlw	0
  3354  000900  6EDE               	movwf	postinc2,c
  3355  000902  0E00               	movlw	0
  3356  000904  6EDD               	movwf	postdec2,c
  3357                           
  3358                           ; BSR set to: 1
  3359                           ;main.c: 303:                     Canister ++;
  3360  000906  4B06               	infsnz	_Canister& (0+255),f,b
  3361  000908  2B07               	incf	(_Canister+1)& (0+255),f,b
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;main.c: 304:                     _delay((unsigned long)((2000)*(10000000/4000.0)));
  3365  00090A  0E1A               	movlw	26
  3366  00090C  6E65               	movwf	(??_main+1)& (0+255),c
  3367  00090E  0E5E               	movlw	94
  3368  000910  6E64               	movwf	??_main& (0+255),c
  3369  000912  0E6E               	movlw	110
  3370  000914                     u12287:
  3371  000914  2EE8               	decfsz	wreg,f,c
  3372  000916  D7FE               	bra	u12287
  3373  000918  2E64               	decfsz	??_main& (0+255),f,c
  3374  00091A  D7FC               	bra	u12287
  3375  00091C  2E65               	decfsz	(??_main+1)& (0+255),f,c
  3376  00091E  D7FA               	bra	u12287
  3377  000920  D000               	nop2	
  3378                           
  3379                           ;main.c: 305:                     LATCbits.LATC6 = 0;
  3380  000922  9C8B               	bcf	3979,6,c	;volatile
  3381  000924  D6F9               	goto	l9308
  3382  000926                     l9362:
  3383                           
  3384                           ; BSR set to: 1
  3385                           ;main.c: 315:             if (count == 1){
  3386  000926  059A               	decf	main@count& (0+255),w,b
  3387  000928  119B               	iorwf	(main@count+1)& (0+255),w,b
  3388  00092A  A4D8               	btfss	status,2,c
  3389  00092C  D016               	goto	l9372
  3390                           
  3391                           ; BSR set to: 1
  3392                           ;main.c: 316:                 if (front< 10) {
  3393  00092E  BF95               	btfsc	(main@front+1)& (0+255),7,b
  3394  000930  D006               	goto	u11640
  3395  000932  5195               	movf	(main@front+1)& (0+255),w,b
  3396  000934  E107               	bnz	l9368
  3397  000936  0E0A               	movlw	10
  3398  000938  5D94               	subwf	main@front& (0+255),w,b
  3399  00093A  B0D8               	btfsc	status,0,c
  3400  00093C  D003               	goto	l9368
  3401  00093E                     u11640:
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;main.c: 318:                     righty--;
  3405  00093E  078E               	decf	main@righty& (0+255),f,b
  3406  000940  A0D8               	btfss	status,0,c
  3407  000942  078F               	decf	(main@righty+1)& (0+255),f,b
  3408  000944                     l9368:
  3409                           
  3410                           ; BSR set to: 1
  3411                           ;main.c: 320:                 if (front > 30) {
  3412  000944  BF95               	btfsc	(main@front+1)& (0+255),7,b
  3413  000946  D009               	goto	l9372
  3414  000948  5195               	movf	(main@front+1)& (0+255),w,b
  3415  00094A  E104               	bnz	u11650
  3416  00094C  0E1F               	movlw	31
  3417  00094E  5D94               	subwf	main@front& (0+255),w,b
  3418  000950  A0D8               	btfss	status,0,c
  3419  000952  D003               	goto	l9372
  3420  000954                     u11650:
  3421                           
  3422                           ; BSR set to: 1
  3423                           ;main.c: 322:                     lefty--;
  3424  000954  078C               	decf	main@lefty& (0+255),f,b
  3425  000956  A0D8               	btfss	status,0,c
  3426  000958  078D               	decf	(main@lefty+1)& (0+255),f,b
  3427  00095A                     l9372:
  3428                           
  3429                           ; BSR set to: 1
  3430                           ;main.c: 326:         if (dispense == 1 && count == 15){
  3431  00095A  0570               	decf	main@dispense& (0+255),w,b
  3432  00095C  1171               	iorwf	(main@dispense+1)& (0+255),w,b
  3433  00095E  A4D8               	btfss	status,2,c
  3434  000960  D021               	goto	l9386
  3435                           
  3436                           ; BSR set to: 1
  3437  000962  0E0F               	movlw	15
  3438  000964  199A               	xorwf	main@count& (0+255),w,b
  3439  000966  119B               	iorwf	(main@count+1)& (0+255),w,b
  3440  000968  A4D8               	btfss	status,2,c
  3441  00096A  D01C               	goto	l9386
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;main.c: 327:             dispense = 0;
  3445  00096C  0E00               	movlw	0
  3446  00096E  6F71               	movwf	(main@dispense+1)& (0+255),b
  3447  000970  0E00               	movlw	0
  3448  000972  6F70               	movwf	main@dispense& (0+255),b
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;main.c: 328:             LATCbits.LATC6 = 1;
  3452  000974  8C8B               	bsf	3979,6,c	;volatile
  3453                           
  3454                           ;main.c: 330:             while (!PORTBbits.RB0){
  3455  000976  D012               	goto	l9384
  3456  000978                     l239:
  3457                           
  3458                           ;main.c: 332:                 LATCbits.LATC7 = 1;
  3459  000978  8E8B               	bsf	3979,7,c	;volatile
  3460                           
  3461                           ;main.c: 333:                 _delay((unsigned long)((10)*(10000000/4000.0)));
  3462  00097A  0E21               	movlw	33
  3463  00097C  6E64               	movwf	??_main& (0+255),c
  3464  00097E  0E76               	movlw	118
  3465  000980                     u12297:
  3466  000980  2EE8               	decfsz	wreg,f,c
  3467  000982  D7FE               	bra	u12297
  3468  000984  2E64               	decfsz	??_main& (0+255),f,c
  3469  000986  D7FC               	bra	u12297
  3470  000988  D000               	nop2	
  3471                           
  3472                           ;main.c: 334:                 LATCbits.LATC7 = 0;
  3473  00098A  9E8B               	bcf	3979,7,c	;volatile
  3474                           
  3475                           ;main.c: 335:                 _delay((unsigned long)((50)*(10000000/4000.0)));
  3476  00098C  0EA3               	movlw	163
  3477  00098E  6E64               	movwf	??_main& (0+255),c
  3478  000990  0E55               	movlw	85
  3479  000992                     u12307:
  3480  000992  2EE8               	decfsz	wreg,f,c
  3481  000994  D7FE               	bra	u12307
  3482  000996  2E64               	decfsz	??_main& (0+255),f,c
  3483  000998  D7FC               	bra	u12307
  3484  00099A  F000               	nop	
  3485  00099C                     l9384:
  3486                           
  3487                           ;main.c: 330:             while (!PORTBbits.RB0){
  3488  00099C  A081               	btfss	3969,0,c	;volatile
  3489  00099E  D7EC               	goto	l239
  3490                           
  3491                           ;main.c: 339:             LATCbits.LATC6 = 0;
  3492  0009A0  9C8B               	bcf	3979,6,c	;volatile
  3493                           
  3494                           ;main.c: 340:             LATCbits.LATC7 = 0;
  3495  0009A2  9E8B               	bcf	3979,7,c	;volatile
  3496  0009A4                     l9386:
  3497                           
  3498                           ;main.c: 345:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3499  0009A4  0E01               	movlw	1
  3500  0009A6  ECED  F025         	call	_lcdInst
  3501  0009AA  0E11               	movlw	17
  3502  0009AC  6E64               	movwf	??_main& (0+255),c
  3503  0009AE  0E3A               	movlw	58
  3504  0009B0                     u12317:
  3505  0009B0  2EE8               	decfsz	wreg,f,c
  3506  0009B2  D7FE               	bra	u12317
  3507  0009B4  2E64               	decfsz	??_main& (0+255),f,c
  3508  0009B6  D7FC               	bra	u12317
  3509  0009B8  D000               	nop2	
  3510                           
  3511                           ;main.c: 346:         printf("Dist: %.3f", Distance);
  3512  0009BA  0E45               	movlw	low STR_4
  3513  0009BC  0100               	movlb	0	; () banked
  3514  0009BE  6FE4               	movwf	printf@fmt& (0+255),b
  3515  0009C0  0EFF               	movlw	high STR_4
  3516  0009C2  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3517  0009C4  C19C  F0E6         	movff	main@Distance,?_printf+2
  3518  0009C8  C19D  F0E7         	movff	main@Distance+1,?_printf+3
  3519  0009CC  C19E  F0E8         	movff	main@Distance+2,?_printf+4
  3520  0009D0  C19F  F0E9         	movff	main@Distance+3,?_printf+5
  3521  0009D4  EC3F  F025         	call	_printf	;wreg free
  3522  0009D8  0EC0               	movlw	192
  3523  0009DA  ECED  F025         	call	_lcdInst
  3524                           
  3525                           ;main.c: 348:         printf("cnt: %d", count);
  3526  0009DE  0ED0               	movlw	low STR_11
  3527  0009E0  0100               	movlb	0	; () banked
  3528  0009E2  6FE4               	movwf	printf@fmt& (0+255),b
  3529  0009E4  0EFF               	movlw	high STR_11
  3530  0009E6  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3531  0009E8  C19A  F0E6         	movff	main@count,?_printf+2
  3532  0009EC  C19B  F0E7         	movff	main@count+1,?_printf+3
  3533  0009F0  EC3F  F025         	call	_printf	;wreg free
  3534  0009F4  0E90               	movlw	144
  3535  0009F6  ECED  F025         	call	_lcdInst
  3536                           
  3537                           ;main.c: 350:         printf("comp: %d", compare);
  3538  0009FA  0EAD               	movlw	low STR_12
  3539  0009FC  0100               	movlb	0	; () banked
  3540  0009FE  6FE4               	movwf	printf@fmt& (0+255),b
  3541  000A00  0EFF               	movlw	high STR_12
  3542  000A02  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3543  000A04  C176  F0E6         	movff	main@compare,?_printf+2
  3544  000A08  C177  F0E7         	movff	main@compare+1,?_printf+3
  3545  000A0C  EC3F  F025         	call	_printf	;wreg free
  3546  000A10  0ED0               	movlw	208
  3547  000A12  ECED  F025         	call	_lcdInst
  3548                           
  3549                           ;main.c: 352:         printf("Ultra: %d", frontsensor());
  3550  000A16  0E7C               	movlw	low STR_13
  3551  000A18  0100               	movlb	0	; () banked
  3552  000A1A  6FE4               	movwf	printf@fmt& (0+255),b
  3553  000A1C  0EFF               	movlw	high STR_13
  3554  000A1E  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3555  000A20  ECC2  F021         	call	_frontsensor	;wreg free
  3556  000A24  C013  F0E6         	movff	?_frontsensor,?_printf+2
  3557  000A28  C014  F0E7         	movff	?_frontsensor+1,?_printf+3
  3558  000A2C  EC3F  F025         	call	_printf	;wreg free
  3559                           
  3560                           ;main.c: 354:         prev2 = prev;
  3561  000A30  C18A  F182         	movff	main@prev,main@prev2
  3562  000A34  C18B  F183         	movff	main@prev+1,main@prev2+1
  3563                           
  3564                           ;main.c: 355:         prev = front;
  3565  000A38  C194  F18A         	movff	main@front,main@prev
  3566  000A3C  C195  F18B         	movff	main@front+1,main@prev+1
  3567                           
  3568                           ;main.c: 358:         if (count == 40){count = 0;}
  3569  000A40  0E28               	movlw	40
  3570  000A42  0101               	movlb	1	; () banked
  3571  000A44  199A               	xorwf	main@count& (0+255),w,b
  3572  000A46  119B               	iorwf	(main@count+1)& (0+255),w,b
  3573  000A48  A4D8               	btfss	status,2,c
  3574  000A4A  D005               	goto	l9412
  3575                           
  3576                           ; BSR set to: 1
  3577  000A4C  0E00               	movlw	0
  3578  000A4E  6F9B               	movwf	(main@count+1)& (0+255),b
  3579  000A50  0E00               	movlw	0
  3580  000A52  6F9A               	movwf	main@count& (0+255),b
  3581  000A54  D009               	goto	l9416
  3582  000A56                     l9412:
  3583                           
  3584                           ; BSR set to: 1
  3585  000A56  BF9B               	btfsc	(main@count+1)& (0+255),7,b
  3586  000A58  D007               	goto	l9416
  3587  000A5A  519B               	movf	(main@count+1)& (0+255),w,b
  3588  000A5C  E103               	bnz	u11700
  3589  000A5E  059A               	decf	main@count& (0+255),w,b
  3590  000A60  A0D8               	btfss	status,0,c
  3591  000A62  D002               	goto	l9416
  3592  000A64                     u11700:
  3593                           
  3594                           ; BSR set to: 1
  3595  000A64  4B9A               	infsnz	main@count& (0+255),f,b
  3596  000A66  2B9B               	incf	(main@count+1)& (0+255),f,b
  3597  000A68                     l9416:
  3598                           
  3599                           ; BSR set to: 1
  3600                           ;main.c: 203:     while(timer*0.0262144 < 100 && Distance < 400 && Canister < 11) {
  3601  000A68  0E95               	movlw	149
  3602  000A6A  6E23               	movwf	___flmul@a,c
  3603  000A6C  0EBF               	movlw	191
  3604  000A6E  6E24               	movwf	___flmul@a+1,c
  3605  000A70  0ED6               	movlw	214
  3606  000A72  6E25               	movwf	___flmul@a+2,c
  3607  000A74  0E3C               	movlw	60
  3608  000A76  6E26               	movwf	___flmul@a+3,c
  3609  000A78  C100  F011         	movff	_timer,___xxtofl@val	;volatile
  3610  000A7C  C101  F012         	movff	_timer+1,___xxtofl@val+1	;volatile
  3611  000A80  C102  F013         	movff	_timer+2,___xxtofl@val+2	;volatile
  3612  000A84  C103  F014         	movff	_timer+3,___xxtofl@val+3	;volatile
  3613  000A88  0E01               	movlw	1
  3614  000A8A  ECA4  F01C         	call	___xxtofl
  3615  000A8E  C011  F01F         	movff	?___xxtofl,___flmul@b
  3616  000A92  C012  F020         	movff	?___xxtofl+1,___flmul@b+1
  3617  000A96  C013  F021         	movff	?___xxtofl+2,___flmul@b+2
  3618  000A9A  C014  F022         	movff	?___xxtofl+3,___flmul@b+3
  3619  000A9E  ECDE  F012         	call	___flmul	;wreg free
  3620  000AA2  C01F  F03F         	movff	?___flmul,___flge@ff1
  3621  000AA6  C020  F040         	movff	?___flmul+1,___flge@ff1+1
  3622  000AAA  C021  F041         	movff	?___flmul+2,___flge@ff1+2
  3623  000AAE  C022  F042         	movff	?___flmul+3,___flge@ff1+3
  3624  000AB2  0E00               	movlw	0
  3625  000AB4  6E43               	movwf	___flge@ff2,c
  3626  000AB6  0E00               	movlw	0
  3627  000AB8  6E44               	movwf	___flge@ff2+1,c
  3628  000ABA  0EC8               	movlw	200
  3629  000ABC  6E45               	movwf	___flge@ff2+2,c
  3630  000ABE  0E42               	movlw	66
  3631  000AC0  6E46               	movwf	___flge@ff2+3,c
  3632  000AC2  ECED  F01E         	call	___flge	;wreg free
  3633  000AC6  B0D8               	btfsc	status,0,c
  3634  000AC8  D191               	goto	l9494
  3635  000ACA  C19C  F03F         	movff	main@Distance,___flge@ff1
  3636  000ACE  C19D  F040         	movff	main@Distance+1,___flge@ff1+1
  3637  000AD2  C19E  F041         	movff	main@Distance+2,___flge@ff1+2
  3638  000AD6  C19F  F042         	movff	main@Distance+3,___flge@ff1+3
  3639  000ADA  0E00               	movlw	0
  3640  000ADC  6E43               	movwf	___flge@ff2,c
  3641  000ADE  0E00               	movlw	0
  3642  000AE0  6E44               	movwf	___flge@ff2+1,c
  3643  000AE2  0EC8               	movlw	200
  3644  000AE4  6E45               	movwf	___flge@ff2+2,c
  3645  000AE6  0E43               	movlw	67
  3646  000AE8  6E46               	movwf	___flge@ff2+3,c
  3647  000AEA  ECED  F01E         	call	___flge	;wreg free
  3648  000AEE  B0D8               	btfsc	status,0,c
  3649  000AF0  D17D               	goto	l9494
  3650  000AF2  0101               	movlb	1	; () banked
  3651  000AF4  BF07               	btfsc	(_Canister+1)& (0+255),7,b
  3652  000AF6  D42B               	goto	l9214
  3653  000AF8  5107               	movf	(_Canister+1)& (0+255),w,b
  3654  000AFA  E105               	bnz	u11730
  3655  000AFC  0E0B               	movlw	11
  3656  000AFE  5D06               	subwf	_Canister& (0+255),w,b
  3657  000B00  B0D8               	btfsc	status,0,c
  3658  000B02  D174               	goto	l9494
  3659  000B04  D424               	goto	l9214
  3660  000B06                     u11730:
  3661  000B06  D172               	goto	l9494
  3662  000B08                     l9422:
  3663                           
  3664                           ;main.c: 372:             if (lefty == righty) {
  3665  000B08  0101               	movlb	1	; () banked
  3666  000B0A  518E               	movf	main@righty& (0+255),w,b
  3667  000B0C  198C               	xorwf	main@lefty& (0+255),w,b
  3668  000B0E  E107               	bnz	l9426
  3669  000B10  518F               	movf	(main@righty+1)& (0+255),w,b
  3670  000B12  198D               	xorwf	(main@lefty+1)& (0+255),w,b
  3671  000B14  A4D8               	btfss	status,2,c
  3672  000B16  D003               	goto	l9426
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;main.c: 373:                 backdrive();
  3676  000B18  ECE6  F024         	call	_backdrive	;wreg free
  3677                           
  3678                           ;main.c: 374:             }
  3679  000B1C  D00F               	goto	l9432
  3680  000B1E                     l9426:
  3681                           
  3682                           ; BSR set to: 1
  3683  000B1E  518E               	movf	main@righty& (0+255),w,b
  3684  000B20  5D8C               	subwf	main@lefty& (0+255),w,b
  3685  000B22  518D               	movf	(main@lefty+1)& (0+255),w,b
  3686  000B24  0A80               	xorlw	128
  3687  000B26  6E64               	movwf	??_main& (0+255),c
  3688  000B28  518F               	movf	(main@righty+1)& (0+255),w,b
  3689  000B2A  0A80               	xorlw	128
  3690  000B2C  5864               	subwfb	??_main& (0+255),w,c
  3691  000B2E  B0D8               	btfsc	status,0,c
  3692  000B30  D003               	goto	l9430
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;main.c: 376:                 backright();
  3696  000B32  EC8A  F025         	call	_backright	;wreg free
  3697                           
  3698                           ;main.c: 377:             }
  3699  000B36  D002               	goto	l9432
  3700  000B38                     l9430:
  3701                           
  3702                           ; BSR set to: 1
  3703                           ;main.c: 379:                 backleft();
  3704  000B38  EC9C  F025         	call	_backleft	;wreg free
  3705  000B3C                     l9432:
  3706                           
  3707                           ;main.c: 383:             if (readADC(2) > x && statright == 0){
  3708  000B3C  C196  F03F         	movff	main@x,___flge@ff1
  3709  000B40  C197  F040         	movff	main@x+1,___flge@ff1+1
  3710  000B44  C198  F041         	movff	main@x+2,___flge@ff1+2
  3711  000B48  C199  F042         	movff	main@x+3,___flge@ff1+3
  3712  000B4C  0E02               	movlw	2
  3713  000B4E  ECB4  F020         	call	_readADC
  3714  000B52  C038  F043         	movff	?_readADC,___flge@ff2
  3715  000B56  C039  F044         	movff	?_readADC+1,___flge@ff2+1
  3716  000B5A  C03A  F045         	movff	?_readADC+2,___flge@ff2+2
  3717  000B5E  C03B  F046         	movff	?_readADC+3,___flge@ff2+3
  3718  000B62  ECED  F01E         	call	___flge	;wreg free
  3719  000B66  B0D8               	btfsc	status,0,c
  3720  000B68  D052               	goto	l9448
  3721  000B6A  0101               	movlb	1	; () banked
  3722  000B6C  5186               	movf	main@statright& (0+255),w,b
  3723  000B6E  1187               	iorwf	(main@statright+1)& (0+255),w,b
  3724  000B70  A4D8               	btfss	status,2,c
  3725  000B72  D04D               	goto	l9448
  3726                           
  3727                           ; BSR set to: 1
  3728                           ;main.c: 384:                 statright = 1;
  3729  000B74  0E00               	movlw	0
  3730  000B76  6F87               	movwf	(main@statright+1)& (0+255),b
  3731  000B78  0E01               	movlw	1
  3732  000B7A  6F86               	movwf	main@statright& (0+255),b
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;main.c: 385:                 righty++;
  3736  000B7C  4B8E               	infsnz	main@righty& (0+255),f,b
  3737  000B7E  2B8F               	incf	(main@righty+1)& (0+255),f,b
  3738                           
  3739                           ; BSR set to: 1
  3740                           ;main.c: 386:                 Distance -= (circ / 12.0);
  3741  000B80  C19C  F048         	movff	main@Distance,___flsub@b
  3742  000B84  C19D  F049         	movff	main@Distance+1,___flsub@b+1
  3743  000B88  C19E  F04A         	movff	main@Distance+2,___flsub@b+2
  3744  000B8C  C19F  F04B         	movff	main@Distance+3,___flsub@b+3
  3745  000B90  0E00               	movlw	0
  3746  000B92  6E23               	movwf	___fldiv@a,c
  3747  000B94  0E00               	movlw	0
  3748  000B96  6E24               	movwf	___fldiv@a+1,c
  3749  000B98  0E40               	movlw	64
  3750  000B9A  6E25               	movwf	___fldiv@a+2,c
  3751  000B9C  0E41               	movlw	65
  3752  000B9E  6E26               	movwf	___fldiv@a+3,c
  3753  000BA0  C17B  F01F         	movff	main@circ,___fldiv@b
  3754  000BA4  C17C  F020         	movff	main@circ+1,___fldiv@b+1
  3755  000BA8  C17D  F021         	movff	main@circ+2,___fldiv@b+2
  3756  000BAC  C17E  F022         	movff	main@circ+3,___fldiv@b+3
  3757  000BB0  EC0D  F016         	call	___fldiv	;wreg free
  3758  000BB4  C01F  F04C         	movff	?___fldiv,___flsub@a
  3759  000BB8  C020  F04D         	movff	?___fldiv+1,___flsub@a+1
  3760  000BBC  C021  F04E         	movff	?___fldiv+2,___flsub@a+2
  3761  000BC0  C022  F04F         	movff	?___fldiv+3,___flsub@a+3
  3762  000BC4  ECBE  F023         	call	___flsub	;wreg free
  3763  000BC8  C048  F19C         	movff	?___flsub,main@Distance
  3764  000BCC  C049  F19D         	movff	?___flsub+1,main@Distance+1
  3765  000BD0  C04A  F19E         	movff	?___flsub+2,main@Distance+2
  3766  000BD4  C04B  F19F         	movff	?___flsub+3,main@Distance+3
  3767                           
  3768                           ;main.c: 387:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3769  000BD8  0E01               	movlw	1
  3770  000BDA  ECED  F025         	call	_lcdInst
  3771  000BDE  0E11               	movlw	17
  3772  000BE0  6E64               	movwf	??_main& (0+255),c
  3773  000BE2  0E3A               	movlw	58
  3774  000BE4                     u12327:
  3775  000BE4  2EE8               	decfsz	wreg,f,c
  3776  000BE6  D7FE               	bra	u12327
  3777  000BE8  2E64               	decfsz	??_main& (0+255),f,c
  3778  000BEA  D7FC               	bra	u12327
  3779  000BEC  D000               	nop2	
  3780                           
  3781                           ;main.c: 388:                 printf("Dist: %.3f", Distance);
  3782  000BEE  0E45               	movlw	low STR_4
  3783  000BF0  0100               	movlb	0	; () banked
  3784  000BF2  6FE4               	movwf	printf@fmt& (0+255),b
  3785  000BF4  0EFF               	movlw	high STR_4
  3786  000BF6  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3787  000BF8  C19C  F0E6         	movff	main@Distance,?_printf+2
  3788  000BFC  C19D  F0E7         	movff	main@Distance+1,?_printf+3
  3789  000C00  C19E  F0E8         	movff	main@Distance+2,?_printf+4
  3790  000C04  C19F  F0E9         	movff	main@Distance+3,?_printf+5
  3791  000C08  EC3F  F025         	call	_printf	;wreg free
  3792                           
  3793                           ;main.c: 390:             }
  3794  000C0C  D020               	goto	l9454
  3795  000C0E                     l9448:
  3796  000C0E  0E02               	movlw	2
  3797  000C10  ECB4  F020         	call	_readADC
  3798  000C14  C038  F03F         	movff	?_readADC,___flge@ff1
  3799  000C18  C039  F040         	movff	?_readADC+1,___flge@ff1+1
  3800  000C1C  C03A  F041         	movff	?_readADC+2,___flge@ff1+2
  3801  000C20  C03B  F042         	movff	?_readADC+3,___flge@ff1+3
  3802  000C24  0E00               	movlw	0
  3803  000C26  6E43               	movwf	___flge@ff2,c
  3804  000C28  0E00               	movlw	0
  3805  000C2A  6E44               	movwf	___flge@ff2+1,c
  3806  000C2C  0E80               	movlw	128
  3807  000C2E  6E45               	movwf	___flge@ff2+2,c
  3808  000C30  0E3F               	movlw	63
  3809  000C32  6E46               	movwf	___flge@ff2+3,c
  3810  000C34  ECED  F01E         	call	___flge	;wreg free
  3811  000C38  B0D8               	btfsc	status,0,c
  3812  000C3A  D009               	goto	l9454
  3813  000C3C  0101               	movlb	1	; () banked
  3814  000C3E  0586               	decf	main@statright& (0+255),w,b
  3815  000C40  1187               	iorwf	(main@statright+1)& (0+255),w,b
  3816  000C42  A4D8               	btfss	status,2,c
  3817  000C44  D004               	goto	l9454
  3818                           
  3819                           ; BSR set to: 1
  3820                           ;main.c: 392:                 statright = 0;
  3821  000C46  0E00               	movlw	0
  3822  000C48  6F87               	movwf	(main@statright+1)& (0+255),b
  3823  000C4A  0E00               	movlw	0
  3824  000C4C  6F86               	movwf	main@statright& (0+255),b
  3825  000C4E                     l9454:
  3826                           
  3827                           ;main.c: 396:             if (readADC(3) > x && statleft == 0){
  3828  000C4E  C196  F03F         	movff	main@x,___flge@ff1
  3829  000C52  C197  F040         	movff	main@x+1,___flge@ff1+1
  3830  000C56  C198  F041         	movff	main@x+2,___flge@ff1+2
  3831  000C5A  C199  F042         	movff	main@x+3,___flge@ff1+3
  3832  000C5E  0E03               	movlw	3
  3833  000C60  ECB4  F020         	call	_readADC
  3834  000C64  C038  F043         	movff	?_readADC,___flge@ff2
  3835  000C68  C039  F044         	movff	?_readADC+1,___flge@ff2+1
  3836  000C6C  C03A  F045         	movff	?_readADC+2,___flge@ff2+2
  3837  000C70  C03B  F046         	movff	?_readADC+3,___flge@ff2+3
  3838  000C74  ECED  F01E         	call	___flge	;wreg free
  3839  000C78  B0D8               	btfsc	status,0,c
  3840  000C7A  D052               	goto	l9470
  3841  000C7C  0101               	movlb	1	; () banked
  3842  000C7E  5188               	movf	main@statleft& (0+255),w,b
  3843  000C80  1189               	iorwf	(main@statleft+1)& (0+255),w,b
  3844  000C82  A4D8               	btfss	status,2,c
  3845  000C84  D04D               	goto	l9470
  3846                           
  3847                           ; BSR set to: 1
  3848                           ;main.c: 397:                 statleft = 1;
  3849  000C86  0E00               	movlw	0
  3850  000C88  6F89               	movwf	(main@statleft+1)& (0+255),b
  3851  000C8A  0E01               	movlw	1
  3852  000C8C  6F88               	movwf	main@statleft& (0+255),b
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;main.c: 398:                 lefty++;
  3856  000C8E  4B8C               	infsnz	main@lefty& (0+255),f,b
  3857  000C90  2B8D               	incf	(main@lefty+1)& (0+255),f,b
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;main.c: 399:                 Distance -= (circ / 12.0);
  3861  000C92  C19C  F048         	movff	main@Distance,___flsub@b
  3862  000C96  C19D  F049         	movff	main@Distance+1,___flsub@b+1
  3863  000C9A  C19E  F04A         	movff	main@Distance+2,___flsub@b+2
  3864  000C9E  C19F  F04B         	movff	main@Distance+3,___flsub@b+3
  3865  000CA2  0E00               	movlw	0
  3866  000CA4  6E23               	movwf	___fldiv@a,c
  3867  000CA6  0E00               	movlw	0
  3868  000CA8  6E24               	movwf	___fldiv@a+1,c
  3869  000CAA  0E40               	movlw	64
  3870  000CAC  6E25               	movwf	___fldiv@a+2,c
  3871  000CAE  0E41               	movlw	65
  3872  000CB0  6E26               	movwf	___fldiv@a+3,c
  3873  000CB2  C17B  F01F         	movff	main@circ,___fldiv@b
  3874  000CB6  C17C  F020         	movff	main@circ+1,___fldiv@b+1
  3875  000CBA  C17D  F021         	movff	main@circ+2,___fldiv@b+2
  3876  000CBE  C17E  F022         	movff	main@circ+3,___fldiv@b+3
  3877  000CC2  EC0D  F016         	call	___fldiv	;wreg free
  3878  000CC6  C01F  F04C         	movff	?___fldiv,___flsub@a
  3879  000CCA  C020  F04D         	movff	?___fldiv+1,___flsub@a+1
  3880  000CCE  C021  F04E         	movff	?___fldiv+2,___flsub@a+2
  3881  000CD2  C022  F04F         	movff	?___fldiv+3,___flsub@a+3
  3882  000CD6  ECBE  F023         	call	___flsub	;wreg free
  3883  000CDA  C048  F19C         	movff	?___flsub,main@Distance
  3884  000CDE  C049  F19D         	movff	?___flsub+1,main@Distance+1
  3885  000CE2  C04A  F19E         	movff	?___flsub+2,main@Distance+2
  3886  000CE6  C04B  F19F         	movff	?___flsub+3,main@Distance+3
  3887                           
  3888                           ;main.c: 400:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  3889  000CEA  0E01               	movlw	1
  3890  000CEC  ECED  F025         	call	_lcdInst
  3891  000CF0  0E11               	movlw	17
  3892  000CF2  6E64               	movwf	??_main& (0+255),c
  3893  000CF4  0E3A               	movlw	58
  3894  000CF6                     u12337:
  3895  000CF6  2EE8               	decfsz	wreg,f,c
  3896  000CF8  D7FE               	bra	u12337
  3897  000CFA  2E64               	decfsz	??_main& (0+255),f,c
  3898  000CFC  D7FC               	bra	u12337
  3899  000CFE  D000               	nop2	
  3900                           
  3901                           ;main.c: 401:                 printf("Dist: %.3f", Distance);
  3902  000D00  0E45               	movlw	low STR_4
  3903  000D02  0100               	movlb	0	; () banked
  3904  000D04  6FE4               	movwf	printf@fmt& (0+255),b
  3905  000D06  0EFF               	movlw	high STR_4
  3906  000D08  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3907  000D0A  C19C  F0E6         	movff	main@Distance,?_printf+2
  3908  000D0E  C19D  F0E7         	movff	main@Distance+1,?_printf+3
  3909  000D12  C19E  F0E8         	movff	main@Distance+2,?_printf+4
  3910  000D16  C19F  F0E9         	movff	main@Distance+3,?_printf+5
  3911  000D1A  EC3F  F025         	call	_printf	;wreg free
  3912                           
  3913                           ;main.c: 403:             }
  3914  000D1E  D020               	goto	l9476
  3915  000D20                     l9470:
  3916  000D20  0E03               	movlw	3
  3917  000D22  ECB4  F020         	call	_readADC
  3918  000D26  C038  F03F         	movff	?_readADC,___flge@ff1
  3919  000D2A  C039  F040         	movff	?_readADC+1,___flge@ff1+1
  3920  000D2E  C03A  F041         	movff	?_readADC+2,___flge@ff1+2
  3921  000D32  C03B  F042         	movff	?_readADC+3,___flge@ff1+3
  3922  000D36  0E00               	movlw	0
  3923  000D38  6E43               	movwf	___flge@ff2,c
  3924  000D3A  0E00               	movlw	0
  3925  000D3C  6E44               	movwf	___flge@ff2+1,c
  3926  000D3E  0E80               	movlw	128
  3927  000D40  6E45               	movwf	___flge@ff2+2,c
  3928  000D42  0E3F               	movlw	63
  3929  000D44  6E46               	movwf	___flge@ff2+3,c
  3930  000D46  ECED  F01E         	call	___flge	;wreg free
  3931  000D4A  B0D8               	btfsc	status,0,c
  3932  000D4C  D009               	goto	l9476
  3933  000D4E  0101               	movlb	1	; () banked
  3934  000D50  0588               	decf	main@statleft& (0+255),w,b
  3935  000D52  1189               	iorwf	(main@statleft+1)& (0+255),w,b
  3936  000D54  A4D8               	btfss	status,2,c
  3937  000D56  D004               	goto	l9476
  3938                           
  3939                           ; BSR set to: 1
  3940                           ;main.c: 405:                 statleft = 0;
  3941  000D58  0E00               	movlw	0
  3942  000D5A  6F89               	movwf	(main@statleft+1)& (0+255),b
  3943  000D5C  0E00               	movlw	0
  3944  000D5E  6F88               	movwf	main@statleft& (0+255),b
  3945  000D60                     l9476:
  3946                           
  3947                           ;main.c: 411:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  3948  000D60  0E01               	movlw	1
  3949  000D62  ECED  F025         	call	_lcdInst
  3950  000D66  0E11               	movlw	17
  3951  000D68  6E64               	movwf	??_main& (0+255),c
  3952  000D6A  0E3A               	movlw	58
  3953  000D6C                     u12347:
  3954  000D6C  2EE8               	decfsz	wreg,f,c
  3955  000D6E  D7FE               	bra	u12347
  3956  000D70  2E64               	decfsz	??_main& (0+255),f,c
  3957  000D72  D7FC               	bra	u12347
  3958  000D74  D000               	nop2	
  3959                           
  3960                           ;main.c: 412:         printf("Dist: %.3f", Distance);
  3961  000D76  0E45               	movlw	low STR_4
  3962  000D78  0100               	movlb	0	; () banked
  3963  000D7A  6FE4               	movwf	printf@fmt& (0+255),b
  3964  000D7C  0EFF               	movlw	high STR_4
  3965  000D7E  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3966  000D80  C19C  F0E6         	movff	main@Distance,?_printf+2
  3967  000D84  C19D  F0E7         	movff	main@Distance+1,?_printf+3
  3968  000D88  C19E  F0E8         	movff	main@Distance+2,?_printf+4
  3969  000D8C  C19F  F0E9         	movff	main@Distance+3,?_printf+5
  3970  000D90  EC3F  F025         	call	_printf	;wreg free
  3971  000D94  0EC0               	movlw	192
  3972  000D96  ECED  F025         	call	_lcdInst
  3973                           
  3974                           ;main.c: 414:         printf("lefty: %d", lefty);
  3975  000D9A  0E90               	movlw	low STR_17
  3976  000D9C  0100               	movlb	0	; () banked
  3977  000D9E  6FE4               	movwf	printf@fmt& (0+255),b
  3978  000DA0  0EFF               	movlw	high STR_17
  3979  000DA2  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3980  000DA4  C18C  F0E6         	movff	main@lefty,?_printf+2
  3981  000DA8  C18D  F0E7         	movff	main@lefty+1,?_printf+3
  3982  000DAC  EC3F  F025         	call	_printf	;wreg free
  3983  000DB0  0E90               	movlw	144
  3984  000DB2  ECED  F025         	call	_lcdInst
  3985                           
  3986                           ;main.c: 416:         printf("right: %d", righty);
  3987  000DB6  0E86               	movlw	low STR_18
  3988  000DB8  0100               	movlb	0	; () banked
  3989  000DBA  6FE4               	movwf	printf@fmt& (0+255),b
  3990  000DBC  0EFF               	movlw	high STR_18
  3991  000DBE  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  3992  000DC0  C18E  F0E6         	movff	main@righty,?_printf+2
  3993  000DC4  C18F  F0E7         	movff	main@righty+1,?_printf+3
  3994  000DC8  EC3F  F025         	call	_printf	;wreg free
  3995  000DCC  0ED0               	movlw	208
  3996  000DCE  ECED  F025         	call	_lcdInst
  3997                           
  3998                           ;main.c: 418:         printf("Ultra: %d", frontsensor());
  3999  000DD2  0E7C               	movlw	low STR_13
  4000  000DD4  0100               	movlb	0	; () banked
  4001  000DD6  6FE4               	movwf	printf@fmt& (0+255),b
  4002  000DD8  0EFF               	movlw	high STR_13
  4003  000DDA  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4004  000DDC  ECC2  F021         	call	_frontsensor	;wreg free
  4005  000DE0  C013  F0E6         	movff	?_frontsensor,?_printf+2
  4006  000DE4  C014  F0E7         	movff	?_frontsensor+1,?_printf+3
  4007  000DE8  EC3F  F025         	call	_printf	;wreg free
  4008  000DEC                     l9494:
  4009                           
  4010                           ;main.c: 369:     while(Distance > -20) {
  4011  000DEC  0E00               	movlw	0
  4012  000DEE  6E3F               	movwf	___flge@ff1,c
  4013  000DF0  0E00               	movlw	0
  4014  000DF2  6E40               	movwf	___flge@ff1+1,c
  4015  000DF4  0EA0               	movlw	160
  4016  000DF6  6E41               	movwf	___flge@ff1+2,c
  4017  000DF8  0EC1               	movlw	193
  4018  000DFA  6E42               	movwf	___flge@ff1+3,c
  4019  000DFC  C19C  F043         	movff	main@Distance,___flge@ff2
  4020  000E00  C19D  F044         	movff	main@Distance+1,___flge@ff2+1
  4021  000E04  C19E  F045         	movff	main@Distance+2,___flge@ff2+2
  4022  000E08  C19F  F046         	movff	main@Distance+3,___flge@ff2+3
  4023  000E0C  ECED  F01E         	call	___flge	;wreg free
  4024  000E10  A0D8               	btfss	status,0,c
  4025  000E12  D67A               	goto	l9422
  4026                           
  4027                           ;main.c: 425:     TMR0IE = 0;
  4028  000E14  9AF2               	bcf	4082,5,c	;volatile
  4029                           
  4030                           ;main.c: 427:     time = timer*0.0262144;
  4031  000E16  0E95               	movlw	149
  4032  000E18  6E23               	movwf	___flmul@a,c
  4033  000E1A  0EBF               	movlw	191
  4034  000E1C  6E24               	movwf	___flmul@a+1,c
  4035  000E1E  0ED6               	movlw	214
  4036  000E20  6E25               	movwf	___flmul@a+2,c
  4037  000E22  0E3C               	movlw	60
  4038  000E24  6E26               	movwf	___flmul@a+3,c
  4039  000E26  C100  F011         	movff	_timer,___xxtofl@val	;volatile
  4040  000E2A  C101  F012         	movff	_timer+1,___xxtofl@val+1	;volatile
  4041  000E2E  C102  F013         	movff	_timer+2,___xxtofl@val+2	;volatile
  4042  000E32  C103  F014         	movff	_timer+3,___xxtofl@val+3	;volatile
  4043  000E36  0E01               	movlw	1
  4044  000E38  ECA4  F01C         	call	___xxtofl
  4045  000E3C  C011  F01F         	movff	?___xxtofl,___flmul@b
  4046  000E40  C012  F020         	movff	?___xxtofl+1,___flmul@b+1
  4047  000E44  C013  F021         	movff	?___xxtofl+2,___flmul@b+2
  4048  000E48  C014  F022         	movff	?___xxtofl+3,___flmul@b+3
  4049  000E4C  ECDE  F012         	call	___flmul	;wreg free
  4050  000E50  C01F  F048         	movff	?___flmul,___fltol@f1
  4051  000E54  C020  F049         	movff	?___flmul+1,___fltol@f1+1
  4052  000E58  C021  F04A         	movff	?___flmul+2,___fltol@f1+2
  4053  000E5C  C022  F04B         	movff	?___flmul+3,___fltol@f1+3
  4054  000E60  ECBB  F01F         	call	___fltol	;wreg free
  4055  000E64  C048  F108         	movff	?___fltol,_time
  4056  000E68  C049  F109         	movff	?___fltol+1,_time+1
  4057                           
  4058                           ;main.c: 430:     EEPROM_save();
  4059  000E6C  EC3A  F01B         	call	_EEPROM_save	;wreg free
  4060                           
  4061                           ;main.c: 434:     int state = 0;
  4062  000E70  0E00               	movlw	0
  4063  000E72  0101               	movlb	1	; () banked
  4064  000E74  6F91               	movwf	(main@state+1)& (0+255),b
  4065  000E76  0E00               	movlw	0
  4066  000E78  6F90               	movwf	main@state& (0+255),b
  4067                           
  4068                           ; BSR set to: 1
  4069                           ;main.c: 435:     tick = 0;
  4070  000E7A  0E00               	movlw	0
  4071  000E7C  6F75               	movwf	(main@tick+1)& (0+255),b
  4072  000E7E  0E00               	movlw	0
  4073  000E80  6F74               	movwf	main@tick& (0+255),b
  4074                           
  4075                           ; BSR set to: 1
  4076                           ;main.c: 436:     int clear = 1;
  4077  000E82  0E00               	movlw	0
  4078  000E84  6F93               	movwf	(main@clear+1)& (0+255),b
  4079  000E86  0E01               	movlw	1
  4080  000E88  6F92               	movwf	main@clear& (0+255),b
  4081                           
  4082                           ; BSR set to: 1
  4083                           ;main.c: 438:     start = 0;
  4084  000E8A  0E00               	movlw	0
  4085  000E8C  6F0B               	movwf	_start& (0+255),b	;volatile
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;main.c: 440:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4089  000E8E  0E01               	movlw	1
  4090  000E90  ECED  F025         	call	_lcdInst
  4091  000E94  0E11               	movlw	17
  4092  000E96  6E64               	movwf	??_main& (0+255),c
  4093  000E98  0E3A               	movlw	58
  4094  000E9A                     u12357:
  4095  000E9A  2EE8               	decfsz	wreg,f,c
  4096  000E9C  D7FE               	bra	u12357
  4097  000E9E  2E64               	decfsz	??_main& (0+255),f,c
  4098  000EA0  D7FC               	bra	u12357
  4099  000EA2  D000               	nop2	
  4100                           
  4101                           ;main.c: 441:     printf("Press A to");
  4102  000EA4  0E50               	movlw	low STR_20
  4103  000EA6  0100               	movlb	0	; () banked
  4104  000EA8  6FE4               	movwf	printf@fmt& (0+255),b
  4105  000EAA  0EFF               	movlw	high STR_20
  4106  000EAC  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4107  000EAE  EC3F  F025         	call	_printf	;wreg free
  4108  000EB2  0E90               	movlw	144
  4109  000EB4  ECED  F025         	call	_lcdInst
  4110                           
  4111                           ;main.c: 443:     printf("view results");
  4112  000EB8  0E07               	movlw	low STR_21
  4113  000EBA  0100               	movlb	0	; () banked
  4114  000EBC  6FE4               	movwf	printf@fmt& (0+255),b
  4115  000EBE  0EFF               	movlw	high STR_21
  4116  000EC0  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4117  000EC2  EC3F  F025         	call	_printf	;wreg free
  4118  000EC6                     l9518:
  4119  000EC6  0101               	movlb	1	; () banked
  4120  000EC8  510B               	movf	_start& (0+255),w,b	;volatile
  4121  000ECA  B4D8               	btfsc	status,2,c
  4122  000ECC  D7FC               	goto	l9518
  4123                           
  4124                           ; BSR set to: 1
  4125                           ;main.c: 448:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4126  000ECE  0E01               	movlw	1
  4127  000ED0  ECED  F025         	call	_lcdInst
  4128  000ED4  0E11               	movlw	17
  4129  000ED6  6E64               	movwf	??_main& (0+255),c
  4130  000ED8  0E3A               	movlw	58
  4131  000EDA                     u12367:
  4132  000EDA  2EE8               	decfsz	wreg,f,c
  4133  000EDC  D7FE               	bra	u12367
  4134  000EDE  2E64               	decfsz	??_main& (0+255),f,c
  4135  000EE0  D7FC               	bra	u12367
  4136  000EE2  D000               	nop2	
  4137                           
  4138                           ;main.c: 449:     printf("Canister Index");
  4139  000EE4  0EA4               	movlw	low STR_22
  4140  000EE6  0100               	movlb	0	; () banked
  4141  000EE8  6FE4               	movwf	printf@fmt& (0+255),b
  4142  000EEA  0EFE               	movlw	high STR_22
  4143  000EEC  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4144  000EEE  EC3F  F025         	call	_printf	;wreg free
  4145  000EF2  0E90               	movlw	144
  4146  000EF4  ECED  F025         	call	_lcdInst
  4147                           
  4148                           ;main.c: 451:     printf("starts at 0");
  4149  000EF8  0E21               	movlw	low STR_23
  4150  000EFA  0100               	movlb	0	; () banked
  4151  000EFC  6FE4               	movwf	printf@fmt& (0+255),b
  4152  000EFE  0EFF               	movlw	high STR_23
  4153  000F00  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4154  000F02  EC3F  F025         	call	_printf	;wreg free
  4155                           
  4156                           ;main.c: 452:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  4157  000F06  0E33               	movlw	51
  4158  000F08  6E65               	movwf	(??_main+1)& (0+255),c
  4159  000F0A  0EBB               	movlw	187
  4160  000F0C  6E64               	movwf	??_main& (0+255),c
  4161  000F0E  0EE0               	movlw	224
  4162  000F10                     u12377:
  4163  000F10  2EE8               	decfsz	wreg,f,c
  4164  000F12  D7FE               	bra	u12377
  4165  000F14  2E64               	decfsz	??_main& (0+255),f,c
  4166  000F16  D7FC               	bra	u12377
  4167  000F18  2E65               	decfsz	(??_main+1)& (0+255),f,c
  4168  000F1A  D7FA               	bra	u12377
  4169  000F1C                     l9530:
  4170                           
  4171                           ;main.c: 458:     state = 0;
  4172  000F1C  0E00               	movlw	0
  4173  000F1E  0101               	movlb	1	; () banked
  4174  000F20  6F91               	movwf	(main@state+1)& (0+255),b
  4175  000F22  0E00               	movlw	0
  4176  000F24  6F90               	movwf	main@state& (0+255),b
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;main.c: 459:     clear = 0;
  4180  000F26  0E00               	movlw	0
  4181  000F28  6F93               	movwf	(main@clear+1)& (0+255),b
  4182  000F2A  0E00               	movlw	0
  4183  000F2C  6F92               	movwf	main@clear& (0+255),b
  4184                           
  4185                           ; BSR set to: 1
  4186                           ;main.c: 460:     tick = 0;
  4187  000F2E  0E00               	movlw	0
  4188  000F30  6F75               	movwf	(main@tick+1)& (0+255),b
  4189  000F32  0E00               	movlw	0
  4190  000F34  6F74               	movwf	main@tick& (0+255),b
  4191                           
  4192                           ; BSR set to: 1
  4193                           ;main.c: 461:     B_was_pressed = 0;
  4194  000F36  0E00               	movlw	0
  4195  000F38  6F0D               	movwf	_B_was_pressed& (0+255),b	;volatile
  4196                           
  4197                           ; BSR set to: 1
  4198                           ;main.c: 462:     key_was_pressed = 1;
  4199  000F3A  0E01               	movlw	1
  4200  000F3C  6F0E               	movwf	_key_was_pressed& (0+255),b	;volatile
  4201                           
  4202                           ; BSR set to: 1
  4203                           ;main.c: 463:     exit_key = 1;
  4204  000F3E  0E01               	movlw	1
  4205  000F40  6F0C               	movwf	_exit_key& (0+255),b	;volatile
  4206  000F42                     l9542:
  4207                           
  4208                           ;main.c: 467:         if (state == 0 & clear == 1) {
  4209  000F42  0101               	movlb	1	; () banked
  4210  000F44  5190               	movf	main@state& (0+255),w,b
  4211  000F46  1191               	iorwf	(main@state+1)& (0+255),w,b
  4212  000F48  A4D8               	btfss	status,2,c
  4213  000F4A  D029               	goto	l9558
  4214                           
  4215                           ; BSR set to: 1
  4216  000F4C  0592               	decf	main@clear& (0+255),w,b
  4217  000F4E  1193               	iorwf	(main@clear+1)& (0+255),w,b
  4218  000F50  A4D8               	btfss	status,2,c
  4219  000F52  D025               	goto	l9558
  4220                           
  4221                           ; BSR set to: 1
  4222                           ;main.c: 468:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  4223  000F54  0E01               	movlw	1
  4224  000F56  ECED  F025         	call	_lcdInst
  4225  000F5A  0E11               	movlw	17
  4226  000F5C  6E64               	movwf	??_main& (0+255),c
  4227  000F5E  0E3A               	movlw	58
  4228  000F60                     u12387:
  4229  000F60  2EE8               	decfsz	wreg,f,c
  4230  000F62  D7FE               	bra	u12387
  4231  000F64  2E64               	decfsz	??_main& (0+255),f,c
  4232  000F66  D7FC               	bra	u12387
  4233  000F68  D000               	nop2	
  4234                           
  4235                           ;main.c: 469:         printf("Operation Time");
  4236  000F6A  0E59               	movlw	low STR_24
  4237  000F6C  0100               	movlb	0	; () banked
  4238  000F6E  6FE4               	movwf	printf@fmt& (0+255),b
  4239  000F70  0EFE               	movlw	high STR_24
  4240  000F72  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4241  000F74  EC3F  F025         	call	_printf	;wreg free
  4242  000F78  0E90               	movlw	144
  4243  000F7A  ECED  F025         	call	_lcdInst
  4244                           
  4245                           ;main.c: 471:         printf("%d seconds", time);
  4246  000F7E  0E5B               	movlw	low STR_25
  4247  000F80  0100               	movlb	0	; () banked
  4248  000F82  6FE4               	movwf	printf@fmt& (0+255),b
  4249  000F84  0EFF               	movlw	high STR_25
  4250  000F86  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4251  000F88  C108  F0E6         	movff	_time,?_printf+2
  4252  000F8C  C109  F0E7         	movff	_time+1,?_printf+3
  4253  000F90  EC3F  F025         	call	_printf	;wreg free
  4254                           
  4255                           ;main.c: 472:         clear = 0;
  4256  000F94  0E00               	movlw	0
  4257  000F96  0101               	movlb	1	; () banked
  4258  000F98  6F93               	movwf	(main@clear+1)& (0+255),b
  4259  000F9A  0E00               	movlw	0
  4260  000F9C  6F92               	movwf	main@clear& (0+255),b
  4261  000F9E                     l9558:
  4262                           
  4263                           ; BSR set to: 1
  4264                           ;main.c: 476:         if (state == 1 & clear == 1) {
  4265  000F9E  0590               	decf	main@state& (0+255),w,b
  4266  000FA0  1191               	iorwf	(main@state+1)& (0+255),w,b
  4267  000FA2  A4D8               	btfss	status,2,c
  4268  000FA4  D02D               	goto	l9576
  4269                           
  4270                           ; BSR set to: 1
  4271  000FA6  0592               	decf	main@clear& (0+255),w,b
  4272  000FA8  1193               	iorwf	(main@clear+1)& (0+255),w,b
  4273  000FAA  A4D8               	btfss	status,2,c
  4274  000FAC  D029               	goto	l9576
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;main.c: 478:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4278  000FAE  0E01               	movlw	1
  4279  000FB0  ECED  F025         	call	_lcdInst
  4280  000FB4  0E11               	movlw	17
  4281  000FB6  6E64               	movwf	??_main& (0+255),c
  4282  000FB8  0E3A               	movlw	58
  4283  000FBA                     u12397:
  4284  000FBA  2EE8               	decfsz	wreg,f,c
  4285  000FBC  D7FE               	bra	u12397
  4286  000FBE  2E64               	decfsz	??_main& (0+255),f,c
  4287  000FC0  D7FC               	bra	u12397
  4288  000FC2  D000               	nop2	
  4289                           
  4290                           ;main.c: 479:             { lcdInst(0x80 | LCD_LINE1_ADDR);};
  4291  000FC4  0E80               	movlw	128
  4292  000FC6  ECED  F025         	call	_lcdInst
  4293                           
  4294                           ;main.c: 480:             printf("# of Canisters");
  4295  000FCA  0E77               	movlw	low STR_26
  4296  000FCC  0100               	movlb	0	; () banked
  4297  000FCE  6FE4               	movwf	printf@fmt& (0+255),b
  4298  000FD0  0EFE               	movlw	high STR_26
  4299  000FD2  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4300  000FD4  EC3F  F025         	call	_printf	;wreg free
  4301  000FD8  0E90               	movlw	144
  4302  000FDA  ECED  F025         	call	_lcdInst
  4303                           
  4304                           ;main.c: 482:             printf("%d Canisters", Canister);
  4305  000FDE  0EFA               	movlw	low STR_27
  4306  000FE0  0100               	movlb	0	; () banked
  4307  000FE2  6FE4               	movwf	printf@fmt& (0+255),b
  4308  000FE4  0EFE               	movlw	high STR_27
  4309  000FE6  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4310  000FE8  C106  F0E6         	movff	_Canister,?_printf+2
  4311  000FEC  C107  F0E7         	movff	_Canister+1,?_printf+3
  4312  000FF0  EC3F  F025         	call	_printf	;wreg free
  4313  000FF4                     l9574:
  4314                           
  4315                           ;main.c: 483:             clear = 0;
  4316  000FF4  0E00               	movlw	0
  4317  000FF6  0101               	movlb	1	; () banked
  4318  000FF8  6F93               	movwf	(main@clear+1)& (0+255),b
  4319  000FFA  0E00               	movlw	0
  4320  000FFC  6F92               	movwf	main@clear& (0+255),b
  4321                           
  4322                           ;main.c: 485:         }
  4323  000FFE  D0A8               	goto	l269
  4324  001000                     l9576:
  4325                           
  4326                           ; BSR set to: 1
  4327  001000  0E02               	movlw	2
  4328  001002  1990               	xorwf	main@state& (0+255),w,b
  4329  001004  1191               	iorwf	(main@state+1)& (0+255),w,b
  4330  001006  A4D8               	btfss	status,2,c
  4331  001008  D02F               	goto	l9596
  4332                           
  4333                           ; BSR set to: 1
  4334  00100A  0592               	decf	main@clear& (0+255),w,b
  4335  00100C  1193               	iorwf	(main@clear+1)& (0+255),w,b
  4336  00100E  A4D8               	btfss	status,2,c
  4337  001010  D02B               	goto	l9596
  4338                           
  4339                           ; BSR set to: 1
  4340                           ;main.c: 489:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4341  001012  0E01               	movlw	1
  4342  001014  ECED  F025         	call	_lcdInst
  4343  001018  0E11               	movlw	17
  4344  00101A  6E64               	movwf	??_main& (0+255),c
  4345  00101C  0E3A               	movlw	58
  4346  00101E                     u12407:
  4347  00101E  2EE8               	decfsz	wreg,f,c
  4348  001020  D7FE               	bra	u12407
  4349  001022  2E64               	decfsz	??_main& (0+255),f,c
  4350  001024  D7FC               	bra	u12407
  4351  001026  D000               	nop2	
  4352                           
  4353                           ;main.c: 490:             printf("# of Balls");
  4354  001028  0E66               	movlw	low STR_28
  4355  00102A  0100               	movlb	0	; () banked
  4356  00102C  6FE4               	movwf	printf@fmt& (0+255),b
  4357  00102E  0EFF               	movlw	high STR_28
  4358  001030  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4359  001032  EC3F  F025         	call	_printf	;wreg free
  4360  001036  0EC0               	movlw	192
  4361  001038  ECED  F025         	call	_lcdInst
  4362                           
  4363                           ;main.c: 492:             printf("supplied");
  4364  00103C  0EB6               	movlw	low STR_29
  4365  00103E  0100               	movlb	0	; () banked
  4366  001040  6FE4               	movwf	printf@fmt& (0+255),b
  4367  001042  0EFF               	movlw	high STR_29
  4368  001044  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4369  001046  EC3F  F025         	call	_printf	;wreg free
  4370  00104A  0ED0               	movlw	208
  4371  00104C  ECED  F025         	call	_lcdInst
  4372                           
  4373                           ;main.c: 494:             printf("%d balls", balls);
  4374  001050  0EBF               	movlw	low STR_30
  4375  001052  0100               	movlb	0	; () banked
  4376  001054  6FE4               	movwf	printf@fmt& (0+255),b
  4377  001056  0EFF               	movlw	high STR_30
  4378  001058  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4379  00105A  C104  F0E6         	movff	_balls,?_printf+2
  4380  00105E  C105  F0E7         	movff	_balls+1,?_printf+3
  4381  001062  EC3F  F025         	call	_printf	;wreg free
  4382  001066  D7C6               	goto	l9574
  4383  001068                     l9596:
  4384                           
  4385                           ; BSR set to: 1
  4386  001068  0E03               	movlw	3
  4387  00106A  1990               	xorwf	main@state& (0+255),w,b
  4388  00106C  1191               	iorwf	(main@state+1)& (0+255),w,b
  4389  00106E  A4D8               	btfss	status,2,c
  4390  001070  D035               	goto	l9616
  4391                           
  4392                           ; BSR set to: 1
  4393  001072  0592               	decf	main@clear& (0+255),w,b
  4394  001074  1193               	iorwf	(main@clear+1)& (0+255),w,b
  4395  001076  A4D8               	btfss	status,2,c
  4396  001078  D031               	goto	l9616
  4397                           
  4398                           ; BSR set to: 1
  4399                           ;main.c: 501:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4400  00107A  0E01               	movlw	1
  4401  00107C  ECED  F025         	call	_lcdInst
  4402  001080  0E11               	movlw	17
  4403  001082  6E64               	movwf	??_main& (0+255),c
  4404  001084  0E3A               	movlw	58
  4405  001086                     u12417:
  4406  001086  2EE8               	decfsz	wreg,f,c
  4407  001088  D7FE               	bra	u12417
  4408  00108A  2E64               	decfsz	??_main& (0+255),f,c
  4409  00108C  D7FC               	bra	u12417
  4410  00108E  D000               	nop2	
  4411                           
  4412                           ;main.c: 502:             printf("Individual Info");
  4413  001090  0E3A               	movlw	low STR_31
  4414  001092  0100               	movlb	0	; () banked
  4415  001094  6FE4               	movwf	printf@fmt& (0+255),b
  4416  001096  0EFE               	movlw	high STR_31
  4417  001098  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4418  00109A  EC3F  F025         	call	_printf	;wreg free
  4419  00109E  0EC0               	movlw	192
  4420  0010A0  ECED  F025         	call	_lcdInst
  4421                           
  4422                           ;main.c: 504:             printf("of Canister");
  4423  0010A4  0E39               	movlw	low STR_32
  4424  0010A6  0100               	movlb	0	; () banked
  4425  0010A8  6FE4               	movwf	printf@fmt& (0+255),b
  4426  0010AA  0EFF               	movlw	high STR_32
  4427  0010AC  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4428  0010AE  EC3F  F025         	call	_printf	;wreg free
  4429  0010B2  0ED0               	movlw	208
  4430  0010B4  ECED  F025         	call	_lcdInst
  4431                           
  4432                           ;main.c: 506:             printf("Press 0 to %d ", Canister-1);
  4433  0010B8  0E4A               	movlw	low STR_33
  4434  0010BA  0100               	movlb	0	; () banked
  4435  0010BC  6FE4               	movwf	printf@fmt& (0+255),b
  4436  0010BE  0EFE               	movlw	high STR_33
  4437  0010C0  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4438  0010C2  0EFF               	movlw	255
  4439  0010C4  0101               	movlb	1	; () banked
  4440  0010C6  2506               	addwf	_Canister& (0+255),w,b
  4441  0010C8  0100               	movlb	0	; () banked
  4442  0010CA  6FE6               	movwf	(?_printf+2)& (0+255),b
  4443  0010CC  0EFF               	movlw	255
  4444  0010CE  0101               	movlb	1	; () banked
  4445  0010D0  2107               	addwfc	(_Canister+1)& (0+255),w,b
  4446  0010D2  0100               	movlb	0	; () banked
  4447  0010D4  6FE7               	movwf	(?_printf+3)& (0+255),b
  4448  0010D6  EC3F  F025         	call	_printf	;wreg free
  4449  0010DA  D78C               	goto	l9574
  4450  0010DC                     l9616:
  4451                           
  4452                           ; BSR set to: 1
  4453  0010DC  0E04               	movlw	4
  4454  0010DE  1990               	xorwf	main@state& (0+255),w,b
  4455  0010E0  1191               	iorwf	(main@state+1)& (0+255),w,b
  4456  0010E2  A4D8               	btfss	status,2,c
  4457  0010E4  D035               	goto	l269
  4458                           
  4459                           ; BSR set to: 1
  4460  0010E6  0592               	decf	main@clear& (0+255),w,b
  4461  0010E8  1193               	iorwf	(main@clear+1)& (0+255),w,b
  4462  0010EA  A4D8               	btfss	status,2,c
  4463  0010EC  D031               	goto	l269
  4464                           
  4465                           ; BSR set to: 1
  4466                           ;main.c: 513:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4467  0010EE  0E01               	movlw	1
  4468  0010F0  ECED  F025         	call	_lcdInst
  4469  0010F4  0E11               	movlw	17
  4470  0010F6  6E64               	movwf	??_main& (0+255),c
  4471  0010F8  0E3A               	movlw	58
  4472  0010FA                     u12427:
  4473  0010FA  2EE8               	decfsz	wreg,f,c
  4474  0010FC  D7FE               	bra	u12427
  4475  0010FE  2E64               	decfsz	??_main& (0+255),f,c
  4476  001100  D7FC               	bra	u12427
  4477  001102  D000               	nop2	
  4478                           
  4479                           ;main.c: 514:             printf("View previous");
  4480  001104  0EEC               	movlw	low STR_34
  4481  001106  0100               	movlb	0	; () banked
  4482  001108  6FE4               	movwf	printf@fmt& (0+255),b
  4483  00110A  0EFE               	movlw	high STR_34
  4484  00110C  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4485  00110E  EC3F  F025         	call	_printf	;wreg free
  4486  001112  0EC0               	movlw	192
  4487  001114  ECED  F025         	call	_lcdInst
  4488                           
  4489                           ;main.c: 516:             printf("trials");
  4490  001118  0EDF               	movlw	low STR_35
  4491  00111A  0100               	movlb	0	; () banked
  4492  00111C  6FE4               	movwf	printf@fmt& (0+255),b
  4493  00111E  0EFF               	movlw	high STR_35
  4494  001120  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4495  001122  EC3F  F025         	call	_printf	;wreg free
  4496  001126  0ED0               	movlw	208
  4497  001128  ECED  F025         	call	_lcdInst
  4498                           
  4499                           ;main.c: 518:             printf("Press B ", Canister-1);
  4500  00112C  0EA4               	movlw	low STR_36
  4501  00112E  0100               	movlb	0	; () banked
  4502  001130  6FE4               	movwf	printf@fmt& (0+255),b
  4503  001132  0EFF               	movlw	high STR_36
  4504  001134  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4505  001136  0EFF               	movlw	255
  4506  001138  0101               	movlb	1	; () banked
  4507  00113A  2506               	addwf	_Canister& (0+255),w,b
  4508  00113C  0100               	movlb	0	; () banked
  4509  00113E  6FE6               	movwf	(?_printf+2)& (0+255),b
  4510  001140  0EFF               	movlw	255
  4511  001142  0101               	movlb	1	; () banked
  4512  001144  2107               	addwfc	(_Canister+1)& (0+255),w,b
  4513  001146  0100               	movlb	0	; () banked
  4514  001148  6FE7               	movwf	(?_printf+3)& (0+255),b
  4515  00114A  EC3F  F025         	call	_printf	;wreg free
  4516  00114E  D752               	goto	l9574
  4517  001150                     l269:
  4518                           
  4519                           ; BSR set to: 1
  4520                           ;main.c: 524:         if(B_was_pressed) {
  4521                           
  4522                           ; BSR set to: 1
  4523  001150  510D               	movf	_B_was_pressed& (0+255),w,b	;volatile
  4524  001152  B4D8               	btfsc	status,2,c
  4525  001154  D04A               	goto	l9662
  4526                           
  4527                           ; BSR set to: 1
  4528                           ;main.c: 526:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  4529  001156  0E01               	movlw	1
  4530  001158  ECED  F025         	call	_lcdInst
  4531  00115C  0E11               	movlw	17
  4532  00115E  6E64               	movwf	??_main& (0+255),c
  4533  001160  0E3A               	movlw	58
  4534  001162                     u12437:
  4535  001162  2EE8               	decfsz	wreg,f,c
  4536  001164  D7FE               	bra	u12437
  4537  001166  2E64               	decfsz	??_main& (0+255),f,c
  4538  001168  D7FC               	bra	u12437
  4539  00116A  D000               	nop2	
  4540                           
  4541                           ;main.c: 527:             printf("Pick previous");
  4542  00116C  0EDE               	movlw	low STR_37
  4543  00116E  0100               	movlb	0	; () banked
  4544  001170  6FE4               	movwf	printf@fmt& (0+255),b
  4545  001172  0EFE               	movlw	high STR_37
  4546  001174  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4547  001176  EC3F  F025         	call	_printf	;wreg free
  4548  00117A  0EC0               	movlw	192
  4549  00117C  ECED  F025         	call	_lcdInst
  4550                           
  4551                           ;main.c: 529:             printf("trials");
  4552  001180  0EDF               	movlw	low STR_35
  4553  001182  0100               	movlb	0	; () banked
  4554  001184  6FE4               	movwf	printf@fmt& (0+255),b
  4555  001186  0EFF               	movlw	high STR_35
  4556  001188  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4557  00118A  EC3F  F025         	call	_printf	;wreg free
  4558  00118E  0E90               	movlw	144
  4559  001190  ECED  F025         	call	_lcdInst
  4560                           
  4561                           ;main.c: 531:             printf("0 is Current");
  4562  001194  0E14               	movlw	low STR_39
  4563  001196  0100               	movlb	0	; () banked
  4564  001198  6FE4               	movwf	printf@fmt& (0+255),b
  4565  00119A  0EFF               	movlw	high STR_39
  4566  00119C  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4567  00119E  EC3F  F025         	call	_printf	;wreg free
  4568  0011A2  0ED0               	movlw	208
  4569  0011A4  ECED  F025         	call	_lcdInst
  4570                           
  4571                           ;main.c: 533:             printf("0 to 4 ");
  4572  0011A8  0EC8               	movlw	low STR_40
  4573  0011AA  0100               	movlb	0	; () banked
  4574  0011AC  6FE4               	movwf	printf@fmt& (0+255),b
  4575  0011AE  0EFF               	movlw	high STR_40
  4576  0011B0  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4577  0011B2  EC3F  F025         	call	_printf	;wreg free
  4578  0011B6                     l9656:
  4579  0011B6  0101               	movlb	1	; () banked
  4580  0011B8  510E               	movf	_key_was_pressed& (0+255),w,b	;volatile
  4581  0011BA  B4D8               	btfsc	status,2,c
  4582  0011BC  D7FC               	goto	l9656
  4583                           
  4584                           ; BSR set to: 1
  4585                           ;main.c: 537:             int number_pressed = (int) (keys[keypress] - '0');
  4586  0011BE  0E13               	movlw	low _keys
  4587  0011C0  250A               	addwf	_keypress& (0+255),w,b
  4588  0011C2  6EF6               	movwf	tblptrl,c
  4589  0011C4  6AF7               	clrf	tblptrh,c
  4590  0011C6  0EFE               	movlw	high _keys
  4591  0011C8  22F7               	addwfc	tblptrh,f,c
  4592  0011CA                     	if	0	;There are less than 3 active tblptr bytes
  4593  0011CA                     	endif
  4594  0011CA  0008               	tblrd		*
  4595  0011CC  CFF5 F064          	movff	tablat,??_main
  4596  0011D0  0ED0               	movlw	208
  4597  0011D2  2464               	addwf	??_main,w,c
  4598  0011D4  6F67               	movwf	main@number_pressed& (0+255),b
  4599  0011D6  6B68               	clrf	(main@number_pressed+1)& (0+255),b
  4600  0011D8  0EFF               	movlw	255
  4601  0011DA  2368               	addwfc	(main@number_pressed+1)& (0+255),f,b
  4602                           
  4603                           ; BSR set to: 1
  4604                           ;main.c: 539:             EEPROM_prev(number_pressed);
  4605  0011DC  C167  F011         	movff	main@number_pressed,EEPROM_prev@trial
  4606  0011E0  C168  F012         	movff	main@number_pressed+1,EEPROM_prev@trial+1
  4607  0011E4  EC63  F01A         	call	_EEPROM_prev	;wreg free
  4608                           
  4609                           ;main.c: 540:             goto info;
  4610  0011E8  D699               	goto	l9530
  4611  0011EA                     l9662:
  4612                           
  4613                           ; BSR set to: 1
  4614                           ;main.c: 544:         if(key_was_pressed){
  4615  0011EA  510E               	movf	_key_was_pressed& (0+255),w,b	;volatile
  4616  0011EC  B4D8               	btfsc	status,2,c
  4617  0011EE  D149               	goto	l9760
  4618                           
  4619                           ; BSR set to: 1
  4620                           ;main.c: 546:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  4621  0011F0  3881               	swapf	3969,w,c	;volatile
  4622  0011F2  0B0F               	andlw	15
  4623  0011F4  0B0F               	andlw	15
  4624  0011F6  6F81               	movwf	main@keypress& (0+255),b
  4625                           
  4626                           ; BSR set to: 1
  4627                           ;main.c: 547:             int miniTick = 0;
  4628  0011F8  0E00               	movlw	0
  4629  0011FA  6F73               	movwf	(main@miniTick+1)& (0+255),b
  4630  0011FC  0E00               	movlw	0
  4631  0011FE  6F72               	movwf	main@miniTick& (0+255),b
  4632                           
  4633                           ; BSR set to: 1
  4634                           ;main.c: 548:             int miniState = 0;
  4635  001200  0E00               	movlw	0
  4636  001202  6F85               	movwf	(main@miniState+1)& (0+255),b
  4637  001204  0E00               	movlw	0
  4638  001206  6F84               	movwf	main@miniState& (0+255),b
  4639                           
  4640                           ; BSR set to: 1
  4641                           ;main.c: 549:             int miniClear = 1;
  4642  001208  0E00               	movlw	0
  4643  00120A  6F80               	movwf	(main@miniClear+1)& (0+255),b
  4644  00120C  0E01               	movlw	1
  4645  00120E  6F7F               	movwf	main@miniClear& (0+255),b
  4646                           
  4647                           ; BSR set to: 1
  4648                           ;main.c: 551:             int number_pressed = (int) (keys[keypress] - '0');
  4649  001210  0E13               	movlw	low _keys
  4650  001212  2581               	addwf	main@keypress& (0+255),w,b
  4651  001214  6EF6               	movwf	tblptrl,c
  4652  001216  6AF7               	clrf	tblptrh,c
  4653  001218  0EFE               	movlw	high _keys
  4654  00121A  22F7               	addwfc	tblptrh,f,c
  4655  00121C                     	if	0	;There are less than 3 active tblptr bytes
  4656  00121C                     	endif
  4657  00121C  0008               	tblrd		*
  4658  00121E  CFF5 F064          	movff	tablat,??_main
  4659  001222  0ED0               	movlw	208
  4660  001224  2464               	addwf	??_main,w,c
  4661  001226  6F78               	movwf	main@number_pressed_1025& (0+255),b
  4662  001228  6B79               	clrf	(main@number_pressed_1025+1)& (0+255),b
  4663  00122A  0EFF               	movlw	255
  4664  00122C  2379               	addwfc	(main@number_pressed_1025+1)& (0+255),f,b
  4665                           
  4666                           ;main.c: 553:             while(!exit_key) {
  4667  00122E  D121               	goto	l9756
  4668  001230                     l9674:
  4669                           
  4670                           ; BSR set to: 1
  4671                           ;main.c: 555:                 if (miniState == 0 & miniClear == 1) {
  4672  001230  5184               	movf	main@miniState& (0+255),w,b
  4673  001232  1185               	iorwf	(main@miniState+1)& (0+255),w,b
  4674  001234  A4D8               	btfss	status,2,c
  4675  001236  D049               	goto	l9694
  4676                           
  4677                           ; BSR set to: 1
  4678  001238  057F               	decf	main@miniClear& (0+255),w,b
  4679  00123A  1180               	iorwf	(main@miniClear+1)& (0+255),w,b
  4680  00123C  A4D8               	btfss	status,2,c
  4681  00123E  D045               	goto	l9694
  4682                           
  4683                           ; BSR set to: 1
  4684                           ;main.c: 557:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  4685  001240  0E01               	movlw	1
  4686  001242  ECED  F025         	call	_lcdInst
  4687  001246  0E11               	movlw	17
  4688  001248  6E64               	movwf	??_main& (0+255),c
  4689  00124A  0E3A               	movlw	58
  4690  00124C                     u12447:
  4691  00124C  2EE8               	decfsz	wreg,f,c
  4692  00124E  D7FE               	bra	u12447
  4693  001250  2E64               	decfsz	??_main& (0+255),f,c
  4694  001252  D7FC               	bra	u12447
  4695  001254  D000               	nop2	
  4696                           
  4697                           ;main.c: 558:                     printf("Cansiter %c", keys[keypress]);
  4698  001256  0E2D               	movlw	low STR_41
  4699  001258  0100               	movlb	0	; () banked
  4700  00125A  6FE4               	movwf	printf@fmt& (0+255),b
  4701  00125C  0EFF               	movlw	high STR_41
  4702  00125E  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4703  001260  0E13               	movlw	low _keys
  4704  001262  0101               	movlb	1	; () banked
  4705  001264  2581               	addwf	main@keypress& (0+255),w,b
  4706  001266  6EF6               	movwf	tblptrl,c
  4707  001268  6AF7               	clrf	tblptrh,c
  4708  00126A  0EFE               	movlw	high _keys
  4709  00126C  22F7               	addwfc	tblptrh,f,c
  4710  00126E                     	if	0	;There are less than 3 active tblptr bytes
  4711  00126E                     	endif
  4712  00126E  0008               	tblrd		*
  4713  001270  50F5               	movf	tablat,w,c
  4714  001272  0100               	movlb	0	; () banked
  4715  001274  6FE6               	movwf	(?_printf+2)& (0+255),b
  4716  001276  6BE7               	clrf	(?_printf+3)& (0+255),b
  4717  001278  EC3F  F025         	call	_printf	;wreg free
  4718  00127C  0E90               	movlw	144
  4719  00127E  ECED  F025         	call	_lcdInst
  4720                           
  4721                           ;main.c: 560:                     printf("Distance %d cm", DistanceCanister[number_press
      +                          ed] );
  4722  001282  0E68               	movlw	low STR_42
  4723  001284  0100               	movlb	0	; () banked
  4724  001286  6FE4               	movwf	printf@fmt& (0+255),b
  4725  001288  0EFE               	movlw	high STR_42
  4726  00128A  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4727  00128C  90D8               	bcf	status,0,c
  4728  00128E  0101               	movlb	1	; () banked
  4729  001290  3578               	rlcf	main@number_pressed_1025& (0+255),w,b
  4730  001292  6ED9               	movwf	fsr2l,c
  4731  001294  3579               	rlcf	(main@number_pressed_1025+1)& (0+255),w,b
  4732  001296  6EDA               	movwf	fsr2h,c
  4733  001298  0EB4               	movlw	low _DistanceCanister
  4734  00129A  26D9               	addwf	fsr2l,f,c
  4735  00129C  0E01               	movlw	high _DistanceCanister
  4736  00129E  22DA               	addwfc	fsr2h,f,c
  4737  0012A0  CFDE F0E6          	movff	postinc2,?_printf+2
  4738  0012A4  CFDD F0E7          	movff	postdec2,?_printf+3
  4739  0012A8  EC3F  F025         	call	_printf	;wreg free
  4740  0012AC  0ED0               	movlw	208
  4741  0012AE  ECED  F025         	call	_lcdInst
  4742                           
  4743                           ;main.c: 562:                     printf("# to exit");
  4744  0012B2  0E9A               	movlw	low STR_43
  4745  0012B4  0100               	movlb	0	; () banked
  4746  0012B6  6FE4               	movwf	printf@fmt& (0+255),b
  4747  0012B8  0EFF               	movlw	high STR_43
  4748  0012BA  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4749  0012BC  EC3F  F025         	call	_printf	;wreg free
  4750                           
  4751                           ;main.c: 563:                     miniClear = 0;
  4752  0012C0  0E00               	movlw	0
  4753  0012C2  0101               	movlb	1	; () banked
  4754  0012C4  6F80               	movwf	(main@miniClear+1)& (0+255),b
  4755  0012C6  0E00               	movlw	0
  4756  0012C8  6F7F               	movwf	main@miniClear& (0+255),b
  4757  0012CA                     l9694:
  4758                           
  4759                           ; BSR set to: 1
  4760                           ;main.c: 566:                 if (miniState == 1 & miniClear == 1) {
  4761  0012CA  0584               	decf	main@miniState& (0+255),w,b
  4762  0012CC  1185               	iorwf	(main@miniState+1)& (0+255),w,b
  4763  0012CE  A4D8               	btfss	status,2,c
  4764  0012D0  D051               	goto	l9718
  4765                           
  4766                           ; BSR set to: 1
  4767  0012D2  057F               	decf	main@miniClear& (0+255),w,b
  4768  0012D4  1180               	iorwf	(main@miniClear+1)& (0+255),w,b
  4769  0012D6  A4D8               	btfss	status,2,c
  4770  0012D8  D04D               	goto	l9718
  4771                           
  4772                           ; BSR set to: 1
  4773                           ;main.c: 568:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  4774  0012DA  0E01               	movlw	1
  4775  0012DC  ECED  F025         	call	_lcdInst
  4776  0012E0  0E11               	movlw	17
  4777  0012E2  6E64               	movwf	??_main& (0+255),c
  4778  0012E4  0E3A               	movlw	58
  4779  0012E6                     u12457:
  4780  0012E6  2EE8               	decfsz	wreg,f,c
  4781  0012E8  D7FE               	bra	u12457
  4782  0012EA  2E64               	decfsz	??_main& (0+255),f,c
  4783  0012EC  D7FC               	bra	u12457
  4784  0012EE  D000               	nop2	
  4785                           
  4786                           ;main.c: 569:                     printf("Cansiter %c", keys[keypress]);
  4787  0012F0  0E2D               	movlw	low STR_41
  4788  0012F2  0100               	movlb	0	; () banked
  4789  0012F4  6FE4               	movwf	printf@fmt& (0+255),b
  4790  0012F6  0EFF               	movlw	high STR_41
  4791  0012F8  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4792  0012FA  0E13               	movlw	low _keys
  4793  0012FC  0101               	movlb	1	; () banked
  4794  0012FE  2581               	addwf	main@keypress& (0+255),w,b
  4795  001300  6EF6               	movwf	tblptrl,c
  4796  001302  6AF7               	clrf	tblptrh,c
  4797  001304  0EFE               	movlw	high _keys
  4798  001306  22F7               	addwfc	tblptrh,f,c
  4799  001308                     	if	0	;There are less than 3 active tblptr bytes
  4800  001308                     	endif
  4801  001308  0008               	tblrd		*
  4802  00130A  50F5               	movf	tablat,w,c
  4803  00130C  0100               	movlb	0	; () banked
  4804  00130E  6FE6               	movwf	(?_printf+2)& (0+255),b
  4805  001310  6BE7               	clrf	(?_printf+3)& (0+255),b
  4806  001312  EC3F  F025         	call	_printf	;wreg free
  4807  001316  0E90               	movlw	144
  4808  001318  ECED  F025         	call	_lcdInst
  4809                           
  4810                           ;main.c: 571:                     if (State[number_pressed] == 1)
  4811  00131C  90D8               	bcf	status,0,c
  4812  00131E  0101               	movlb	1	; () banked
  4813  001320  3578               	rlcf	main@number_pressed_1025& (0+255),w,b
  4814  001322  6ED9               	movwf	fsr2l,c
  4815  001324  3579               	rlcf	(main@number_pressed_1025+1)& (0+255),w,b
  4816  001326  6EDA               	movwf	fsr2h,c
  4817  001328  0EC8               	movlw	low _State
  4818  00132A  26D9               	addwf	fsr2l,f,c
  4819  00132C  0E01               	movlw	high _State
  4820  00132E  22DA               	addwfc	fsr2h,f,c
  4821  001330  04DE               	decf	postinc2,w,c
  4822  001332  10DE               	iorwf	postinc2,w,c
  4823  001334  A4D8               	btfss	status,2,c
  4824  001336  D008               	goto	l9710
  4825                           
  4826                           ; BSR set to: 1
  4827                           ;main.c: 572:                         printf("Canister Full");
  4828  001338  0ED0               	movlw	low STR_45
  4829  00133A  0100               	movlb	0	; () banked
  4830  00133C  6FE4               	movwf	printf@fmt& (0+255),b
  4831  00133E  0EFE               	movlw	high STR_45
  4832  001340  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4833  001342  EC3F  F025         	call	_printf	;wreg free
  4834  001346  D007               	goto	l9712
  4835  001348                     l9710:
  4836                           
  4837                           ; BSR set to: 1
  4838                           ;main.c: 574:                         printf("Canister Empty");
  4839  001348  0EB3               	movlw	low STR_46
  4840  00134A  0100               	movlb	0	; () banked
  4841  00134C  6FE4               	movwf	printf@fmt& (0+255),b
  4842  00134E  0EFE               	movlw	high STR_46
  4843  001350  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4844  001352  EC3F  F025         	call	_printf	;wreg free
  4845  001356                     l9712:
  4846  001356  0ED0               	movlw	208
  4847  001358  ECED  F025         	call	_lcdInst
  4848                           
  4849                           ;main.c: 576:                     printf("# to exit");
  4850  00135C  0E9A               	movlw	low STR_43
  4851  00135E  0100               	movlb	0	; () banked
  4852  001360  6FE4               	movwf	printf@fmt& (0+255),b
  4853  001362  0EFF               	movlw	high STR_43
  4854  001364  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4855  001366  EC3F  F025         	call	_printf	;wreg free
  4856                           
  4857                           ;main.c: 577:                     miniClear = 0;
  4858  00136A  0E00               	movlw	0
  4859  00136C  0101               	movlb	1	; () banked
  4860  00136E  6F80               	movwf	(main@miniClear+1)& (0+255),b
  4861  001370  0E00               	movlw	0
  4862  001372  6F7F               	movwf	main@miniClear& (0+255),b
  4863  001374                     l9718:
  4864                           
  4865                           ; BSR set to: 1
  4866                           ;main.c: 580:                 if (miniState == 2 & miniClear == 1) {
  4867  001374  0E02               	movlw	2
  4868  001376  1984               	xorwf	main@miniState& (0+255),w,b
  4869  001378  1185               	iorwf	(main@miniState+1)& (0+255),w,b
  4870  00137A  A4D8               	btfss	status,2,c
  4871  00137C  D051               	goto	l9742
  4872                           
  4873                           ; BSR set to: 1
  4874  00137E  057F               	decf	main@miniClear& (0+255),w,b
  4875  001380  1180               	iorwf	(main@miniClear+1)& (0+255),w,b
  4876  001382  A4D8               	btfss	status,2,c
  4877  001384  D04D               	goto	l9742
  4878                           
  4879                           ; BSR set to: 1
  4880                           ;main.c: 582:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  4881  001386  0E01               	movlw	1
  4882  001388  ECED  F025         	call	_lcdInst
  4883  00138C  0E11               	movlw	17
  4884  00138E  6E64               	movwf	??_main& (0+255),c
  4885  001390  0E3A               	movlw	58
  4886  001392                     u12467:
  4887  001392  2EE8               	decfsz	wreg,f,c
  4888  001394  D7FE               	bra	u12467
  4889  001396  2E64               	decfsz	??_main& (0+255),f,c
  4890  001398  D7FC               	bra	u12467
  4891  00139A  D000               	nop2	
  4892                           
  4893                           ;main.c: 583:                     printf("Cansiter %c", keys[keypress]);
  4894  00139C  0E2D               	movlw	low STR_41
  4895  00139E  0100               	movlb	0	; () banked
  4896  0013A0  6FE4               	movwf	printf@fmt& (0+255),b
  4897  0013A2  0EFF               	movlw	high STR_41
  4898  0013A4  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4899  0013A6  0E13               	movlw	low _keys
  4900  0013A8  0101               	movlb	1	; () banked
  4901  0013AA  2581               	addwf	main@keypress& (0+255),w,b
  4902  0013AC  6EF6               	movwf	tblptrl,c
  4903  0013AE  6AF7               	clrf	tblptrh,c
  4904  0013B0  0EFE               	movlw	high _keys
  4905  0013B2  22F7               	addwfc	tblptrh,f,c
  4906  0013B4                     	if	0	;There are less than 3 active tblptr bytes
  4907  0013B4                     	endif
  4908  0013B4  0008               	tblrd		*
  4909  0013B6  50F5               	movf	tablat,w,c
  4910  0013B8  0100               	movlb	0	; () banked
  4911  0013BA  6FE6               	movwf	(?_printf+2)& (0+255),b
  4912  0013BC  6BE7               	clrf	(?_printf+3)& (0+255),b
  4913  0013BE  EC3F  F025         	call	_printf	;wreg free
  4914  0013C2  0E90               	movlw	144
  4915  0013C4  ECED  F025         	call	_lcdInst
  4916                           
  4917                           ;main.c: 585:                     if (BallDispensed[number_pressed] == 1)
  4918  0013C8  90D8               	bcf	status,0,c
  4919  0013CA  0101               	movlb	1	; () banked
  4920  0013CC  3578               	rlcf	main@number_pressed_1025& (0+255),w,b
  4921  0013CE  6ED9               	movwf	fsr2l,c
  4922  0013D0  3579               	rlcf	(main@number_pressed_1025+1)& (0+255),w,b
  4923  0013D2  6EDA               	movwf	fsr2h,c
  4924  0013D4  0EA0               	movlw	low _BallDispensed
  4925  0013D6  26D9               	addwf	fsr2l,f,c
  4926  0013D8  0E01               	movlw	high _BallDispensed
  4927  0013DA  22DA               	addwfc	fsr2h,f,c
  4928  0013DC  04DE               	decf	postinc2,w,c
  4929  0013DE  10DE               	iorwf	postinc2,w,c
  4930  0013E0  A4D8               	btfss	status,2,c
  4931  0013E2  D008               	goto	l9734
  4932                           
  4933                           ; BSR set to: 1
  4934                           ;main.c: 586:                         printf("Ball Added");
  4935  0013E4  0EC5               	movlw	low (STR_50+3)
  4936  0013E6  0100               	movlb	0	; () banked
  4937  0013E8  6FE4               	movwf	printf@fmt& (0+255),b
  4938  0013EA  0EFE               	movlw	high (STR_50+3)
  4939  0013EC  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4940  0013EE  EC3F  F025         	call	_printf	;wreg free
  4941  0013F2  D007               	goto	l9736
  4942  0013F4                     l9734:
  4943                           
  4944                           ; BSR set to: 1
  4945                           ;main.c: 588:                         printf("No Ball Added");
  4946  0013F4  0EC2               	movlw	low STR_50
  4947  0013F6  0100               	movlb	0	; () banked
  4948  0013F8  6FE4               	movwf	printf@fmt& (0+255),b
  4949  0013FA  0EFE               	movlw	high STR_50
  4950  0013FC  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4951  0013FE  EC3F  F025         	call	_printf	;wreg free
  4952  001402                     l9736:
  4953  001402  0ED0               	movlw	208
  4954  001404  ECED  F025         	call	_lcdInst
  4955                           
  4956                           ;main.c: 590:                     printf("# to exit");
  4957  001408  0E9A               	movlw	low STR_43
  4958  00140A  0100               	movlb	0	; () banked
  4959  00140C  6FE4               	movwf	printf@fmt& (0+255),b
  4960  00140E  0EFF               	movlw	high STR_43
  4961  001410  6FE5               	movwf	(printf@fmt+1)& (0+255),b
  4962  001412  EC3F  F025         	call	_printf	;wreg free
  4963                           
  4964                           ;main.c: 593:                     miniClear = 0;
  4965  001416  0E00               	movlw	0
  4966  001418  0101               	movlb	1	; () banked
  4967  00141A  6F80               	movwf	(main@miniClear+1)& (0+255),b
  4968  00141C  0E00               	movlw	0
  4969  00141E  6F7F               	movwf	main@miniClear& (0+255),b
  4970  001420                     l9742:
  4971                           
  4972                           ; BSR set to: 1
  4973                           ;main.c: 596:                 if (miniTick == 3000) {
  4974  001420  0EB8               	movlw	184
  4975  001422  1972               	xorwf	main@miniTick& (0+255),w,b
  4976  001424  E11D               	bnz	l9752
  4977  001426  0E0B               	movlw	11
  4978  001428  1973               	xorwf	(main@miniTick+1)& (0+255),w,b
  4979  00142A  A4D8               	btfss	status,2,c
  4980  00142C  D019               	goto	l9752
  4981                           
  4982                           ; BSR set to: 1
  4983                           ;main.c: 597:                     miniClear = 1;
  4984  00142E  0E00               	movlw	0
  4985  001430  6F80               	movwf	(main@miniClear+1)& (0+255),b
  4986  001432  0E01               	movlw	1
  4987  001434  6F7F               	movwf	main@miniClear& (0+255),b
  4988                           
  4989                           ; BSR set to: 1
  4990                           ;main.c: 598:                     miniState++;
  4991  001436  4B84               	infsnz	main@miniState& (0+255),f,b
  4992  001438  2B85               	incf	(main@miniState+1)& (0+255),f,b
  4993                           
  4994                           ; BSR set to: 1
  4995                           ;main.c: 599:                     miniState = miniState % 3;
  4996  00143A  C184  F00B         	movff	main@miniState,___awmod@dividend
  4997  00143E  C185  F00C         	movff	main@miniState+1,___awmod@dividend+1
  4998  001442  0E00               	movlw	0
  4999  001444  6E0E               	movwf	___awmod@divisor+1,c
  5000  001446  0E03               	movlw	3
  5001  001448  6E0D               	movwf	___awmod@divisor,c
  5002  00144A  EC00  F022         	call	___awmod	;wreg free
  5003  00144E  C00B  F184         	movff	?___awmod,main@miniState
  5004  001452  C00C  F185         	movff	?___awmod+1,main@miniState+1
  5005                           
  5006                           ;main.c: 600:                     miniTick = 0;
  5007  001456  0E00               	movlw	0
  5008  001458  0101               	movlb	1	; () banked
  5009  00145A  6F73               	movwf	(main@miniTick+1)& (0+255),b
  5010  00145C  0E00               	movlw	0
  5011  00145E  6F72               	movwf	main@miniTick& (0+255),b
  5012  001460                     l9752:
  5013                           
  5014                           ; BSR set to: 1
  5015                           ;main.c: 603:                 miniTick++;
  5016  001460  4B72               	infsnz	main@miniTick& (0+255),f,b
  5017  001462  2B73               	incf	(main@miniTick+1)& (0+255),f,b
  5018                           
  5019                           ; BSR set to: 1
  5020                           ;main.c: 604:                 _delay((unsigned long)((1)*(10000000/4000.0)));
  5021  001464  0E04               	movlw	4
  5022  001466  6E64               	movwf	??_main& (0+255),c
  5023  001468  0E3E               	movlw	62
  5024  00146A                     u12477:
  5025  00146A  2EE8               	decfsz	wreg,f,c
  5026  00146C  D7FE               	bra	u12477
  5027  00146E  2E64               	decfsz	??_main& (0+255),f,c
  5028  001470  D7FC               	bra	u12477
  5029  001472                     l9756:
  5030                           
  5031                           ;main.c: 553:             while(!exit_key) {
  5032  001472  0101               	movlb	1	; () banked
  5033  001474  510C               	movf	_exit_key& (0+255),w,b	;volatile
  5034  001476  B4D8               	btfsc	status,2,c
  5035  001478  D6DB               	goto	l9674
  5036                           
  5037                           ; BSR set to: 1
  5038                           ;main.c: 609:             key_was_pressed = 0;
  5039  00147A  0E00               	movlw	0
  5040  00147C  6F0E               	movwf	_key_was_pressed& (0+255),b	;volatile
  5041                           
  5042                           ;main.c: 610:             exit_key = 0;
  5043  00147E  0E00               	movlw	0
  5044  001480  6F0C               	movwf	_exit_key& (0+255),b	;volatile
  5045  001482                     l9760:
  5046                           
  5047                           ; BSR set to: 1
  5048                           ;main.c: 614:         if (tick == 2000) {
  5049  001482  0ED0               	movlw	208
  5050  001484  1974               	xorwf	main@tick& (0+255),w,b
  5051  001486  E11D               	bnz	l9770
  5052  001488  0E07               	movlw	7
  5053  00148A  1975               	xorwf	(main@tick+1)& (0+255),w,b
  5054  00148C  A4D8               	btfss	status,2,c
  5055  00148E  D019               	goto	l9770
  5056                           
  5057                           ; BSR set to: 1
  5058                           ;main.c: 615:             clear = 1;
  5059  001490  0E00               	movlw	0
  5060  001492  6F93               	movwf	(main@clear+1)& (0+255),b
  5061  001494  0E01               	movlw	1
  5062  001496  6F92               	movwf	main@clear& (0+255),b
  5063                           
  5064                           ; BSR set to: 1
  5065                           ;main.c: 616:             state++;
  5066  001498  4B90               	infsnz	main@state& (0+255),f,b
  5067  00149A  2B91               	incf	(main@state+1)& (0+255),f,b
  5068                           
  5069                           ; BSR set to: 1
  5070                           ;main.c: 617:             state = state % 5;
  5071  00149C  C190  F00B         	movff	main@state,___awmod@dividend
  5072  0014A0  C191  F00C         	movff	main@state+1,___awmod@dividend+1
  5073  0014A4  0E00               	movlw	0
  5074  0014A6  6E0E               	movwf	___awmod@divisor+1,c
  5075  0014A8  0E05               	movlw	5
  5076  0014AA  6E0D               	movwf	___awmod@divisor,c
  5077  0014AC  EC00  F022         	call	___awmod	;wreg free
  5078  0014B0  C00B  F190         	movff	?___awmod,main@state
  5079  0014B4  C00C  F191         	movff	?___awmod+1,main@state+1
  5080                           
  5081                           ;main.c: 618:             tick = 0;
  5082  0014B8  0E00               	movlw	0
  5083  0014BA  0101               	movlb	1	; () banked
  5084  0014BC  6F75               	movwf	(main@tick+1)& (0+255),b
  5085  0014BE  0E00               	movlw	0
  5086  0014C0  6F74               	movwf	main@tick& (0+255),b
  5087  0014C2                     l9770:
  5088                           
  5089                           ; BSR set to: 1
  5090                           ;main.c: 621:         tick++;
  5091  0014C2  4B74               	infsnz	main@tick& (0+255),f,b
  5092  0014C4  2B75               	incf	(main@tick+1)& (0+255),f,b
  5093                           
  5094                           ; BSR set to: 1
  5095                           ;main.c: 622:         _delay((unsigned long)((1)*(10000000/4000.0)));
  5096  0014C6  0E04               	movlw	4
  5097  0014C8  6E64               	movwf	??_main& (0+255),c
  5098  0014CA  0E3E               	movlw	62
  5099  0014CC                     u12487:
  5100  0014CC  2EE8               	decfsz	wreg,f,c
  5101  0014CE  D7FE               	bra	u12487
  5102  0014D0  2E64               	decfsz	??_main& (0+255),f,c
  5103  0014D2  D7FC               	bra	u12487
  5104  0014D4  D536               	goto	l9542
  5105  0014D6                     __end_of_main:
  5106                           	opt callstack 0
  5107                           
  5108 ;; *************** function _right *****************
  5109 ;; Defined at:
  5110 ;;		line 651 in file "main.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;Total ram usage:        1 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    1
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text1
  5139  004ACC                     __ptext1:
  5140                           	opt callstack 0
  5141  004ACC                     _right:
  5142                           	opt callstack 29
  5143                           
  5144                           ;main.c: 653:     LATBbits.LATB3 = 1 ;
  5145                           
  5146                           ;incstack = 0
  5147  004ACC  868A               	bsf	3978,3,c	;volatile
  5148                           
  5149                           ;main.c: 654:     _delay((unsigned long)((1750)*(10000000/4000000.0)));
  5150  004ACE  0E06               	movlw	6
  5151  004AD0  6E0B               	movwf	??_right& (0+255),c
  5152  004AD2  0EAD               	movlw	173
  5153  004AD4                     u12497:
  5154  004AD4  2EE8               	decfsz	wreg,f,c
  5155  004AD6  D7FE               	bra	u12497
  5156  004AD8  2E0B               	decfsz	??_right& (0+255),f,c
  5157  004ADA  D7FC               	bra	u12497
  5158  004ADC  D000               	nop2	
  5159                           
  5160                           ;main.c: 655:     LATBbits.LATB3 = 0 ;
  5161  004ADE  968A               	bcf	3978,3,c	;volatile
  5162                           
  5163                           ;main.c: 656:     _delay((unsigned long)((1000)*(10000000/4000000.0)));
  5164  004AE0  0E04               	movlw	4
  5165  004AE2  6E0B               	movwf	??_right& (0+255),c
  5166  004AE4  0E3E               	movlw	62
  5167  004AE6                     u12507:
  5168  004AE6  2EE8               	decfsz	wreg,f,c
  5169  004AE8  D7FE               	bra	u12507
  5170  004AEA  2E0B               	decfsz	??_right& (0+255),f,c
  5171  004AEC  D7FC               	bra	u12507
  5172  004AEE  0012               	return		;funcret
  5173  004AF0                     __end_of_right:
  5174                           	opt callstack 0
  5175                           
  5176 ;; *************** function _readADC *****************
  5177 ;; Defined at:
  5178 ;;		line 755 in file "main.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  channel         1    wreg     unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  channel         1   61[COMRAM] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  4   55[COMRAM] float 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;Total ram usage:        7 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    2
  5199 ;; This function calls:
  5200 ;;		___fldiv
  5201 ;;		___wmul
  5202 ;;		___xxtofl
  5203 ;; This function is called by:
  5204 ;;		_main
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text2
  5209  004168                     __ptext2:
  5210                           	opt callstack 0
  5211  004168                     _readADC:
  5212                           	opt callstack 28
  5213                           
  5214                           ;incstack = 0
  5215                           ;readADC@channel stored from wreg
  5216  004168  6E3E               	movwf	readADC@channel,c
  5217                           
  5218                           ;main.c: 756:     ADCON0 = (channel & 0x0F) << 2;
  5219  00416A  C03E  F03C         	movff	readADC@channel,??_readADC
  5220  00416E  0E0F               	movlw	15
  5221  004170  163C               	andwf	??_readADC,f,c
  5222  004172  90D8               	bcf	status,0,c
  5223  004174  363C               	rlcf	??_readADC,f,c
  5224  004176  90D8               	bcf	status,0,c
  5225  004178  343C               	rlcf	??_readADC,w,c
  5226  00417A  6EC2               	movwf	4034,c	;volatile
  5227                           
  5228                           ;main.c: 757:     ADON = 1;
  5229  00417C  80C2               	bsf	4034,0,c	;volatile
  5230                           
  5231                           ;main.c: 758:     ADCON0bits.GO = 1;
  5232  00417E  82C2               	bsf	4034,1,c	;volatile
  5233  004180                     l335:
  5234                           
  5235                           ;main.c: 759:     while(ADCON0bits.GO_NOT_DONE){
  5236  004180  B2C2               	btfsc	4034,1,c	;volatile
  5237  004182  D7FE               	goto	l335
  5238                           
  5239                           ;main.c: 762:     return ((ADRESH << 8) | ADRESL) *5/1023.0;
  5240  004184  50C3               	movf	4035,w,c	;volatile
  5241  004186  CFC4 F03C          	movff	4036,??_readADC	;volatile
  5242  00418A  6A3D               	clrf	(??_readADC+1)& (0+255),c
  5243  00418C  C03C  F03D         	movff	??_readADC,??_readADC+1
  5244  004190  6A3C               	clrf	??_readADC,c
  5245  004192  103C               	iorwf	??_readADC,w,c
  5246  004194  6E0B               	movwf	___wmul@multiplier,c
  5247  004196  503D               	movf	??_readADC+1,w,c
  5248  004198  6E0C               	movwf	___wmul@multiplier+1,c
  5249  00419A  0E00               	movlw	0
  5250  00419C  6E0E               	movwf	___wmul@multiplicand+1,c
  5251  00419E  0E05               	movlw	5
  5252  0041A0  6E0D               	movwf	___wmul@multiplicand,c
  5253  0041A2  EC53  F025         	call	___wmul	;wreg free
  5254  0041A6  C00B  F011         	movff	?___wmul,___xxtofl@val
  5255  0041AA  C00C  F012         	movff	?___wmul+1,___xxtofl@val+1
  5256  0041AE  0E00               	movlw	0
  5257  0041B0  BE12               	btfsc	___xxtofl@val+1,7,c
  5258  0041B2  0EFF               	movlw	-1
  5259  0041B4  6E13               	movwf	___xxtofl@val+2,c
  5260  0041B6  6E14               	movwf	___xxtofl@val+3,c
  5261  0041B8  0E01               	movlw	1
  5262  0041BA  ECA4  F01C         	call	___xxtofl
  5263  0041BE  C011  F01F         	movff	?___xxtofl,___fldiv@b
  5264  0041C2  C012  F020         	movff	?___xxtofl+1,___fldiv@b+1
  5265  0041C6  C013  F021         	movff	?___xxtofl+2,___fldiv@b+2
  5266  0041CA  C014  F022         	movff	?___xxtofl+3,___fldiv@b+3
  5267  0041CE  0E00               	movlw	0
  5268  0041D0  6E23               	movwf	___fldiv@a,c
  5269  0041D2  0EC0               	movlw	192
  5270  0041D4  6E24               	movwf	___fldiv@a+1,c
  5271  0041D6  0E7F               	movlw	127
  5272  0041D8  6E25               	movwf	___fldiv@a+2,c
  5273  0041DA  0E44               	movlw	68
  5274  0041DC  6E26               	movwf	___fldiv@a+3,c
  5275  0041DE  EC0D  F016         	call	___fldiv	;wreg free
  5276  0041E2  C01F  F038         	movff	?___fldiv,?_readADC
  5277  0041E6  C020  F039         	movff	?___fldiv+1,?_readADC+1
  5278  0041EA  C021  F03A         	movff	?___fldiv+2,?_readADC+2
  5279  0041EE  C022  F03B         	movff	?___fldiv+3,?_readADC+3
  5280  0041F2  0012               	return		;funcret
  5281  0041F4                     __end_of_readADC:
  5282                           	opt callstack 0
  5283                           
  5284 ;; *************** function ___xxtofl *****************
  5285 ;; Defined at:
  5286 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  sign            1    wreg     unsigned char 
  5289 ;;  val             4   16[COMRAM] long 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  sign            1   24[COMRAM] unsigned char 
  5292 ;;  arg             4   26[COMRAM] unsigned long 
  5293 ;;  exp             1   25[COMRAM] unsigned char 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  4   16[COMRAM] unsigned char 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;Total ram usage:       14 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    1
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_main
  5314 ;;		_readADC
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text3
  5319  003948                     __ptext3:
  5320                           	opt callstack 0
  5321  003948                     ___xxtofl:
  5322                           	opt callstack 28
  5323                           
  5324                           ;incstack = 0
  5325                           ;___xxtofl@sign stored from wreg
  5326  003948  6E19               	movwf	___xxtofl@sign,c
  5327  00394A  5019               	movf	___xxtofl@sign,w,c
  5328  00394C  A4D8               	btfss	status,2,c
  5329  00394E  AE14               	btfss	___xxtofl@val+3,7,c
  5330  003950  D01A               	goto	l1356
  5331  003952  C011  F015         	movff	___xxtofl@val,??___xxtofl
  5332  003956  C012  F016         	movff	___xxtofl@val+1,??___xxtofl+1
  5333  00395A  C013  F017         	movff	___xxtofl@val+2,??___xxtofl+2
  5334  00395E  C014  F018         	movff	___xxtofl@val+3,??___xxtofl+3
  5335  003962  1E15               	comf	??___xxtofl,f,c
  5336  003964  1E16               	comf	??___xxtofl+1,f,c
  5337  003966  1E17               	comf	??___xxtofl+2,f,c
  5338  003968  1E18               	comf	??___xxtofl+3,f,c
  5339  00396A  2A15               	incf	??___xxtofl,f,c
  5340  00396C  0E00               	movlw	0
  5341  00396E  2216               	addwfc	??___xxtofl+1,f,c
  5342  003970  2217               	addwfc	??___xxtofl+2,f,c
  5343  003972  2218               	addwfc	??___xxtofl+3,f,c
  5344  003974  C015  F01B         	movff	??___xxtofl,___xxtofl@arg
  5345  003978  C016  F01C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5346  00397C  C017  F01D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5347  003980  C018  F01E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5348  003984  D008               	goto	l6076
  5349  003986                     l1356:
  5350  003986  C011  F01B         	movff	___xxtofl@val,___xxtofl@arg
  5351  00398A  C012  F01C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5352  00398E  C013  F01D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5353  003992  C014  F01E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5354  003996                     l6076:
  5355  003996  5011               	movf	___xxtofl@val,w,c
  5356  003998  1012               	iorwf	___xxtofl@val+1,w,c
  5357  00399A  1013               	iorwf	___xxtofl@val+2,w,c
  5358  00399C  1014               	iorwf	___xxtofl@val+3,w,c
  5359  00399E  A4D8               	btfss	status,2,c
  5360  0039A0  D009               	goto	l6082
  5361  0039A2  0E00               	movlw	0
  5362  0039A4  6E11               	movwf	?___xxtofl,c
  5363  0039A6  0E00               	movlw	0
  5364  0039A8  6E12               	movwf	?___xxtofl+1,c
  5365  0039AA  0E00               	movlw	0
  5366  0039AC  6E13               	movwf	?___xxtofl+2,c
  5367  0039AE  0E00               	movlw	0
  5368  0039B0  6E14               	movwf	?___xxtofl+3,c
  5369  0039B2  0012               	return	
  5370  0039B4                     l6082:
  5371  0039B4  0E96               	movlw	150
  5372  0039B6  6E1A               	movwf	___xxtofl@exp,c
  5373  0039B8  D006               	goto	l6086
  5374  0039BA                     l6084:
  5375  0039BA  2A1A               	incf	___xxtofl@exp,f,c
  5376  0039BC  90D8               	bcf	status,0,c
  5377  0039BE  321E               	rrcf	___xxtofl@arg+3,f,c
  5378  0039C0  321D               	rrcf	___xxtofl@arg+2,f,c
  5379  0039C2  321C               	rrcf	___xxtofl@arg+1,f,c
  5380  0039C4  321B               	rrcf	___xxtofl@arg,f,c
  5381  0039C6                     l6086:
  5382  0039C6  0E00               	movlw	0
  5383  0039C8  141B               	andwf	___xxtofl@arg,w,c
  5384  0039CA  6E15               	movwf	??___xxtofl& (0+255),c
  5385  0039CC  0E00               	movlw	0
  5386  0039CE  141C               	andwf	___xxtofl@arg+1,w,c
  5387  0039D0  6E16               	movwf	(??___xxtofl+1)& (0+255),c
  5388  0039D2  0E00               	movlw	0
  5389  0039D4  141D               	andwf	___xxtofl@arg+2,w,c
  5390  0039D6  6E17               	movwf	(??___xxtofl+2)& (0+255),c
  5391  0039D8  0EFE               	movlw	254
  5392  0039DA  141E               	andwf	___xxtofl@arg+3,w,c
  5393  0039DC  6E18               	movwf	(??___xxtofl+3)& (0+255),c
  5394  0039DE  5015               	movf	??___xxtofl,w,c
  5395  0039E0  1016               	iorwf	??___xxtofl+1,w,c
  5396  0039E2  1017               	iorwf	??___xxtofl+2,w,c
  5397  0039E4  1018               	iorwf	??___xxtofl+3,w,c
  5398  0039E6  B4D8               	btfsc	status,2,c
  5399  0039E8  D00D               	goto	l1363
  5400  0039EA  D7E7               	goto	l6084
  5401  0039EC                     l6088:
  5402  0039EC  2A1A               	incf	___xxtofl@exp,f,c
  5403  0039EE  0E01               	movlw	1
  5404  0039F0  261B               	addwf	___xxtofl@arg,f,c
  5405  0039F2  0E00               	movlw	0
  5406  0039F4  221C               	addwfc	___xxtofl@arg+1,f,c
  5407  0039F6  221D               	addwfc	___xxtofl@arg+2,f,c
  5408  0039F8  221E               	addwfc	___xxtofl@arg+3,f,c
  5409  0039FA  90D8               	bcf	status,0,c
  5410  0039FC  321E               	rrcf	___xxtofl@arg+3,f,c
  5411  0039FE  321D               	rrcf	___xxtofl@arg+2,f,c
  5412  003A00  321C               	rrcf	___xxtofl@arg+1,f,c
  5413  003A02  321B               	rrcf	___xxtofl@arg,f,c
  5414  003A04                     l1363:
  5415  003A04  0E00               	movlw	0
  5416  003A06  141B               	andwf	___xxtofl@arg,w,c
  5417  003A08  6E15               	movwf	??___xxtofl& (0+255),c
  5418  003A0A  0E00               	movlw	0
  5419  003A0C  141C               	andwf	___xxtofl@arg+1,w,c
  5420  003A0E  6E16               	movwf	(??___xxtofl+1)& (0+255),c
  5421  003A10  0E00               	movlw	0
  5422  003A12  141D               	andwf	___xxtofl@arg+2,w,c
  5423  003A14  6E17               	movwf	(??___xxtofl+2)& (0+255),c
  5424  003A16  0EFF               	movlw	255
  5425  003A18  141E               	andwf	___xxtofl@arg+3,w,c
  5426  003A1A  6E18               	movwf	(??___xxtofl+3)& (0+255),c
  5427  003A1C  5015               	movf	??___xxtofl,w,c
  5428  003A1E  1016               	iorwf	??___xxtofl+1,w,c
  5429  003A20  1017               	iorwf	??___xxtofl+2,w,c
  5430  003A22  1018               	iorwf	??___xxtofl+3,w,c
  5431  003A24  B4D8               	btfsc	status,2,c
  5432  003A26  D007               	goto	l6096
  5433  003A28  D7E1               	goto	l6088
  5434  003A2A                     l6094:
  5435  003A2A  061A               	decf	___xxtofl@exp,f,c
  5436  003A2C  90D8               	bcf	status,0,c
  5437  003A2E  361B               	rlcf	___xxtofl@arg,f,c
  5438  003A30  361C               	rlcf	___xxtofl@arg+1,f,c
  5439  003A32  361D               	rlcf	___xxtofl@arg+2,f,c
  5440  003A34  361E               	rlcf	___xxtofl@arg+3,f,c
  5441  003A36                     l6096:
  5442  003A36  BE1D               	btfsc	___xxtofl@arg+2,7,c
  5443  003A38  D003               	goto	u7240
  5444  003A3A  0E02               	movlw	2
  5445  003A3C  601A               	cpfslt	___xxtofl@exp,c
  5446  003A3E  D7F5               	goto	l6094
  5447  003A40                     u7240:
  5448  003A40  A01A               	btfss	___xxtofl@exp,0,c
  5449  003A42  9E1D               	bcf	___xxtofl@arg+2,7,c
  5450  003A44  90D8               	bcf	status,0,c
  5451  003A46  321A               	rrcf	___xxtofl@exp,f,c
  5452  003A48  C01A  F015         	movff	___xxtofl@exp,??___xxtofl
  5453  003A4C  6A16               	clrf	(??___xxtofl+1)& (0+255),c
  5454  003A4E  6A17               	clrf	(??___xxtofl+2)& (0+255),c
  5455  003A50  6A18               	clrf	(??___xxtofl+3)& (0+255),c
  5456  003A52  C015  F018         	movff	??___xxtofl,??___xxtofl+3
  5457  003A56  6A17               	clrf	??___xxtofl+2,c
  5458  003A58  6A16               	clrf	??___xxtofl+1,c
  5459  003A5A  6A15               	clrf	??___xxtofl,c
  5460  003A5C  5015               	movf	??___xxtofl,w,c
  5461  003A5E  121B               	iorwf	___xxtofl@arg,f,c
  5462  003A60  5016               	movf	??___xxtofl+1,w,c
  5463  003A62  121C               	iorwf	___xxtofl@arg+1,f,c
  5464  003A64  5017               	movf	??___xxtofl+2,w,c
  5465  003A66  121D               	iorwf	___xxtofl@arg+2,f,c
  5466  003A68  5018               	movf	??___xxtofl+3,w,c
  5467  003A6A  121E               	iorwf	___xxtofl@arg+3,f,c
  5468  003A6C  5019               	movf	___xxtofl@sign,w,c
  5469  003A6E  A4D8               	btfss	status,2,c
  5470  003A70  AE14               	btfss	___xxtofl@val+3,7,c
  5471  003A72  D001               	goto	l6112
  5472  003A74  8E1E               	bsf	___xxtofl@arg+3,7,c
  5473  003A76                     l6112:
  5474  003A76  C01B  F011         	movff	___xxtofl@arg,?___xxtofl
  5475  003A7A  C01C  F012         	movff	___xxtofl@arg+1,?___xxtofl+1
  5476  003A7E  C01D  F013         	movff	___xxtofl@arg+2,?___xxtofl+2
  5477  003A82  C01E  F014         	movff	___xxtofl@arg+3,?___xxtofl+3
  5478  003A86  0012               	return		;funcret
  5479  003A88                     __end_of___xxtofl:
  5480                           	opt callstack 0
  5481                           
  5482 ;; *************** function _printf *****************
  5483 ;; Defined at:
  5484 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  fmt             2  100[BANK0 ] PTR const unsigned char 
  5487 ;;		 -> STR_51(10), STR_50(14), STR_49(11), STR_48(12), 
  5488 ;;		 -> STR_47(10), STR_46(15), STR_45(14), STR_44(12), 
  5489 ;;		 -> STR_43(10), STR_42(15), STR_41(12), STR_40(8), 
  5490 ;;		 -> STR_39(13), STR_38(7), STR_37(14), STR_36(9), 
  5491 ;;		 -> STR_35(7), STR_34(14), STR_33(15), STR_32(12), 
  5492 ;;		 -> STR_31(16), STR_30(9), STR_29(9), STR_28(11), 
  5493 ;;		 -> STR_27(13), STR_26(15), STR_25(11), STR_24(15), 
  5494 ;;		 -> STR_23(12), STR_22(15), STR_21(13), STR_20(11), 
  5495 ;;		 -> STR_19(10), STR_18(10), STR_17(10), STR_16(11), 
  5496 ;;		 -> STR_15(11), STR_14(11), STR_13(10), STR_12(9), 
  5497 ;;		 -> STR_11(8), STR_10(11), STR_9(16), STR_8(5), 
  5498 ;;		 -> STR_7(16), STR_6(7), STR_5(11), STR_4(11), 
  5499 ;;		 -> STR_3(15), STR_2(15), STR_1(11), 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  ap              2  110[BANK0 ] PTR void [1]
  5502 ;;		 -> ?_printf(2), 
  5503 ;;  ret             2    0        int 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  2  100[BANK0 ] int 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5513 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;Total ram usage:       12 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:   11
  5520 ;; This function calls:
  5521 ;;		_vfprintf
  5522 ;; This function is called by:
  5523 ;;		_main
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text4
  5528  004A7E                     __ptext4:
  5529                           	opt callstack 0
  5530  004A7E                     _printf:
  5531                           	opt callstack 19
  5532                           
  5533                           ;incstack = 0
  5534  004A7E  0EE6               	movlw	low (?_printf+2)
  5535  004A80  0100               	movlb	0	; () banked
  5536  004A82  6FEE               	movwf	printf@ap& (0+255),b
  5537  004A84  0E00               	movlw	high (?_printf+2)
  5538  004A86  6FEF               	movwf	(printf@ap+1)& (0+255),b
  5539                           
  5540                           ; BSR set to: 0
  5541  004A88  0E00               	movlw	0
  5542  004A8A  6FDE               	movwf	vfprintf@fp& (0+255),b
  5543  004A8C  0E00               	movlw	0
  5544  004A8E  6FDF               	movwf	(vfprintf@fp+1)& (0+255),b
  5545  004A90  C0E4  F0E0         	movff	printf@fmt,vfprintf@fmt
  5546  004A94  C0E5  F0E1         	movff	printf@fmt+1,vfprintf@fmt+1
  5547  004A98  0EEE               	movlw	low printf@ap
  5548  004A9A  6FE2               	movwf	vfprintf@ap& (0+255),b
  5549  004A9C  0E00               	movlw	high printf@ap
  5550  004A9E  6FE3               	movwf	(vfprintf@ap+1)& (0+255),b
  5551  004AA0  ECD1  F022         	call	_vfprintf	;wreg free
  5552  004AA4  0012               	return		;funcret
  5553  004AA6                     __end_of_printf:
  5554                           	opt callstack 0
  5555                           
  5556 ;; *************** function _vfprintf *****************
  5557 ;; Defined at:
  5558 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  fp              2   94[BANK0 ] PTR struct _IO_FILE
  5561 ;;		 -> NULL(0), 
  5562 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  5563 ;;		 -> STR_51(10), STR_50(14), STR_49(11), STR_48(12), 
  5564 ;;		 -> STR_47(10), STR_46(15), STR_45(14), STR_44(12), 
  5565 ;;		 -> STR_43(10), STR_42(15), STR_41(12), STR_40(8), 
  5566 ;;		 -> STR_39(13), STR_38(7), STR_37(14), STR_36(9), 
  5567 ;;		 -> STR_35(7), STR_34(14), STR_33(15), STR_32(12), 
  5568 ;;		 -> STR_31(16), STR_30(9), STR_29(9), STR_28(11), 
  5569 ;;		 -> STR_27(13), STR_26(15), STR_25(11), STR_24(15), 
  5570 ;;		 -> STR_23(12), STR_22(15), STR_21(13), STR_20(11), 
  5571 ;;		 -> STR_19(10), STR_18(10), STR_17(10), STR_16(11), 
  5572 ;;		 -> STR_15(11), STR_14(11), STR_13(10), STR_12(9), 
  5573 ;;		 -> STR_11(8), STR_10(11), STR_9(16), STR_8(5), 
  5574 ;;		 -> STR_7(16), STR_6(7), STR_5(11), STR_4(11), 
  5575 ;;		 -> STR_3(15), STR_2(15), STR_1(11), 
  5576 ;;  ap              2   98[BANK0 ] PTR PTR void 
  5577 ;;		 -> printf@ap(2), 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  cfmt            2   97[COMRAM] PTR unsigned char 
  5580 ;;		 -> STR_51(10), STR_50(14), STR_49(11), STR_48(12), 
  5581 ;;		 -> STR_47(10), STR_46(15), STR_45(14), STR_44(12), 
  5582 ;;		 -> STR_43(10), STR_42(15), STR_41(12), STR_40(8), 
  5583 ;;		 -> STR_39(13), STR_38(7), STR_37(14), STR_36(9), 
  5584 ;;		 -> STR_35(7), STR_34(14), STR_33(15), STR_32(12), 
  5585 ;;		 -> STR_31(16), STR_30(9), STR_29(9), STR_28(11), 
  5586 ;;		 -> STR_27(13), STR_26(15), STR_25(11), STR_24(15), 
  5587 ;;		 -> STR_23(12), STR_22(15), STR_21(13), STR_20(11), 
  5588 ;;		 -> STR_19(10), STR_18(10), STR_17(10), STR_16(11), 
  5589 ;;		 -> STR_15(11), STR_14(11), STR_13(10), STR_12(9), 
  5590 ;;		 -> STR_11(8), STR_10(11), STR_9(16), STR_8(5), 
  5591 ;;		 -> STR_7(16), STR_6(7), STR_5(11), STR_4(11), 
  5592 ;;		 -> STR_3(15), STR_2(15), STR_1(11), 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  2   94[BANK0 ] int 
  5595 ;; Registers used:
  5596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5602 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;Total ram usage:        8 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; Hardware stack levels required when called:   10
  5609 ;; This function calls:
  5610 ;;		_vfpfcnvrt
  5611 ;; This function is called by:
  5612 ;;		_printf
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text5
  5617  0045A2                     __ptext5:
  5618                           	opt callstack 0
  5619  0045A2                     _vfprintf:
  5620                           	opt callstack 19
  5621                           
  5622                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  5623                           
  5624                           ;incstack = 0
  5625  0045A2  C0E0  F062         	movff	vfprintf@fmt,vfprintf@cfmt
  5626  0045A6  C0E1  F063         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5627                           
  5628                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5629  0045AA  0E00               	movlw	0
  5630  0045AC  0100               	movlb	0	; () banked
  5631  0045AE  6FF1               	movwf	(_nout+1)& (0+255),b
  5632  0045B0  0E00               	movlw	0
  5633  0045B2  6FF0               	movwf	_nout& (0+255),b
  5634                           
  5635                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  5636  0045B4  D013               	goto	l8868
  5637  0045B6                     l8866:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  5641  0045B6  C0DE  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  5642  0045BA  C0DF  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5643  0045BE  0E62               	movlw	low vfprintf@cfmt
  5644  0045C0  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  5645  0045C2  0E00               	movlw	high vfprintf@cfmt
  5646  0045C4  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  5647  0045C6  C0E2  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  5648  0045CA  C0E3  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5649  0045CE  EC52  F00F         	call	_vfpfcnvrt	;wreg free
  5650  0045D2  0100               	movlb	0	; () banked
  5651  0045D4  51B8               	movf	?_vfpfcnvrt& (0+255),w,b
  5652  0045D6  27F0               	addwf	_nout& (0+255),f,b
  5653  0045D8  51B9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  5654  0045DA  23F1               	addwfc	(_nout+1)& (0+255),f,b
  5655  0045DC                     l8868:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  5659  0045DC  C062  FFF6         	movff	vfprintf@cfmt,tblptrl
  5660  0045E0  C063  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5661  0045E4                     	if	0	;tblptru may be non-zero
  5662  0045E4                     	endif
  5663  0045E4                     	if	0	;tblptru may be non-zero
  5664  0045E4                     	endif
  5665  0045E4  0008               	tblrd		*
  5666  0045E6  50F5               	movf	tablat,w,c
  5667  0045E8  0900               	iorlw	0
  5668  0045EA  A4D8               	btfss	status,2,c
  5669  0045EC  D7E4               	goto	l8866
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  5673  0045EE  C0F0  F0DE         	movff	_nout,?_vfprintf
  5674  0045F2  C0F1  F0DF         	movff	_nout+1,?_vfprintf+1
  5675                           
  5676                           ; BSR set to: 0
  5677  0045F6  0012               	return		;funcret
  5678  0045F8                     __end_of_vfprintf:
  5679                           	opt callstack 0
  5680                           
  5681 ;; *************** function _vfpfcnvrt *****************
  5682 ;; Defined at:
  5683 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  5686 ;;		 -> NULL(0), 
  5687 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  5688 ;;		 -> vfprintf@cfmt(2), 
  5689 ;;  ap              2   60[BANK0 ] PTR PTR void 
  5690 ;;		 -> printf@ap(2), 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  llu             8   70[BANK0 ] unsigned long long 
  5693 ;;  ll              8   62[BANK0 ] long long 
  5694 ;;  f               4   86[BANK0 ] long long 
  5695 ;;  ct              3   90[BANK0 ] unsigned char [3]
  5696 ;;  vp              3    0        PTR void 
  5697 ;;  cp              3    0        PTR unsigned char 
  5698 ;;  done            2   78[BANK0 ] int 
  5699 ;;  i               2    0        int 
  5700 ;;  c               1   93[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2   56[BANK0 ] int 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5710 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Totals:         4      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;Total ram usage:       42 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    9
  5717 ;; This function calls:
  5718 ;;		_atoi
  5719 ;;		_ctoa
  5720 ;;		_dtoa
  5721 ;;		_efgtoa
  5722 ;;		_fputc
  5723 ;;		_isdigit
  5724 ;;		_isupper
  5725 ;;		_strncmp
  5726 ;;		_tolower
  5727 ;;		_xtoa
  5728 ;; This function is called by:
  5729 ;;		_vfprintf
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text6
  5734  001EA4                     __ptext6:
  5735                           	opt callstack 0
  5736  001EA4                     _vfpfcnvrt:
  5737                           	opt callstack 19
  5738                           
  5739                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;incstack = 0
  5743  001EA4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5744  001EA8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5745  001EAC  CFDE FFF6          	movff	postinc2,tblptrl
  5746  001EB0  CFDD FFF7          	movff	postdec2,tblptrh
  5747  001EB4                     	if	0	;tblptru may be non-zero
  5748  001EB4                     	endif
  5749  001EB4                     	if	0	;tblptru may be non-zero
  5750  001EB4                     	endif
  5751  001EB4  0008               	tblrd		*
  5752  001EB6  50F5               	movf	tablat,w,c
  5753  001EB8  0A25               	xorlw	37
  5754  001EBA  A4D8               	btfss	status,2,c
  5755  001EBC  D365               	goto	l8840
  5756                           
  5757                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5758  001EBE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5759  001EC2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5760  001EC6  2ADE               	incf	postinc2,f,c
  5761  001EC8  0E00               	movlw	0
  5762  001ECA  22DD               	addwfc	postdec2,f,c
  5763                           
  5764                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  5765  001ECC  0E00               	movlw	0
  5766  001ECE  6E6F               	movwf	_width+1,c
  5767  001ED0  0E00               	movlw	0
  5768  001ED2  6E6E               	movwf	_width,c
  5769  001ED4  C06E  F072         	movff	_width,_flags
  5770  001ED8  C06F  F073         	movff	_width+1,_flags+1
  5771                           
  5772                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  5773  001EDC  6870               	setf	_prec,c
  5774  001EDE  6871               	setf	_prec+1,c
  5775                           
  5776                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
  5777  001EE0  0E00               	movlw	0
  5778  001EE2  0100               	movlb	0	; () banked
  5779  001EE4  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5780  001EE6  0E00               	movlw	0
  5781  001EE8  D014               	goto	L2
  5782  001EEA                     l8686:
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
  5786  001EEA  8072               	bsf	_flags,0,c
  5787  001EEC                     l8688:
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                
      +                               ++*fmt;
  5791  001EEC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5792  001EF0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5793  001EF4  2ADE               	incf	postinc2,f,c
  5794  001EF6  0E00               	movlw	0
  5795  001EF8  22DD               	addwfc	postdec2,f,c
  5796                           
  5797                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                
      +                               break;
  5798  001EFA  D02E               	goto	l8712
  5799  001EFC                     l8690:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
  5803  001EFC  8272               	bsf	_flags,1,c
  5804  001EFE  D7F6               	goto	l8688
  5805  001F00                     l8694:
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
  5809  001F00  8472               	bsf	_flags,2,c
  5810  001F02  D7F4               	goto	l8688
  5811  001F04                     l8698:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
  5815  001F04  8672               	bsf	_flags,3,c
  5816  001F06  D7F2               	goto	l8688
  5817  001F08                     l8702:
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
  5821  001F08  8872               	bsf	_flags,4,c
  5822  001F0A  D7F0               	goto	l8688
  5823  001F0C                     l8706:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
  5827  001F0C  0E00               	movlw	0
  5828  001F0E  6FCF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5829  001F10  0E01               	movlw	1
  5830  001F12                     L2:
  5831  001F12  6FCE               	movwf	vfpfcnvrt@done& (0+255),b
  5832                           
  5833                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
  5834  001F14  D021               	goto	l8712
  5835  001F16                     l8710:
  5836                           
  5837                           ; BSR set to: 0
  5838  001F16  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5839  001F1A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5840  001F1E  CFDE FFF6          	movff	postinc2,tblptrl
  5841  001F22  CFDD FFF7          	movff	postdec2,tblptrh
  5842  001F26                     	if	0	;tblptru may be non-zero
  5843  001F26                     	endif
  5844  001F26                     	if	0	;tblptru may be non-zero
  5845  001F26                     	endif
  5846  001F26  0008               	tblrd		*
  5847  001F28  50F5               	movf	tablat,w,c
  5848  001F2A  6E5E               	movwf	??_vfpfcnvrt& (0+255),c
  5849  001F2C  6A5F               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  5850                           
  5851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5852                           ; Switch size 1, requested type "simple"
  5853                           ; Number of cases is 1, Range of values is 0 to 0
  5854                           ; switch strategies available:
  5855                           ; Name         Instructions Cycles
  5856                           ; simple_byte            4     3 (average)
  5857                           ;	Chosen strategy is simple_byte
  5858  001F2E  505F               	movf	??_vfpfcnvrt+1,w,c
  5859  001F30  0A00               	xorlw	0	; case 0
  5860  001F32  A4D8               	btfss	status,2,c
  5861  001F34  D7EB               	goto	l8706
  5862                           
  5863                           ; BSR set to: 0
  5864                           ; Switch size 1, requested type "simple"
  5865                           ; Number of cases is 5, Range of values is 32 to 48
  5866                           ; switch strategies available:
  5867                           ; Name         Instructions Cycles
  5868                           ; simple_byte           16     9 (average)
  5869                           ;	Chosen strategy is simple_byte
  5870  001F36  505E               	movf	??_vfpfcnvrt,w,c
  5871  001F38  0A20               	xorlw	32	; case 32
  5872  001F3A  B4D8               	btfsc	status,2,c
  5873  001F3C  D7E3               	goto	l8698
  5874  001F3E  0A03               	xorlw	3	; case 35
  5875  001F40  B4D8               	btfsc	status,2,c
  5876  001F42  D7E2               	goto	l8702
  5877  001F44  0A08               	xorlw	8	; case 43
  5878  001F46  B4D8               	btfsc	status,2,c
  5879  001F48  D7DB               	goto	l8694
  5880  001F4A  0A06               	xorlw	6	; case 45
  5881  001F4C  B4D8               	btfsc	status,2,c
  5882  001F4E  D7CD               	goto	l8686
  5883  001F50  0A1D               	xorlw	29	; case 48
  5884  001F52  B4D8               	btfsc	status,2,c
  5885  001F54  D7D3               	goto	l8690
  5886  001F56  D7DA               	goto	l8706
  5887  001F58                     l8712:
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
  5891  001F58  51CE               	movf	vfpfcnvrt@done& (0+255),w,b
  5892  001F5A  11CF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5893  001F5C  B4D8               	btfsc	status,2,c
  5894  001F5E  D7DB               	goto	l8710
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
  5898  001F60  B072               	btfsc	_flags,0,c
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
  5902  001F62  9272               	bcf	_flags,1,c
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
  5906  001F64  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5907  001F68  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5908  001F6C  CFDE FFF6          	movff	postinc2,tblptrl
  5909  001F70  CFDD FFF7          	movff	postdec2,tblptrh
  5910  001F74                     	if	0	;tblptru may be non-zero
  5911  001F74                     	endif
  5912  001F74                     	if	0	;tblptru may be non-zero
  5913  001F74                     	endif
  5914  001F74  0008               	tblrd		*
  5915  001F76  50F5               	movf	tablat,w,c
  5916  001F78  0A2A               	xorlw	42
  5917  001F7A  A4D8               	btfss	status,2,c
  5918  001F7C  D023               	goto	l8724
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
  5922  001F7E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5923  001F82  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5924  001F86  2ADE               	incf	postinc2,f,c
  5925  001F88  0E00               	movlw	0
  5926  001F8A  22DD               	addwfc	postdec2,f,c
  5927                           
  5928                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  5929  001F8C  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5930  001F90  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5931  001F94  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  5932  001F98  0E02               	movlw	2
  5933  001F9A  26DE               	addwf	postinc2,f,c
  5934  001F9C  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  5935  001FA0  0E00               	movlw	0
  5936  001FA2  22DD               	addwfc	postdec2,f,c
  5937  001FA4  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5938  001FA8  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5939  001FAC  CFDE F06E          	movff	postinc2,_width
  5940  001FB0  CFDD F06F          	movff	postdec2,_width+1
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
  5944  001FB4  AE6F               	btfss	_width+1,7,c
  5945  001FB6  D040               	goto	u11020
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
  5949  001FB8  8072               	bsf	_flags,0,c
  5950                           
  5951                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
  5952  001FBA  6C6E               	negf	_width,c
  5953  001FBC  1E6F               	comf	_width+1,f,c
  5954  001FBE  B0D8               	btfsc	status,0,c
  5955  001FC0  2A6F               	incf	_width+1,f,c
  5956  001FC2  D03A               	goto	u11020
  5957  001FC4                     l8724:
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
  5961  001FC4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5962  001FC8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5963  001FCC  CFDE F012          	movff	postinc2,atoi@s
  5964  001FD0  CFDD F013          	movff	postdec2,atoi@s+1
  5965  001FD4  EC44  F01D         	call	_atoi	;wreg free
  5966  001FD8  C012  F06E         	movff	?_atoi,_width
  5967  001FDC  C013  F06F         	movff	?_atoi+1,_width+1
  5968                           
  5969                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5970  001FE0  D007               	goto	l8728
  5971  001FE2                     l8726:
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
  5975  001FE2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5976  001FE6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5977  001FEA  2ADE               	incf	postinc2,f,c
  5978  001FEC  0E00               	movlw	0
  5979  001FEE  22DD               	addwfc	postdec2,f,c
  5980  001FF0                     l8728:
  5981  001FF0  0ED0               	movlw	208
  5982  001FF2  6E5E               	movwf	??_vfpfcnvrt& (0+255),c
  5983  001FF4  0EFF               	movlw	255
  5984  001FF6  6E5F               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  5985  001FF8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5986  001FFC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5987  002000  CFDE FFF6          	movff	postinc2,tblptrl
  5988  002004  CFDD FFF7          	movff	postdec2,tblptrh
  5989  002008                     	if	0	;tblptru may be non-zero
  5990  002008                     	endif
  5991  002008                     	if	0	;tblptru may be non-zero
  5992  002008                     	endif
  5993  002008  0008               	tblrd		*
  5994  00200A  50F5               	movf	tablat,w,c
  5995  00200C  6E60               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  5996  00200E  6A61               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  5997  002010  505E               	movf	??_vfpfcnvrt,w,c
  5998  002012  2660               	addwf	??_vfpfcnvrt+2,f,c
  5999  002014  505F               	movf	??_vfpfcnvrt+1,w,c
  6000  002016  2261               	addwfc	??_vfpfcnvrt+3,f,c
  6001  002018  5061               	movf	??_vfpfcnvrt+3,w,c
  6002  00201A  E106               	bnz	u11000
  6003  00201C  0E0A               	movlw	10
  6004  00201E  5C60               	subwf	??_vfpfcnvrt+2,w,c
  6005  002020  B0D8               	btfsc	status,0,c
  6006  002022  D002               	goto	u11000
  6007  002024  0E01               	movlw	1
  6008  002026  D001               	goto	u11010
  6009  002028                     u11000:
  6010  002028  0E00               	movlw	0
  6011  00202A                     u11010:
  6012  00202A  0100               	movlb	0	; () banked
  6013  00202C  6FD0               	movwf	_vfpfcnvrt$1395& (0+255),b
  6014  00202E  6BD1               	clrf	(_vfpfcnvrt$1395+1)& (0+255),b
  6015                           
  6016                           ; BSR set to: 0
  6017  002030  51D0               	movf	_vfpfcnvrt$1395& (0+255),w,b
  6018  002032  11D1               	iorwf	(_vfpfcnvrt$1395+1)& (0+255),w,b
  6019  002034  A4D8               	btfss	status,2,c
  6020  002036  D7D5               	goto	l8726
  6021  002038                     u11020:
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*f
      +                          mt)[0] == '.') {
  6025  002038  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6026  00203C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6027  002040  CFDE FFF6          	movff	postinc2,tblptrl
  6028  002044  CFDD FFF7          	movff	postdec2,tblptrh
  6029  002048                     	if	0	;tblptru may be non-zero
  6030  002048                     	endif
  6031  002048                     	if	0	;tblptru may be non-zero
  6032  002048                     	endif
  6033  002048  0008               	tblrd		*
  6034  00204A  50F5               	movf	tablat,w,c
  6035  00204C  0A2E               	xorlw	46
  6036  00204E  A4D8               	btfss	status,2,c
  6037  002050  D06E               	goto	u11070
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             pre
      +                          c = 0;
  6041  002052  0E00               	movlw	0
  6042  002054  6E71               	movwf	_prec+1,c
  6043  002056  0E00               	movlw	0
  6044  002058  6E70               	movwf	_prec,c
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*
      +                          fmt;
  6048  00205A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6049  00205E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6050  002062  2ADE               	incf	postinc2,f,c
  6051  002064  0E00               	movlw	0
  6052  002066  22DD               	addwfc	postdec2,f,c
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if 
      +                          ((*fmt)[0] == '*') {
  6056  002068  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6057  00206C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6058  002070  CFDE FFF6          	movff	postinc2,tblptrl
  6059  002074  CFDD FFF7          	movff	postdec2,tblptrh
  6060  002078                     	if	0	;tblptru may be non-zero
  6061  002078                     	endif
  6062  002078                     	if	0	;tblptru may be non-zero
  6063  002078                     	endif
  6064  002078  0008               	tblrd		*
  6065  00207A  50F5               	movf	tablat,w,c
  6066  00207C  0A2A               	xorlw	42
  6067  00207E  A4D8               	btfss	status,2,c
  6068  002080  D01C               	goto	l8744
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                
      +                           ++*fmt;
  6072  002082  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6073  002086  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6074  00208A  2ADE               	incf	postinc2,f,c
  6075  00208C  0E00               	movlw	0
  6076  00208E  22DD               	addwfc	postdec2,f,c
  6077                           
  6078                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6079  002090  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6080  002094  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6081  002098  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  6082  00209C  0E02               	movlw	2
  6083  00209E  26DE               	addwf	postinc2,f,c
  6084  0020A0  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  6085  0020A4  0E00               	movlw	0
  6086  0020A6  22DD               	addwfc	postdec2,f,c
  6087  0020A8  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6088  0020AC  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6089  0020B0  CFDE F070          	movff	postinc2,_prec
  6090  0020B4  CFDD F071          	movff	postdec2,_prec+1
  6091                           
  6092                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } e
      +                          lse {
  6093  0020B8  D03A               	goto	u11070
  6094  0020BA                     l8744:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                
      +                           prec = atoi(*fmt);
  6098  0020BA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6099  0020BE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6100  0020C2  CFDE F012          	movff	postinc2,atoi@s
  6101  0020C6  CFDD F013          	movff	postdec2,atoi@s+1
  6102  0020CA  EC44  F01D         	call	_atoi	;wreg free
  6103  0020CE  C012  F070         	movff	?_atoi,_prec
  6104  0020D2  C013  F071         	movff	?_atoi+1,_prec+1
  6105                           
  6106                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6107  0020D6  D007               	goto	l8748
  6108  0020D8                     l8746:
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                
      +                               ++*fmt;
  6112  0020D8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6113  0020DC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6114  0020E0  2ADE               	incf	postinc2,f,c
  6115  0020E2  0E00               	movlw	0
  6116  0020E4  22DD               	addwfc	postdec2,f,c
  6117  0020E6                     l8748:
  6118  0020E6  0ED0               	movlw	208
  6119  0020E8  6E5E               	movwf	??_vfpfcnvrt& (0+255),c
  6120  0020EA  0EFF               	movlw	255
  6121  0020EC  6E5F               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  6122  0020EE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6123  0020F2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6124  0020F6  CFDE FFF6          	movff	postinc2,tblptrl
  6125  0020FA  CFDD FFF7          	movff	postdec2,tblptrh
  6126  0020FE                     	if	0	;tblptru may be non-zero
  6127  0020FE                     	endif
  6128  0020FE                     	if	0	;tblptru may be non-zero
  6129  0020FE                     	endif
  6130  0020FE  0008               	tblrd		*
  6131  002100  50F5               	movf	tablat,w,c
  6132  002102  6E60               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6133  002104  6A61               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  6134  002106  505E               	movf	??_vfpfcnvrt,w,c
  6135  002108  2660               	addwf	??_vfpfcnvrt+2,f,c
  6136  00210A  505F               	movf	??_vfpfcnvrt+1,w,c
  6137  00210C  2261               	addwfc	??_vfpfcnvrt+3,f,c
  6138  00210E  5061               	movf	??_vfpfcnvrt+3,w,c
  6139  002110  E106               	bnz	u11050
  6140  002112  0E0A               	movlw	10
  6141  002114  5C60               	subwf	??_vfpfcnvrt+2,w,c
  6142  002116  B0D8               	btfsc	status,0,c
  6143  002118  D002               	goto	u11050
  6144  00211A  0E01               	movlw	1
  6145  00211C  D001               	goto	u11060
  6146  00211E                     u11050:
  6147  00211E  0E00               	movlw	0
  6148  002120                     u11060:
  6149  002120  0100               	movlb	0	; () banked
  6150  002122  6FD2               	movwf	_vfpfcnvrt$1396& (0+255),b
  6151  002124  6BD3               	clrf	(_vfpfcnvrt$1396+1)& (0+255),b
  6152                           
  6153                           ; BSR set to: 0
  6154  002126  51D2               	movf	_vfpfcnvrt$1396& (0+255),w,b
  6155  002128  11D3               	iorwf	(_vfpfcnvrt$1396+1)& (0+255),w,b
  6156  00212A  A4D8               	btfss	status,2,c
  6157  00212C  D7D5               	goto	l8746
  6158  00212E                     u11070:
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] =
      +                           tolower((int)(*fmt)[0]);
  6162  00212E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6163  002132  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6164  002136  CFDE FFF6          	movff	postinc2,tblptrl
  6165  00213A  CFDD FFF7          	movff	postdec2,tblptrh
  6166  00213E                     	if	0	;tblptru may be non-zero
  6167  00213E                     	endif
  6168  00213E                     	if	0	;tblptru may be non-zero
  6169  00213E                     	endif
  6170  00213E  0008               	tblrd		*
  6171  002140  50F5               	movf	tablat,w,c
  6172  002142  6E11               	movwf	tolower@c,c
  6173  002144  6A12               	clrf	tolower@c+1,c
  6174  002146  EC73  F023         	call	_tolower	;wreg free
  6175  00214A  5011               	movf	?_tolower,w,c
  6176  00214C  0100               	movlb	0	; () banked
  6177  00214E  6FDA               	movwf	vfpfcnvrt@ct& (0+255),b
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[
      +                          0]) {
  6181  002150  51DA               	movf	vfpfcnvrt@ct& (0+255),w,b
  6182  002152  B4D8               	btfsc	status,2,c
  6183  002154  D035               	goto	l8764
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[
      +                          1] = tolower((int)(*fmt)[1]);
  6187  002156  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6188  00215A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6189  00215E  CFDE F05E          	movff	postinc2,??_vfpfcnvrt
  6190  002162  CFDD F05F          	movff	postdec2,??_vfpfcnvrt+1
  6191  002166  0E01               	movlw	1
  6192  002168  265E               	addwf	??_vfpfcnvrt,f,c
  6193  00216A  0E00               	movlw	0
  6194  00216C  225F               	addwfc	??_vfpfcnvrt+1,f,c
  6195  00216E  C05E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6196  002172  C05F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6197  002176                     	if	0	;tblptru may be non-zero
  6198  002176                     	endif
  6199  002176                     	if	0	;tblptru may be non-zero
  6200  002176                     	endif
  6201  002176  0008               	tblrd		*
  6202  002178  50F5               	movf	tablat,w,c
  6203  00217A  6E11               	movwf	tolower@c,c
  6204  00217C  6A12               	clrf	tolower@c+1,c
  6205  00217E  EC73  F023         	call	_tolower	;wreg free
  6206  002182  5011               	movf	?_tolower,w,c
  6207  002184  0100               	movlb	0	; () banked
  6208  002186  6FDB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if 
      +                          (ct[1]) {
  6212  002188  51DB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6213  00218A  B4D8               	btfsc	status,2,c
  6214  00218C  D019               	goto	l8764
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                
      +                           ct[2] = tolower((int)(*fmt)[2]);
  6218  00218E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6219  002192  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6220  002196  CFDE F05E          	movff	postinc2,??_vfpfcnvrt
  6221  00219A  CFDD F05F          	movff	postdec2,??_vfpfcnvrt+1
  6222  00219E  0E02               	movlw	2
  6223  0021A0  265E               	addwf	??_vfpfcnvrt,f,c
  6224  0021A2  0E00               	movlw	0
  6225  0021A4  225F               	addwfc	??_vfpfcnvrt+1,f,c
  6226  0021A6  C05E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6227  0021AA  C05F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6228  0021AE                     	if	0	;tblptru may be non-zero
  6229  0021AE                     	endif
  6230  0021AE                     	if	0	;tblptru may be non-zero
  6231  0021AE                     	endif
  6232  0021AE  0008               	tblrd		*
  6233  0021B0  50F5               	movf	tablat,w,c
  6234  0021B2  6E11               	movwf	tolower@c,c
  6235  0021B4  6A12               	clrf	tolower@c+1,c
  6236  0021B6  EC73  F023         	call	_tolower	;wreg free
  6237  0021BA  5011               	movf	?_tolower,w,c
  6238  0021BC  0100               	movlb	0	; () banked
  6239  0021BE  6FDC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6240  0021C0                     l8764:
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
  6244  0021C0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6245  0021C4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6246  0021C8  CFDE FFF6          	movff	postinc2,tblptrl
  6247  0021CC  CFDD FFF7          	movff	postdec2,tblptrh
  6248  0021D0                     	if	0	;tblptru may be non-zero
  6249  0021D0                     	endif
  6250  0021D0                     	if	0	;tblptru may be non-zero
  6251  0021D0                     	endif
  6252  0021D0  0008               	tblrd		*
  6253  0021D2  50F5               	movf	tablat,w,c
  6254  0021D4  0A63               	xorlw	99
  6255  0021D6  A4D8               	btfss	status,2,c
  6256  0021D8  D026               	goto	l8772
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
  6260  0021DA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6261  0021DE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6262  0021E2  2ADE               	incf	postinc2,f,c
  6263  0021E4  0E00               	movlw	0
  6264  0021E6  22DD               	addwfc	postdec2,f,c
  6265                           
  6266                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6267  0021E8  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6268  0021EC  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6269  0021F0  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  6270  0021F4  0E02               	movlw	2
  6271  0021F6  26DE               	addwf	postinc2,f,c
  6272  0021F8  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  6273  0021FC  0E00               	movlw	0
  6274  0021FE  22DD               	addwfc	postdec2,f,c
  6275  002200  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6276  002204  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6277  002208  50DF               	movf	indf2,w,c
  6278  00220A  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
  6282  00220C  C0B8  F02A         	movff	vfpfcnvrt@fp,ctoa@fp
  6283  002210  C0B9  F02B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6284  002214  C0DD  F02C         	movff	vfpfcnvrt@c,ctoa@c
  6285  002218  EC26  F023         	call	_ctoa	;wreg free
  6286  00221C  C02A  F0B8         	movff	?_ctoa,?_vfpfcnvrt
  6287  002220  C02B  F0B9         	movff	?_ctoa+1,?_vfpfcnvrt+1
  6288  002224  0012               	return	
  6289  002226                     l8772:
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  6293  002226  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6294  00222A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6295  00222E  CFDE FFF6          	movff	postinc2,tblptrl
  6296  002232  CFDD FFF7          	movff	postdec2,tblptrh
  6297  002236                     	if	0	;tblptru may be non-zero
  6298  002236                     	endif
  6299  002236                     	if	0	;tblptru may be non-zero
  6300  002236                     	endif
  6301  002236  0008               	tblrd		*
  6302  002238  50F5               	movf	tablat,w,c
  6303  00223A  0A64               	xorlw	100
  6304  00223C  B4D8               	btfsc	status,2,c
  6305  00223E  D00D               	goto	u11120
  6306                           
  6307                           ; BSR set to: 0
  6308  002240  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6309  002244  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6310  002248  CFDE FFF6          	movff	postinc2,tblptrl
  6311  00224C  CFDD FFF7          	movff	postdec2,tblptrh
  6312  002250                     	if	0	;tblptru may be non-zero
  6313  002250                     	endif
  6314  002250                     	if	0	;tblptru may be non-zero
  6315  002250                     	endif
  6316  002250  0008               	tblrd		*
  6317  002252  50F5               	movf	tablat,w,c
  6318  002254  0A69               	xorlw	105
  6319  002256  A4D8               	btfss	status,2,c
  6320  002258  D03F               	goto	l8782
  6321  00225A                     u11120:
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  6325  00225A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6326  00225E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6327  002262  2ADE               	incf	postinc2,f,c
  6328  002264  0E00               	movlw	0
  6329  002266  22DD               	addwfc	postdec2,f,c
  6330                           
  6331                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6332  002268  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6333  00226C  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6334  002270  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  6335  002274  0E02               	movlw	2
  6336  002276  26DE               	addwf	postinc2,f,c
  6337  002278  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  6338  00227C  0E00               	movlw	0
  6339  00227E  22DD               	addwfc	postdec2,f,c
  6340  002280  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6341  002284  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6342  002288  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  6343  00228C  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  6344  002290  0E00               	movlw	0
  6345  002292  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6346  002294  0EFF               	movlw	-1
  6347  002296  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6348  002298  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6349  00229A  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6350  00229C  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6351  00229E  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6352  0022A0  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  6356  0022A2  C0B8  F02A         	movff	vfpfcnvrt@fp,dtoa@fp
  6357  0022A6  C0B9  F02B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6358  0022AA  C0BE  F02C         	movff	vfpfcnvrt@ll,dtoa@d
  6359  0022AE  C0BF  F02D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6360  0022B2  C0C0  F02E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6361  0022B6  C0C1  F02F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6362  0022BA  C0C2  F030         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6363  0022BE  C0C3  F031         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6364  0022C2  C0C4  F032         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6365  0022C6  C0C5  F033         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6366  0022CA  EC51  F017         	call	_dtoa	;wreg free
  6367  0022CE  C02A  F0B8         	movff	?_dtoa,?_vfpfcnvrt
  6368  0022D2  C02B  F0B9         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6369  0022D6  0012               	return	
  6370  0022D8                     l8782:
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[
      +                          0] == 'f') {
  6374  0022D8  0E66               	movlw	102
  6375  0022DA  19DA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6376  0022DC  A4D8               	btfss	status,2,c
  6377  0022DE  D03F               	goto	l8794
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c =
      +                           (*fmt)[0];
  6381  0022E0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6382  0022E4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6383  0022E8  CFDE FFF6          	movff	postinc2,tblptrl
  6384  0022EC  CFDD FFF7          	movff	postdec2,tblptrh
  6385  0022F0                     	if	0	;tblptru may be non-zero
  6386  0022F0                     	endif
  6387  0022F0                     	if	0	;tblptru may be non-zero
  6388  0022F0                     	endif
  6389  0022F0  0008               	tblrd		*
  6390  0022F2  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*
      +                          fmt;
  6394  0022F6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6395  0022FA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6396  0022FE  2ADE               	incf	postinc2,f,c
  6397  002300  0E00               	movlw	0
  6398  002302  22DD               	addwfc	postdec2,f,c
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6402  002304  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6403  002308  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6404  00230C  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  6405  002310  0E04               	movlw	4
  6406  002312  26DE               	addwf	postinc2,f,c
  6407  002314  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  6408  002318  0E00               	movlw	0
  6409  00231A  22DD               	addwfc	postdec2,f,c
  6410  00231C  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6411  002320  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6412  002324  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f
  6413  002328  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+1
  6414  00232C  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+2
  6415  002330  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+3
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             ret
      +                          urn efgtoa(fp, f, c);
  6419  002334  C0B8  F052         	movff	vfpfcnvrt@fp,efgtoa@fp
  6420  002338  C0B9  F053         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6421  00233C  C0D6  F054         	movff	vfpfcnvrt@f,efgtoa@f
  6422  002340  C0D7  F055         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6423  002344  C0D8  F056         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6424  002348  C0D9  F057         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6425  00234C  C0DD  F058         	movff	vfpfcnvrt@c,efgtoa@c
  6426  002350  EC6B  F00A         	call	_efgtoa	;wreg free
  6427  002354  C052  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  6428  002358  C053  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6429  00235C  0012               	return	
  6430  00235E                     l8794:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6434  00235E  0EDA               	movlw	low vfpfcnvrt@ct
  6435  002360  6E0B               	movwf	strncmp@_l,c
  6436  002362  0E00               	movlw	high vfpfcnvrt@ct
  6437  002364  6E0C               	movwf	strncmp@_l+1,c
  6438  002366  0EFB               	movlw	low STR_60
  6439  002368  6E0D               	movwf	strncmp@_r,c
  6440  00236A  0EFF               	movlw	high STR_60
  6441  00236C  6E0E               	movwf	strncmp@_r+1,c
  6442  00236E  0E00               	movlw	0
  6443  002370  6E10               	movwf	strncmp@n+1,c
  6444  002372  0E02               	movlw	2
  6445  002374  6E0F               	movwf	strncmp@n,c
  6446  002376  EC18  F020         	call	_strncmp	;wreg free
  6447  00237A  500B               	movf	?_strncmp,w,c
  6448  00237C  100C               	iorwf	?_strncmp+1,w,c
  6449  00237E  A4D8               	btfss	status,2,c
  6450  002380  D06A               	goto	l8810
  6451                           
  6452                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6453  002382  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6454  002386  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6455  00238A  CFDE F05E          	movff	postinc2,??_vfpfcnvrt
  6456  00238E  CFDD F05F          	movff	postdec2,??_vfpfcnvrt+1
  6457  002392  0E01               	movlw	1
  6458  002394  265E               	addwf	??_vfpfcnvrt,f,c
  6459  002396  0E00               	movlw	0
  6460  002398  225F               	addwfc	??_vfpfcnvrt+1,f,c
  6461  00239A  C05E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6462  00239E  C05F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6463  0023A2                     	if	0	;tblptru may be non-zero
  6464  0023A2                     	endif
  6465  0023A2                     	if	0	;tblptru may be non-zero
  6466  0023A2                     	endif
  6467  0023A2  0008               	tblrd		*
  6468  0023A4  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6469  0023A8  0EBF               	movlw	191
  6470  0023AA  6E5E               	movwf	??_vfpfcnvrt& (0+255),c
  6471  0023AC  0EFF               	movlw	255
  6472  0023AE  6E5F               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  6473  0023B0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6474  0023B4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6475  0023B8  CFDE FFF6          	movff	postinc2,tblptrl
  6476  0023BC  CFDD FFF7          	movff	postdec2,tblptrh
  6477  0023C0                     	if	0	;tblptru may be non-zero
  6478  0023C0                     	endif
  6479  0023C0                     	if	0	;tblptru may be non-zero
  6480  0023C0                     	endif
  6481  0023C0  0008               	tblrd		*
  6482  0023C2  50F5               	movf	tablat,w,c
  6483  0023C4  6E60               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  6484  0023C6  6A61               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  6485  0023C8  505E               	movf	??_vfpfcnvrt,w,c
  6486  0023CA  2660               	addwf	??_vfpfcnvrt+2,f,c
  6487  0023CC  505F               	movf	??_vfpfcnvrt+1,w,c
  6488  0023CE  2261               	addwfc	??_vfpfcnvrt+3,f,c
  6489  0023D0  5061               	movf	??_vfpfcnvrt+3,w,c
  6490  0023D2  E106               	bnz	u11150
  6491  0023D4  0E1A               	movlw	26
  6492  0023D6  5C60               	subwf	??_vfpfcnvrt+2,w,c
  6493  0023D8  B0D8               	btfsc	status,0,c
  6494  0023DA  D002               	goto	u11150
  6495  0023DC  0E01               	movlw	1
  6496  0023DE  D001               	goto	u11160
  6497  0023E0                     u11150:
  6498  0023E0  0E00               	movlw	0
  6499  0023E2                     u11160:
  6500  0023E2  0100               	movlb	0	; () banked
  6501  0023E4  6FD4               	movwf	_vfpfcnvrt$1402& (0+255),b
  6502  0023E6  6BD5               	clrf	(_vfpfcnvrt$1402+1)& (0+255),b
  6503                           
  6504                           ; BSR set to: 0
  6505  0023E8  51D4               	movf	_vfpfcnvrt$1402& (0+255),w,b
  6506  0023EA  11D5               	iorwf	(_vfpfcnvrt$1402+1)& (0+255),w,b
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6510                           
  6511                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } e
      +                          lse {
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6515  0023EC  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6516  0023F0  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6517  0023F4  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  6518  0023F8  0E04               	movlw	4
  6519  0023FA  26DE               	addwf	postinc2,f,c
  6520  0023FC  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  6521  002400  0E00               	movlw	0
  6522  002402  22DD               	addwfc	postdec2,f,c
  6523  002404  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6524  002408  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6525  00240C  CFDE F0D6          	movff	postinc2,vfpfcnvrt@f
  6526  002410  CFDE F0D7          	movff	postinc2,vfpfcnvrt@f+1
  6527  002414  CFDE F0D8          	movff	postinc2,vfpfcnvrt@f+2
  6528  002418  CFDE F0D9          	movff	postinc2,vfpfcnvrt@f+3
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6532                           
  6533                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  6534  00241C  0E02               	movlw	2
  6535  00241E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6536  002422  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6537  002426  26DE               	addwf	postinc2,f,c
  6538  002428  0E00               	movlw	0
  6539  00242A  22DD               	addwfc	postdec2,f,c
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 938:             ret
      +                          urn efgtoa(fp, f, c);
  6543  00242C  C0B8  F052         	movff	vfpfcnvrt@fp,efgtoa@fp
  6544  002430  C0B9  F053         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6545  002434  C0D6  F054         	movff	vfpfcnvrt@f,efgtoa@f
  6546  002438  C0D7  F055         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6547  00243C  C0D8  F056         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6548  002440  C0D9  F057         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6549  002444  C0DD  F058         	movff	vfpfcnvrt@c,efgtoa@c
  6550  002448  EC6B  F00A         	call	_efgtoa	;wreg free
  6551  00244C  C052  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  6552  002450  C053  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6553  002454  0012               	return	
  6554  002456                     l8810:
  6555                           
  6556                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6557  002456  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6558  00245A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6559  00245E  CFDE FFF6          	movff	postinc2,tblptrl
  6560  002462  CFDD FFF7          	movff	postdec2,tblptrh
  6561  002466                     	if	0	;tblptru may be non-zero
  6562  002466                     	endif
  6563  002466                     	if	0	;tblptru may be non-zero
  6564  002466                     	endif
  6565  002466  0008               	tblrd		*
  6566  002468  50F5               	movf	tablat,w,c
  6567  00246A  0A78               	xorlw	120
  6568  00246C  B4D8               	btfsc	status,2,c
  6569  00246E  D00D               	goto	u11190
  6570  002470  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6571  002474  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6572  002478  CFDE FFF6          	movff	postinc2,tblptrl
  6573  00247C  CFDD FFF7          	movff	postdec2,tblptrh
  6574  002480                     	if	0	;tblptru may be non-zero
  6575  002480                     	endif
  6576  002480                     	if	0	;tblptru may be non-zero
  6577  002480                     	endif
  6578  002480  0008               	tblrd		*
  6579  002482  50F5               	movf	tablat,w,c
  6580  002484  0A58               	xorlw	88
  6581  002486  A4D8               	btfss	status,2,c
  6582  002488  D04E               	goto	l8824
  6583  00248A                     u11190:
  6584                           
  6585                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
  6586  00248A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6587  00248E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6588  002492  CFDE FFF6          	movff	postinc2,tblptrl
  6589  002496  CFDD FFF7          	movff	postdec2,tblptrh
  6590  00249A                     	if	0	;tblptru may be non-zero
  6591  00249A                     	endif
  6592  00249A                     	if	0	;tblptru may be non-zero
  6593  00249A                     	endif
  6594  00249A  0008               	tblrd		*
  6595  00249C  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  6596                           
  6597                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
  6598  0024A0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6599  0024A4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6600  0024A8  2ADE               	incf	postinc2,f,c
  6601  0024AA  0E00               	movlw	0
  6602  0024AC  22DD               	addwfc	postdec2,f,c
  6603                           
  6604                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  6605  0024AE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6606  0024B2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6607  0024B6  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  6608  0024BA  0E02               	movlw	2
  6609  0024BC  26DE               	addwf	postinc2,f,c
  6610  0024BE  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  6611  0024C2  0E00               	movlw	0
  6612  0024C4  22DD               	addwfc	postdec2,f,c
  6613  0024C6  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6614  0024CA  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6615  0024CE  CFDE F060          	movff	postinc2,??_vfpfcnvrt+2
  6616  0024D2  CFDD F061          	movff	postdec2,??_vfpfcnvrt+3
  6617  0024D6  C060  F0C6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6618  0024DA  C061  F0C7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6619  0024DE  0100               	movlb	0	; () banked
  6620  0024E0  6BC8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6621  0024E2  6BC9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6622  0024E4  6BCA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6623  0024E6  6BCB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6624  0024E8  6BCC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6625  0024EA  6BCD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
  6629  0024EC  C0B8  F02A         	movff	vfpfcnvrt@fp,xtoa@fp
  6630  0024F0  C0B9  F02B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6631  0024F4  C0C6  F02C         	movff	vfpfcnvrt@llu,xtoa@d
  6632  0024F8  C0C7  F02D         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6633  0024FC  C0C8  F02E         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6634  002500  C0C9  F02F         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6635  002504  C0CA  F030         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6636  002508  C0CB  F031         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6637  00250C  C0CC  F032         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6638  002510  C0CD  F033         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6639  002514  C0DD  F034         	movff	vfpfcnvrt@c,xtoa@x
  6640  002518  EC72  F018         	call	_xtoa	;wreg free
  6641  00251C  C02A  F0B8         	movff	?_xtoa,?_vfpfcnvrt
  6642  002520  C02B  F0B9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6643  002524  0012               	return	
  6644  002526                     l8824:
  6645                           
  6646                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  6647  002526  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6648  00252A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6649  00252E  CFDE FFF6          	movff	postinc2,tblptrl
  6650  002532  CFDD FFF7          	movff	postdec2,tblptrh
  6651  002536                     	if	0	;tblptru may be non-zero
  6652  002536                     	endif
  6653  002536                     	if	0	;tblptru may be non-zero
  6654  002536                     	endif
  6655  002536  0008               	tblrd		*
  6656  002538  50F5               	movf	tablat,w,c
  6657  00253A  0A25               	xorlw	37
  6658  00253C  A4D8               	btfss	status,2,c
  6659  00253E  D017               	goto	l8834
  6660                           
  6661                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  6662  002540  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6663  002544  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6664  002548  2ADE               	incf	postinc2,f,c
  6665  00254A  0E00               	movlw	0
  6666  00254C  22DD               	addwfc	postdec2,f,c
  6667                           
  6668                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  6669  00254E  0E00               	movlw	0
  6670  002550  6E10               	movwf	fputc@c+1,c
  6671  002552  0E25               	movlw	37
  6672  002554  6E0F               	movwf	fputc@c,c
  6673  002556  C0B8  F011         	movff	vfpfcnvrt@fp,fputc@fp
  6674  00255A  C0B9  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6675  00255E  EC38  F022         	call	_fputc	;wreg free
  6676  002562                     l8830:
  6677                           
  6678                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  6679  002562  0E00               	movlw	0
  6680  002564  0100               	movlb	0	; () banked
  6681  002566  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6682  002568  0E01               	movlw	1
  6683  00256A  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  6684  00256C  0012               	return	
  6685  00256E                     l8834:
  6686                           
  6687                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  6688  00256E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6689  002572  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6690  002576  2ADE               	incf	postinc2,f,c
  6691  002578  0E00               	movlw	0
  6692  00257A  22DD               	addwfc	postdec2,f,c
  6693                           
  6694                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  6695  00257C  0E00               	movlw	0
  6696  00257E  0100               	movlb	0	; () banked
  6697  002580  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6698  002582  0E00               	movlw	0
  6699  002584  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  6700  002586  0012               	return	
  6701  002588                     l8840:
  6702                           
  6703                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  6704  002588  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6705  00258C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6706  002590  CFDE FFF6          	movff	postinc2,tblptrl
  6707  002594  CFDD FFF7          	movff	postdec2,tblptrh
  6708  002598                     	if	0	;tblptru may be non-zero
  6709  002598                     	endif
  6710  002598                     	if	0	;tblptru may be non-zero
  6711  002598                     	endif
  6712  002598  0008               	tblrd		*
  6713  00259A  50F5               	movf	tablat,w,c
  6714  00259C  6E0F               	movwf	fputc@c,c
  6715  00259E  6A10               	clrf	fputc@c+1,c
  6716  0025A0  C0B8  F011         	movff	vfpfcnvrt@fp,fputc@fp
  6717  0025A4  C0B9  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6718  0025A8  EC38  F022         	call	_fputc	;wreg free
  6719                           
  6720                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6721  0025AC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6722  0025B0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6723  0025B4  2ADE               	incf	postinc2,f,c
  6724  0025B6  0E00               	movlw	0
  6725  0025B8  22DD               	addwfc	postdec2,f,c
  6726  0025BA  D7D3               	goto	l8830
  6727  0025BC                     __end_of_vfpfcnvrt:
  6728                           	opt callstack 0
  6729                           
  6730 ;; *************** function _xtoa *****************
  6731 ;; Defined at:
  6732 ;;		line 623 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  6735 ;;		 -> NULL(0), 
  6736 ;;  d               8   43[COMRAM] unsigned long long 
  6737 ;;  x               1   51[COMRAM] unsigned char 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  n               8   68[COMRAM] unsigned long long 
  6740 ;;  c               2   78[COMRAM] int 
  6741 ;;  i               2   76[COMRAM] int 
  6742 ;;  w               2   66[COMRAM] int 
  6743 ;;  p               2   64[COMRAM] int 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  2   41[COMRAM] int 
  6746 ;; Registers used:
  6747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6753 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;Total ram usage:       39 bytes
  6758 ;; Hardware stack levels used:    1
  6759 ;; Hardware stack levels required when called:    8
  6760 ;; This function calls:
  6761 ;;		_isalpha
  6762 ;;		_isupper
  6763 ;;		_pad
  6764 ;;		_toupper
  6765 ;; This function is called by:
  6766 ;;		_vfpfcnvrt
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text7
  6771  0030E4                     __ptext7:
  6772                           	opt callstack 0
  6773  0030E4                     _xtoa:
  6774                           	opt callstack 19
  6775                           
  6776                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
  6777                           
  6778                           ;incstack = 0
  6779  0030E4  AE71               	btfss	_prec+1,7,c
  6780                           
  6781                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
  6782  0030E6  9272               	bcf	_flags,1,c
  6783                           
  6784                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
  6785  0030E8  BE71               	btfsc	_prec+1,7,c
  6786  0030EA  D005               	goto	u10670
  6787  0030EC  5071               	movf	_prec+1,w,c
  6788  0030EE  E108               	bnz	l613
  6789  0030F0  0470               	decf	_prec,w,c
  6790  0030F2  B0D8               	btfsc	status,0,c
  6791  0030F4  D005               	goto	l613
  6792  0030F6                     u10670:
  6793  0030F6  0E00               	movlw	0
  6794  0030F8  6E42               	movwf	xtoa@p+1,c
  6795  0030FA  0E01               	movlw	1
  6796  0030FC  6E41               	movwf	xtoa@p,c
  6797  0030FE  D004               	goto	l615
  6798  003100                     l613:
  6799  003100  C070  F041         	movff	_prec,xtoa@p
  6800  003104  C071  F042         	movff	_prec+1,xtoa@p+1
  6801  003108                     l615:
  6802                           
  6803                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6804  003108  C06E  F043         	movff	_width,xtoa@w
  6805  00310C  C06F  F044         	movff	_width+1,xtoa@w+1
  6806                           
  6807                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
  6808  003110  A872               	btfss	_flags,4,c
  6809  003112  D004               	goto	l8558
  6810                           
  6811                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6812  003114  0EFE               	movlw	254
  6813  003116  2643               	addwf	xtoa@w,f,c
  6814  003118  0EFF               	movlw	255
  6815  00311A  2244               	addwfc	xtoa@w+1,f,c
  6816  00311C                     l8558:
  6817                           
  6818                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6819  00311C  C02C  F045         	movff	xtoa@d,xtoa@n
  6820  003120  C02D  F046         	movff	xtoa@d+1,xtoa@n+1
  6821  003124  C02E  F047         	movff	xtoa@d+2,xtoa@n+2
  6822  003128  C02F  F048         	movff	xtoa@d+3,xtoa@n+3
  6823  00312C  C030  F049         	movff	xtoa@d+4,xtoa@n+4
  6824  003130  C031  F04A         	movff	xtoa@d+5,xtoa@n+5
  6825  003134  C032  F04B         	movff	xtoa@d+6,xtoa@n+6
  6826  003138  C033  F04C         	movff	xtoa@d+7,xtoa@n+7
  6827                           
  6828                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
  6829  00313C  0E00               	movlw	0
  6830  00313E  6E4E               	movwf	xtoa@i+1,c
  6831  003140  0E4F               	movlw	79
  6832  003142  6E4D               	movwf	xtoa@i,c
  6833                           
  6834                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
  6835  003144  0E00               	movlw	0
  6836  003146  0101               	movlb	1	; () banked
  6837  003148  6F5E               	movwf	(_dbuf+79)& (0+255),b
  6838                           
  6839                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6840  00314A  D093               	goto	l8594
  6841  00314C                     l8564:
  6842                           
  6843                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  6844  00314C  064D               	decf	xtoa@i,f,c
  6845  00314E  A0D8               	btfss	status,0,c
  6846  003150  064E               	decf	xtoa@i+1,f,c
  6847                           
  6848                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
  6849  003152  0E0F               	movlw	15
  6850  003154  1445               	andwf	xtoa@n,w,c
  6851  003156  6E4F               	movwf	xtoa@c,c
  6852  003158  6A50               	clrf	xtoa@c+1,c
  6853                           
  6854                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
  6855  00315A  BE50               	btfsc	xtoa@c+1,7,c
  6856  00315C  D008               	goto	l8572
  6857  00315E  5050               	movf	xtoa@c+1,w,c
  6858  003160  E104               	bnz	u10690
  6859  003162  0E0A               	movlw	10
  6860  003164  5C4F               	subwf	xtoa@c,w,c
  6861  003166  A0D8               	btfss	status,0,c
  6862  003168  D002               	goto	l8572
  6863  00316A                     u10690:
  6864  00316A  0E57               	movlw	87
  6865  00316C  D001               	goto	L3
  6866  00316E                     l8572:
  6867  00316E  0E30               	movlw	48
  6868  003170                     L3:
  6869  003170  244F               	addwf	xtoa@c,w,c
  6870  003172  6E4F               	movwf	xtoa@c,c
  6871  003174  0E00               	movlw	0
  6872  003176  2050               	addwfc	xtoa@c+1,w,c
  6873  003178  6E50               	movwf	xtoa@c+1,c
  6874                           
  6875                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
  6876  00317A  0EBF               	movlw	191
  6877  00317C  6E35               	movwf	??_xtoa& (0+255),c
  6878  00317E  0EFF               	movlw	255
  6879  003180  6E36               	movwf	(??_xtoa+1)& (0+255),c
  6880  003182  5034               	movf	xtoa@x,w,c
  6881  003184  6E37               	movwf	(??_xtoa+2)& (0+255),c
  6882  003186  6A38               	clrf	(??_xtoa+3)& (0+255),c
  6883  003188  5035               	movf	??_xtoa,w,c
  6884  00318A  2637               	addwf	??_xtoa+2,f,c
  6885  00318C  5036               	movf	??_xtoa+1,w,c
  6886  00318E  2238               	addwfc	??_xtoa+3,f,c
  6887  003190  5038               	movf	??_xtoa+3,w,c
  6888  003192  E106               	bnz	u10700
  6889  003194  0E1A               	movlw	26
  6890  003196  5C37               	subwf	??_xtoa+2,w,c
  6891  003198  B0D8               	btfsc	status,0,c
  6892  00319A  D002               	goto	u10700
  6893  00319C  0E01               	movlw	1
  6894  00319E  D001               	goto	u10710
  6895  0031A0                     u10700:
  6896  0031A0  0E00               	movlw	0
  6897  0031A2                     u10710:
  6898  0031A2  6E3D               	movwf	_xtoa$1380,c
  6899  0031A4  6A3E               	clrf	_xtoa$1380+1,c
  6900  0031A6  503D               	movf	_xtoa$1380,w,c
  6901  0031A8  103E               	iorwf	_xtoa$1380+1,w,c
  6902  0031AA  B4D8               	btfsc	status,2,c
  6903  0031AC  D027               	goto	l8586
  6904  0031AE  0E9F               	movlw	159
  6905  0031B0  6E35               	movwf	??_xtoa& (0+255),c
  6906  0031B2  0EFF               	movlw	255
  6907  0031B4  6E36               	movwf	(??_xtoa+1)& (0+255),c
  6908  0031B6  0E20               	movlw	32
  6909  0031B8  104F               	iorwf	xtoa@c,w,c
  6910  0031BA  6E37               	movwf	(??_xtoa+2)& (0+255),c
  6911  0031BC  0E00               	movlw	0
  6912  0031BE  1050               	iorwf	xtoa@c+1,w,c
  6913  0031C0  6E38               	movwf	(??_xtoa+3)& (0+255),c
  6914  0031C2  5035               	movf	??_xtoa,w,c
  6915  0031C4  2637               	addwf	??_xtoa+2,f,c
  6916  0031C6  5036               	movf	??_xtoa+1,w,c
  6917  0031C8  2238               	addwfc	??_xtoa+3,f,c
  6918  0031CA  5038               	movf	??_xtoa+3,w,c
  6919  0031CC  E106               	bnz	u10730
  6920  0031CE  0E1A               	movlw	26
  6921  0031D0  5C37               	subwf	??_xtoa+2,w,c
  6922  0031D2  B0D8               	btfsc	status,0,c
  6923  0031D4  D002               	goto	u10730
  6924  0031D6  0E01               	movlw	1
  6925  0031D8  D001               	goto	u10740
  6926  0031DA                     u10730:
  6927  0031DA  0E00               	movlw	0
  6928  0031DC                     u10740:
  6929  0031DC  6E3F               	movwf	_xtoa$1381,c
  6930  0031DE  6A40               	clrf	_xtoa$1381+1,c
  6931  0031E0  503F               	movf	_xtoa$1381,w,c
  6932  0031E2  1040               	iorwf	_xtoa$1381+1,w,c
  6933  0031E4  B4D8               	btfsc	status,2,c
  6934  0031E6  D00A               	goto	l8586
  6935                           
  6936                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
  6937  0031E8  C04F  F011         	movff	xtoa@c,toupper@c
  6938  0031EC  C050  F012         	movff	xtoa@c+1,toupper@c+1
  6939  0031F0  EC99  F023         	call	_toupper	;wreg free
  6940  0031F4  C011  F04F         	movff	?_toupper,xtoa@c
  6941  0031F8  C012  F050         	movff	?_toupper+1,xtoa@c+1
  6942  0031FC                     l8586:
  6943                           
  6944                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
  6945  0031FC  0E0F               	movlw	low _dbuf
  6946  0031FE  244D               	addwf	xtoa@i,w,c
  6947  003200  6ED9               	movwf	fsr2l,c
  6948  003202  0E01               	movlw	high _dbuf
  6949  003204  204E               	addwfc	xtoa@i+1,w,c
  6950  003206  6EDA               	movwf	fsr2h,c
  6951  003208  C04F  FFDF         	movff	xtoa@c,indf2
  6952                           
  6953                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  6954  00320C  0641               	decf	xtoa@p,f,c
  6955  00320E  A0D8               	btfss	status,0,c
  6956  003210  0642               	decf	xtoa@p+1,f,c
  6957                           
  6958                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  6959  003212  0643               	decf	xtoa@w,f,c
  6960  003214  A0D8               	btfss	status,0,c
  6961  003216  0644               	decf	xtoa@w+1,f,c
  6962                           
  6963                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
  6964  003218  C045  F035         	movff	xtoa@n,??_xtoa
  6965  00321C  C046  F036         	movff	xtoa@n+1,??_xtoa+1
  6966  003220  C047  F037         	movff	xtoa@n+2,??_xtoa+2
  6967  003224  C048  F038         	movff	xtoa@n+3,??_xtoa+3
  6968  003228  C049  F039         	movff	xtoa@n+4,??_xtoa+4
  6969  00322C  C04A  F03A         	movff	xtoa@n+5,??_xtoa+5
  6970  003230  C04B  F03B         	movff	xtoa@n+6,??_xtoa+6
  6971  003234  C04C  F03C         	movff	xtoa@n+7,??_xtoa+7
  6972  003238  0E05               	movlw	5
  6973  00323A  D009               	goto	u10760
  6974  00323C                     u10765:
  6975  00323C  90D8               	bcf	status,0,c
  6976  00323E  323C               	rrcf	??_xtoa+7,f,c
  6977  003240  323B               	rrcf	??_xtoa+6,f,c
  6978  003242  323A               	rrcf	??_xtoa+5,f,c
  6979  003244  3239               	rrcf	??_xtoa+4,f,c
  6980  003246  3238               	rrcf	??_xtoa+3,f,c
  6981  003248  3237               	rrcf	??_xtoa+2,f,c
  6982  00324A  3236               	rrcf	??_xtoa+1,f,c
  6983  00324C  3235               	rrcf	??_xtoa,f,c
  6984  00324E                     u10760:
  6985  00324E  2EE8               	decfsz	wreg,f,c
  6986  003250  D7F5               	goto	u10765
  6987  003252  C035  F045         	movff	??_xtoa,xtoa@n
  6988  003256  C036  F046         	movff	??_xtoa+1,xtoa@n+1
  6989  00325A  C037  F047         	movff	??_xtoa+2,xtoa@n+2
  6990  00325E  C038  F048         	movff	??_xtoa+3,xtoa@n+3
  6991  003262  C039  F049         	movff	??_xtoa+4,xtoa@n+4
  6992  003266  C03A  F04A         	movff	??_xtoa+5,xtoa@n+5
  6993  00326A  C03B  F04B         	movff	??_xtoa+6,xtoa@n+6
  6994  00326E  C03C  F04C         	movff	??_xtoa+7,xtoa@n+7
  6995  003272                     l8594:
  6996                           
  6997                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6998  003272  BE4E               	btfsc	xtoa@i+1,7,c
  6999  003274  D020               	goto	u10810
  7000  003276  504E               	movf	xtoa@i+1,w,c
  7001  003278  E104               	bnz	u10770
  7002  00327A  0E02               	movlw	2
  7003  00327C  5C4D               	subwf	xtoa@i,w,c
  7004  00327E  A0D8               	btfss	status,0,c
  7005  003280  D01A               	goto	u10810
  7006  003282                     u10770:
  7007  003282  5045               	movf	xtoa@n,w,c
  7008  003284  1046               	iorwf	xtoa@n+1,w,c
  7009  003286  1047               	iorwf	xtoa@n+2,w,c
  7010  003288  1048               	iorwf	xtoa@n+3,w,c
  7011  00328A  1049               	iorwf	xtoa@n+4,w,c
  7012  00328C  104A               	iorwf	xtoa@n+5,w,c
  7013  00328E  104B               	iorwf	xtoa@n+6,w,c
  7014  003290  104C               	iorwf	xtoa@n+7,w,c
  7015  003292  A4D8               	btfss	status,2,c
  7016  003294  D75B               	goto	l8564
  7017  003296  BE42               	btfsc	xtoa@p+1,7,c
  7018  003298  D005               	goto	u10790
  7019  00329A  5042               	movf	xtoa@p+1,w,c
  7020  00329C  E102               	bnz	u10791
  7021  00329E  0441               	decf	xtoa@p,w,c
  7022  0032A0  B0D8               	btfsc	status,0,c
  7023  0032A2                     u10791:
  7024  0032A2  D754               	goto	l8564
  7025  0032A4                     u10790:
  7026  0032A4  BE44               	btfsc	xtoa@w+1,7,c
  7027  0032A6  D007               	goto	u10810
  7028  0032A8  5044               	movf	xtoa@w+1,w,c
  7029  0032AA  E103               	bnz	u10800
  7030  0032AC  0443               	decf	xtoa@w,w,c
  7031  0032AE  A0D8               	btfss	status,0,c
  7032  0032B0  D002               	goto	u10810
  7033  0032B2                     u10800:
  7034  0032B2  B272               	btfsc	_flags,1,c
  7035  0032B4  D74B               	goto	l8564
  7036  0032B6                     u10810:
  7037                           
  7038                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
  7039  0032B6  A872               	btfss	_flags,4,c
  7040  0032B8  D016               	goto	l8610
  7041                           
  7042                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7043  0032BA  064D               	decf	xtoa@i,f,c
  7044  0032BC  A0D8               	btfss	status,0,c
  7045  0032BE  064E               	decf	xtoa@i+1,f,c
  7046                           
  7047                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
  7048  0032C0  0E0F               	movlw	low _dbuf
  7049  0032C2  244D               	addwf	xtoa@i,w,c
  7050  0032C4  6ED9               	movwf	fsr2l,c
  7051  0032C6  0E01               	movlw	high _dbuf
  7052  0032C8  204E               	addwfc	xtoa@i+1,w,c
  7053  0032CA  6EDA               	movwf	fsr2h,c
  7054  0032CC  C034  FFDF         	movff	xtoa@x,indf2
  7055                           
  7056                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7057  0032D0  064D               	decf	xtoa@i,f,c
  7058  0032D2  A0D8               	btfss	status,0,c
  7059  0032D4  064E               	decf	xtoa@i+1,f,c
  7060                           
  7061                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
  7062  0032D6  0E0F               	movlw	low _dbuf
  7063  0032D8  244D               	addwf	xtoa@i,w,c
  7064  0032DA  6ED9               	movwf	fsr2l,c
  7065  0032DC  0E01               	movlw	high _dbuf
  7066  0032DE  204E               	addwfc	xtoa@i+1,w,c
  7067  0032E0  6EDA               	movwf	fsr2h,c
  7068  0032E2  0E30               	movlw	48
  7069  0032E4  6EDF               	movwf	indf2,c
  7070  0032E6                     l8610:
  7071                           
  7072                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
  7073  0032E6  C02A  F01F         	movff	xtoa@fp,pad@fp
  7074  0032EA  C02B  F020         	movff	xtoa@fp+1,pad@fp+1
  7075  0032EE  0E0F               	movlw	low _dbuf
  7076  0032F0  244D               	addwf	xtoa@i,w,c
  7077  0032F2  6E21               	movwf	pad@buf,c
  7078  0032F4  0E01               	movlw	high _dbuf
  7079  0032F6  204E               	addwfc	xtoa@i+1,w,c
  7080  0032F8  6E22               	movwf	pad@buf+1,c
  7081  0032FA  C043  F023         	movff	xtoa@w,pad@p
  7082  0032FE  C044  F024         	movff	xtoa@w+1,pad@p+1
  7083  003302  EC69  F020         	call	_pad	;wreg free
  7084  003306  C01F  F02A         	movff	?_pad,?_xtoa
  7085  00330A  C020  F02B         	movff	?_pad+1,?_xtoa+1
  7086  00330E  0012               	return		;funcret
  7087  003310                     __end_of_xtoa:
  7088                           	opt callstack 0
  7089                           
  7090 ;; *************** function _toupper *****************
  7091 ;; Defined at:
  7092 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  c               2   16[COMRAM] int 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;		None
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  2   16[COMRAM] int 
  7099 ;; Registers used:
  7100 ;;		wreg, status,2, status,0
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;Total ram usage:        8 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:    2
  7113 ;; This function calls:
  7114 ;;		_islower
  7115 ;; This function is called by:
  7116 ;;		_xtoa
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text8
  7121  004732                     __ptext8:
  7122                           	opt callstack 0
  7123  004732                     _toupper:
  7124                           	opt callstack 24
  7125                           
  7126                           ;incstack = 0
  7127  004732  0E9F               	movlw	159
  7128  004734  6E13               	movwf	??_toupper& (0+255),c
  7129  004736  0EFF               	movlw	255
  7130  004738  6E14               	movwf	(??_toupper+1)& (0+255),c
  7131  00473A  C011  F015         	movff	toupper@c,??_toupper+2
  7132  00473E  C012  F016         	movff	toupper@c+1,??_toupper+3
  7133  004742  5013               	movf	??_toupper,w,c
  7134  004744  2615               	addwf	??_toupper+2,f,c
  7135  004746  5014               	movf	??_toupper+1,w,c
  7136  004748  2216               	addwfc	??_toupper+3,f,c
  7137  00474A  5016               	movf	??_toupper+3,w,c
  7138  00474C  E106               	bnz	u9080
  7139  00474E  0E1A               	movlw	26
  7140  004750  5C15               	subwf	??_toupper+2,w,c
  7141  004752  B0D8               	btfsc	status,0,c
  7142  004754  D002               	goto	u9080
  7143  004756  0E01               	movlw	1
  7144  004758  D001               	goto	u9090
  7145  00475A                     u9080:
  7146  00475A  0E00               	movlw	0
  7147  00475C                     u9090:
  7148  00475C  6E17               	movwf	_toupper$2005,c
  7149  00475E  6A18               	clrf	_toupper$2005+1,c
  7150  004760  5017               	movf	_toupper$2005,w,c
  7151  004762  1018               	iorwf	_toupper$2005+1,w,c
  7152  004764  B4D8               	btfsc	status,2,c
  7153  004766  D005               	goto	l1526
  7154  004768  0E5F               	movlw	95
  7155  00476A  1411               	andwf	toupper@c,w,c
  7156  00476C  6E11               	movwf	?_toupper,c
  7157  00476E  6A12               	clrf	?_toupper+1,c
  7158  004770  0012               	return	
  7159  004772                     l1526:
  7160  004772  C011  F011         	movff	toupper@c,?_toupper
  7161  004776  C012  F012         	movff	toupper@c+1,?_toupper+1
  7162  00477A  0012               	return		;funcret
  7163  00477C                     __end_of_toupper:
  7164                           	opt callstack 0
  7165                           
  7166 ;; *************** function _islower *****************
  7167 ;; Defined at:
  7168 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;  c               2   10[COMRAM] int 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;		None
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  2   10[COMRAM] int 
  7175 ;; Registers used:
  7176 ;;		wreg, status,2, status,0
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;Total ram usage:        6 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; Hardware stack levels required when called:    1
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_toupper
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text9
  7197  00490C                     __ptext9:
  7198                           	opt callstack 0
  7199  00490C                     _islower:
  7200                           	opt callstack 24
  7201                           
  7202                           ;incstack = 0
  7203  00490C  0E9F               	movlw	159
  7204  00490E  6E0D               	movwf	??_islower& (0+255),c
  7205  004910  0EFF               	movlw	255
  7206  004912  6E0E               	movwf	(??_islower+1)& (0+255),c
  7207  004914  C00B  F00F         	movff	islower@c,??_islower+2
  7208  004918  C00C  F010         	movff	islower@c+1,??_islower+3
  7209  00491C  500D               	movf	??_islower,w,c
  7210  00491E  260F               	addwf	??_islower+2,f,c
  7211  004920  500E               	movf	??_islower+1,w,c
  7212  004922  2210               	addwfc	??_islower+3,f,c
  7213  004924  5010               	movf	??_islower+3,w,c
  7214  004926  E106               	bnz	u8770
  7215  004928  0E1A               	movlw	26
  7216  00492A  5C0F               	subwf	??_islower+2,w,c
  7217  00492C  B0D8               	btfsc	status,0,c
  7218  00492E  D002               	goto	u8770
  7219  004930  0E01               	movlw	1
  7220  004932  D001               	goto	u8780
  7221  004934                     u8770:
  7222  004934  0E00               	movlw	0
  7223  004936                     u8780:
  7224  004936  6E0B               	movwf	?_islower,c
  7225  004938  6A0C               	clrf	?_islower+1,c
  7226  00493A  0012               	return		;funcret
  7227  00493C                     __end_of_islower:
  7228                           	opt callstack 0
  7229                           
  7230 ;; *************** function _isalpha *****************
  7231 ;; Defined at:
  7232 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;  c               2   10[COMRAM] int 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  2   10[COMRAM] int 
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;Total ram usage:        6 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    1
  7253 ;; This function calls:
  7254 ;;		Nothing
  7255 ;; This function is called by:
  7256 ;;		_xtoa
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text10
  7261  004874                     __ptext10:
  7262                           	opt callstack 0
  7263  004874                     _isalpha:
  7264                           	opt callstack 25
  7265                           
  7266                           ;incstack = 0
  7267  004874  0E9F               	movlw	159
  7268  004876  6E0D               	movwf	??_isalpha& (0+255),c
  7269  004878  0EFF               	movlw	255
  7270  00487A  6E0E               	movwf	(??_isalpha+1)& (0+255),c
  7271  00487C  0E20               	movlw	32
  7272  00487E  100B               	iorwf	isalpha@c,w,c
  7273  004880  6E0F               	movwf	(??_isalpha+2)& (0+255),c
  7274  004882  0E00               	movlw	0
  7275  004884  100C               	iorwf	isalpha@c+1,w,c
  7276  004886  6E10               	movwf	(??_isalpha+3)& (0+255),c
  7277  004888  500D               	movf	??_isalpha,w,c
  7278  00488A  260F               	addwf	??_isalpha+2,f,c
  7279  00488C  500E               	movf	??_isalpha+1,w,c
  7280  00488E  2210               	addwfc	??_isalpha+3,f,c
  7281  004890  5010               	movf	??_isalpha+3,w,c
  7282  004892  E106               	bnz	u9060
  7283  004894  0E1A               	movlw	26
  7284  004896  5C0F               	subwf	??_isalpha+2,w,c
  7285  004898  B0D8               	btfsc	status,0,c
  7286  00489A  D002               	goto	u9060
  7287  00489C  0E01               	movlw	1
  7288  00489E  D001               	goto	u9070
  7289  0048A0                     u9060:
  7290  0048A0  0E00               	movlw	0
  7291  0048A2                     u9070:
  7292  0048A2  6E0B               	movwf	?_isalpha,c
  7293  0048A4  6A0C               	clrf	?_isalpha+1,c
  7294  0048A6  0012               	return		;funcret
  7295  0048A8                     __end_of_isalpha:
  7296                           	opt callstack 0
  7297                           
  7298 ;; *************** function _strncmp *****************
  7299 ;; Defined at:
  7300 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  _l              2   10[COMRAM] PTR const unsigned char 
  7303 ;;		 -> vfpfcnvrt@ct(3), 
  7304 ;;  _r              2   12[COMRAM] PTR const unsigned char 
  7305 ;;		 -> STR_62(3), 
  7306 ;;  n               2   14[COMRAM] unsigned int 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  r               2   19[COMRAM] PTR const unsigned char 
  7309 ;;		 -> STR_62(3), 
  7310 ;;  l               2   17[COMRAM] PTR const unsigned char 
  7311 ;;		 -> vfpfcnvrt@ct(3), 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  2   10[COMRAM] int 
  7314 ;; Registers used:
  7315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7321 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7322 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7324 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;Total ram usage:       11 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    1
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_vfpfcnvrt
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text11
  7336  004030                     __ptext11:
  7337                           	opt callstack 0
  7338  004030                     _strncmp:
  7339                           	opt callstack 26
  7340                           
  7341                           ;incstack = 0
  7342  004030  C00B  F012         	movff	strncmp@_l,strncmp@l
  7343  004034  C00C  F013         	movff	strncmp@_l+1,strncmp@l+1
  7344  004038  C00D  F014         	movff	strncmp@_r,strncmp@r
  7345  00403C  C00E  F015         	movff	strncmp@_r+1,strncmp@r+1
  7346  004040  060F               	decf	strncmp@n,f,c
  7347  004042  A0D8               	btfss	status,0,c
  7348  004044  0610               	decf	strncmp@n+1,f,c
  7349  004046  280F               	incf	strncmp@n,w,c
  7350  004048  E10F               	bnz	l8664
  7351  00404A  2810               	incf	strncmp@n+1,w,c
  7352  00404C  A4D8               	btfss	status,2,c
  7353  00404E  D00C               	goto	l8664
  7354  004050  0E00               	movlw	0
  7355  004052  6E0C               	movwf	?_strncmp+1,c
  7356  004054  0E00               	movlw	0
  7357  004056  6E0B               	movwf	?_strncmp,c
  7358  004058  0012               	return	
  7359  00405A                     l8662:
  7360  00405A  4A12               	infsnz	strncmp@l,f,c
  7361  00405C  2A13               	incf	strncmp@l+1,f,c
  7362  00405E  4A14               	infsnz	strncmp@r,f,c
  7363  004060  2A15               	incf	strncmp@r+1,f,c
  7364  004062  060F               	decf	strncmp@n,f,c
  7365  004064  A0D8               	btfss	status,0,c
  7366  004066  0610               	decf	strncmp@n+1,f,c
  7367  004068                     l8664:
  7368  004068  C012  FFD9         	movff	strncmp@l,fsr2l
  7369  00406C  C013  FFDA         	movff	strncmp@l+1,fsr2h
  7370  004070  50DF               	movf	indf2,w,c
  7371  004072  B4D8               	btfsc	status,2,c
  7372  004074  D01C               	goto	u10940
  7373  004076  C014  FFF6         	movff	strncmp@r,tblptrl
  7374  00407A  C015  FFF7         	movff	strncmp@r+1,tblptrh
  7375  00407E                     	if	0	;tblptru may be non-zero
  7376  00407E                     	endif
  7377  00407E                     	if	0	;tblptru may be non-zero
  7378  00407E                     	endif
  7379  00407E  0008               	tblrd		*
  7380  004080  50F5               	movf	tablat,w,c
  7381  004082  0900               	iorlw	0
  7382  004084  B4D8               	btfsc	status,2,c
  7383  004086  D013               	goto	u10940
  7384  004088  500F               	movf	strncmp@n,w,c
  7385  00408A  1010               	iorwf	strncmp@n+1,w,c
  7386  00408C  B4D8               	btfsc	status,2,c
  7387  00408E  D00F               	goto	u10940
  7388  004090  C012  FFD9         	movff	strncmp@l,fsr2l
  7389  004094  C013  FFDA         	movff	strncmp@l+1,fsr2h
  7390  004098  50DF               	movf	indf2,w,c
  7391  00409A  6E11               	movwf	??_strncmp& (0+255),c
  7392  00409C  C014  FFF6         	movff	strncmp@r,tblptrl
  7393  0040A0  C015  FFF7         	movff	strncmp@r+1,tblptrh
  7394  0040A4                     	if	0	;tblptru may be non-zero
  7395  0040A4                     	endif
  7396  0040A4                     	if	0	;tblptru may be non-zero
  7397  0040A4                     	endif
  7398  0040A4  0008               	tblrd		*
  7399  0040A6  50F5               	movf	tablat,w,c
  7400  0040A8  1811               	xorwf	??_strncmp,w,c
  7401  0040AA  B4D8               	btfsc	status,2,c
  7402  0040AC  D7D6               	goto	l8662
  7403  0040AE                     u10940:
  7404  0040AE  C012  FFD9         	movff	strncmp@l,fsr2l
  7405  0040B2  C013  FFDA         	movff	strncmp@l+1,fsr2h
  7406  0040B6  50DF               	movf	indf2,w,c
  7407  0040B8  6E11               	movwf	??_strncmp& (0+255),c
  7408  0040BA  C014  FFF6         	movff	strncmp@r,tblptrl
  7409  0040BE  C015  FFF7         	movff	strncmp@r+1,tblptrh
  7410  0040C2                     	if	0	;tblptru may be non-zero
  7411  0040C2                     	endif
  7412  0040C2                     	if	0	;tblptru may be non-zero
  7413  0040C2                     	endif
  7414  0040C2  0008               	tblrd		*
  7415  0040C4  50F5               	movf	tablat,w,c
  7416  0040C6  5C11               	subwf	??_strncmp,w,c
  7417  0040C8  6E0B               	movwf	?_strncmp,c
  7418  0040CA  6A0C               	clrf	?_strncmp+1,c
  7419  0040CC  A0D8               	btfss	status,0,c
  7420  0040CE  060C               	decf	?_strncmp+1,f,c
  7421  0040D0  0012               	return		;funcret
  7422  0040D2                     __end_of_strncmp:
  7423                           	opt callstack 0
  7424                           
  7425 ;; *************** function _efgtoa *****************
  7426 ;; Defined at:
  7427 ;;		line 319 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  7430 ;;		 -> NULL(0), 
  7431 ;;  f               4   83[COMRAM] PTR struct _IO_FILE
  7432 ;;  c               1   87[COMRAM] unsigned char 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  u               4   52[BANK0 ] unsigned char 
  7435 ;;  g               4   44[BANK0 ] unsigned char 
  7436 ;;  l               4   38[BANK0 ] unsigned char 
  7437 ;;  h               4   34[BANK0 ] unsigned char 
  7438 ;;  ou              4    0[BANK0 ] unsigned char 
  7439 ;;  n               2   50[BANK0 ] int 
  7440 ;;  e               2   48[BANK0 ] int 
  7441 ;;  i               2   42[BANK0 ] int 
  7442 ;;  w               2   31[BANK0 ] int 
  7443 ;;  p               2   28[BANK0 ] int 
  7444 ;;  sign            2   26[BANK0 ] int 
  7445 ;;  d               2   24[BANK0 ] int 
  7446 ;;  ne              2   22[BANK0 ] int 
  7447 ;;  m               2   20[BANK0 ] int 
  7448 ;;  pp              2   18[BANK0 ] int 
  7449 ;;  t               2   16[BANK0 ] int 
  7450 ;;  mode            1   33[BANK0 ] unsigned char 
  7451 ;;  nmode           1   30[BANK0 ] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  2   81[COMRAM] int 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7461 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;Total ram usage:       68 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:    8
  7468 ;; This function calls:
  7469 ;;		___awdiv
  7470 ;;		___awmod
  7471 ;;		___fladd
  7472 ;;		___fldiv
  7473 ;;		___fleq
  7474 ;;		___flge
  7475 ;;		___flmul
  7476 ;;		___flneg
  7477 ;;		___flsub
  7478 ;;		___fltol
  7479 ;;		___fpclassifyf
  7480 ;;		_floorf
  7481 ;;		_isupper
  7482 ;;		_pad
  7483 ;;		_strcpy
  7484 ;;		_tolower
  7485 ;; This function is called by:
  7486 ;;		_vfpfcnvrt
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text12
  7491  0014D6                     __ptext12:
  7492                           	opt callstack 0
  7493  0014D6                     _efgtoa:
  7494                           	opt callstack 19
  7495                           
  7496                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 320: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c:
      +                           321:     char mode, nmode;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dop
      +                          rnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 323:     long double g, h, l, ou, u;
  7497                           
  7498                           ;incstack = 0
  7499  0014D6  0E00               	movlw	0
  7500  0014D8  0100               	movlb	0	; () banked
  7501  0014DA  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  7502  0014DC  0E00               	movlw	0
  7503  0014DE  6F9A               	movwf	efgtoa@sign& (0+255),b
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  7507  0014E0  C054  F0AC         	movff	efgtoa@f,efgtoa@g
  7508  0014E4  C055  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  7509  0014E8  C056  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  7510  0014EC  C057  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0
      +                          ) {
  7514  0014F0  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  7515  0014F2  D016               	goto	l8260
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 
      +                          1;
  7519  0014F4  0E00               	movlw	0
  7520  0014F6  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  7521  0014F8  0E01               	movlw	1
  7522  0014FA  6F9A               	movwf	efgtoa@sign& (0+255),b
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  7526  0014FC  C0AC  F00B         	movff	efgtoa@g,___flneg@f1
  7527  001500  C0AD  F00C         	movff	efgtoa@g+1,___flneg@f1+1
  7528  001504  C0AE  F00D         	movff	efgtoa@g+2,___flneg@f1+2
  7529  001508  C0AF  F00E         	movff	efgtoa@g+3,___flneg@f1+3
  7530  00150C  ECFE  F024         	call	___flneg	;wreg free
  7531  001510  C00B  F0AC         	movff	?___flneg,efgtoa@g
  7532  001514  C00C  F0AD         	movff	?___flneg+1,efgtoa@g+1
  7533  001518  C00D  F0AE         	movff	?___flneg+2,efgtoa@g+2
  7534  00151C  C00E  F0AF         	movff	?___flneg+3,efgtoa@g+3
  7535  001520                     l8260:
  7536                           
  7537                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  7538  001520  0E00               	movlw	0
  7539  001522  0100               	movlb	0	; () banked
  7540  001524  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  7541  001526  0E00               	movlw	0
  7542  001528  6FB2               	movwf	efgtoa@n& (0+255),b
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  7546  00152A  C06E  F09F         	movff	_width,efgtoa@w
  7547  00152E  C06F  F0A0         	movff	_width+1,efgtoa@w+1
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign ||
      +                           (flags & (1 << 2))) {
  7551  001532  519A               	movf	efgtoa@sign& (0+255),w,b
  7552  001534  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7553  001536  A4D8               	btfss	status,2,c
  7554  001538  D002               	goto	u10160
  7555                           
  7556                           ; BSR set to: 0
  7557  00153A  A472               	btfss	_flags,2,c
  7558  00153C  D013               	goto	l8280
  7559  00153E                     u10160:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n]
      +                           = sign ? '-' : '+';
  7563  00153E  519A               	movf	efgtoa@sign& (0+255),w,b
  7564  001540  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7565  001542  A4D8               	btfss	status,2,c
  7566  001544  D004               	goto	l8272
  7567                           
  7568                           ; BSR set to: 0
  7569  001546  0E00               	movlw	0
  7570  001548  6F85               	movwf	(_efgtoa$1359+1)& (0+255),b
  7571  00154A  0E2B               	movlw	43
  7572  00154C  D003               	goto	L4
  7573  00154E                     l8272:
  7574                           
  7575                           ; BSR set to: 0
  7576  00154E  0E00               	movlw	0
  7577  001550  6F85               	movwf	(_efgtoa$1359+1)& (0+255),b
  7578  001552  0E2D               	movlw	45
  7579  001554                     L4:
  7580  001554  6F84               	movwf	_efgtoa$1359& (0+255),b
  7581                           
  7582                           ; BSR set to: 0
  7583  001556  C084  F10F         	movff	_efgtoa$1359,_dbuf
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  7587  00155A  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  7588  00155C  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  7592  00155E  079F               	decf	efgtoa@w& (0+255),f,b
  7593  001560  A0D8               	btfss	status,0,c
  7594  001562  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  7595  001564                     l8280:
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7599  001564  C0AC  F00B         	movff	efgtoa@g,___fpclassifyf@x
  7600  001568  C0AD  F00C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7601  00156C  C0AE  F00D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7602  001570  C0AF  F00E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7603  001574  EC55  F01F         	call	___fpclassifyf	;wreg free
  7604  001578  040B               	decf	?___fpclassifyf,w,c
  7605  00157A  100C               	iorwf	?___fpclassifyf+1,w,c
  7606  00157C  A4D8               	btfss	status,2,c
  7607  00157E  D04C               	goto	l8298
  7608  001580  0EBF               	movlw	191
  7609  001582  6E59               	movwf	??_efgtoa& (0+255),c
  7610  001584  0EFF               	movlw	255
  7611  001586  6E5A               	movwf	(??_efgtoa+1)& (0+255),c
  7612  001588  5058               	movf	efgtoa@c,w,c
  7613  00158A  6E5B               	movwf	(??_efgtoa+2)& (0+255),c
  7614  00158C  6A5C               	clrf	(??_efgtoa+3)& (0+255),c
  7615  00158E  5059               	movf	??_efgtoa,w,c
  7616  001590  265B               	addwf	??_efgtoa+2,f,c
  7617  001592  505A               	movf	??_efgtoa+1,w,c
  7618  001594  225C               	addwfc	??_efgtoa+3,f,c
  7619  001596  505C               	movf	??_efgtoa+3,w,c
  7620  001598  E106               	bnz	u10190
  7621  00159A  0E1A               	movlw	26
  7622  00159C  5C5B               	subwf	??_efgtoa+2,w,c
  7623  00159E  B0D8               	btfsc	status,0,c
  7624  0015A0  D002               	goto	u10190
  7625  0015A2  0E01               	movlw	1
  7626  0015A4  D001               	goto	u10200
  7627  0015A6                     u10190:
  7628  0015A6  0E00               	movlw	0
  7629  0015A8                     u10200:
  7630  0015A8  0100               	movlb	0	; () banked
  7631  0015AA  6F86               	movwf	_efgtoa$1360& (0+255),b
  7632  0015AC  6B87               	clrf	(_efgtoa$1360+1)& (0+255),b
  7633                           
  7634                           ; BSR set to: 0
  7635  0015AE  5186               	movf	_efgtoa$1360& (0+255),w,b
  7636  0015B0  1187               	iorwf	(_efgtoa$1360+1)& (0+255),w,b
  7637  0015B2  B4D8               	btfsc	status,2,c
  7638  0015B4  D00D               	goto	l8290
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             str
      +                          cpy(&dbuf[n], "INF");
  7642  0015B6  0E0F               	movlw	low _dbuf
  7643  0015B8  25B2               	addwf	efgtoa@n& (0+255),w,b
  7644  0015BA  6E0B               	movwf	strcpy@dest,c
  7645  0015BC  0E01               	movlw	high _dbuf
  7646  0015BE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7647  0015C0  6E0C               	movwf	strcpy@dest+1,c
  7648  0015C2  0EEB               	movlw	low STR_52
  7649  0015C4  6E0D               	movwf	strcpy@src,c
  7650  0015C6  0EFF               	movlw	high STR_52
  7651  0015C8  6E0E               	movwf	strcpy@src+1,c
  7652  0015CA  ECFC  F022         	call	_strcpy	;wreg free
  7653                           
  7654                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else 
      +                          {
  7655  0015CE  D00C               	goto	l8292
  7656  0015D0                     l8290:
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             str
      +                          cpy(&dbuf[n], "inf");
  7660  0015D0  0E0F               	movlw	low _dbuf
  7661  0015D2  25B2               	addwf	efgtoa@n& (0+255),w,b
  7662  0015D4  6E0B               	movwf	strcpy@dest,c
  7663  0015D6  0E01               	movlw	high _dbuf
  7664  0015D8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7665  0015DA  6E0C               	movwf	strcpy@dest+1,c
  7666  0015DC  0EF3               	movlw	low STR_53
  7667  0015DE  6E0D               	movwf	strcpy@src,c
  7668  0015E0  0EFF               	movlw	high STR_53
  7669  0015E2  6E0E               	movwf	strcpy@src+1,c
  7670  0015E4  ECFC  F022         	call	_strcpy	;wreg free
  7671  0015E8                     l8292:
  7672                           
  7673                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  7674  0015E8  0100               	movlb	0	; () banked
  7675  0015EA  0EFD               	movlw	253
  7676  0015EC  279F               	addwf	efgtoa@w& (0+255),f,b
  7677  0015EE  0EFF               	movlw	255
  7678  0015F0  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return 
      +                          pad(fp, &dbuf[0], w);
  7682  0015F2  C052  F01F         	movff	efgtoa@fp,pad@fp
  7683  0015F6  C053  F020         	movff	efgtoa@fp+1,pad@fp+1
  7684  0015FA  0E0F               	movlw	low _dbuf
  7685  0015FC  6E21               	movwf	pad@buf,c
  7686  0015FE  0E01               	movlw	high _dbuf
  7687  001600  6E22               	movwf	pad@buf+1,c
  7688  001602  C09F  F023         	movff	efgtoa@w,pad@p
  7689  001606  C0A0  F024         	movff	efgtoa@w+1,pad@p+1
  7690  00160A  EC69  F020         	call	_pad	;wreg free
  7691  00160E  C01F  F052         	movff	?_pad,?_efgtoa
  7692  001612  C020  F053         	movff	?_pad+1,?_efgtoa+1
  7693  001616  0012               	return	
  7694  001618                     l8298:
  7695                           
  7696                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7697  001618  C0AC  F00B         	movff	efgtoa@g,___fpclassifyf@x
  7698  00161C  C0AD  F00C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7699  001620  C0AE  F00D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7700  001624  C0AF  F00E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7701  001628  EC55  F01F         	call	___fpclassifyf	;wreg free
  7702  00162C  500B               	movf	?___fpclassifyf,w,c
  7703  00162E  100C               	iorwf	?___fpclassifyf+1,w,c
  7704  001630  A4D8               	btfss	status,2,c
  7705  001632  D04C               	goto	l8316
  7706  001634  0EBF               	movlw	191
  7707  001636  6E59               	movwf	??_efgtoa& (0+255),c
  7708  001638  0EFF               	movlw	255
  7709  00163A  6E5A               	movwf	(??_efgtoa+1)& (0+255),c
  7710  00163C  5058               	movf	efgtoa@c,w,c
  7711  00163E  6E5B               	movwf	(??_efgtoa+2)& (0+255),c
  7712  001640  6A5C               	clrf	(??_efgtoa+3)& (0+255),c
  7713  001642  5059               	movf	??_efgtoa,w,c
  7714  001644  265B               	addwf	??_efgtoa+2,f,c
  7715  001646  505A               	movf	??_efgtoa+1,w,c
  7716  001648  225C               	addwfc	??_efgtoa+3,f,c
  7717  00164A  505C               	movf	??_efgtoa+3,w,c
  7718  00164C  E106               	bnz	u10230
  7719  00164E  0E1A               	movlw	26
  7720  001650  5C5B               	subwf	??_efgtoa+2,w,c
  7721  001652  B0D8               	btfsc	status,0,c
  7722  001654  D002               	goto	u10230
  7723  001656  0E01               	movlw	1
  7724  001658  D001               	goto	u10240
  7725  00165A                     u10230:
  7726  00165A  0E00               	movlw	0
  7727  00165C                     u10240:
  7728  00165C  0100               	movlb	0	; () banked
  7729  00165E  6F88               	movwf	_efgtoa$1364& (0+255),b
  7730  001660  6B89               	clrf	(_efgtoa$1364+1)& (0+255),b
  7731                           
  7732                           ; BSR set to: 0
  7733  001662  5188               	movf	_efgtoa$1364& (0+255),w,b
  7734  001664  1189               	iorwf	(_efgtoa$1364+1)& (0+255),w,b
  7735  001666  B4D8               	btfsc	status,2,c
  7736  001668  D00D               	goto	l8308
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             str
      +                          cpy(&dbuf[n], "NAN");
  7740  00166A  0E0F               	movlw	low _dbuf
  7741  00166C  25B2               	addwf	efgtoa@n& (0+255),w,b
  7742  00166E  6E0B               	movwf	strcpy@dest,c
  7743  001670  0E01               	movlw	high _dbuf
  7744  001672  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7745  001674  6E0C               	movwf	strcpy@dest+1,c
  7746  001676  0EEF               	movlw	low STR_56
  7747  001678  6E0D               	movwf	strcpy@src,c
  7748  00167A  0EFF               	movlw	high STR_56
  7749  00167C  6E0E               	movwf	strcpy@src+1,c
  7750  00167E  ECFC  F022         	call	_strcpy	;wreg free
  7751                           
  7752                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else 
      +                          {
  7753  001682  D00C               	goto	l8310
  7754  001684                     l8308:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             str
      +                          cpy(&dbuf[n], "nan");
  7758  001684  0E0F               	movlw	low _dbuf
  7759  001686  25B2               	addwf	efgtoa@n& (0+255),w,b
  7760  001688  6E0B               	movwf	strcpy@dest,c
  7761  00168A  0E01               	movlw	high _dbuf
  7762  00168C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7763  00168E  6E0C               	movwf	strcpy@dest+1,c
  7764  001690  0EF7               	movlw	low STR_57
  7765  001692  6E0D               	movwf	strcpy@src,c
  7766  001694  0EFF               	movlw	high STR_57
  7767  001696  6E0E               	movwf	strcpy@src+1,c
  7768  001698  ECFC  F022         	call	_strcpy	;wreg free
  7769  00169C                     l8310:
  7770                           
  7771                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 358:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  7772  00169C  0100               	movlb	0	; () banked
  7773  00169E  0EFD               	movlw	253
  7774  0016A0  279F               	addwf	efgtoa@w& (0+255),f,b
  7775  0016A2  0EFF               	movlw	255
  7776  0016A4  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 359:         return 
      +                          pad(fp, &dbuf[0], w);
  7780  0016A6  C052  F01F         	movff	efgtoa@fp,pad@fp
  7781  0016AA  C053  F020         	movff	efgtoa@fp+1,pad@fp+1
  7782  0016AE  0E0F               	movlw	low _dbuf
  7783  0016B0  6E21               	movwf	pad@buf,c
  7784  0016B2  0E01               	movlw	high _dbuf
  7785  0016B4  6E22               	movwf	pad@buf+1,c
  7786  0016B6  C09F  F023         	movff	efgtoa@w,pad@p
  7787  0016BA  C0A0  F024         	movff	efgtoa@w+1,pad@p+1
  7788  0016BE  EC69  F020         	call	_pad	;wreg free
  7789  0016C2  C01F  F052         	movff	?_pad,?_efgtoa
  7790  0016C6  C020  F053         	movff	?_pad+1,?_efgtoa+1
  7791  0016CA  0012               	return	
  7792  0016CC                     l8316:
  7793                           
  7794                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  7795  0016CC  0E00               	movlw	0
  7796  0016CE  0100               	movlb	0	; () banked
  7797  0016D0  6FB4               	movwf	efgtoa@u& (0+255),b
  7798  0016D2  0E00               	movlw	0
  7799  0016D4  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  7800  0016D6  0E80               	movlw	128
  7801  0016D8  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  7802  0016DA  0E3F               	movlw	63
  7803  0016DC  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  7804                           
  7805                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  7806  0016DE  0E00               	movlw	0
  7807  0016E0  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  7808  0016E2  0E00               	movlw	0
  7809  0016E4  6FB0               	movwf	efgtoa@e& (0+255),b
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 
      +                          0.0)) {
  7813  0016E6  C0AC  F00B         	movff	efgtoa@g,___fleq@ff1
  7814  0016EA  C0AD  F00C         	movff	efgtoa@g+1,___fleq@ff1+1
  7815  0016EE  C0AE  F00D         	movff	efgtoa@g+2,___fleq@ff1+2
  7816  0016F2  C0AF  F00E         	movff	efgtoa@g+3,___fleq@ff1+3
  7817  0016F6  0E00               	movlw	0
  7818  0016F8  6E0F               	movwf	___fleq@ff2,c
  7819  0016FA  0E00               	movlw	0
  7820  0016FC  6E10               	movwf	___fleq@ff2+1,c
  7821  0016FE  0E00               	movlw	0
  7822  001700  6E11               	movwf	___fleq@ff2+2,c
  7823  001702  0E00               	movlw	0
  7824  001704  6E12               	movwf	___fleq@ff2+3,c
  7825  001706  ECFA  F020         	call	___fleq	;wreg free
  7826  00170A  A0D8               	btfss	status,0,c
  7827  00170C  D01E               	goto	l8326
  7828  00170E  D076               	goto	u10280
  7829  001710                     l8322:
  7830                           
  7831                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u =
      +                           u*10.0;
  7832  001710  C0B4  F01F         	movff	efgtoa@u,___flmul@b
  7833  001714  C0B5  F020         	movff	efgtoa@u+1,___flmul@b+1
  7834  001718  C0B6  F021         	movff	efgtoa@u+2,___flmul@b+2
  7835  00171C  C0B7  F022         	movff	efgtoa@u+3,___flmul@b+3
  7836  001720  0E00               	movlw	0
  7837  001722  6E23               	movwf	___flmul@a,c
  7838  001724  0E00               	movlw	0
  7839  001726  6E24               	movwf	___flmul@a+1,c
  7840  001728  0E20               	movlw	32
  7841  00172A  6E25               	movwf	___flmul@a+2,c
  7842  00172C  0E41               	movlw	65
  7843  00172E  6E26               	movwf	___flmul@a+3,c
  7844  001730  ECDE  F012         	call	___flmul	;wreg free
  7845  001734  C01F  F0B4         	movff	?___flmul,efgtoa@u
  7846  001738  C020  F0B5         	movff	?___flmul+1,efgtoa@u+1
  7847  00173C  C021  F0B6         	movff	?___flmul+2,efgtoa@u+2
  7848  001740  C022  F0B7         	movff	?___flmul+3,efgtoa@u+3
  7849                           
  7850                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e
      +                          ;
  7851  001744  0100               	movlb	0	; () banked
  7852  001746  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  7853  001748  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  7854  00174A                     l8326:
  7855                           
  7856                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (
      +                          !(g < (u*10.0))) {
  7857  00174A  C0AC  F03F         	movff	efgtoa@g,___flge@ff1
  7858  00174E  C0AD  F040         	movff	efgtoa@g+1,___flge@ff1+1
  7859  001752  C0AE  F041         	movff	efgtoa@g+2,___flge@ff1+2
  7860  001756  C0AF  F042         	movff	efgtoa@g+3,___flge@ff1+3
  7861  00175A  0E00               	movlw	0
  7862  00175C  6E23               	movwf	___flmul@a,c
  7863  00175E  0E00               	movlw	0
  7864  001760  6E24               	movwf	___flmul@a+1,c
  7865  001762  0E20               	movlw	32
  7866  001764  6E25               	movwf	___flmul@a+2,c
  7867  001766  0E41               	movlw	65
  7868  001768  6E26               	movwf	___flmul@a+3,c
  7869  00176A  C0B4  F01F         	movff	efgtoa@u,___flmul@b
  7870  00176E  C0B5  F020         	movff	efgtoa@u+1,___flmul@b+1
  7871  001772  C0B6  F021         	movff	efgtoa@u+2,___flmul@b+2
  7872  001776  C0B7  F022         	movff	efgtoa@u+3,___flmul@b+3
  7873  00177A  ECDE  F012         	call	___flmul	;wreg free
  7874  00177E  C01F  F043         	movff	?___flmul,___flge@ff2
  7875  001782  C020  F044         	movff	?___flmul+1,___flge@ff2+1
  7876  001786  C021  F045         	movff	?___flmul+2,___flge@ff2+2
  7877  00178A  C022  F046         	movff	?___flmul+3,___flge@ff2+3
  7878  00178E  ECED  F01E         	call	___flge	;wreg free
  7879  001792  A0D8               	btfss	status,0,c
  7880  001794  D01F               	goto	l8332
  7881  001796  D7BC               	goto	l8322
  7882  001798                     l8328:
  7883                           
  7884                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u =
      +                           u/10.0;
  7885  001798  C0B4  F01F         	movff	efgtoa@u,___fldiv@b
  7886  00179C  C0B5  F020         	movff	efgtoa@u+1,___fldiv@b+1
  7887  0017A0  C0B6  F021         	movff	efgtoa@u+2,___fldiv@b+2
  7888  0017A4  C0B7  F022         	movff	efgtoa@u+3,___fldiv@b+3
  7889  0017A8  0E00               	movlw	0
  7890  0017AA  6E23               	movwf	___fldiv@a,c
  7891  0017AC  0E00               	movlw	0
  7892  0017AE  6E24               	movwf	___fldiv@a+1,c
  7893  0017B0  0E20               	movlw	32
  7894  0017B2  6E25               	movwf	___fldiv@a+2,c
  7895  0017B4  0E41               	movlw	65
  7896  0017B6  6E26               	movwf	___fldiv@a+3,c
  7897  0017B8  EC0D  F016         	call	___fldiv	;wreg free
  7898  0017BC  C01F  F0B4         	movff	?___fldiv,efgtoa@u
  7899  0017C0  C020  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  7900  0017C4  C021  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  7901  0017C8  C022  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  7902                           
  7903                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e
      +                          ;
  7904  0017CC  0100               	movlb	0	; () banked
  7905  0017CE  07B0               	decf	efgtoa@e& (0+255),f,b
  7906  0017D0  A0D8               	btfss	status,0,c
  7907  0017D2  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  7908  0017D4                     l8332:
  7909                           
  7910                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (
      +                          g < u) {
  7911  0017D4  C0AC  F03F         	movff	efgtoa@g,___flge@ff1
  7912  0017D8  C0AD  F040         	movff	efgtoa@g+1,___flge@ff1+1
  7913  0017DC  C0AE  F041         	movff	efgtoa@g+2,___flge@ff1+2
  7914  0017E0  C0AF  F042         	movff	efgtoa@g+3,___flge@ff1+3
  7915  0017E4  C0B4  F043         	movff	efgtoa@u,___flge@ff2
  7916  0017E8  C0B5  F044         	movff	efgtoa@u+1,___flge@ff2+1
  7917  0017EC  C0B6  F045         	movff	efgtoa@u+2,___flge@ff2+2
  7918  0017F0  C0B7  F046         	movff	efgtoa@u+3,___flge@ff2+3
  7919  0017F4  ECED  F01E         	call	___flge	;wreg free
  7920  0017F8  A0D8               	btfss	status,0,c
  7921  0017FA  D7CE               	goto	l8328
  7922  0017FC                     u10280:
  7923                           
  7924                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolo
      +                          wer((int)c);
  7925  0017FC  C058  F011         	movff	efgtoa@c,tolower@c
  7926  001800  6A12               	clrf	tolower@c+1,c
  7927  001802  EC73  F023         	call	_tolower	;wreg free
  7928  001806  5011               	movf	?_tolower,w,c
  7929  001808  0100               	movlb	0	; () banked
  7930  00180A  6FA1               	movwf	efgtoa@mode& (0+255),b
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mod
      +                          e;
  7934  00180C  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode ==
      +                           'g') {
  7938  001810  0E67               	movlw	103
  7939  001812  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  7940  001814  A4D8               	btfss	status,2,c
  7941  001816  D019               	goto	l8348
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0
      +                          ) {
  7945  001818  5070               	movf	_prec,w,c
  7946  00181A  1071               	iorwf	_prec+1,w,c
  7947  00181C  A4D8               	btfss	status,2,c
  7948  00181E  D004               	goto	l8344
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  7952  001820  0E00               	movlw	0
  7953  001822  6E71               	movwf	_prec+1,c
  7954  001824  0E01               	movlw	1
  7955  001826  6E70               	movwf	_prec,c
  7956  001828                     l8344:
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 
      +                          < prec) ? prec : 6;
  7960  001828  BE71               	btfsc	_prec+1,7,c
  7961  00182A  D005               	goto	u10310
  7962  00182C  5071               	movf	_prec+1,w,c
  7963  00182E  E108               	bnz	l553
  7964  001830  0470               	decf	_prec,w,c
  7965  001832  B0D8               	btfsc	status,0,c
  7966  001834  D005               	goto	l553
  7967  001836                     u10310:
  7968                           
  7969                           ; BSR set to: 0
  7970  001836  0E00               	movlw	0
  7971  001838  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  7972  00183A  0E06               	movlw	6
  7973  00183C  6F9C               	movwf	efgtoa@p& (0+255),b
  7974  00183E  D008               	goto	l8354
  7975  001840                     l553:
  7976                           
  7977                           ; BSR set to: 0
  7978  001840  C070  F09C         	movff	_prec,efgtoa@p
  7979  001844  C071  F09D         	movff	_prec+1,efgtoa@p+1
  7980  001848  D003               	goto	l8354
  7981  00184A                     l8348:
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (pr
      +                          ec < 0) ? 6 : prec;
  7985  00184A  AE71               	btfss	_prec+1,7,c
  7986  00184C  D7F9               	goto	l553
  7987  00184E  D7F3               	goto	u10310
  7988  001850                     l8354:
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode ==
      +                           'g') {
  7992  001850  0E67               	movlw	103
  7993  001852  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  7994  001854  A4D8               	btfss	status,2,c
  7995  001856  D022               	goto	l8364
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  7999  001858  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  8000  00185A  D006               	goto	u10340
  8001  00185C  0EFC               	movlw	252
  8002  00185E  5DB0               	subwf	efgtoa@e& (0+255),w,b
  8003  001860  0EFF               	movlw	255
  8004  001862  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8005  001864  A0D8               	btfss	status,0,c
  8006  001866  D018               	goto	l8362
  8007  001868                     u10340:
  8008                           
  8009                           ; BSR set to: 0
  8010  001868  0EFF               	movlw	255
  8011  00186A  6E59               	movwf	??_efgtoa& (0+255),c
  8012  00186C  0EFF               	movlw	255
  8013  00186E  6E5A               	movwf	(??_efgtoa+1)& (0+255),c
  8014  001870  C09C  F05B         	movff	efgtoa@p,??_efgtoa+2
  8015  001874  C09D  F05C         	movff	efgtoa@p+1,??_efgtoa+3
  8016  001878  5059               	movf	??_efgtoa,w,c
  8017  00187A  265B               	addwf	??_efgtoa+2,f,c
  8018  00187C  505A               	movf	??_efgtoa+1,w,c
  8019  00187E  225C               	addwfc	??_efgtoa+3,f,c
  8020  001880  51B0               	movf	efgtoa@e& (0+255),w,b
  8021  001882  5C5B               	subwf	??_efgtoa+2,w,c
  8022  001884  505C               	movf	??_efgtoa+3,w,c
  8023  001886  0A80               	xorlw	128
  8024  001888  6E5D               	movwf	(??_efgtoa+4)& (0+255),c
  8025  00188A  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  8026  00188C  0A80               	xorlw	128
  8027  00188E  585D               	subwfb	(??_efgtoa+4)& (0+255),w,c
  8028  001890  A0D8               	btfss	status,0,c
  8029  001892  D002               	goto	l8362
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmo
      +                          de = 'f';
  8033  001894  0E66               	movlw	102
  8034  001896  D001               	goto	L5
  8035  001898                     l8362:
  8036                           
  8037                           ; BSR set to: 0
  8038                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmo
      +                          de = 'e';
  8039  001898  0E65               	movlw	101
  8040  00189A                     L5:
  8041  00189A  6F9E               	movwf	efgtoa@nmode& (0+255),b
  8042  00189C                     l8364:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  8046  00189C  C09C  F094         	movff	efgtoa@p,efgtoa@m
  8047  0018A0  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  8051  0018A4  0E67               	movlw	103
  8052  0018A6  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  8053  0018A8  A4D8               	btfss	status,2,c
  8054  0018AA  D005               	goto	u10380
  8055                           
  8056                           ; BSR set to: 0
  8057  0018AC  0E66               	movlw	102
  8058  0018AE  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8059  0018B0  B4D8               	btfsc	status,2,c
  8060                           
  8061                           ; BSR set to: 0
  8062  0018B2  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  8063  0018B4  D002               	goto	l8374
  8064  0018B6                     u10380:
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  8068  0018B6  4B94               	infsnz	efgtoa@m& (0+255),f,b
  8069  0018B8  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  8070  0018BA                     l8374:
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode =
      +                          = 'f') {
  8074  0018BA  0E66               	movlw	102
  8075  0018BC  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8076  0018BE  A4D8               	btfss	status,2,c
  8077  0018C0  D016               	goto	l8384
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e <
      +                           0) {
  8081  0018C2  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  8082  0018C4  D00C               	goto	l8380
  8083                           
  8084                           ; BSR set to: 0
  8085                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u =
      +                           1.0;
  8086  0018C6  0E00               	movlw	0
  8087  0018C8  6FB4               	movwf	efgtoa@u& (0+255),b
  8088  0018CA  0E00               	movlw	0
  8089  0018CC  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  8090  0018CE  0E80               	movlw	128
  8091  0018D0  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  8092  0018D2  0E3F               	movlw	63
  8093  0018D4  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  8094                           
  8095                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e =
      +                           0;
  8096  0018D6  0E00               	movlw	0
  8097  0018D8  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  8098  0018DA  0E00               	movlw	0
  8099  0018DC  6FB0               	movwf	efgtoa@e& (0+255),b
  8100  0018DE                     l8380:
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(m
      +                          ode == 'g')) {
  8104  0018DE  0E67               	movlw	103
  8105  0018E0  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  8106  0018E2  B4D8               	btfsc	status,2,c
  8107  0018E4  D004               	goto	l8384
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m +
      +                          = e;
  8111  0018E6  51B0               	movf	efgtoa@e& (0+255),w,b
  8112  0018E8  2794               	addwf	efgtoa@m& (0+255),f,b
  8113  0018EA  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  8114  0018EC  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8115  0018EE                     l8384:
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  8119  0018EE  0E00               	movlw	0
  8120  0018F0  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  8121  0018F2  0E00               	movlw	0
  8122  0018F4  6FAA               	movwf	efgtoa@i& (0+255),b
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  8126  0018F6  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  8127  0018FA  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  8128  0018FE  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  8129  001902  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  8133  001906  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  8134  00190A  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  8135  00190E  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  8136  001912  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  8137                           
  8138                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  8139  001916  D07B               	goto	l8398
  8140  001918                     l8390:
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = flo
      +                          orf(h/u);
  8144  001918  C0A2  F01F         	movff	efgtoa@h,___fldiv@b
  8145  00191C  C0A3  F020         	movff	efgtoa@h+1,___fldiv@b+1
  8146  001920  C0A4  F021         	movff	efgtoa@h+2,___fldiv@b+2
  8147  001924  C0A5  F022         	movff	efgtoa@h+3,___fldiv@b+3
  8148  001928  C0B4  F023         	movff	efgtoa@u,___fldiv@a
  8149  00192C  C0B5  F024         	movff	efgtoa@u+1,___fldiv@a+1
  8150  001930  C0B6  F025         	movff	efgtoa@u+2,___fldiv@a+2
  8151  001934  C0B7  F026         	movff	efgtoa@u+3,___fldiv@a+3
  8152  001938  EC0D  F016         	call	___fldiv	;wreg free
  8153  00193C  C01F  F038         	movff	?___fldiv,floorf@x
  8154  001940  C020  F039         	movff	?___fldiv+1,floorf@x+1
  8155  001944  C021  F03A         	movff	?___fldiv+2,floorf@x+2
  8156  001948  C022  F03B         	movff	?___fldiv+3,floorf@x+3
  8157  00194C  EC88  F019         	call	_floorf	;wreg free
  8158  001950  C038  F0A6         	movff	?_floorf,efgtoa@l
  8159  001954  C039  F0A7         	movff	?_floorf+1,efgtoa@l+1
  8160  001958  C03A  F0A8         	movff	?_floorf+2,efgtoa@l+2
  8161  00195C  C03B  F0A9         	movff	?_floorf+3,efgtoa@l+3
  8162                           
  8163                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (in
      +                          t)l;
  8164  001960  C0A6  F048         	movff	efgtoa@l,___fltol@f1
  8165  001964  C0A7  F049         	movff	efgtoa@l+1,___fltol@f1+1
  8166  001968  C0A8  F04A         	movff	efgtoa@l+2,___fltol@f1+2
  8167  00196C  C0A9  F04B         	movff	efgtoa@l+3,___fltol@f1+3
  8168  001970  ECBB  F01F         	call	___fltol	;wreg free
  8169  001974  C048  F098         	movff	?___fltol,efgtoa@d
  8170  001978  C049  F099         	movff	?___fltol+1,efgtoa@d+1
  8171                           
  8172                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*
      +                          u;
  8173  00197C  C0A2  F048         	movff	efgtoa@h,___flsub@b
  8174  001980  C0A3  F049         	movff	efgtoa@h+1,___flsub@b+1
  8175  001984  C0A4  F04A         	movff	efgtoa@h+2,___flsub@b+2
  8176  001988  C0A5  F04B         	movff	efgtoa@h+3,___flsub@b+3
  8177  00198C  C0B4  F023         	movff	efgtoa@u,___flmul@a
  8178  001990  C0B5  F024         	movff	efgtoa@u+1,___flmul@a+1
  8179  001994  C0B6  F025         	movff	efgtoa@u+2,___flmul@a+2
  8180  001998  C0B7  F026         	movff	efgtoa@u+3,___flmul@a+3
  8181  00199C  C0A6  F01F         	movff	efgtoa@l,___flmul@b
  8182  0019A0  C0A7  F020         	movff	efgtoa@l+1,___flmul@b+1
  8183  0019A4  C0A8  F021         	movff	efgtoa@l+2,___flmul@b+2
  8184  0019A8  C0A9  F022         	movff	efgtoa@l+3,___flmul@b+3
  8185  0019AC  ECDE  F012         	call	___flmul	;wreg free
  8186  0019B0  C01F  F04C         	movff	?___flmul,___flsub@a
  8187  0019B4  C020  F04D         	movff	?___flmul+1,___flsub@a+1
  8188  0019B8  C021  F04E         	movff	?___flmul+2,___flsub@a+2
  8189  0019BC  C022  F04F         	movff	?___flmul+3,___flsub@a+3
  8190  0019C0  ECBE  F023         	call	___flsub	;wreg free
  8191  0019C4  C048  F0A2         	movff	?___flsub,efgtoa@h
  8192  0019C8  C049  F0A3         	movff	?___flsub+1,efgtoa@h+1
  8193  0019CC  C04A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  8194  0019D0  C04B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  8195                           
  8196                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/1
      +                          0.0;
  8197  0019D4  C0B4  F01F         	movff	efgtoa@u,___fldiv@b
  8198  0019D8  C0B5  F020         	movff	efgtoa@u+1,___fldiv@b+1
  8199  0019DC  C0B6  F021         	movff	efgtoa@u+2,___fldiv@b+2
  8200  0019E0  C0B7  F022         	movff	efgtoa@u+3,___fldiv@b+3
  8201  0019E4  0E00               	movlw	0
  8202  0019E6  6E23               	movwf	___fldiv@a,c
  8203  0019E8  0E00               	movlw	0
  8204  0019EA  6E24               	movwf	___fldiv@a+1,c
  8205  0019EC  0E20               	movlw	32
  8206  0019EE  6E25               	movwf	___fldiv@a+2,c
  8207  0019F0  0E41               	movlw	65
  8208  0019F2  6E26               	movwf	___fldiv@a+3,c
  8209  0019F4  EC0D  F016         	call	___fldiv	;wreg free
  8210  0019F8  C01F  F0B4         	movff	?___fldiv,efgtoa@u
  8211  0019FC  C020  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  8212  001A00  C021  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  8213  001A04  C022  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  8214                           
  8215                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  8216  001A08  0100               	movlb	0	; () banked
  8217  001A0A  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  8218  001A0C  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  8219  001A0E                     l8398:
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  8223  001A0E  5194               	movf	efgtoa@m& (0+255),w,b
  8224  001A10  5DAA               	subwf	efgtoa@i& (0+255),w,b
  8225  001A12  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  8226  001A14  0A80               	xorlw	128
  8227  001A16  6E59               	movwf	??_efgtoa& (0+255),c
  8228  001A18  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  8229  001A1A  0A80               	xorlw	128
  8230  001A1C  5859               	subwfb	??_efgtoa& (0+255),w,c
  8231  001A1E  A0D8               	btfss	status,0,c
  8232  001A20  D77B               	goto	l8390
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  8236  001A22  C0B4  F01F         	movff	efgtoa@u,___flmul@b
  8237  001A26  C0B5  F020         	movff	efgtoa@u+1,___flmul@b+1
  8238  001A2A  C0B6  F021         	movff	efgtoa@u+2,___flmul@b+2
  8239  001A2E  C0B7  F022         	movff	efgtoa@u+3,___flmul@b+3
  8240  001A32  0E00               	movlw	0
  8241  001A34  6E23               	movwf	___flmul@a,c
  8242  001A36  0E00               	movlw	0
  8243  001A38  6E24               	movwf	___flmul@a+1,c
  8244  001A3A  0EA0               	movlw	160
  8245  001A3C  6E25               	movwf	___flmul@a+2,c
  8246  001A3E  0E40               	movlw	64
  8247  001A40  6E26               	movwf	___flmul@a+3,c
  8248  001A42  ECDE  F012         	call	___flmul	;wreg free
  8249  001A46  C01F  F0A6         	movff	?___flmul,efgtoa@l
  8250  001A4A  C020  F0A7         	movff	?___flmul+1,efgtoa@l+1
  8251  001A4E  C021  F0A8         	movff	?___flmul+2,efgtoa@l+2
  8252  001A52  C022  F0A9         	movff	?___flmul+3,efgtoa@l+3
  8253                           
  8254                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) 
      +                          {
  8255  001A56  C0A2  F03F         	movff	efgtoa@h,___flge@ff1
  8256  001A5A  C0A3  F040         	movff	efgtoa@h+1,___flge@ff1+1
  8257  001A5E  C0A4  F041         	movff	efgtoa@h+2,___flge@ff1+2
  8258  001A62  C0A5  F042         	movff	efgtoa@h+3,___flge@ff1+3
  8259  001A66  C0A6  F043         	movff	efgtoa@l,___flge@ff2
  8260  001A6A  C0A7  F044         	movff	efgtoa@l+1,___flge@ff2+1
  8261  001A6E  C0A8  F045         	movff	efgtoa@l+2,___flge@ff2+2
  8262  001A72  C0A9  F046         	movff	efgtoa@l+3,___flge@ff2+3
  8263  001A76  ECED  F01E         	call	___flge	;wreg free
  8264  001A7A  B0D8               	btfsc	status,0,c
  8265  001A7C  D003               	goto	l8406
  8266                           
  8267                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0
      +                          ;
  8268  001A7E  0E00               	movlw	0
  8269  001A80  0100               	movlb	0	; () banked
  8270  001A82  D018               	goto	L6
  8271  001A84                     l8406:
  8272                           
  8273                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h 
      +                          == l) && !(d % 2)) {
  8274  001A84  C0A2  F00B         	movff	efgtoa@h,___fleq@ff1
  8275  001A88  C0A3  F00C         	movff	efgtoa@h+1,___fleq@ff1+1
  8276  001A8C  C0A4  F00D         	movff	efgtoa@h+2,___fleq@ff1+2
  8277  001A90  C0A5  F00E         	movff	efgtoa@h+3,___fleq@ff1+3
  8278  001A94  C0A6  F00F         	movff	efgtoa@l,___fleq@ff2
  8279  001A98  C0A7  F010         	movff	efgtoa@l+1,___fleq@ff2+1
  8280  001A9C  C0A8  F011         	movff	efgtoa@l+2,___fleq@ff2+2
  8281  001AA0  C0A9  F012         	movff	efgtoa@l+3,___fleq@ff2+3
  8282  001AA4  ECFA  F020         	call	___fleq	;wreg free
  8283  001AA8  A0D8               	btfss	status,0,c
  8284  001AAA  D00B               	goto	l8412
  8285  001AAC  0100               	movlb	0	; () banked
  8286  001AAE  B198               	btfsc	efgtoa@d& (0+255),0,b
  8287  001AB0  D008               	goto	l8412
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l =
      +                           0.0;
  8291  001AB2  0E00               	movlw	0
  8292  001AB4                     L6:
  8293  001AB4  6FA6               	movwf	efgtoa@l& (0+255),b
  8294  001AB6  0E00               	movlw	0
  8295  001AB8  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  8296  001ABA  0E00               	movlw	0
  8297  001ABC  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  8298  001ABE  0E00               	movlw	0
  8299  001AC0  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  8300  001AC2                     l8412:
  8301                           
  8302                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  8303  001AC2  C0AC  F038         	movff	efgtoa@g,___fladd@b
  8304  001AC6  C0AD  F039         	movff	efgtoa@g+1,___fladd@b+1
  8305  001ACA  C0AE  F03A         	movff	efgtoa@g+2,___fladd@b+2
  8306  001ACE  C0AF  F03B         	movff	efgtoa@g+3,___fladd@b+3
  8307  001AD2  C0A6  F03C         	movff	efgtoa@l,___fladd@a
  8308  001AD6  C0A7  F03D         	movff	efgtoa@l+1,___fladd@a+1
  8309  001ADA  C0A8  F03E         	movff	efgtoa@l+2,___fladd@a+2
  8310  001ADE  C0A9  F03F         	movff	efgtoa@l+3,___fladd@a+3
  8311  001AE2  EC87  F014         	call	___fladd	;wreg free
  8312  001AE6  C038  F0A2         	movff	?___fladd,efgtoa@h
  8313  001AEA  C039  F0A3         	movff	?___fladd+1,efgtoa@h+1
  8314  001AEE  C03A  F0A4         	movff	?___fladd+2,efgtoa@h+2
  8315  001AF2  C03B  F0A5         	movff	?___fladd+3,efgtoa@h+3
  8316                           
  8317                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  8318  001AF6  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  8319  001AFA  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  8320  001AFE  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  8321  001B02  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  8322                           
  8323                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode
      +                           == 'e') ? 0 : e;
  8324  001B06  0E65               	movlw	101
  8325  001B08  0100               	movlb	0	; () banked
  8326  001B0A  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8327  001B0C  B4D8               	btfsc	status,2,c
  8328  001B0E  D005               	goto	l8420
  8329                           
  8330                           ; BSR set to: 0
  8331  001B10  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  8332  001B14  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  8333  001B18  D004               	goto	l579
  8334  001B1A                     l8420:
  8335                           
  8336                           ; BSR set to: 0
  8337  001B1A  0E00               	movlw	0
  8338  001B1C  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  8339  001B1E  0E00               	movlw	0
  8340  001B20  6F96               	movwf	efgtoa@ne& (0+255),b
  8341  001B22                     l579:
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  8345  001B22  0E00               	movlw	0
  8346  001B24  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  8347  001B26  0E00               	movlw	0
  8348  001B28  6F92               	movwf	efgtoa@pp& (0+255),b
  8349                           
  8350                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  8351  001B2A  0E00               	movlw	0
  8352  001B2C  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  8353  001B2E  0E00               	movlw	0
  8354  001B30  6F90               	movwf	efgtoa@t& (0+255),b
  8355                           
  8356                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  8357  001B32  0E00               	movlw	0
  8358  001B34  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  8359  001B36  0E00               	movlw	0
  8360  001B38  6FAA               	movwf	efgtoa@i& (0+255),b
  8361                           
  8362                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  8363  001B3A  D0C7               	goto	l8470
  8364  001B3C                     l8422:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = flo
      +                          orf(h/u);
  8368  001B3C  C0A2  F01F         	movff	efgtoa@h,___fldiv@b
  8369  001B40  C0A3  F020         	movff	efgtoa@h+1,___fldiv@b+1
  8370  001B44  C0A4  F021         	movff	efgtoa@h+2,___fldiv@b+2
  8371  001B48  C0A5  F022         	movff	efgtoa@h+3,___fldiv@b+3
  8372  001B4C  C0B4  F023         	movff	efgtoa@u,___fldiv@a
  8373  001B50  C0B5  F024         	movff	efgtoa@u+1,___fldiv@a+1
  8374  001B54  C0B6  F025         	movff	efgtoa@u+2,___fldiv@a+2
  8375  001B58  C0B7  F026         	movff	efgtoa@u+3,___fldiv@a+3
  8376  001B5C  EC0D  F016         	call	___fldiv	;wreg free
  8377  001B60  C01F  F038         	movff	?___fldiv,floorf@x
  8378  001B64  C020  F039         	movff	?___fldiv+1,floorf@x+1
  8379  001B68  C021  F03A         	movff	?___fldiv+2,floorf@x+2
  8380  001B6C  C022  F03B         	movff	?___fldiv+3,floorf@x+3
  8381  001B70  EC88  F019         	call	_floorf	;wreg free
  8382  001B74  C038  F0A6         	movff	?_floorf,efgtoa@l
  8383  001B78  C039  F0A7         	movff	?_floorf+1,efgtoa@l+1
  8384  001B7C  C03A  F0A8         	movff	?_floorf+2,efgtoa@l+2
  8385  001B80  C03B  F0A9         	movff	?_floorf+3,efgtoa@l+3
  8386                           
  8387                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (in
      +                          t)l;
  8388  001B84  C0A6  F048         	movff	efgtoa@l,___fltol@f1
  8389  001B88  C0A7  F049         	movff	efgtoa@l+1,___fltol@f1+1
  8390  001B8C  C0A8  F04A         	movff	efgtoa@l+2,___fltol@f1+2
  8391  001B90  C0A9  F04B         	movff	efgtoa@l+3,___fltol@f1+3
  8392  001B94  ECBB  F01F         	call	___fltol	;wreg free
  8393  001B98  C048  F098         	movff	?___fltol,efgtoa@d
  8394  001B9C  C049  F099         	movff	?___fltol+1,efgtoa@d+1
  8395                           
  8396                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8397  001BA0  B872               	btfsc	_flags,4,c
  8398  001BA2  D00D               	goto	l8434
  8399  001BA4  0100               	movlb	0	; () banked
  8400  001BA6  5198               	movf	efgtoa@d& (0+255),w,b
  8401  001BA8  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8402  001BAA  A4D8               	btfss	status,2,c
  8403  001BAC  D008               	goto	l8434
  8404                           
  8405                           ; BSR set to: 0
  8406  001BAE  0E67               	movlw	103
  8407  001BB0  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  8408  001BB2  B4D8               	btfsc	status,2,c
  8409                           
  8410                           ; BSR set to: 0
  8411  001BB4  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  8412  001BB6  D003               	goto	l8434
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t
      +                          ;
  8416  001BB8  4B90               	infsnz	efgtoa@t& (0+255),f,b
  8417  001BBA  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  8418                           
  8419                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else 
      +                          {
  8420  001BBC  D03A               	goto	l8462
  8421  001BBE                     l8434:
  8422                           
  8423                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if 
      +                          (!pp && (ne < 0)) {
  8424  001BBE  0100               	movlb	0	; () banked
  8425  001BC0  5192               	movf	efgtoa@pp& (0+255),w,b
  8426  001BC2  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8427  001BC4  B4D8               	btfsc	status,2,c
  8428                           
  8429                           ; BSR set to: 0
  8430  001BC6  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  8431  001BC8  D022               	goto	l8454
  8432                           
  8433                           ; BSR set to: 0
  8434                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                
      +                           dbuf[n++] = '.';
  8435  001BCA  0E0F               	movlw	low _dbuf
  8436  001BCC  25B2               	addwf	efgtoa@n& (0+255),w,b
  8437  001BCE  6ED9               	movwf	fsr2l,c
  8438  001BD0  0E01               	movlw	high _dbuf
  8439  001BD2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8440  001BD4  6EDA               	movwf	fsr2h,c
  8441  001BD6  0E2E               	movlw	46
  8442  001BD8  6EDF               	movwf	indf2,c
  8443                           
  8444                           ; BSR set to: 0
  8445  001BDA  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  8446  001BDC  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                
      +                           --w;
  8450  001BDE  079F               	decf	efgtoa@w& (0+255),f,b
  8451  001BE0  A0D8               	btfss	status,0,c
  8452  001BE2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                
      +                           pp = 1;
  8456  001BE4  0E00               	movlw	0
  8457  001BE6  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  8458  001BE8  0E01               	movlw	1
  8459  001BEA  6F92               	movwf	efgtoa@pp& (0+255),b
  8460  001BEC  D010               	goto	l8454
  8461  001BEE                     l8446:
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                
      +                           dbuf[n++] = '0';
  8465  001BEE  0E0F               	movlw	low _dbuf
  8466  001BF0  25B2               	addwf	efgtoa@n& (0+255),w,b
  8467  001BF2  6ED9               	movwf	fsr2l,c
  8468  001BF4  0E01               	movlw	high _dbuf
  8469  001BF6  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8470  001BF8  6EDA               	movwf	fsr2h,c
  8471  001BFA  0E30               	movlw	48
  8472  001BFC  6EDF               	movwf	indf2,c
  8473                           
  8474                           ; BSR set to: 0
  8475  001BFE  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  8476  001C00  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                
      +                           --w;
  8480  001C02  079F               	decf	efgtoa@w& (0+255),f,b
  8481  001C04  A0D8               	btfss	status,0,c
  8482  001C06  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                
      +                           --t;
  8486  001C08  0790               	decf	efgtoa@t& (0+255),f,b
  8487  001C0A  A0D8               	btfss	status,0,c
  8488  001C0C  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  8489  001C0E                     l8454:
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             whi
      +                          le (t) {
  8493  001C0E  5190               	movf	efgtoa@t& (0+255),w,b
  8494  001C10  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8495  001C12  A4D8               	btfss	status,2,c
  8496  001C14  D7EC               	goto	l8446
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbu
      +                          f[n++] = '0' + d;
  8500  001C16  0E0F               	movlw	low _dbuf
  8501  001C18  25B2               	addwf	efgtoa@n& (0+255),w,b
  8502  001C1A  6ED9               	movwf	fsr2l,c
  8503  001C1C  0E01               	movlw	high _dbuf
  8504  001C1E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8505  001C20  6EDA               	movwf	fsr2h,c
  8506  001C22  5198               	movf	efgtoa@d& (0+255),w,b
  8507  001C24  0F30               	addlw	48
  8508  001C26  6EDF               	movwf	indf2,c
  8509                           
  8510                           ; BSR set to: 0
  8511  001C28  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  8512  001C2A  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w
      +                          ;
  8516  001C2C  079F               	decf	efgtoa@w& (0+255),f,b
  8517  001C2E  A0D8               	btfss	status,0,c
  8518  001C30  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  8519  001C32                     l8462:
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*
      +                          u;
  8523  001C32  C0A2  F048         	movff	efgtoa@h,___flsub@b
  8524  001C36  C0A3  F049         	movff	efgtoa@h+1,___flsub@b+1
  8525  001C3A  C0A4  F04A         	movff	efgtoa@h+2,___flsub@b+2
  8526  001C3E  C0A5  F04B         	movff	efgtoa@h+3,___flsub@b+3
  8527  001C42  C0B4  F023         	movff	efgtoa@u,___flmul@a
  8528  001C46  C0B5  F024         	movff	efgtoa@u+1,___flmul@a+1
  8529  001C4A  C0B6  F025         	movff	efgtoa@u+2,___flmul@a+2
  8530  001C4E  C0B7  F026         	movff	efgtoa@u+3,___flmul@a+3
  8531  001C52  C0A6  F01F         	movff	efgtoa@l,___flmul@b
  8532  001C56  C0A7  F020         	movff	efgtoa@l+1,___flmul@b+1
  8533  001C5A  C0A8  F021         	movff	efgtoa@l+2,___flmul@b+2
  8534  001C5E  C0A9  F022         	movff	efgtoa@l+3,___flmul@b+3
  8535  001C62  ECDE  F012         	call	___flmul	;wreg free
  8536  001C66  C01F  F04C         	movff	?___flmul,___flsub@a
  8537  001C6A  C020  F04D         	movff	?___flmul+1,___flsub@a+1
  8538  001C6E  C021  F04E         	movff	?___flmul+2,___flsub@a+2
  8539  001C72  C022  F04F         	movff	?___flmul+3,___flsub@a+3
  8540  001C76  ECBE  F023         	call	___flsub	;wreg free
  8541  001C7A  C048  F0A2         	movff	?___flsub,efgtoa@h
  8542  001C7E  C049  F0A3         	movff	?___flsub+1,efgtoa@h+1
  8543  001C82  C04A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  8544  001C86  C04B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  8545                           
  8546                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/1
      +                          0.0;
  8547  001C8A  C0B4  F01F         	movff	efgtoa@u,___fldiv@b
  8548  001C8E  C0B5  F020         	movff	efgtoa@u+1,___fldiv@b+1
  8549  001C92  C0B6  F021         	movff	efgtoa@u+2,___fldiv@b+2
  8550  001C96  C0B7  F022         	movff	efgtoa@u+3,___fldiv@b+3
  8551  001C9A  0E00               	movlw	0
  8552  001C9C  6E23               	movwf	___fldiv@a,c
  8553  001C9E  0E00               	movlw	0
  8554  001CA0  6E24               	movwf	___fldiv@a+1,c
  8555  001CA2  0E20               	movlw	32
  8556  001CA4  6E25               	movwf	___fldiv@a+2,c
  8557  001CA6  0E41               	movlw	65
  8558  001CA8  6E26               	movwf	___fldiv@a+3,c
  8559  001CAA  EC0D  F016         	call	___fldiv	;wreg free
  8560  001CAE  C01F  F0B4         	movff	?___fldiv,efgtoa@u
  8561  001CB2  C020  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  8562  001CB6  C021  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  8563  001CBA  C022  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  8564                           
  8565                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  8566  001CBE  0100               	movlb	0	; () banked
  8567  001CC0  0796               	decf	efgtoa@ne& (0+255),f,b
  8568  001CC2  A0D8               	btfss	status,0,c
  8569  001CC4  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  8573  001CC6  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  8574  001CC8  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  8575  001CCA                     l8470:
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  8579  001CCA  5194               	movf	efgtoa@m& (0+255),w,b
  8580  001CCC  5DAA               	subwf	efgtoa@i& (0+255),w,b
  8581  001CCE  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  8582  001CD0  0A80               	xorlw	128
  8583  001CD2  6E59               	movwf	??_efgtoa& (0+255),c
  8584  001CD4  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  8585  001CD6  0A80               	xorlw	128
  8586  001CD8  5859               	subwfb	??_efgtoa& (0+255),w,c
  8587  001CDA  B0D8               	btfsc	status,0,c
  8588  001CDC  D008               	goto	u10550
  8589                           
  8590                           ; BSR set to: 0
  8591  001CDE  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8592  001CE0  D72D               	goto	l8422
  8593  001CE2  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  8594  001CE4  E104               	bnz	u10550
  8595  001CE6  0E4B               	movlw	75
  8596  001CE8  5DB2               	subwf	efgtoa@n& (0+255),w,b
  8597  001CEA  A0D8               	btfss	status,0,c
  8598  001CEC  D727               	goto	l8422
  8599  001CEE                     u10550:
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && 
      +                          (flags & (1 << 4))) {
  8603  001CEE  5192               	movf	efgtoa@pp& (0+255),w,b
  8604  001CF0  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8605  001CF2  B4D8               	btfsc	status,2,c
  8606                           
  8607                           ; BSR set to: 0
  8608  001CF4  A872               	btfss	_flags,4,c
  8609  001CF6  D00A               	goto	l8482
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n+
      +                          +] = '.';
  8613  001CF8  0E0F               	movlw	low _dbuf
  8614  001CFA  25B2               	addwf	efgtoa@n& (0+255),w,b
  8615  001CFC  6ED9               	movwf	fsr2l,c
  8616  001CFE  0E01               	movlw	high _dbuf
  8617  001D00  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8618  001D02  6EDA               	movwf	fsr2h,c
  8619  001D04  0E2E               	movlw	46
  8620  001D06  6EDF               	movwf	indf2,c
  8621                           
  8622                           ; BSR set to: 0
  8623  001D08  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  8624  001D0A  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  8625  001D0C                     l8482:
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '
      +                          \0';
  8629  001D0C  0E0F               	movlw	low _dbuf
  8630  001D0E  25B2               	addwf	efgtoa@n& (0+255),w,b
  8631  001D10  6ED9               	movwf	fsr2l,c
  8632  001D12  0E01               	movlw	high _dbuf
  8633  001D14  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8634  001D16  6EDA               	movwf	fsr2h,c
  8635  001D18  0E00               	movlw	0
  8636  001D1A  6EDF               	movwf	indf2,c
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode =
      +                          = 'e') {
  8640  001D1C  0E65               	movlw	101
  8641  001D1E  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  8642  001D20  A4D8               	btfss	status,2,c
  8643  001D22  D0AD               	goto	l8544
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = siz
      +                          eof(dbuf) - 1;
  8647  001D24  0E00               	movlw	0
  8648  001D26  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  8649  001D28  0E4F               	movlw	79
  8650  001D2A  6FAA               	movwf	efgtoa@i& (0+255),b
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i]
      +                           = '\0';
  8654  001D2C  0E0F               	movlw	low _dbuf
  8655  001D2E  25AA               	addwf	efgtoa@i& (0+255),w,b
  8656  001D30  6ED9               	movwf	fsr2l,c
  8657  001D32  0E01               	movlw	high _dbuf
  8658  001D34  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8659  001D36  6EDA               	movwf	fsr2h,c
  8660  001D38  0E00               	movlw	0
  8661  001D3A  6EDF               	movwf	indf2,c
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 
      +                          0;
  8665  001D3C  0E00               	movlw	0
  8666  001D3E  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  8667  001D40  0E00               	movlw	0
  8668  001D42  6F9A               	movwf	efgtoa@sign& (0+255),b
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e <
      +                           0) {
  8672  001D44  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  8673  001D46  D008               	goto	l8498
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sig
      +                          n = 1;
  8677  001D48  0E00               	movlw	0
  8678  001D4A  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  8679  001D4C  0E01               	movlw	1
  8680  001D4E  6F9A               	movwf	efgtoa@sign& (0+255),b
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e =
      +                           -e;
  8684  001D50  6DB0               	negf	efgtoa@e& (0+255),b
  8685  001D52  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  8686  001D54  B0D8               	btfsc	status,0,c
  8687  001D56  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  8688  001D58                     l8498:
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  8692  001D58  0E00               	movlw	0
  8693  001D5A  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  8694  001D5C  0E02               	movlw	2
  8695  001D5E  6F9C               	movwf	efgtoa@p& (0+255),b
  8696                           
  8697                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  8698  001D60  D02B               	goto	l8510
  8699  001D62                     l8500:
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i
      +                          ;
  8703  001D62  07AA               	decf	efgtoa@i& (0+255),f,b
  8704  001D64  A0D8               	btfss	status,0,c
  8705  001D66  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbu
      +                          f[i] = '0' + (e % 10);
  8709  001D68  0E0F               	movlw	low _dbuf
  8710  001D6A  25AA               	addwf	efgtoa@i& (0+255),w,b
  8711  001D6C  6ED9               	movwf	fsr2l,c
  8712  001D6E  0E01               	movlw	high _dbuf
  8713  001D70  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8714  001D72  6EDA               	movwf	fsr2h,c
  8715  001D74  C0B0  F00B         	movff	efgtoa@e,___awmod@dividend
  8716  001D78  C0B1  F00C         	movff	efgtoa@e+1,___awmod@dividend+1
  8717  001D7C  0E00               	movlw	0
  8718  001D7E  6E0E               	movwf	___awmod@divisor+1,c
  8719  001D80  0E0A               	movlw	10
  8720  001D82  6E0D               	movwf	___awmod@divisor,c
  8721  001D84  EC00  F022         	call	___awmod	;wreg free
  8722  001D88  500B               	movf	?___awmod,w,c
  8723  001D8A  0F30               	addlw	48
  8724  001D8C  6EDF               	movwf	indf2,c
  8725                           
  8726                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e =
      +                           e / 10;
  8727  001D8E  C0B0  F00B         	movff	efgtoa@e,___awdiv@dividend
  8728  001D92  C0B1  F00C         	movff	efgtoa@e+1,___awdiv@dividend+1
  8729  001D96  0E00               	movlw	0
  8730  001D98  6E0E               	movwf	___awdiv@divisor+1,c
  8731  001D9A  0E0A               	movlw	10
  8732  001D9C  6E0D               	movwf	___awdiv@divisor,c
  8733  001D9E  EC3F  F021         	call	___awdiv	;wreg free
  8734  001DA2  C00B  F0B0         	movff	?___awdiv,efgtoa@e
  8735  001DA6  C00C  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  8736                           
  8737                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p
      +                          ;
  8738  001DAA  0100               	movlb	0	; () banked
  8739  001DAC  079C               	decf	efgtoa@p& (0+255),f,b
  8740  001DAE  A0D8               	btfss	status,0,c
  8741  001DB0  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w
      +                          ;
  8745  001DB2  079F               	decf	efgtoa@w& (0+255),f,b
  8746  001DB4  A0D8               	btfss	status,0,c
  8747  001DB6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  8748  001DB8                     l8510:
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  8752  001DB8  51B0               	movf	efgtoa@e& (0+255),w,b
  8753  001DBA  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8754  001DBC  A4D8               	btfss	status,2,c
  8755  001DBE  D7D1               	goto	l8500
  8756                           
  8757                           ; BSR set to: 0
  8758  001DC0  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8759  001DC2  D005               	goto	u10610
  8760  001DC4  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  8761  001DC6  E1CD               	bnz	l8500
  8762  001DC8  059C               	decf	efgtoa@p& (0+255),w,b
  8763  001DCA  B0D8               	btfsc	status,0,c
  8764  001DCC  D7CA               	goto	l8500
  8765  001DCE                     u10610:
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  8769  001DCE  07AA               	decf	efgtoa@i& (0+255),f,b
  8770  001DD0  A0D8               	btfss	status,0,c
  8771  001DD2  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i]
      +                           = sign ? '-' : '+';
  8775  001DD4  519A               	movf	efgtoa@sign& (0+255),w,b
  8776  001DD6  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8777  001DD8  A4D8               	btfss	status,2,c
  8778  001DDA  D004               	goto	l8520
  8779                           
  8780                           ; BSR set to: 0
  8781  001DDC  0E00               	movlw	0
  8782  001DDE  6F8B               	movwf	(_efgtoa$1368+1)& (0+255),b
  8783  001DE0  0E2B               	movlw	43
  8784  001DE2  D003               	goto	L7
  8785  001DE4                     l8520:
  8786                           
  8787                           ; BSR set to: 0
  8788  001DE4  0E00               	movlw	0
  8789  001DE6  6F8B               	movwf	(_efgtoa$1368+1)& (0+255),b
  8790  001DE8  0E2D               	movlw	45
  8791  001DEA                     L7:
  8792  001DEA  6F8A               	movwf	_efgtoa$1368& (0+255),b
  8793                           
  8794                           ; BSR set to: 0
  8795  001DEC  0E0F               	movlw	low _dbuf
  8796  001DEE  25AA               	addwf	efgtoa@i& (0+255),w,b
  8797  001DF0  6ED9               	movwf	fsr2l,c
  8798  001DF2  0E01               	movlw	high _dbuf
  8799  001DF4  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8800  001DF6  6EDA               	movwf	fsr2h,c
  8801  001DF8  C08A  FFDF         	movff	_efgtoa$1368,indf2
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  8805  001DFC  079F               	decf	efgtoa@w& (0+255),f,b
  8806  001DFE  A0D8               	btfss	status,0,c
  8807  001E00  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8811  001E02  07AA               	decf	efgtoa@i& (0+255),f,b
  8812  001E04  A0D8               	btfss	status,0,c
  8813  001E06  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  8814                           
  8815                           ; BSR set to: 0
  8816  001E08  0EBF               	movlw	191
  8817  001E0A  6E59               	movwf	??_efgtoa& (0+255),c
  8818  001E0C  0EFF               	movlw	255
  8819  001E0E  6E5A               	movwf	(??_efgtoa+1)& (0+255),c
  8820  001E10  5058               	movf	efgtoa@c,w,c
  8821  001E12  6E5B               	movwf	(??_efgtoa+2)& (0+255),c
  8822  001E14  6A5C               	clrf	(??_efgtoa+3)& (0+255),c
  8823  001E16  5059               	movf	??_efgtoa,w,c
  8824  001E18  265B               	addwf	??_efgtoa+2,f,c
  8825  001E1A  505A               	movf	??_efgtoa+1,w,c
  8826  001E1C  225C               	addwfc	??_efgtoa+3,f,c
  8827  001E1E  505C               	movf	??_efgtoa+3,w,c
  8828  001E20  E106               	bnz	u10630
  8829  001E22  0E1A               	movlw	26
  8830  001E24  5C5B               	subwf	??_efgtoa+2,w,c
  8831  001E26  B0D8               	btfsc	status,0,c
  8832  001E28  D002               	goto	u10630
  8833  001E2A  0E01               	movlw	1
  8834  001E2C  D001               	goto	u10640
  8835  001E2E                     u10630:
  8836  001E2E  0E00               	movlw	0
  8837  001E30                     u10640:
  8838  001E30  6F8E               	movwf	_efgtoa$1370& (0+255),b
  8839  001E32  6B8F               	clrf	(_efgtoa$1370+1)& (0+255),b
  8840                           
  8841                           ; BSR set to: 0
  8842  001E34  518E               	movf	_efgtoa$1370& (0+255),w,b
  8843  001E36  118F               	iorwf	(_efgtoa$1370+1)& (0+255),w,b
  8844  001E38  A4D8               	btfss	status,2,c
  8845  001E3A  D004               	goto	l8536
  8846                           
  8847                           ; BSR set to: 0
  8848  001E3C  0E00               	movlw	0
  8849  001E3E  6F8D               	movwf	(_efgtoa$1369+1)& (0+255),b
  8850  001E40  0E65               	movlw	101
  8851  001E42  D003               	goto	L8
  8852  001E44                     l8536:
  8853                           
  8854                           ; BSR set to: 0
  8855  001E44  0E00               	movlw	0
  8856  001E46  6F8D               	movwf	(_efgtoa$1369+1)& (0+255),b
  8857  001E48  0E45               	movlw	69
  8858  001E4A                     L8:
  8859  001E4A  6F8C               	movwf	_efgtoa$1369& (0+255),b
  8860                           
  8861                           ; BSR set to: 0
  8862  001E4C  0E0F               	movlw	low _dbuf
  8863  001E4E  25AA               	addwf	efgtoa@i& (0+255),w,b
  8864  001E50  6ED9               	movwf	fsr2l,c
  8865  001E52  0E01               	movlw	high _dbuf
  8866  001E54  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8867  001E56  6EDA               	movwf	fsr2h,c
  8868  001E58  C08C  FFDF         	movff	_efgtoa$1369,indf2
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  8872  001E5C  079F               	decf	efgtoa@w& (0+255),f,b
  8873  001E5E  A0D8               	btfss	status,0,c
  8874  001E60  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  8878  001E62  0E0F               	movlw	low _dbuf
  8879  001E64  25B2               	addwf	efgtoa@n& (0+255),w,b
  8880  001E66  6E0B               	movwf	strcpy@dest,c
  8881  001E68  0E01               	movlw	high _dbuf
  8882  001E6A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8883  001E6C  6E0C               	movwf	strcpy@dest+1,c
  8884  001E6E  0E0F               	movlw	low _dbuf
  8885  001E70  25AA               	addwf	efgtoa@i& (0+255),w,b
  8886  001E72  6E0D               	movwf	strcpy@src,c
  8887  001E74  0E01               	movlw	high _dbuf
  8888  001E76  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8889  001E78  6E0E               	movwf	strcpy@src+1,c
  8890  001E7A  ECFC  F022         	call	_strcpy	;wreg free
  8891  001E7E                     l8544:
  8892                           
  8893                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 502:     return pad(
      +                          fp, &dbuf[0], w);
  8894  001E7E  C052  F01F         	movff	efgtoa@fp,pad@fp
  8895  001E82  C053  F020         	movff	efgtoa@fp+1,pad@fp+1
  8896  001E86  0E0F               	movlw	low _dbuf
  8897  001E88  6E21               	movwf	pad@buf,c
  8898  001E8A  0E01               	movlw	high _dbuf
  8899  001E8C  6E22               	movwf	pad@buf+1,c
  8900  001E8E  C09F  F023         	movff	efgtoa@w,pad@p
  8901  001E92  C0A0  F024         	movff	efgtoa@w+1,pad@p+1
  8902  001E96  EC69  F020         	call	_pad	;wreg free
  8903  001E9A  C01F  F052         	movff	?_pad,?_efgtoa
  8904  001E9E  C020  F053         	movff	?_pad+1,?_efgtoa+1
  8905  001EA2  0012               	return		;funcret
  8906  001EA4                     __end_of_efgtoa:
  8907                           	opt callstack 0
  8908                           
  8909 ;; *************** function _tolower *****************
  8910 ;; Defined at:
  8911 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  c               2   16[COMRAM] int 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  2   16[COMRAM] int 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;Total ram usage:        8 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    2
  8932 ;; This function calls:
  8933 ;;		_isupper
  8934 ;; This function is called by:
  8935 ;;		_efgtoa
  8936 ;;		_vfpfcnvrt
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text13
  8941  0046E6                     __ptext13:
  8942                           	opt callstack 0
  8943  0046E6                     _tolower:
  8944                           	opt callstack 25
  8945                           
  8946                           ;incstack = 0
  8947  0046E6  0EBF               	movlw	191
  8948  0046E8  6E13               	movwf	??_tolower& (0+255),c
  8949  0046EA  0EFF               	movlw	255
  8950  0046EC  6E14               	movwf	(??_tolower+1)& (0+255),c
  8951  0046EE  C011  F015         	movff	tolower@c,??_tolower+2
  8952  0046F2  C012  F016         	movff	tolower@c+1,??_tolower+3
  8953  0046F6  5013               	movf	??_tolower,w,c
  8954  0046F8  2615               	addwf	??_tolower+2,f,c
  8955  0046FA  5014               	movf	??_tolower+1,w,c
  8956  0046FC  2216               	addwfc	??_tolower+3,f,c
  8957  0046FE  5016               	movf	??_tolower+3,w,c
  8958  004700  E106               	bnz	u8930
  8959  004702  0E1A               	movlw	26
  8960  004704  5C15               	subwf	??_tolower+2,w,c
  8961  004706  B0D8               	btfsc	status,0,c
  8962  004708  D002               	goto	u8930
  8963  00470A  0E01               	movlw	1
  8964  00470C  D001               	goto	u8940
  8965  00470E                     u8930:
  8966  00470E  0E00               	movlw	0
  8967  004710                     u8940:
  8968  004710  6E17               	movwf	_tolower$1990,c
  8969  004712  6A18               	clrf	_tolower$1990+1,c
  8970  004714  5017               	movf	_tolower$1990,w,c
  8971  004716  1018               	iorwf	_tolower$1990+1,w,c
  8972  004718  B4D8               	btfsc	status,2,c
  8973  00471A  D006               	goto	l1513
  8974  00471C  0E20               	movlw	32
  8975  00471E  1011               	iorwf	tolower@c,w,c
  8976  004720  6E11               	movwf	?_tolower,c
  8977  004722  5012               	movf	tolower@c+1,w,c
  8978  004724  6E12               	movwf	?_tolower+1,c
  8979  004726  0012               	return	
  8980  004728                     l1513:
  8981  004728  C011  F011         	movff	tolower@c,?_tolower
  8982  00472C  C012  F012         	movff	tolower@c+1,?_tolower+1
  8983  004730  0012               	return		;funcret
  8984  004732                     __end_of_tolower:
  8985                           	opt callstack 0
  8986                           
  8987 ;; *************** function _isupper *****************
  8988 ;; Defined at:
  8989 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  c               2   10[COMRAM] int 
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;		None
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  2   10[COMRAM] int 
  8996 ;; Registers used:
  8997 ;;		wreg, status,2, status,0
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;Total ram usage:        6 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    1
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_efgtoa
  9014 ;;		_xtoa
  9015 ;;		_vfpfcnvrt
  9016 ;;		_tolower
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text14
  9021  00493C                     __ptext14:
  9022                           	opt callstack 0
  9023  00493C                     _isupper:
  9024                           	opt callstack 25
  9025                           
  9026                           ;incstack = 0
  9027  00493C  0EBF               	movlw	191
  9028  00493E  6E0D               	movwf	??_isupper& (0+255),c
  9029  004940  0EFF               	movlw	255
  9030  004942  6E0E               	movwf	(??_isupper+1)& (0+255),c
  9031  004944  C00B  F00F         	movff	isupper@c,??_isupper+2
  9032  004948  C00C  F010         	movff	isupper@c+1,??_isupper+3
  9033  00494C  500D               	movf	??_isupper,w,c
  9034  00494E  260F               	addwf	??_isupper+2,f,c
  9035  004950  500E               	movf	??_isupper+1,w,c
  9036  004952  2210               	addwfc	??_isupper+3,f,c
  9037  004954  5010               	movf	??_isupper+3,w,c
  9038  004956  E106               	bnz	u8360
  9039  004958  0E1A               	movlw	26
  9040  00495A  5C0F               	subwf	??_isupper+2,w,c
  9041  00495C  B0D8               	btfsc	status,0,c
  9042  00495E  D002               	goto	u8360
  9043  004960  0E01               	movlw	1
  9044  004962  D001               	goto	u8370
  9045  004964                     u8360:
  9046  004964  0E00               	movlw	0
  9047  004966                     u8370:
  9048  004966  6E0B               	movwf	?_isupper,c
  9049  004968  6A0C               	clrf	?_isupper+1,c
  9050  00496A  0012               	return		;funcret
  9051  00496C                     __end_of_isupper:
  9052                           	opt callstack 0
  9053                           
  9054 ;; *************** function _strcpy *****************
  9055 ;; Defined at:
  9056 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  dest            2   10[COMRAM] PTR unsigned char 
  9059 ;;		 -> dbuf(80), 
  9060 ;;  src             2   12[COMRAM] PTR const unsigned char 
  9061 ;;		 -> STR_57(4), STR_56(4), STR_53(4), STR_52(4), 
  9062 ;;		 -> dbuf(80), 
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;  d               2   18[COMRAM] PTR unsigned char 
  9065 ;;		 -> dbuf(80), 
  9066 ;;  s               2   16[COMRAM] PTR const unsigned char 
  9067 ;;		 -> STR_57(4), STR_56(4), STR_53(4), STR_52(4), 
  9068 ;;		 -> dbuf(80), 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  2   10[COMRAM] PTR unsigned char 
  9071 ;; Registers used:
  9072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;Total ram usage:       10 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:    1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_efgtoa
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text15
  9093  0045F8                     __ptext15:
  9094                           	opt callstack 0
  9095  0045F8                     _strcpy:
  9096                           	opt callstack 25
  9097                           
  9098                           ;incstack = 0
  9099  0045F8  C00D  F011         	movff	strcpy@src,strcpy@s
  9100  0045FC  C00E  F012         	movff	strcpy@src+1,strcpy@s+1
  9101  004600  C00B  F013         	movff	strcpy@dest,strcpy@d
  9102  004604  C00C  F014         	movff	strcpy@dest+1,strcpy@d+1
  9103  004608                     l7574:
  9104  004608  5011               	movf	strcpy@s,w,c
  9105  00460A  6E0F               	movwf	??_strcpy& (0+255),c
  9106  00460C  5012               	movf	strcpy@s+1,w,c
  9107  00460E  6E10               	movwf	(??_strcpy+1)& (0+255),c
  9108  004610  4A11               	infsnz	strcpy@s,f,c
  9109  004612  2A12               	incf	strcpy@s+1,f,c
  9110  004614  C00F  FFF6         	movff	??_strcpy,tblptrl
  9111  004618  C010  FFF7         	movff	??_strcpy+1,tblptrh
  9112  00461C  0E00               	movlw	low (__mediumconst shr (0+16))
  9113  00461E  6EF8               	movwf	tblptru,c
  9114  004620  C013  FFD9         	movff	strcpy@d,fsr2l
  9115  004624  C014  FFDA         	movff	strcpy@d+1,fsr2h
  9116  004628  4A13               	infsnz	strcpy@d,f,c
  9117  00462A  2A14               	incf	strcpy@d+1,f,c
  9118  00462C  0E0F               	movlw	(high __ramtop+-1)
  9119  00462E  64F7               	cpfsgt	tblptrh,c
  9120  004630  D003               	bra	u8917
  9121  004632  0008               	tblrd		*
  9122  004634  50F5               	movf	tablat,w,c
  9123  004636  D005               	bra	u8910
  9124  004638                     u8917:
  9125  004638  CFF6 FFE1          	movff	tblptrl,fsr1l
  9126  00463C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9127  004640  50E7               	movf	indf1,w,c
  9128  004642                     u8910:
  9129  004642  6EDF               	movwf	indf2,c
  9130  004644  50DF               	movf	indf2,w,c
  9131  004646  B4D8               	btfsc	status,2,c
  9132  004648  0012               	return	
  9133  00464A  D7DE               	goto	l7574
  9134  00464C                     __end_of_strcpy:
  9135                           	opt callstack 0
  9136                           
  9137 ;; *************** function _floorf *****************
  9138 ;; Defined at:
  9139 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  x               4   55[COMRAM] float 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  u               4   71[COMRAM] struct .
  9144 ;;  m               4   65[COMRAM] unsigned long 
  9145 ;;  e               2   69[COMRAM] int 
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  4   55[COMRAM] float 
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;Total ram usage:       20 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; Hardware stack levels required when called:    1
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_efgtoa
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text16
  9170  003310                     __ptext16:
  9171                           	opt callstack 0
  9172  003310                     _floorf:
  9173                           	opt callstack 25
  9174                           
  9175                           ;incstack = 0
  9176  003310  C066  F048         	movff	floorf@F524,floorf@u
  9177  003314  C067  F049         	movff	floorf@F524+1,floorf@u+1
  9178  003318  C068  F04A         	movff	floorf@F524+2,floorf@u+2
  9179  00331C  C069  F04B         	movff	floorf@F524+3,floorf@u+3
  9180  003320  C038  F048         	movff	floorf@x,floorf@u
  9181  003324  C039  F049         	movff	floorf@x+1,floorf@u+1
  9182  003328  C03A  F04A         	movff	floorf@x+2,floorf@u+2
  9183  00332C  C03B  F04B         	movff	floorf@x+3,floorf@u+3
  9184  003330  0E81               	movlw	129
  9185  003332  6E3C               	movwf	??_floorf& (0+255),c
  9186  003334  0EFF               	movlw	255
  9187  003336  6E3D               	movwf	(??_floorf+1)& (0+255),c
  9188  003338  C048  F03E         	movff	floorf@u,??_floorf+2
  9189  00333C  C049  F03F         	movff	floorf@u+1,??_floorf+3
  9190  003340  C04A  F040         	movff	floorf@u+2,??_floorf+4
  9191  003344  C04B  F041         	movff	floorf@u+3,??_floorf+5
  9192  003348  0E18               	movlw	24
  9193  00334A  D005               	goto	u8960
  9194  00334C                     u8965:
  9195  00334C  90D8               	bcf	status,0,c
  9196  00334E  3241               	rrcf	??_floorf+5,f,c
  9197  003350  3240               	rrcf	??_floorf+4,f,c
  9198  003352  323F               	rrcf	??_floorf+3,f,c
  9199  003354  323E               	rrcf	??_floorf+2,f,c
  9200  003356                     u8960:
  9201  003356  2EE8               	decfsz	wreg,f,c
  9202  003358  D7F9               	goto	u8965
  9203  00335A  503E               	movf	??_floorf+2,w,c
  9204  00335C  243C               	addwf	??_floorf,w,c
  9205  00335E  6E46               	movwf	floorf@e,c
  9206  003360  0E00               	movlw	0
  9207  003362  203D               	addwfc	??_floorf+1,w,c
  9208  003364  6E47               	movwf	floorf@e+1,c
  9209  003366  BE47               	btfsc	floorf@e+1,7,c
  9210  003368  D00F               	goto	l7592
  9211  00336A  5047               	movf	floorf@e+1,w,c
  9212  00336C  E104               	bnz	u8970
  9213  00336E  0E17               	movlw	23
  9214  003370  5C46               	subwf	floorf@e,w,c
  9215  003372  A0D8               	btfss	status,0,c
  9216  003374  D009               	goto	l7592
  9217  003376                     u8970:
  9218  003376  C038  F038         	movff	floorf@x,?_floorf
  9219  00337A  C039  F039         	movff	floorf@x+1,?_floorf+1
  9220  00337E  C03A  F03A         	movff	floorf@x+2,?_floorf+2
  9221  003382  C03B  F03B         	movff	floorf@x+3,?_floorf+3
  9222  003386  0012               	return	
  9223  003388                     l7592:
  9224  003388  BE47               	btfsc	floorf@e+1,7,c
  9225  00338A  D05E               	goto	l7602
  9226  00338C  C046  F03C         	movff	floorf@e,??_floorf
  9227  003390  0EFF               	movlw	255
  9228  003392  6E3D               	movwf	(??_floorf+1)& (0+255),c
  9229  003394  0EFF               	movlw	255
  9230  003396  6E3E               	movwf	(??_floorf+2)& (0+255),c
  9231  003398  0E7F               	movlw	127
  9232  00339A  6E3F               	movwf	(??_floorf+3)& (0+255),c
  9233  00339C  0E00               	movlw	0
  9234  00339E  6E40               	movwf	(??_floorf+4)& (0+255),c
  9235  0033A0                     u8995:
  9236  0033A0  663C               	tstfsz	??_floorf,c
  9237  0033A2  D001               	goto	u8996
  9238  0033A4  D007               	goto	u8997
  9239  0033A6                     u8996:
  9240  0033A6  3440               	rlcf	??_floorf+4,w,c
  9241  0033A8  3240               	rrcf	??_floorf+4,f,c
  9242  0033AA  323F               	rrcf	??_floorf+3,f,c
  9243  0033AC  323E               	rrcf	??_floorf+2,f,c
  9244  0033AE  323D               	rrcf	??_floorf+1,f,c
  9245  0033B0  2E3C               	decfsz	??_floorf,f,c
  9246  0033B2  D7F6               	goto	u8995
  9247  0033B4                     u8997:
  9248  0033B4  C03D  F042         	movff	??_floorf+1,floorf@m
  9249  0033B8  C03E  F043         	movff	??_floorf+2,floorf@m+1
  9250  0033BC  C03F  F044         	movff	??_floorf+3,floorf@m+2
  9251  0033C0  C040  F045         	movff	??_floorf+4,floorf@m+3
  9252  0033C4  5042               	movf	floorf@m,w,c
  9253  0033C6  1448               	andwf	floorf@u,w,c
  9254  0033C8  6E3C               	movwf	??_floorf& (0+255),c
  9255  0033CA  5043               	movf	floorf@m+1,w,c
  9256  0033CC  1449               	andwf	floorf@u+1,w,c
  9257  0033CE  6E3D               	movwf	(??_floorf+1)& (0+255),c
  9258  0033D0  5044               	movf	floorf@m+2,w,c
  9259  0033D2  144A               	andwf	floorf@u+2,w,c
  9260  0033D4  6E3E               	movwf	(??_floorf+2)& (0+255),c
  9261  0033D6  5045               	movf	floorf@m+3,w,c
  9262  0033D8  144B               	andwf	floorf@u+3,w,c
  9263  0033DA  6E3F               	movwf	(??_floorf+3)& (0+255),c
  9264  0033DC  503C               	movf	??_floorf,w,c
  9265  0033DE  103D               	iorwf	??_floorf+1,w,c
  9266  0033E0  103E               	iorwf	??_floorf+2,w,c
  9267  0033E2  103F               	iorwf	??_floorf+3,w,c
  9268  0033E4  B4D8               	btfsc	status,2,c
  9269  0033E6  D7C7               	goto	u8970
  9270  0033E8  C048  F03C         	movff	floorf@u,??_floorf
  9271  0033EC  C049  F03D         	movff	floorf@u+1,??_floorf+1
  9272  0033F0  C04A  F03E         	movff	floorf@u+2,??_floorf+2
  9273  0033F4  C04B  F03F         	movff	floorf@u+3,??_floorf+3
  9274  0033F8  0E20               	movlw	32
  9275  0033FA  D005               	goto	u9010
  9276  0033FC                     u9015:
  9277  0033FC  90D8               	bcf	status,0,c
  9278  0033FE  323F               	rrcf	??_floorf+3,f,c
  9279  003400  323E               	rrcf	??_floorf+2,f,c
  9280  003402  323D               	rrcf	??_floorf+1,f,c
  9281  003404  323C               	rrcf	??_floorf,f,c
  9282  003406                     u9010:
  9283  003406  2EE8               	decfsz	wreg,f,c
  9284  003408  D7F9               	goto	u9015
  9285  00340A  503C               	movf	??_floorf,w,c
  9286  00340C  103D               	iorwf	??_floorf+1,w,c
  9287  00340E  103E               	iorwf	??_floorf+2,w,c
  9288  003410  103F               	iorwf	??_floorf+3,w,c
  9289  003412  B4D8               	btfsc	status,2,c
  9290  003414  D008               	goto	l1430
  9291  003416  5042               	movf	floorf@m,w,c
  9292  003418  2648               	addwf	floorf@u,f,c
  9293  00341A  5043               	movf	floorf@m+1,w,c
  9294  00341C  2249               	addwfc	floorf@u+1,f,c
  9295  00341E  5044               	movf	floorf@m+2,w,c
  9296  003420  224A               	addwfc	floorf@u+2,f,c
  9297  003422  5045               	movf	floorf@m+3,w,c
  9298  003424  224B               	addwfc	floorf@u+3,f,c
  9299  003426                     l1430:
  9300  003426  1C42               	comf	floorf@m,w,c
  9301  003428  6E3C               	movwf	??_floorf& (0+255),c
  9302  00342A  1C43               	comf	floorf@m+1,w,c
  9303  00342C  6E3D               	movwf	(??_floorf+1)& (0+255),c
  9304  00342E  1C44               	comf	floorf@m+2,w,c
  9305  003430  6E3E               	movwf	(??_floorf+2)& (0+255),c
  9306  003432  1C45               	comf	floorf@m+3,w,c
  9307  003434  6E3F               	movwf	(??_floorf+3)& (0+255),c
  9308  003436  503C               	movf	??_floorf,w,c
  9309  003438  1648               	andwf	floorf@u,f,c
  9310  00343A  503D               	movf	??_floorf+1,w,c
  9311  00343C  1649               	andwf	floorf@u+1,f,c
  9312  00343E  503E               	movf	??_floorf+2,w,c
  9313  003440  164A               	andwf	floorf@u+2,f,c
  9314  003442  503F               	movf	??_floorf+3,w,c
  9315  003444  164B               	andwf	floorf@u+3,f,c
  9316  003446  D036               	goto	l7610
  9317  003448                     l7602:
  9318  003448  C048  F03C         	movff	floorf@u,??_floorf
  9319  00344C  C049  F03D         	movff	floorf@u+1,??_floorf+1
  9320  003450  C04A  F03E         	movff	floorf@u+2,??_floorf+2
  9321  003454  C04B  F03F         	movff	floorf@u+3,??_floorf+3
  9322  003458  0E20               	movlw	32
  9323  00345A  D005               	goto	u9030
  9324  00345C                     u9035:
  9325  00345C  90D8               	bcf	status,0,c
  9326  00345E  323F               	rrcf	??_floorf+3,f,c
  9327  003460  323E               	rrcf	??_floorf+2,f,c
  9328  003462  323D               	rrcf	??_floorf+1,f,c
  9329  003464  323C               	rrcf	??_floorf,f,c
  9330  003466                     u9030:
  9331  003466  2EE8               	decfsz	wreg,f,c
  9332  003468  D7F9               	goto	u9035
  9333  00346A  503C               	movf	??_floorf,w,c
  9334  00346C  103D               	iorwf	??_floorf+1,w,c
  9335  00346E  103E               	iorwf	??_floorf+2,w,c
  9336  003470  103F               	iorwf	??_floorf+3,w,c
  9337  003472  A4D8               	btfss	status,2,c
  9338  003474  D008               	goto	l7606
  9339  003476  0E00               	movlw	0
  9340  003478  6E48               	movwf	floorf@u,c
  9341  00347A  0E00               	movlw	0
  9342  00347C  6E49               	movwf	floorf@u+1,c
  9343  00347E  0E00               	movlw	0
  9344  003480  6E4A               	movwf	floorf@u+2,c
  9345  003482  0E00               	movlw	0
  9346  003484  D016               	goto	L9
  9347  003486                     l7606:
  9348  003486  90D8               	bcf	status,0,c
  9349  003488  3448               	rlcf	floorf@u,w,c
  9350  00348A  6E3C               	movwf	??_floorf& (0+255),c
  9351  00348C  3449               	rlcf	floorf@u+1,w,c
  9352  00348E  6E3D               	movwf	(??_floorf+1)& (0+255),c
  9353  003490  344A               	rlcf	floorf@u+2,w,c
  9354  003492  6E3E               	movwf	(??_floorf+2)& (0+255),c
  9355  003494  344B               	rlcf	floorf@u+3,w,c
  9356  003496  6E3F               	movwf	(??_floorf+3)& (0+255),c
  9357  003498  503C               	movf	??_floorf,w,c
  9358  00349A  103D               	iorwf	??_floorf+1,w,c
  9359  00349C  103E               	iorwf	??_floorf+2,w,c
  9360  00349E  103F               	iorwf	??_floorf+3,w,c
  9361  0034A0  B4D8               	btfsc	status,2,c
  9362  0034A2  D008               	goto	l7610
  9363  0034A4  0E00               	movlw	0
  9364  0034A6  6E48               	movwf	floorf@u,c
  9365  0034A8  0E00               	movlw	0
  9366  0034AA  6E49               	movwf	floorf@u+1,c
  9367  0034AC  0E80               	movlw	128
  9368  0034AE  6E4A               	movwf	floorf@u+2,c
  9369  0034B0  0EBF               	movlw	191
  9370  0034B2                     L9:
  9371  0034B2  6E4B               	movwf	floorf@u+3,c
  9372  0034B4                     l7610:
  9373  0034B4  C048  F038         	movff	floorf@u,?_floorf
  9374  0034B8  C049  F039         	movff	floorf@u+1,?_floorf+1
  9375  0034BC  C04A  F03A         	movff	floorf@u+2,?_floorf+2
  9376  0034C0  C04B  F03B         	movff	floorf@u+3,?_floorf+3
  9377  0034C4  0012               	return		;funcret
  9378  0034C6                     __end_of_floorf:
  9379                           	opt callstack 0
  9380                           
  9381 ;; *************** function ___fpclassifyf *****************
  9382 ;; Defined at:
  9383 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;  x               4   10[COMRAM] float 
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;  u               4   20[COMRAM] struct .
  9388 ;;  e               2   18[COMRAM] int 
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  2   10[COMRAM] int 
  9391 ;; Registers used:
  9392 ;;		wreg, status,2, status,0
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9399 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9400 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;Total ram usage:       14 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:    1
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_efgtoa
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text17
  9413  003EAA                     __ptext17:
  9414                           	opt callstack 0
  9415  003EAA                     ___fpclassifyf:
  9416                           	opt callstack 25
  9417                           
  9418                           ;incstack = 0
  9419  003EAA  C06A  F015         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9420  003EAE  C06B  F016         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9421  003EB2  C06C  F017         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9422  003EB6  C06D  F018         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9423  003EBA  C00B  F015         	movff	___fpclassifyf@x,___fpclassifyf@u
  9424  003EBE  C00C  F016         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9425  003EC2  C00D  F017         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9426  003EC6  C00E  F018         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9427  003ECA  C015  F00F         	movff	___fpclassifyf@u,??___fpclassifyf
  9428  003ECE  C016  F010         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9429  003ED2  C017  F011         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9430  003ED6  C018  F012         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9431  003EDA  0E18               	movlw	24
  9432  003EDC  D005               	goto	u8840
  9433  003EDE                     u8845:
  9434  003EDE  90D8               	bcf	status,0,c
  9435  003EE0  3212               	rrcf	??___fpclassifyf+3,f,c
  9436  003EE2  3211               	rrcf	??___fpclassifyf+2,f,c
  9437  003EE4  3210               	rrcf	??___fpclassifyf+1,f,c
  9438  003EE6  320F               	rrcf	??___fpclassifyf,f,c
  9439  003EE8                     u8840:
  9440  003EE8  2EE8               	decfsz	wreg,f,c
  9441  003EEA  D7F9               	goto	u8845
  9442  003EEC  500F               	movf	??___fpclassifyf,w,c
  9443  003EEE  6E13               	movwf	___fpclassifyf@e,c
  9444  003EF0  6A14               	clrf	___fpclassifyf@e+1,c
  9445  003EF2  5013               	movf	___fpclassifyf@e,w,c
  9446  003EF4  1014               	iorwf	___fpclassifyf@e+1,w,c
  9447  003EF6  A4D8               	btfss	status,2,c
  9448  003EF8  D019               	goto	l7562
  9449  003EFA  90D8               	bcf	status,0,c
  9450  003EFC  3415               	rlcf	___fpclassifyf@u,w,c
  9451  003EFE  6E0F               	movwf	??___fpclassifyf& (0+255),c
  9452  003F00  3416               	rlcf	___fpclassifyf@u+1,w,c
  9453  003F02  6E10               	movwf	(??___fpclassifyf+1)& (0+255),c
  9454  003F04  3417               	rlcf	___fpclassifyf@u+2,w,c
  9455  003F06  6E11               	movwf	(??___fpclassifyf+2)& (0+255),c
  9456  003F08  3418               	rlcf	___fpclassifyf@u+3,w,c
  9457  003F0A  6E12               	movwf	(??___fpclassifyf+3)& (0+255),c
  9458  003F0C  500F               	movf	??___fpclassifyf,w,c
  9459  003F0E  1010               	iorwf	??___fpclassifyf+1,w,c
  9460  003F10  1011               	iorwf	??___fpclassifyf+2,w,c
  9461  003F12  1012               	iorwf	??___fpclassifyf+3,w,c
  9462  003F14  A4D8               	btfss	status,2,c
  9463  003F16  D005               	goto	l7558
  9464  003F18  0E00               	movlw	0
  9465  003F1A  6E0C               	movwf	?___fpclassifyf+1,c
  9466  003F1C  0E02               	movlw	2
  9467  003F1E  6E0B               	movwf	?___fpclassifyf,c
  9468  003F20  0012               	return	
  9469  003F22                     l7558:
  9470  003F22  0E00               	movlw	0
  9471  003F24  6E0C               	movwf	?___fpclassifyf+1,c
  9472  003F26  0E03               	movlw	3
  9473  003F28  6E0B               	movwf	?___fpclassifyf,c
  9474  003F2A  0012               	return	
  9475  003F2C                     l7562:
  9476  003F2C  2813               	incf	___fpclassifyf@e,w,c
  9477  003F2E  1014               	iorwf	___fpclassifyf@e+1,w,c
  9478  003F30  A4D8               	btfss	status,2,c
  9479  003F32  D01C               	goto	l7568
  9480  003F34  C015  F00F         	movff	___fpclassifyf@u,??___fpclassifyf
  9481  003F38  C016  F010         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9482  003F3C  C017  F011         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9483  003F40  C018  F012         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9484  003F44  0E09               	movlw	9
  9485  003F46                     u8885:
  9486  003F46  90D8               	bcf	status,0,c
  9487  003F48  360F               	rlcf	??___fpclassifyf,f,c
  9488  003F4A  3610               	rlcf	??___fpclassifyf+1,f,c
  9489  003F4C  3611               	rlcf	??___fpclassifyf+2,f,c
  9490  003F4E  3612               	rlcf	??___fpclassifyf+3,f,c
  9491  003F50  2EE8               	decfsz	wreg,f,c
  9492  003F52  D7F9               	goto	u8885
  9493  003F54  500F               	movf	??___fpclassifyf,w,c
  9494  003F56  1010               	iorwf	??___fpclassifyf+1,w,c
  9495  003F58  1011               	iorwf	??___fpclassifyf+2,w,c
  9496  003F5A  1012               	iorwf	??___fpclassifyf+3,w,c
  9497  003F5C  A4D8               	btfss	status,2,c
  9498  003F5E  D002               	goto	u8890
  9499  003F60  0E01               	movlw	1
  9500  003F62  D001               	goto	u8900
  9501  003F64                     u8890:
  9502  003F64  0E00               	movlw	0
  9503  003F66                     u8900:
  9504  003F66  6E0B               	movwf	?___fpclassifyf,c
  9505  003F68  6A0C               	clrf	?___fpclassifyf+1,c
  9506  003F6A  0012               	return	
  9507  003F6C                     l7568:
  9508  003F6C  0E00               	movlw	0
  9509  003F6E  6E0C               	movwf	?___fpclassifyf+1,c
  9510  003F70  0E04               	movlw	4
  9511  003F72  6E0B               	movwf	?___fpclassifyf,c
  9512  003F74  0012               	return		;funcret
  9513  003F76                     __end_of___fpclassifyf:
  9514                           	opt callstack 0
  9515                           
  9516 ;; *************** function ___fltol *****************
  9517 ;; Defined at:
  9518 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  f1              4   71[COMRAM] int 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  exp1            1   80[COMRAM] unsigned char 
  9523 ;;  sign1           1   79[COMRAM] unsigned char 
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  4   71[COMRAM] long 
  9526 ;; Registers used:
  9527 ;;		wreg, status,2, status,0
  9528 ;; Tracked objects:
  9529 ;;		On entry : 0/0
  9530 ;;		On exit  : 0/0
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9533 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9535 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9536 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9537 ;;Total ram usage:       10 bytes
  9538 ;; Hardware stack levels used:    1
  9539 ;; Hardware stack levels required when called:    1
  9540 ;; This function calls:
  9541 ;;		Nothing
  9542 ;; This function is called by:
  9543 ;;		_main
  9544 ;;		_efgtoa
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548                           	psect	text18
  9549  003F76                     __ptext18:
  9550                           	opt callstack 0
  9551  003F76                     ___fltol:
  9552                           	opt callstack 25
  9553                           
  9554                           ;incstack = 0
  9555  003F76  344A               	rlcf	___fltol@f1+2,w,c
  9556  003F78  344B               	rlcf	___fltol@f1+3,w,c
  9557  003F7A  6E51               	movwf	___fltol@exp1,c
  9558  003F7C  5051               	movf	___fltol@exp1,w,c
  9559  003F7E  A4D8               	btfss	status,2,c
  9560  003F80  D009               	goto	l8124
  9561  003F82                     u9890:
  9562  003F82  0E00               	movlw	0
  9563  003F84  6E48               	movwf	?___fltol,c
  9564  003F86  0E00               	movlw	0
  9565  003F88  6E49               	movwf	?___fltol+1,c
  9566  003F8A  0E00               	movlw	0
  9567  003F8C  6E4A               	movwf	?___fltol+2,c
  9568  003F8E  0E00               	movlw	0
  9569  003F90  6E4B               	movwf	?___fltol+3,c
  9570  003F92  0012               	return	
  9571  003F94                     l8124:
  9572  003F94  C048  F04C         	movff	___fltol@f1,??___fltol
  9573  003F98  C049  F04D         	movff	___fltol@f1+1,??___fltol+1
  9574  003F9C  C04A  F04E         	movff	___fltol@f1+2,??___fltol+2
  9575  003FA0  C04B  F04F         	movff	___fltol@f1+3,??___fltol+3
  9576  003FA4  0E20               	movlw	32
  9577  003FA6  D005               	goto	u9900
  9578  003FA8                     u9905:
  9579  003FA8  90D8               	bcf	status,0,c
  9580  003FAA  324F               	rrcf	??___fltol+3,f,c
  9581  003FAC  324E               	rrcf	??___fltol+2,f,c
  9582  003FAE  324D               	rrcf	??___fltol+1,f,c
  9583  003FB0  324C               	rrcf	??___fltol,f,c
  9584  003FB2                     u9900:
  9585  003FB2  2EE8               	decfsz	wreg,f,c
  9586  003FB4  D7F9               	goto	u9905
  9587  003FB6  504C               	movf	??___fltol,w,c
  9588  003FB8  6E50               	movwf	___fltol@sign1,c
  9589  003FBA  8E4A               	bsf	___fltol@f1+2,7,c
  9590  003FBC  0EFF               	movlw	255
  9591  003FBE  1648               	andwf	___fltol@f1,f,c
  9592  003FC0  0EFF               	movlw	255
  9593  003FC2  1649               	andwf	___fltol@f1+1,f,c
  9594  003FC4  0EFF               	movlw	255
  9595  003FC6  164A               	andwf	___fltol@f1+2,f,c
  9596  003FC8  0E00               	movlw	0
  9597  003FCA  164B               	andwf	___fltol@f1+3,f,c
  9598  003FCC  0E96               	movlw	150
  9599  003FCE  5E51               	subwf	___fltol@exp1,f,c
  9600  003FD0  AE51               	btfss	___fltol@exp1,7,c
  9601  003FD2  D00D               	goto	l8144
  9602  003FD4  5051               	movf	___fltol@exp1,w,c
  9603  003FD6  0A80               	xorlw	128
  9604  003FD8  0F97               	addlw	151
  9605  003FDA  A0D8               	btfss	status,0,c
  9606  003FDC  D7D2               	goto	u9890
  9607  003FDE                     l8140:
  9608  003FDE  90D8               	bcf	status,0,c
  9609  003FE0  324B               	rrcf	___fltol@f1+3,f,c
  9610  003FE2  324A               	rrcf	___fltol@f1+2,f,c
  9611  003FE4  3249               	rrcf	___fltol@f1+1,f,c
  9612  003FE6  3248               	rrcf	___fltol@f1,f,c
  9613  003FE8  3E51               	incfsz	___fltol@exp1,f,c
  9614  003FEA  D7F9               	goto	l8140
  9615  003FEC  D00D               	goto	u9940
  9616  003FEE                     l8144:
  9617  003FEE  0E1F               	movlw	31
  9618  003FF0  6451               	cpfsgt	___fltol@exp1,c
  9619  003FF2  D007               	goto	l8152
  9620  003FF4  D7C6               	goto	u9890
  9621  003FF6                     l8150:
  9622  003FF6  90D8               	bcf	status,0,c
  9623  003FF8  3648               	rlcf	___fltol@f1,f,c
  9624  003FFA  3649               	rlcf	___fltol@f1+1,f,c
  9625  003FFC  364A               	rlcf	___fltol@f1+2,f,c
  9626  003FFE  364B               	rlcf	___fltol@f1+3,f,c
  9627  004000  0651               	decf	___fltol@exp1,f,c
  9628  004002                     l8152:
  9629  004002  5051               	movf	___fltol@exp1,w,c
  9630  004004  A4D8               	btfss	status,2,c
  9631  004006  D7F7               	goto	l8150
  9632  004008                     u9940:
  9633  004008  5050               	movf	___fltol@sign1,w,c
  9634  00400A  B4D8               	btfsc	status,2,c
  9635  00400C  D008               	goto	l8158
  9636  00400E  1E4B               	comf	___fltol@f1+3,f,c
  9637  004010  1E4A               	comf	___fltol@f1+2,f,c
  9638  004012  1E49               	comf	___fltol@f1+1,f,c
  9639  004014  6C48               	negf	___fltol@f1,c
  9640  004016  0E00               	movlw	0
  9641  004018  2249               	addwfc	___fltol@f1+1,f,c
  9642  00401A  224A               	addwfc	___fltol@f1+2,f,c
  9643  00401C  224B               	addwfc	___fltol@f1+3,f,c
  9644  00401E                     l8158:
  9645  00401E  C048  F048         	movff	___fltol@f1,?___fltol
  9646  004022  C049  F049         	movff	___fltol@f1+1,?___fltol+1
  9647  004026  C04A  F04A         	movff	___fltol@f1+2,?___fltol+2
  9648  00402A  C04B  F04B         	movff	___fltol@f1+3,?___fltol+3
  9649  00402E  0012               	return		;funcret
  9650  004030                     __end_of___fltol:
  9651                           	opt callstack 0
  9652                           
  9653 ;; *************** function ___flsub *****************
  9654 ;; Defined at:
  9655 ;;		line 245 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  b               4   71[COMRAM] long 
  9658 ;;  a               4   75[COMRAM] long 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;		None
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  4   71[COMRAM] long 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2, status,0, cstack
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9673 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9674 ;;Total ram usage:        8 bytes
  9675 ;; Hardware stack levels used:    1
  9676 ;; Hardware stack levels required when called:    2
  9677 ;; This function calls:
  9678 ;;		___fladd
  9679 ;; This function is called by:
  9680 ;;		_main
  9681 ;;		_efgtoa
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text19
  9686  00477C                     __ptext19:
  9687                           	opt callstack 0
  9688  00477C                     ___flsub:
  9689                           	opt callstack 24
  9690                           
  9691                           ;incstack = 0
  9692  00477C  0E00               	movlw	0
  9693  00477E  1A4C               	xorwf	___flsub@a,f,c
  9694  004780  0E00               	movlw	0
  9695  004782  1A4D               	xorwf	___flsub@a+1,f,c
  9696  004784  0E00               	movlw	0
  9697  004786  1A4E               	xorwf	___flsub@a+2,f,c
  9698  004788  0E80               	movlw	128
  9699  00478A  1A4F               	xorwf	___flsub@a+3,f,c
  9700  00478C  C048  F038         	movff	___flsub@b,___fladd@b
  9701  004790  C049  F039         	movff	___flsub@b+1,___fladd@b+1
  9702  004794  C04A  F03A         	movff	___flsub@b+2,___fladd@b+2
  9703  004798  C04B  F03B         	movff	___flsub@b+3,___fladd@b+3
  9704  00479C  C04C  F03C         	movff	___flsub@a,___fladd@a
  9705  0047A0  C04D  F03D         	movff	___flsub@a+1,___fladd@a+1
  9706  0047A4  C04E  F03E         	movff	___flsub@a+2,___fladd@a+2
  9707  0047A8  C04F  F03F         	movff	___flsub@a+3,___fladd@a+3
  9708  0047AC  EC87  F014         	call	___fladd	;wreg free
  9709  0047B0  C038  F048         	movff	?___fladd,?___flsub
  9710  0047B4  C039  F049         	movff	?___fladd+1,?___flsub+1
  9711  0047B8  C03A  F04A         	movff	?___fladd+2,?___flsub+2
  9712  0047BC  C03B  F04B         	movff	?___fladd+3,?___flsub+3
  9713  0047C0  0012               	return		;funcret
  9714  0047C2                     __end_of___flsub:
  9715                           	opt callstack 0
  9716                           
  9717 ;; *************** function ___fladd *****************
  9718 ;; Defined at:
  9719 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  b               4   55[COMRAM] long 
  9722 ;;  a               4   59[COMRAM] long 
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;  grs             1   70[COMRAM] unsigned char 
  9725 ;;  bexp            1   69[COMRAM] unsigned char 
  9726 ;;  aexp            1   68[COMRAM] unsigned char 
  9727 ;;  signs           1   67[COMRAM] unsigned char 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  4   55[COMRAM] unsigned char 
  9730 ;; Registers used:
  9731 ;;		wreg, status,2, status,0
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9737 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;Total ram usage:       16 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:    1
  9744 ;; This function calls:
  9745 ;;		Nothing
  9746 ;; This function is called by:
  9747 ;;		_main
  9748 ;;		_efgtoa
  9749 ;;		___flsub
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           
  9753                           	psect	text20
  9754  00290E                     __ptext20:
  9755                           	opt callstack 0
  9756  00290E                     ___fladd:
  9757                           	opt callstack 24
  9758                           
  9759                           ;incstack = 0
  9760  00290E  503B               	movf	___fladd@b+3,w,c
  9761  002910  0B80               	andlw	128
  9762  002912  6E44               	movwf	___fladd@signs,c
  9763  002914  503B               	movf	___fladd@b+3,w,c
  9764  002916  243B               	addwf	___fladd@b+3,w,c
  9765  002918  6E46               	movwf	___fladd@bexp,c
  9766  00291A  BE3A               	btfsc	___fladd@b+2,7,c
  9767  00291C  8046               	bsf	___fladd@bexp,0,c
  9768  00291E  5046               	movf	___fladd@bexp,w,c
  9769  002920  B4D8               	btfsc	status,2,c
  9770  002922  D00D               	goto	l7334
  9771  002924  2846               	incf	___fladd@bexp,w,c
  9772  002926  A4D8               	btfss	status,2,c
  9773  002928  D008               	goto	l7330
  9774  00292A  0E00               	movlw	0
  9775  00292C  6E38               	movwf	___fladd@b,c
  9776  00292E  0E00               	movlw	0
  9777  002930  6E39               	movwf	___fladd@b+1,c
  9778  002932  0E00               	movlw	0
  9779  002934  6E3A               	movwf	___fladd@b+2,c
  9780  002936  0E00               	movlw	0
  9781  002938  6E3B               	movwf	___fladd@b+3,c
  9782  00293A                     l7330:
  9783  00293A  8E3A               	bsf	___fladd@b+2,7,c
  9784  00293C  D006               	goto	L10
  9785  00293E                     l7334:
  9786  00293E  0E00               	movlw	0
  9787  002940  6E38               	movwf	___fladd@b,c
  9788  002942  0E00               	movlw	0
  9789  002944  6E39               	movwf	___fladd@b+1,c
  9790  002946  0E00               	movlw	0
  9791  002948  6E3A               	movwf	___fladd@b+2,c
  9792  00294A                     L10:
  9793  00294A  0E00               	movlw	0
  9794  00294C  6E3B               	movwf	___fladd@b+3,c
  9795  00294E  503F               	movf	___fladd@a+3,w,c
  9796  002950  0B80               	andlw	128
  9797  002952  6E45               	movwf	___fladd@aexp,c
  9798  002954  5044               	movf	___fladd@signs,w,c
  9799  002956  1845               	xorwf	___fladd@aexp,w,c
  9800  002958  A4D8               	btfss	status,2,c
  9801  00295A  8C44               	bsf	___fladd@signs,6,c
  9802  00295C  503F               	movf	___fladd@a+3,w,c
  9803  00295E  243F               	addwf	___fladd@a+3,w,c
  9804  002960  6E45               	movwf	___fladd@aexp,c
  9805  002962  BE3E               	btfsc	___fladd@a+2,7,c
  9806  002964  8045               	bsf	___fladd@aexp,0,c
  9807  002966  5045               	movf	___fladd@aexp,w,c
  9808  002968  B4D8               	btfsc	status,2,c
  9809  00296A  D00D               	goto	l7358
  9810  00296C  2845               	incf	___fladd@aexp,w,c
  9811  00296E  A4D8               	btfss	status,2,c
  9812  002970  D008               	goto	l7354
  9813  002972  0E00               	movlw	0
  9814  002974  6E3C               	movwf	___fladd@a,c
  9815  002976  0E00               	movlw	0
  9816  002978  6E3D               	movwf	___fladd@a+1,c
  9817  00297A  0E00               	movlw	0
  9818  00297C  6E3E               	movwf	___fladd@a+2,c
  9819  00297E  0E00               	movlw	0
  9820  002980  6E3F               	movwf	___fladd@a+3,c
  9821  002982                     l7354:
  9822  002982  8E3E               	bsf	___fladd@a+2,7,c
  9823  002984  D006               	goto	L11
  9824  002986                     l7358:
  9825  002986  0E00               	movlw	0
  9826  002988  6E3C               	movwf	___fladd@a,c
  9827  00298A  0E00               	movlw	0
  9828  00298C  6E3D               	movwf	___fladd@a+1,c
  9829  00298E  0E00               	movlw	0
  9830  002990  6E3E               	movwf	___fladd@a+2,c
  9831  002992                     L11:
  9832  002992  0E00               	movlw	0
  9833  002994  6E3F               	movwf	___fladd@a+3,c
  9834  002996  5046               	movf	___fladd@bexp,w,c
  9835  002998  5C45               	subwf	___fladd@aexp,w,c
  9836  00299A  B0D8               	btfsc	status,0,c
  9837  00299C  D022               	goto	l7396
  9838  00299E  AC44               	btfss	___fladd@signs,6,c
  9839  0029A0  D002               	goto	l7366
  9840  0029A2  0E80               	movlw	128
  9841  0029A4  1A44               	xorwf	___fladd@signs,f,c
  9842  0029A6                     l7366:
  9843  0029A6  C046  F047         	movff	___fladd@bexp,___fladd@grs
  9844  0029AA  C045  F046         	movff	___fladd@aexp,___fladd@bexp
  9845  0029AE  C047  F045         	movff	___fladd@grs,___fladd@aexp
  9846  0029B2  C038  F047         	movff	___fladd@b,___fladd@grs
  9847  0029B6  C03C  F038         	movff	___fladd@a,___fladd@b
  9848  0029BA  C047  F03C         	movff	___fladd@grs,___fladd@a
  9849  0029BE  C039  F047         	movff	___fladd@b+1,___fladd@grs
  9850  0029C2  C03D  F039         	movff	___fladd@a+1,___fladd@b+1
  9851  0029C6  C047  F03D         	movff	___fladd@grs,___fladd@a+1
  9852  0029CA  C03A  F047         	movff	___fladd@b+2,___fladd@grs
  9853  0029CE  C03E  F03A         	movff	___fladd@a+2,___fladd@b+2
  9854  0029D2  C047  F03E         	movff	___fladd@grs,___fladd@a+2
  9855  0029D6  C03B  F047         	movff	___fladd@b+3,___fladd@grs
  9856  0029DA  C03F  F03B         	movff	___fladd@a+3,___fladd@b+3
  9857  0029DE  C047  F03F         	movff	___fladd@grs,___fladd@a+3
  9858  0029E2                     l7396:
  9859  0029E2  0E00               	movlw	0
  9860  0029E4  6E47               	movwf	___fladd@grs,c
  9861  0029E6  5046               	movf	___fladd@bexp,w,c
  9862  0029E8  C045  F040         	movff	___fladd@aexp,??___fladd
  9863  0029EC  6A41               	clrf	(??___fladd+1)& (0+255),c
  9864  0029EE  5E40               	subwf	??___fladd,f,c
  9865  0029F0  0E00               	movlw	0
  9866  0029F2  5A41               	subwfb	??___fladd+1,f,c
  9867  0029F4  BE41               	btfsc	??___fladd+1,7,c
  9868  0029F6  D02C               	goto	l1230
  9869  0029F8  5041               	movf	??___fladd+1,w,c
  9870  0029FA  E104               	bnz	u8470
  9871  0029FC  0E1A               	movlw	26
  9872  0029FE  5C40               	subwf	??___fladd,w,c
  9873  002A00  A0D8               	btfss	status,0,c
  9874  002A02  D026               	goto	l1230
  9875  002A04                     u8470:
  9876  002A04  5038               	movf	___fladd@b,w,c
  9877  002A06  1039               	iorwf	___fladd@b+1,w,c
  9878  002A08  103A               	iorwf	___fladd@b+2,w,c
  9879  002A0A  103B               	iorwf	___fladd@b+3,w,c
  9880  002A0C  B4D8               	btfsc	status,2,c
  9881  002A0E  D002               	goto	u8480
  9882  002A10  0E01               	movlw	1
  9883  002A12  D001               	goto	u8490
  9884  002A14                     u8480:
  9885  002A14  0E00               	movlw	0
  9886  002A16                     u8490:
  9887  002A16  6E47               	movwf	___fladd@grs,c
  9888  002A18  0E00               	movlw	0
  9889  002A1A  6E38               	movwf	___fladd@b,c
  9890  002A1C  0E00               	movlw	0
  9891  002A1E  6E39               	movwf	___fladd@b+1,c
  9892  002A20  0E00               	movlw	0
  9893  002A22  6E3A               	movwf	___fladd@b+2,c
  9894  002A24  0E00               	movlw	0
  9895  002A26  6E3B               	movwf	___fladd@b+3,c
  9896  002A28  C045  F046         	movff	___fladd@aexp,___fladd@bexp
  9897  002A2C  D015               	goto	u8520
  9898  002A2E                     l1231:
  9899  002A2E  A047               	btfss	___fladd@grs,0,c
  9900  002A30  D005               	goto	l7408
  9901  002A32  90D8               	bcf	status,0,c
  9902  002A34  3047               	rrcf	___fladd@grs,w,c
  9903  002A36  0901               	iorlw	1
  9904  002A38  6E47               	movwf	___fladd@grs,c
  9905  002A3A  D002               	goto	l7410
  9906  002A3C                     l7408:
  9907  002A3C  90D8               	bcf	status,0,c
  9908  002A3E  3247               	rrcf	___fladd@grs,f,c
  9909  002A40                     l7410:
  9910  002A40  B038               	btfsc	___fladd@b,0,c
  9911  002A42  8E47               	bsf	___fladd@grs,7,c
  9912  002A44  343B               	rlcf	___fladd@b+3,w,c
  9913  002A46  323B               	rrcf	___fladd@b+3,f,c
  9914  002A48  323A               	rrcf	___fladd@b+2,f,c
  9915  002A4A  3239               	rrcf	___fladd@b+1,f,c
  9916  002A4C  3238               	rrcf	___fladd@b,f,c
  9917  002A4E  2A46               	incf	___fladd@bexp,f,c
  9918  002A50                     l1230:
  9919  002A50  5045               	movf	___fladd@aexp,w,c
  9920  002A52  5C46               	subwf	___fladd@bexp,w,c
  9921  002A54  A0D8               	btfss	status,0,c
  9922  002A56  D7EB               	goto	l1231
  9923  002A58                     u8520:
  9924  002A58  BC44               	btfsc	___fladd@signs,6,c
  9925  002A5A  D028               	goto	l7442
  9926  002A5C  5046               	movf	___fladd@bexp,w,c
  9927  002A5E  A4D8               	btfss	status,2,c
  9928  002A60  D009               	goto	l7424
  9929  002A62  0E00               	movlw	0
  9930  002A64  6E38               	movwf	?___fladd,c
  9931  002A66  0E00               	movlw	0
  9932  002A68  6E39               	movwf	?___fladd+1,c
  9933  002A6A  0E00               	movlw	0
  9934  002A6C  6E3A               	movwf	?___fladd+2,c
  9935  002A6E  0E00               	movlw	0
  9936  002A70  6E3B               	movwf	?___fladd+3,c
  9937  002A72  0012               	return	
  9938  002A74                     l7424:
  9939  002A74  503C               	movf	___fladd@a,w,c
  9940  002A76  2638               	addwf	___fladd@b,f,c
  9941  002A78  503D               	movf	___fladd@a+1,w,c
  9942  002A7A  2239               	addwfc	___fladd@b+1,f,c
  9943  002A7C  503E               	movf	___fladd@a+2,w,c
  9944  002A7E  223A               	addwfc	___fladd@b+2,f,c
  9945  002A80  503F               	movf	___fladd@a+3,w,c
  9946  002A82  223B               	addwfc	___fladd@b+3,f,c
  9947  002A84  A03B               	btfss	___fladd@b+3,0,c
  9948  002A86  D071               	goto	u8650
  9949  002A88  A047               	btfss	___fladd@grs,0,c
  9950  002A8A  D005               	goto	l7432
  9951  002A8C  90D8               	bcf	status,0,c
  9952  002A8E  3047               	rrcf	___fladd@grs,w,c
  9953  002A90  0901               	iorlw	1
  9954  002A92  6E47               	movwf	___fladd@grs,c
  9955  002A94  D002               	goto	l7434
  9956  002A96                     l7432:
  9957  002A96  90D8               	bcf	status,0,c
  9958  002A98  3247               	rrcf	___fladd@grs,f,c
  9959  002A9A                     l7434:
  9960  002A9A  B038               	btfsc	___fladd@b,0,c
  9961  002A9C  8E47               	bsf	___fladd@grs,7,c
  9962  002A9E  343B               	rlcf	___fladd@b+3,w,c
  9963  002AA0  323B               	rrcf	___fladd@b+3,f,c
  9964  002AA2  323A               	rrcf	___fladd@b+2,f,c
  9965  002AA4  3239               	rrcf	___fladd@b+1,f,c
  9966  002AA6  3238               	rrcf	___fladd@b,f,c
  9967  002AA8  2A46               	incf	___fladd@bexp,f,c
  9968  002AAA  D05F               	goto	u8650
  9969  002AAC                     l7442:
  9970  002AAC  503C               	movf	___fladd@a,w,c
  9971  002AAE  5C38               	subwf	___fladd@b,w,c
  9972  002AB0  503D               	movf	___fladd@a+1,w,c
  9973  002AB2  5839               	subwfb	___fladd@b+1,w,c
  9974  002AB4  503E               	movf	___fladd@a+2,w,c
  9975  002AB6  583A               	subwfb	___fladd@b+2,w,c
  9976  002AB8  503B               	movf	___fladd@b+3,w,c
  9977  002ABA  0A80               	xorlw	128
  9978  002ABC  6E40               	movwf	??___fladd& (0+255),c
  9979  002ABE  503F               	movf	___fladd@a+3,w,c
  9980  002AC0  0A80               	xorlw	128
  9981  002AC2  5840               	subwfb	??___fladd& (0+255),w,c
  9982  002AC4  B0D8               	btfsc	status,0,c
  9983  002AC6  D025               	goto	l7452
  9984  002AC8  5038               	movf	___fladd@b,w,c
  9985  002ACA  5C3C               	subwf	___fladd@a,w,c
  9986  002ACC  6E40               	movwf	??___fladd& (0+255),c
  9987  002ACE  5039               	movf	___fladd@b+1,w,c
  9988  002AD0  583D               	subwfb	___fladd@a+1,w,c
  9989  002AD2  6E41               	movwf	(??___fladd+1)& (0+255),c
  9990  002AD4  503A               	movf	___fladd@b+2,w,c
  9991  002AD6  583E               	subwfb	___fladd@a+2,w,c
  9992  002AD8  6E42               	movwf	(??___fladd+2)& (0+255),c
  9993  002ADA  503B               	movf	___fladd@b+3,w,c
  9994  002ADC  583F               	subwfb	___fladd@a+3,w,c
  9995  002ADE  6E43               	movwf	(??___fladd+3)& (0+255),c
  9996  002AE0  0EFF               	movlw	255
  9997  002AE2  2440               	addwf	??___fladd,w,c
  9998  002AE4  6E38               	movwf	___fladd@b,c
  9999  002AE6  0EFF               	movlw	255
 10000  002AE8  2041               	addwfc	??___fladd+1,w,c
 10001  002AEA  6E39               	movwf	___fladd@b+1,c
 10002  002AEC  0EFF               	movlw	255
 10003  002AEE  2042               	addwfc	??___fladd+2,w,c
 10004  002AF0  6E3A               	movwf	___fladd@b+2,c
 10005  002AF2  0EFF               	movlw	255
 10006  002AF4  2043               	addwfc	??___fladd+3,w,c
 10007  002AF6  6E3B               	movwf	___fladd@b+3,c
 10008  002AF8  0E80               	movlw	128
 10009  002AFA  1A44               	xorwf	___fladd@signs,f,c
 10010  002AFC  6C47               	negf	___fladd@grs,c
 10011  002AFE  5047               	movf	___fladd@grs,w,c
 10012  002B00  A4D8               	btfss	status,2,c
 10013  002B02  D00F               	goto	l1246
 10014  002B04  0E01               	movlw	1
 10015  002B06  2638               	addwf	___fladd@b,f,c
 10016  002B08  0E00               	movlw	0
 10017  002B0A  2239               	addwfc	___fladd@b+1,f,c
 10018  002B0C  223A               	addwfc	___fladd@b+2,f,c
 10019  002B0E  223B               	addwfc	___fladd@b+3,f,c
 10020  002B10  D008               	goto	l1246
 10021  002B12                     l7452:
 10022  002B12  503C               	movf	___fladd@a,w,c
 10023  002B14  5E38               	subwf	___fladd@b,f,c
 10024  002B16  503D               	movf	___fladd@a+1,w,c
 10025  002B18  5A39               	subwfb	___fladd@b+1,f,c
 10026  002B1A  503E               	movf	___fladd@a+2,w,c
 10027  002B1C  5A3A               	subwfb	___fladd@b+2,f,c
 10028  002B1E  503F               	movf	___fladd@a+3,w,c
 10029  002B20  5A3B               	subwfb	___fladd@b+3,f,c
 10030  002B22                     l1246:
 10031  002B22  5038               	movf	___fladd@b,w,c
 10032  002B24  1039               	iorwf	___fladd@b+1,w,c
 10033  002B26  103A               	iorwf	___fladd@b+2,w,c
 10034  002B28  103B               	iorwf	___fladd@b+3,w,c
 10035  002B2A  A4D8               	btfss	status,2,c
 10036  002B2C  D01C               	goto	l7476
 10037  002B2E  5047               	movf	___fladd@grs,w,c
 10038  002B30  A4D8               	btfss	status,2,c
 10039  002B32  D019               	goto	l7476
 10040  002B34  0E00               	movlw	0
 10041  002B36  6E38               	movwf	?___fladd,c
 10042  002B38  0E00               	movlw	0
 10043  002B3A  6E39               	movwf	?___fladd+1,c
 10044  002B3C  0E00               	movlw	0
 10045  002B3E  6E3A               	movwf	?___fladd+2,c
 10046  002B40  0E00               	movlw	0
 10047  002B42  6E3B               	movwf	?___fladd+3,c
 10048  002B44  0012               	return	
 10049  002B46                     l7460:
 10050  002B46  90D8               	bcf	status,0,c
 10051  002B48  3638               	rlcf	___fladd@b,f,c
 10052  002B4A  3639               	rlcf	___fladd@b+1,f,c
 10053  002B4C  363A               	rlcf	___fladd@b+2,f,c
 10054  002B4E  363B               	rlcf	___fladd@b+3,f,c
 10055  002B50  BE47               	btfsc	___fladd@grs,7,c
 10056  002B52  8038               	bsf	___fladd@b,0,c
 10057  002B54  A047               	btfss	___fladd@grs,0,c
 10058  002B56  D002               	goto	l7470
 10059  002B58  80D8               	bsf	status,0,c
 10060  002B5A  D001               	goto	L12
 10061  002B5C                     l7470:
 10062  002B5C  90D8               	bcf	status,0,c
 10063  002B5E                     L12:
 10064  002B5E  3647               	rlcf	___fladd@grs,f,c
 10065  002B60  5046               	movf	___fladd@bexp,w,c
 10066  002B62  A4D8               	btfss	status,2,c
 10067  002B64  0646               	decf	___fladd@bexp,f,c
 10068  002B66                     l7476:
 10069  002B66  AE3A               	btfss	___fladd@b+2,7,c
 10070  002B68  D7EE               	goto	l7460
 10071  002B6A                     u8650:
 10072  002B6A  0E00               	movlw	0
 10073  002B6C  6E45               	movwf	___fladd@aexp,c
 10074  002B6E  AE47               	btfss	___fladd@grs,7,c
 10075  002B70  D00B               	goto	l1255
 10076  002B72  C047  F040         	movff	___fladd@grs,??___fladd
 10077  002B76  0E7F               	movlw	127
 10078  002B78  1640               	andwf	??___fladd,f,c
 10079  002B7A  B4D8               	btfsc	status,2,c
 10080  002B7C  D003               	goto	l1256
 10081  002B7E                     u8670:
 10082  002B7E  0E01               	movlw	1
 10083  002B80  6E45               	movwf	___fladd@aexp,c
 10084  002B82  D002               	goto	l1255
 10085  002B84                     l1256:
 10086  002B84  B038               	btfsc	___fladd@b,0,c
 10087  002B86  D7FB               	goto	u8670
 10088  002B88                     l1255:
 10089  002B88  5045               	movf	___fladd@aexp,w,c
 10090  002B8A  B4D8               	btfsc	status,2,c
 10091  002B8C  D020               	goto	l7496
 10092  002B8E  0E01               	movlw	1
 10093  002B90  2638               	addwf	___fladd@b,f,c
 10094  002B92  0E00               	movlw	0
 10095  002B94  2239               	addwfc	___fladd@b+1,f,c
 10096  002B96  223A               	addwfc	___fladd@b+2,f,c
 10097  002B98  223B               	addwfc	___fladd@b+3,f,c
 10098  002B9A  A03B               	btfss	___fladd@b+3,0,c
 10099  002B9C  D018               	goto	l7496
 10100  002B9E  C038  F040         	movff	___fladd@b,??___fladd
 10101  002BA2  C039  F041         	movff	___fladd@b+1,??___fladd+1
 10102  002BA6  C03A  F042         	movff	___fladd@b+2,??___fladd+2
 10103  002BAA  C03B  F043         	movff	___fladd@b+3,??___fladd+3
 10104  002BAE  3443               	rlcf	??___fladd+3,w,c
 10105  002BB0  3243               	rrcf	??___fladd+3,f,c
 10106  002BB2  3242               	rrcf	??___fladd+2,f,c
 10107  002BB4  3241               	rrcf	??___fladd+1,f,c
 10108  002BB6  3240               	rrcf	??___fladd,f,c
 10109  002BB8  C040  F038         	movff	??___fladd,___fladd@b
 10110  002BBC  C041  F039         	movff	??___fladd+1,___fladd@b+1
 10111  002BC0  C042  F03A         	movff	??___fladd+2,___fladd@b+2
 10112  002BC4  C043  F03B         	movff	??___fladd+3,___fladd@b+3
 10113  002BC8  2846               	incf	___fladd@bexp,w,c
 10114  002BCA  A4D8               	btfss	status,2,c
 10115  002BCC  2A46               	incf	___fladd@bexp,f,c
 10116  002BCE                     l7496:
 10117  002BCE  2846               	incf	___fladd@bexp,w,c
 10118  002BD0  B4D8               	btfsc	status,2,c
 10119  002BD2  D003               	goto	u8730
 10120  002BD4  5046               	movf	___fladd@bexp,w,c
 10121  002BD6  A4D8               	btfss	status,2,c
 10122  002BD8  D00D               	goto	l7504
 10123  002BDA                     u8730:
 10124  002BDA  0E00               	movlw	0
 10125  002BDC  6E38               	movwf	___fladd@b,c
 10126  002BDE  0E00               	movlw	0
 10127  002BE0  6E39               	movwf	___fladd@b+1,c
 10128  002BE2  0E00               	movlw	0
 10129  002BE4  6E3A               	movwf	___fladd@b+2,c
 10130  002BE6  0E00               	movlw	0
 10131  002BE8  6E3B               	movwf	___fladd@b+3,c
 10132  002BEA  5046               	movf	___fladd@bexp,w,c
 10133  002BEC  A4D8               	btfss	status,2,c
 10134  002BEE  D002               	goto	l7504
 10135  002BF0  0E00               	movlw	0
 10136  002BF2  6E44               	movwf	___fladd@signs,c
 10137  002BF4                     l7504:
 10138  002BF4  A046               	btfss	___fladd@bexp,0,c
 10139  002BF6  D002               	goto	l7508
 10140  002BF8  8E3A               	bsf	___fladd@b+2,7,c
 10141  002BFA  D001               	goto	l7510
 10142  002BFC                     l7508:
 10143  002BFC  9E3A               	bcf	___fladd@b+2,7,c
 10144  002BFE                     l7510:
 10145  002BFE  90D8               	bcf	status,0,c
 10146  002C00  3046               	rrcf	___fladd@bexp,w,c
 10147  002C02  6E3B               	movwf	___fladd@b+3,c
 10148  002C04  BE44               	btfsc	___fladd@signs,7,c
 10149  002C06  8E3B               	bsf	___fladd@b+3,7,c
 10150  002C08  C038  F038         	movff	___fladd@b,?___fladd
 10151  002C0C  C039  F039         	movff	___fladd@b+1,?___fladd+1
 10152  002C10  C03A  F03A         	movff	___fladd@b+2,?___fladd+2
 10153  002C14  C03B  F03B         	movff	___fladd@b+3,?___fladd+3
 10154  002C18  0012               	return		;funcret
 10155  002C1A                     __end_of___fladd:
 10156                           	opt callstack 0
 10157                           
 10158 ;; *************** function ___flneg *****************
 10159 ;; Defined at:
 10160 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;  f1              4   10[COMRAM] unsigned char 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;                  4   10[COMRAM] unsigned char 
 10167 ;; Registers used:
 10168 ;;		wreg, status,2, status,0
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10177 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10178 ;;Total ram usage:        4 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; Hardware stack levels required when called:    1
 10181 ;; This function calls:
 10182 ;;		Nothing
 10183 ;; This function is called by:
 10184 ;;		_efgtoa
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text21
 10189  0049FC                     __ptext21:
 10190                           	opt callstack 0
 10191  0049FC                     ___flneg:
 10192                           	opt callstack 25
 10193                           
 10194                           ;incstack = 0
 10195  0049FC  500B               	movf	___flneg@f1,w,c
 10196  0049FE  100C               	iorwf	___flneg@f1+1,w,c
 10197  004A00  100D               	iorwf	___flneg@f1+2,w,c
 10198  004A02  100E               	iorwf	___flneg@f1+3,w,c
 10199  004A04  B4D8               	btfsc	status,2,c
 10200  004A06  D008               	goto	l8114
 10201  004A08  0E00               	movlw	0
 10202  004A0A  1A0B               	xorwf	___flneg@f1,f,c
 10203  004A0C  0E00               	movlw	0
 10204  004A0E  1A0C               	xorwf	___flneg@f1+1,f,c
 10205  004A10  0E00               	movlw	0
 10206  004A12  1A0D               	xorwf	___flneg@f1+2,f,c
 10207  004A14  0E80               	movlw	128
 10208  004A16  1A0E               	xorwf	___flneg@f1+3,f,c
 10209  004A18                     l8114:
 10210  004A18  C00B  F00B         	movff	___flneg@f1,?___flneg
 10211  004A1C  C00C  F00C         	movff	___flneg@f1+1,?___flneg+1
 10212  004A20  C00D  F00D         	movff	___flneg@f1+2,?___flneg+2
 10213  004A24  C00E  F00E         	movff	___flneg@f1+3,?___flneg+3
 10214  004A28  0012               	return		;funcret
 10215  004A2A                     __end_of___flneg:
 10216                           	opt callstack 0
 10217                           
 10218 ;; *************** function ___flmul *****************
 10219 ;; Defined at:
 10220 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  b               4   30[COMRAM] unsigned char 
 10223 ;;  a               4   34[COMRAM] unsigned char 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  prod            4   49[COMRAM] struct .
 10226 ;;  grs             4   44[COMRAM] unsigned long 
 10227 ;;  temp            2   53[COMRAM] struct .
 10228 ;;  bexp            1   48[COMRAM] unsigned char 
 10229 ;;  aexp            1   43[COMRAM] unsigned char 
 10230 ;;  sign            1   42[COMRAM] unsigned char 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  4   30[COMRAM] unsigned char 
 10233 ;; Registers used:
 10234 ;;		wreg, status,2, status,0, prodl, prodh
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10241 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10243 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10244 ;;Total ram usage:       25 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    1
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_main
 10251 ;;		_efgtoa
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text22
 10256  0025BC                     __ptext22:
 10257                           	opt callstack 0
 10258  0025BC                     ___flmul:
 10259                           	opt callstack 25
 10260                           
 10261                           ;incstack = 0
 10262  0025BC  5022               	movf	___flmul@b+3,w,c
 10263  0025BE  0B80               	andlw	128
 10264  0025C0  6E2B               	movwf	___flmul@sign,c
 10265  0025C2  5022               	movf	___flmul@b+3,w,c
 10266  0025C4  2422               	addwf	___flmul@b+3,w,c
 10267  0025C6  6E31               	movwf	___flmul@bexp,c
 10268  0025C8  BE21               	btfsc	___flmul@b+2,7,c
 10269  0025CA  8031               	bsf	___flmul@bexp,0,c
 10270  0025CC  5031               	movf	___flmul@bexp,w,c
 10271  0025CE  B4D8               	btfsc	status,2,c
 10272  0025D0  D00D               	goto	l7870
 10273  0025D2  2831               	incf	___flmul@bexp,w,c
 10274  0025D4  A4D8               	btfss	status,2,c
 10275  0025D6  D008               	goto	l7868
 10276  0025D8  0E00               	movlw	0
 10277  0025DA  6E1F               	movwf	___flmul@b,c
 10278  0025DC  0E00               	movlw	0
 10279  0025DE  6E20               	movwf	___flmul@b+1,c
 10280  0025E0  0E00               	movlw	0
 10281  0025E2  6E21               	movwf	___flmul@b+2,c
 10282  0025E4  0E00               	movlw	0
 10283  0025E6  6E22               	movwf	___flmul@b+3,c
 10284  0025E8                     l7868:
 10285  0025E8  8E21               	bsf	___flmul@b+2,7,c
 10286  0025EA  D008               	goto	l7872
 10287  0025EC                     l7870:
 10288  0025EC  0E00               	movlw	0
 10289  0025EE  6E1F               	movwf	___flmul@b,c
 10290  0025F0  0E00               	movlw	0
 10291  0025F2  6E20               	movwf	___flmul@b+1,c
 10292  0025F4  0E00               	movlw	0
 10293  0025F6  6E21               	movwf	___flmul@b+2,c
 10294  0025F8  0E00               	movlw	0
 10295  0025FA  6E22               	movwf	___flmul@b+3,c
 10296  0025FC                     l7872:
 10297  0025FC  5026               	movf	___flmul@a+3,w,c
 10298  0025FE  0B80               	andlw	128
 10299  002600  1A2B               	xorwf	___flmul@sign,f,c
 10300  002602  5026               	movf	___flmul@a+3,w,c
 10301  002604  2426               	addwf	___flmul@a+3,w,c
 10302  002606  6E2C               	movwf	___flmul@aexp,c
 10303  002608  BE25               	btfsc	___flmul@a+2,7,c
 10304  00260A  802C               	bsf	___flmul@aexp,0,c
 10305  00260C  502C               	movf	___flmul@aexp,w,c
 10306  00260E  B4D8               	btfsc	status,2,c
 10307  002610  D00D               	goto	l7888
 10308  002612  282C               	incf	___flmul@aexp,w,c
 10309  002614  A4D8               	btfss	status,2,c
 10310  002616  D008               	goto	l7886
 10311  002618  0E00               	movlw	0
 10312  00261A  6E23               	movwf	___flmul@a,c
 10313  00261C  0E00               	movlw	0
 10314  00261E  6E24               	movwf	___flmul@a+1,c
 10315  002620  0E00               	movlw	0
 10316  002622  6E25               	movwf	___flmul@a+2,c
 10317  002624  0E00               	movlw	0
 10318  002626  6E26               	movwf	___flmul@a+3,c
 10319  002628                     l7886:
 10320  002628  8E25               	bsf	___flmul@a+2,7,c
 10321  00262A  D008               	goto	l1315
 10322  00262C                     l7888:
 10323  00262C  0E00               	movlw	0
 10324  00262E  6E23               	movwf	___flmul@a,c
 10325  002630  0E00               	movlw	0
 10326  002632  6E24               	movwf	___flmul@a+1,c
 10327  002634  0E00               	movlw	0
 10328  002636  6E25               	movwf	___flmul@a+2,c
 10329  002638  0E00               	movlw	0
 10330  00263A  6E26               	movwf	___flmul@a+3,c
 10331  00263C                     l1315:
 10332  00263C  502C               	movf	___flmul@aexp,w,c
 10333  00263E  B4D8               	btfsc	status,2,c
 10334  002640  D003               	goto	u9560
 10335  002642  5031               	movf	___flmul@bexp,w,c
 10336  002644  A4D8               	btfss	status,2,c
 10337  002646  D009               	goto	l7896
 10338  002648                     u9560:
 10339  002648  0E00               	movlw	0
 10340  00264A  6E1F               	movwf	?___flmul,c
 10341  00264C  0E00               	movlw	0
 10342  00264E  6E20               	movwf	?___flmul+1,c
 10343  002650  0E00               	movlw	0
 10344  002652  6E21               	movwf	?___flmul+2,c
 10345  002654  0E00               	movlw	0
 10346  002656  6E22               	movwf	?___flmul+3,c
 10347  002658  0012               	return	
 10348  00265A                     l7896:
 10349  00265A  5025               	movf	___flmul@a+2,w,c
 10350  00265C  021F               	mulwf	___flmul@b,c
 10351  00265E  CFF3 F036          	movff	prodl,___flmul@temp
 10352  002662  CFF4 F037          	movff	prodh,___flmul@temp+1
 10353  002666  5036               	movf	___flmul@temp,w,c
 10354  002668  6E2D               	movwf	___flmul@grs,c
 10355  00266A  6A2E               	clrf	___flmul@grs+1,c
 10356  00266C  6A2F               	clrf	___flmul@grs+2,c
 10357  00266E  6A30               	clrf	___flmul@grs+3,c
 10358  002670  5037               	movf	___flmul@temp+1,w,c
 10359  002672  6E32               	movwf	___flmul@prod,c
 10360  002674  6A33               	clrf	___flmul@prod+1,c
 10361  002676  6A34               	clrf	___flmul@prod+2,c
 10362  002678  6A35               	clrf	___flmul@prod+3,c
 10363  00267A  5024               	movf	___flmul@a+1,w,c
 10364  00267C  0220               	mulwf	___flmul@b+1,c
 10365  00267E  CFF3 F036          	movff	prodl,___flmul@temp
 10366  002682  CFF4 F037          	movff	prodh,___flmul@temp+1
 10367  002686  5036               	movf	___flmul@temp,w,c
 10368  002688  262D               	addwf	___flmul@grs,f,c
 10369  00268A  0E00               	movlw	0
 10370  00268C  222E               	addwfc	___flmul@grs+1,f,c
 10371  00268E  222F               	addwfc	___flmul@grs+2,f,c
 10372  002690  2230               	addwfc	___flmul@grs+3,f,c
 10373  002692  5037               	movf	___flmul@temp+1,w,c
 10374  002694  2632               	addwf	___flmul@prod,f,c
 10375  002696  0E00               	movlw	0
 10376  002698  2233               	addwfc	___flmul@prod+1,f,c
 10377  00269A  2234               	addwfc	___flmul@prod+2,f,c
 10378  00269C  2235               	addwfc	___flmul@prod+3,f,c
 10379  00269E  5023               	movf	___flmul@a,w,c
 10380  0026A0  0221               	mulwf	___flmul@b+2,c
 10381  0026A2  CFF3 F036          	movff	prodl,___flmul@temp
 10382  0026A6  CFF4 F037          	movff	prodh,___flmul@temp+1
 10383  0026AA  5036               	movf	___flmul@temp,w,c
 10384  0026AC  262D               	addwf	___flmul@grs,f,c
 10385  0026AE  0E00               	movlw	0
 10386  0026B0  222E               	addwfc	___flmul@grs+1,f,c
 10387  0026B2  222F               	addwfc	___flmul@grs+2,f,c
 10388  0026B4  2230               	addwfc	___flmul@grs+3,f,c
 10389  0026B6  5037               	movf	___flmul@temp+1,w,c
 10390  0026B8  2632               	addwf	___flmul@prod,f,c
 10391  0026BA  0E00               	movlw	0
 10392  0026BC  2233               	addwfc	___flmul@prod+1,f,c
 10393  0026BE  2234               	addwfc	___flmul@prod+2,f,c
 10394  0026C0  2235               	addwfc	___flmul@prod+3,f,c
 10395  0026C2  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 10396  0026C6  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 10397  0026CA  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 10398  0026CE  6A2D               	clrf	___flmul@grs,c
 10399  0026D0  5023               	movf	___flmul@a,w,c
 10400  0026D2  0220               	mulwf	___flmul@b+1,c
 10401  0026D4  CFF3 F036          	movff	prodl,___flmul@temp
 10402  0026D8  CFF4 F037          	movff	prodh,___flmul@temp+1
 10403  0026DC  5036               	movf	___flmul@temp,w,c
 10404  0026DE  262D               	addwf	___flmul@grs,f,c
 10405  0026E0  5037               	movf	___flmul@temp+1,w,c
 10406  0026E2  222E               	addwfc	___flmul@grs+1,f,c
 10407  0026E4  0E00               	movlw	0
 10408  0026E6  222F               	addwfc	___flmul@grs+2,f,c
 10409  0026E8  0E00               	movlw	0
 10410  0026EA  2230               	addwfc	___flmul@grs+3,f,c
 10411  0026EC  5024               	movf	___flmul@a+1,w,c
 10412  0026EE  021F               	mulwf	___flmul@b,c
 10413  0026F0  CFF3 F036          	movff	prodl,___flmul@temp
 10414  0026F4  CFF4 F037          	movff	prodh,___flmul@temp+1
 10415  0026F8  5036               	movf	___flmul@temp,w,c
 10416  0026FA  262D               	addwf	___flmul@grs,f,c
 10417  0026FC  5037               	movf	___flmul@temp+1,w,c
 10418  0026FE  222E               	addwfc	___flmul@grs+1,f,c
 10419  002700  0E00               	movlw	0
 10420  002702  222F               	addwfc	___flmul@grs+2,f,c
 10421  002704  0E00               	movlw	0
 10422  002706  2230               	addwfc	___flmul@grs+3,f,c
 10423  002708  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 10424  00270C  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 10425  002710  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 10426  002714  6A2D               	clrf	___flmul@grs,c
 10427  002716  5023               	movf	___flmul@a,w,c
 10428  002718  021F               	mulwf	___flmul@b,c
 10429  00271A  CFF3 F036          	movff	prodl,___flmul@temp
 10430  00271E  CFF4 F037          	movff	prodh,___flmul@temp+1
 10431  002722  5036               	movf	___flmul@temp,w,c
 10432  002724  262D               	addwf	___flmul@grs,f,c
 10433  002726  5037               	movf	___flmul@temp+1,w,c
 10434  002728  222E               	addwfc	___flmul@grs+1,f,c
 10435  00272A  0E00               	movlw	0
 10436  00272C  222F               	addwfc	___flmul@grs+2,f,c
 10437  00272E  0E00               	movlw	0
 10438  002730  2230               	addwfc	___flmul@grs+3,f,c
 10439  002732  5025               	movf	___flmul@a+2,w,c
 10440  002734  0220               	mulwf	___flmul@b+1,c
 10441  002736  CFF3 F036          	movff	prodl,___flmul@temp
 10442  00273A  CFF4 F037          	movff	prodh,___flmul@temp+1
 10443  00273E  5036               	movf	___flmul@temp,w,c
 10444  002740  2632               	addwf	___flmul@prod,f,c
 10445  002742  5037               	movf	___flmul@temp+1,w,c
 10446  002744  2233               	addwfc	___flmul@prod+1,f,c
 10447  002746  0E00               	movlw	0
 10448  002748  2234               	addwfc	___flmul@prod+2,f,c
 10449  00274A  0E00               	movlw	0
 10450  00274C  2235               	addwfc	___flmul@prod+3,f,c
 10451  00274E  5024               	movf	___flmul@a+1,w,c
 10452  002750  0221               	mulwf	___flmul@b+2,c
 10453  002752  CFF3 F036          	movff	prodl,___flmul@temp
 10454  002756  CFF4 F037          	movff	prodh,___flmul@temp+1
 10455  00275A  5036               	movf	___flmul@temp,w,c
 10456  00275C  2632               	addwf	___flmul@prod,f,c
 10457  00275E  5037               	movf	___flmul@temp+1,w,c
 10458  002760  2233               	addwfc	___flmul@prod+1,f,c
 10459  002762  0E00               	movlw	0
 10460  002764  2234               	addwfc	___flmul@prod+2,f,c
 10461  002766  0E00               	movlw	0
 10462  002768  2235               	addwfc	___flmul@prod+3,f,c
 10463  00276A  5025               	movf	___flmul@a+2,w,c
 10464  00276C  0221               	mulwf	___flmul@b+2,c
 10465  00276E  CFF3 F036          	movff	prodl,___flmul@temp
 10466  002772  CFF4 F037          	movff	prodh,___flmul@temp+1
 10467  002776  5036               	movf	___flmul@temp,w,c
 10468  002778  6E27               	movwf	??___flmul& (0+255),c
 10469  00277A  5037               	movf	___flmul@temp+1,w,c
 10470  00277C  6E28               	movwf	(??___flmul+1)& (0+255),c
 10471  00277E  6A29               	clrf	(??___flmul+2)& (0+255),c
 10472  002780  6A2A               	clrf	(??___flmul+3)& (0+255),c
 10473  002782  C029  F02A         	movff	??___flmul+2,??___flmul+3
 10474  002786  C028  F029         	movff	??___flmul+1,??___flmul+2
 10475  00278A  C027  F028         	movff	??___flmul,??___flmul+1
 10476  00278E  6A27               	clrf	??___flmul,c
 10477  002790  5027               	movf	??___flmul,w,c
 10478  002792  2632               	addwf	___flmul@prod,f,c
 10479  002794  5028               	movf	??___flmul+1,w,c
 10480  002796  2233               	addwfc	___flmul@prod+1,f,c
 10481  002798  5029               	movf	??___flmul+2,w,c
 10482  00279A  2234               	addwfc	___flmul@prod+2,f,c
 10483  00279C  502A               	movf	??___flmul+3,w,c
 10484  00279E  2235               	addwfc	___flmul@prod+3,f,c
 10485  0027A0  C02D  F027         	movff	___flmul@grs,??___flmul
 10486  0027A4  C02E  F028         	movff	___flmul@grs+1,??___flmul+1
 10487  0027A8  C02F  F029         	movff	___flmul@grs+2,??___flmul+2
 10488  0027AC  C030  F02A         	movff	___flmul@grs+3,??___flmul+3
 10489  0027B0  0E19               	movlw	25
 10490  0027B2  D005               	goto	u9570
 10491  0027B4                     u9575:
 10492  0027B4  90D8               	bcf	status,0,c
 10493  0027B6  322A               	rrcf	??___flmul+3,f,c
 10494  0027B8  3229               	rrcf	??___flmul+2,f,c
 10495  0027BA  3228               	rrcf	??___flmul+1,f,c
 10496  0027BC  3227               	rrcf	??___flmul,f,c
 10497  0027BE                     u9570:
 10498  0027BE  2EE8               	decfsz	wreg,f,c
 10499  0027C0  D7F9               	goto	u9575
 10500  0027C2  5027               	movf	??___flmul,w,c
 10501  0027C4  2632               	addwf	___flmul@prod,f,c
 10502  0027C6  5028               	movf	??___flmul+1,w,c
 10503  0027C8  2233               	addwfc	___flmul@prod+1,f,c
 10504  0027CA  5029               	movf	??___flmul+2,w,c
 10505  0027CC  2234               	addwfc	___flmul@prod+2,f,c
 10506  0027CE  502A               	movf	??___flmul+3,w,c
 10507  0027D0  2235               	addwfc	___flmul@prod+3,f,c
 10508  0027D2  C02F  F030         	movff	___flmul@grs+2,___flmul@grs+3
 10509  0027D6  C02E  F02F         	movff	___flmul@grs+1,___flmul@grs+2
 10510  0027DA  C02D  F02E         	movff	___flmul@grs,___flmul@grs+1
 10511  0027DE  6A2D               	clrf	___flmul@grs,c
 10512  0027E0  502C               	movf	___flmul@aexp,w,c
 10513  0027E2  C031  F027         	movff	___flmul@bexp,??___flmul
 10514  0027E6  6A28               	clrf	(??___flmul+1)& (0+255),c
 10515  0027E8  2627               	addwf	??___flmul,f,c
 10516  0027EA  0E00               	movlw	0
 10517  0027EC  2228               	addwfc	??___flmul+1,f,c
 10518  0027EE  0E82               	movlw	130
 10519  0027F0  2427               	addwf	??___flmul,w,c
 10520  0027F2  6E36               	movwf	___flmul@temp,c
 10521  0027F4  0EFF               	movlw	255
 10522  0027F6  2028               	addwfc	??___flmul+1,w,c
 10523  0027F8  6E37               	movwf	___flmul@temp+1,c
 10524  0027FA  D00F               	goto	l7944
 10525  0027FC                     l7938:
 10526  0027FC  90D8               	bcf	status,0,c
 10527  0027FE  3632               	rlcf	___flmul@prod,f,c
 10528  002800  3633               	rlcf	___flmul@prod+1,f,c
 10529  002802  3634               	rlcf	___flmul@prod+2,f,c
 10530  002804  3635               	rlcf	___flmul@prod+3,f,c
 10531  002806  BE30               	btfsc	___flmul@grs+3,7,c
 10532  002808  8032               	bsf	___flmul@prod,0,c
 10533  00280A  90D8               	bcf	status,0,c
 10534  00280C  362D               	rlcf	___flmul@grs,f,c
 10535  00280E  362E               	rlcf	___flmul@grs+1,f,c
 10536  002810  362F               	rlcf	___flmul@grs+2,f,c
 10537  002812  3630               	rlcf	___flmul@grs+3,f,c
 10538  002814  0636               	decf	___flmul@temp,f,c
 10539  002816  A0D8               	btfss	status,0,c
 10540  002818  0637               	decf	___flmul@temp+1,f,c
 10541  00281A                     l7944:
 10542  00281A  AE34               	btfss	___flmul@prod+2,7,c
 10543  00281C  D7EF               	goto	l7938
 10544  00281E  0E00               	movlw	0
 10545  002820  6E2C               	movwf	___flmul@aexp,c
 10546  002822  AE30               	btfss	___flmul@grs+3,7,c
 10547  002824  D017               	goto	l1324
 10548  002826  0EFF               	movlw	255
 10549  002828  142D               	andwf	___flmul@grs,w,c
 10550  00282A  6E27               	movwf	??___flmul& (0+255),c
 10551  00282C  0EFF               	movlw	255
 10552  00282E  142E               	andwf	___flmul@grs+1,w,c
 10553  002830  6E28               	movwf	(??___flmul+1)& (0+255),c
 10554  002832  0EFF               	movlw	255
 10555  002834  142F               	andwf	___flmul@grs+2,w,c
 10556  002836  6E29               	movwf	(??___flmul+2)& (0+255),c
 10557  002838  0E7F               	movlw	127
 10558  00283A  1430               	andwf	___flmul@grs+3,w,c
 10559  00283C  6E2A               	movwf	(??___flmul+3)& (0+255),c
 10560  00283E  5027               	movf	??___flmul,w,c
 10561  002840  1028               	iorwf	??___flmul+1,w,c
 10562  002842  1029               	iorwf	??___flmul+2,w,c
 10563  002844  102A               	iorwf	??___flmul+3,w,c
 10564  002846  B4D8               	btfsc	status,2,c
 10565  002848  D003               	goto	l1325
 10566  00284A                     u9610:
 10567  00284A  0E01               	movlw	1
 10568  00284C  6E2C               	movwf	___flmul@aexp,c
 10569  00284E  D002               	goto	l1324
 10570  002850                     l1325:
 10571  002850  B032               	btfsc	___flmul@prod,0,c
 10572  002852  D7FB               	goto	u9610
 10573  002854                     l1324:
 10574  002854  502C               	movf	___flmul@aexp,w,c
 10575  002856  B4D8               	btfsc	status,2,c
 10576  002858  D01F               	goto	l7964
 10577  00285A  0E01               	movlw	1
 10578  00285C  2632               	addwf	___flmul@prod,f,c
 10579  00285E  0E00               	movlw	0
 10580  002860  2233               	addwfc	___flmul@prod+1,f,c
 10581  002862  2234               	addwfc	___flmul@prod+2,f,c
 10582  002864  2235               	addwfc	___flmul@prod+3,f,c
 10583  002866  A035               	btfss	___flmul@prod+3,0,c
 10584  002868  D017               	goto	l7964
 10585  00286A  C032  F027         	movff	___flmul@prod,??___flmul
 10586  00286E  C033  F028         	movff	___flmul@prod+1,??___flmul+1
 10587  002872  C034  F029         	movff	___flmul@prod+2,??___flmul+2
 10588  002876  C035  F02A         	movff	___flmul@prod+3,??___flmul+3
 10589  00287A  342A               	rlcf	??___flmul+3,w,c
 10590  00287C  322A               	rrcf	??___flmul+3,f,c
 10591  00287E  3229               	rrcf	??___flmul+2,f,c
 10592  002880  3228               	rrcf	??___flmul+1,f,c
 10593  002882  3227               	rrcf	??___flmul,f,c
 10594  002884  C027  F032         	movff	??___flmul,___flmul@prod
 10595  002888  C028  F033         	movff	??___flmul+1,___flmul@prod+1
 10596  00288C  C029  F034         	movff	??___flmul+2,___flmul@prod+2
 10597  002890  C02A  F035         	movff	??___flmul+3,___flmul@prod+3
 10598  002894  4A36               	infsnz	___flmul@temp,f,c
 10599  002896  2A37               	incf	___flmul@temp+1,f,c
 10600  002898                     l7964:
 10601  002898  BE37               	btfsc	___flmul@temp+1,7,c
 10602  00289A  D00D               	goto	l7968
 10603  00289C  5037               	movf	___flmul@temp+1,w,c
 10604  00289E  E103               	bnz	u9650
 10605  0028A0  2836               	incf	___flmul@temp,w,c
 10606  0028A2  A0D8               	btfss	status,0,c
 10607  0028A4  D008               	goto	l7968
 10608  0028A6                     u9650:
 10609  0028A6  0E00               	movlw	0
 10610  0028A8  6E32               	movwf	___flmul@prod,c
 10611  0028AA  0E00               	movlw	0
 10612  0028AC  6E33               	movwf	___flmul@prod+1,c
 10613  0028AE  0E80               	movlw	128
 10614  0028B0  6E34               	movwf	___flmul@prod+2,c
 10615  0028B2  0E7F               	movlw	127
 10616  0028B4  D020               	goto	L13
 10617  0028B6                     l7968:
 10618  0028B6  BE37               	btfsc	___flmul@temp+1,7,c
 10619  0028B8  D005               	goto	u9660
 10620  0028BA  5037               	movf	___flmul@temp+1,w,c
 10621  0028BC  E10E               	bnz	l1332
 10622  0028BE  0436               	decf	___flmul@temp,w,c
 10623  0028C0  B0D8               	btfsc	status,0,c
 10624  0028C2  D00B               	goto	l1332
 10625  0028C4                     u9660:
 10626  0028C4  0E00               	movlw	0
 10627  0028C6  6E32               	movwf	___flmul@prod,c
 10628  0028C8  0E00               	movlw	0
 10629  0028CA  6E33               	movwf	___flmul@prod+1,c
 10630  0028CC  0E00               	movlw	0
 10631  0028CE  6E34               	movwf	___flmul@prod+2,c
 10632  0028D0  0E00               	movlw	0
 10633  0028D2  6E35               	movwf	___flmul@prod+3,c
 10634  0028D4  0E00               	movlw	0
 10635  0028D6  6E2B               	movwf	___flmul@sign,c
 10636  0028D8  D00F               	goto	l7980
 10637  0028DA                     l1332:
 10638  0028DA  C036  F031         	movff	___flmul@temp,___flmul@bexp
 10639  0028DE  0EFF               	movlw	255
 10640  0028E0  1632               	andwf	___flmul@prod,f,c
 10641  0028E2  0EFF               	movlw	255
 10642  0028E4  1633               	andwf	___flmul@prod+1,f,c
 10643  0028E6  0E7F               	movlw	127
 10644  0028E8  1634               	andwf	___flmul@prod+2,f,c
 10645  0028EA  0E00               	movlw	0
 10646  0028EC  1635               	andwf	___flmul@prod+3,f,c
 10647  0028EE  B031               	btfsc	___flmul@bexp,0,c
 10648  0028F0  8E34               	bsf	___flmul@prod+2,7,c
 10649  0028F2  90D8               	bcf	status,0,c
 10650  0028F4  3031               	rrcf	___flmul@bexp,w,c
 10651  0028F6                     L13:
 10652  0028F6  6E35               	movwf	___flmul@prod+3,c
 10653  0028F8                     l7980:
 10654  0028F8  502B               	movf	___flmul@sign,w,c
 10655  0028FA  1235               	iorwf	___flmul@prod+3,f,c
 10656  0028FC  C032  F01F         	movff	___flmul@prod,?___flmul
 10657  002900  C033  F020         	movff	___flmul@prod+1,?___flmul+1
 10658  002904  C034  F021         	movff	___flmul@prod+2,?___flmul+2
 10659  002908  C035  F022         	movff	___flmul@prod+3,?___flmul+3
 10660  00290C  0012               	return		;funcret
 10661  00290E                     __end_of___flmul:
 10662                           	opt callstack 0
 10663                           
 10664 ;; *************** function ___flge *****************
 10665 ;; Defined at:
 10666 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;  ff1             4   62[COMRAM] unsigned char 
 10669 ;;  ff2             4   66[COMRAM] unsigned char 
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;		None
 10672 ;; Return value:  Size  Location     Type
 10673 ;;		None               void
 10674 ;; Registers used:
 10675 ;;		wreg, status,2, status,0
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/0
 10678 ;;		On exit  : 0/0
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10681 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10684 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;Total ram usage:       12 bytes
 10686 ;; Hardware stack levels used:    1
 10687 ;; Hardware stack levels required when called:    1
 10688 ;; This function calls:
 10689 ;;		Nothing
 10690 ;; This function is called by:
 10691 ;;		_main
 10692 ;;		_efgtoa
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           	psect	text23
 10697  003DDA                     __ptext23:
 10698                           	opt callstack 0
 10699  003DDA                     ___flge:
 10700                           	opt callstack 25
 10701                           
 10702                           ;incstack = 0
 10703  003DDA  0E00               	movlw	0
 10704  003DDC  143F               	andwf	___flge@ff1,w,c
 10705  003DDE  6E47               	movwf	??___flge& (0+255),c
 10706  003DE0  0E00               	movlw	0
 10707  003DE2  1440               	andwf	___flge@ff1+1,w,c
 10708  003DE4  6E48               	movwf	(??___flge+1)& (0+255),c
 10709  003DE6  0E80               	movlw	128
 10710  003DE8  1441               	andwf	___flge@ff1+2,w,c
 10711  003DEA  6E49               	movwf	(??___flge+2)& (0+255),c
 10712  003DEC  0E7F               	movlw	127
 10713  003DEE  1442               	andwf	___flge@ff1+3,w,c
 10714  003DF0  6E4A               	movwf	(??___flge+3)& (0+255),c
 10715  003DF2  5047               	movf	??___flge,w,c
 10716  003DF4  1048               	iorwf	??___flge+1,w,c
 10717  003DF6  1049               	iorwf	??___flge+2,w,c
 10718  003DF8  104A               	iorwf	??___flge+3,w,c
 10719  003DFA  A4D8               	btfss	status,2,c
 10720  003DFC  D008               	goto	l8092
 10721  003DFE  0E00               	movlw	0
 10722  003E00  6E3F               	movwf	___flge@ff1,c
 10723  003E02  0E00               	movlw	0
 10724  003E04  6E40               	movwf	___flge@ff1+1,c
 10725  003E06  0E00               	movlw	0
 10726  003E08  6E41               	movwf	___flge@ff1+2,c
 10727  003E0A  0E00               	movlw	0
 10728  003E0C  6E42               	movwf	___flge@ff1+3,c
 10729  003E0E                     l8092:
 10730  003E0E  0E00               	movlw	0
 10731  003E10  1443               	andwf	___flge@ff2,w,c
 10732  003E12  6E47               	movwf	??___flge& (0+255),c
 10733  003E14  0E00               	movlw	0
 10734  003E16  1444               	andwf	___flge@ff2+1,w,c
 10735  003E18  6E48               	movwf	(??___flge+1)& (0+255),c
 10736  003E1A  0E80               	movlw	128
 10737  003E1C  1445               	andwf	___flge@ff2+2,w,c
 10738  003E1E  6E49               	movwf	(??___flge+2)& (0+255),c
 10739  003E20  0E7F               	movlw	127
 10740  003E22  1446               	andwf	___flge@ff2+3,w,c
 10741  003E24  6E4A               	movwf	(??___flge+3)& (0+255),c
 10742  003E26  5047               	movf	??___flge,w,c
 10743  003E28  1048               	iorwf	??___flge+1,w,c
 10744  003E2A  1049               	iorwf	??___flge+2,w,c
 10745  003E2C  104A               	iorwf	??___flge+3,w,c
 10746  003E2E  A4D8               	btfss	status,2,c
 10747  003E30  D008               	goto	l8096
 10748  003E32  0E00               	movlw	0
 10749  003E34  6E43               	movwf	___flge@ff2,c
 10750  003E36  0E00               	movlw	0
 10751  003E38  6E44               	movwf	___flge@ff2+1,c
 10752  003E3A  0E00               	movlw	0
 10753  003E3C  6E45               	movwf	___flge@ff2+2,c
 10754  003E3E  0E00               	movlw	0
 10755  003E40  6E46               	movwf	___flge@ff2+3,c
 10756  003E42                     l8096:
 10757  003E42  AE42               	btfss	___flge@ff1+3,7,c
 10758  003E44  D009               	goto	l8100
 10759  003E46  6C3F               	negf	___flge@ff1,c
 10760  003E48  1E40               	comf	___flge@ff1+1,f,c
 10761  003E4A  B0D8               	btfsc	status,0,c
 10762  003E4C  2A40               	incf	___flge@ff1+1,f,c
 10763  003E4E  1E41               	comf	___flge@ff1+2,f,c
 10764  003E50  B0D8               	btfsc	status,0,c
 10765  003E52  2A41               	incf	___flge@ff1+2,f,c
 10766  003E54  0E80               	movlw	128
 10767  003E56  5642               	subfwb	___flge@ff1+3,f,c
 10768  003E58                     l8100:
 10769  003E58  AE46               	btfss	___flge@ff2+3,7,c
 10770  003E5A  D009               	goto	l966
 10771  003E5C  6C43               	negf	___flge@ff2,c
 10772  003E5E  1E44               	comf	___flge@ff2+1,f,c
 10773  003E60  B0D8               	btfsc	status,0,c
 10774  003E62  2A44               	incf	___flge@ff2+1,f,c
 10775  003E64  1E45               	comf	___flge@ff2+2,f,c
 10776  003E66  B0D8               	btfsc	status,0,c
 10777  003E68  2A45               	incf	___flge@ff2+2,f,c
 10778  003E6A  0E80               	movlw	128
 10779  003E6C  5646               	subfwb	___flge@ff2+3,f,c
 10780  003E6E                     l966:
 10781  003E6E  0E00               	movlw	0
 10782  003E70  1A3F               	xorwf	___flge@ff1,f,c
 10783  003E72  0E00               	movlw	0
 10784  003E74  1A40               	xorwf	___flge@ff1+1,f,c
 10785  003E76  0E00               	movlw	0
 10786  003E78  1A41               	xorwf	___flge@ff1+2,f,c
 10787  003E7A  0E80               	movlw	128
 10788  003E7C  1A42               	xorwf	___flge@ff1+3,f,c
 10789  003E7E  0E00               	movlw	0
 10790  003E80  1A43               	xorwf	___flge@ff2,f,c
 10791  003E82  0E00               	movlw	0
 10792  003E84  1A44               	xorwf	___flge@ff2+1,f,c
 10793  003E86  0E00               	movlw	0
 10794  003E88  1A45               	xorwf	___flge@ff2+2,f,c
 10795  003E8A  0E80               	movlw	128
 10796  003E8C  1A46               	xorwf	___flge@ff2+3,f,c
 10797  003E8E  5043               	movf	___flge@ff2,w,c
 10798  003E90  5C3F               	subwf	___flge@ff1,w,c
 10799  003E92  5044               	movf	___flge@ff2+1,w,c
 10800  003E94  5840               	subwfb	___flge@ff1+1,w,c
 10801  003E96  5045               	movf	___flge@ff2+2,w,c
 10802  003E98  5841               	subwfb	___flge@ff1+2,w,c
 10803  003E9A  5046               	movf	___flge@ff2+3,w,c
 10804  003E9C  5842               	subwfb	___flge@ff1+3,w,c
 10805  003E9E  B0D8               	btfsc	status,0,c
 10806  003EA0  D002               	goto	l8106
 10807  003EA2  90D8               	bcf	status,0,c
 10808  003EA4  0012               	return	
 10809  003EA6                     l8106:
 10810  003EA6  80D8               	bsf	status,0,c
 10811  003EA8  0012               	return		;funcret
 10812  003EAA                     __end_of___flge:
 10813                           	opt callstack 0
 10814                           
 10815 ;; *************** function ___fleq *****************
 10816 ;; Defined at:
 10817 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;  ff1             4   10[COMRAM] unsigned char 
 10820 ;;  ff2             4   14[COMRAM] unsigned char 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;		None
 10823 ;; Return value:  Size  Location     Type
 10824 ;;		None               void
 10825 ;; Registers used:
 10826 ;;		wreg, status,2, status,0
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10832 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10835 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10836 ;;Total ram usage:       12 bytes
 10837 ;; Hardware stack levels used:    1
 10838 ;; Hardware stack levels required when called:    1
 10839 ;; This function calls:
 10840 ;;		Nothing
 10841 ;; This function is called by:
 10842 ;;		_efgtoa
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text24
 10847  0041F4                     __ptext24:
 10848                           	opt callstack 0
 10849  0041F4                     ___fleq:
 10850                           	opt callstack 25
 10851                           
 10852                           ;incstack = 0
 10853  0041F4  0E00               	movlw	0
 10854  0041F6  140B               	andwf	___fleq@ff1,w,c
 10855  0041F8  6E13               	movwf	??___fleq& (0+255),c
 10856  0041FA  0E00               	movlw	0
 10857  0041FC  140C               	andwf	___fleq@ff1+1,w,c
 10858  0041FE  6E14               	movwf	(??___fleq+1)& (0+255),c
 10859  004200  0E80               	movlw	128
 10860  004202  140D               	andwf	___fleq@ff1+2,w,c
 10861  004204  6E15               	movwf	(??___fleq+2)& (0+255),c
 10862  004206  0E7F               	movlw	127
 10863  004208  140E               	andwf	___fleq@ff1+3,w,c
 10864  00420A  6E16               	movwf	(??___fleq+3)& (0+255),c
 10865  00420C  5013               	movf	??___fleq,w,c
 10866  00420E  1014               	iorwf	??___fleq+1,w,c
 10867  004210  1015               	iorwf	??___fleq+2,w,c
 10868  004212  1016               	iorwf	??___fleq+3,w,c
 10869  004214  A4D8               	btfss	status,2,c
 10870  004216  D008               	goto	l8076
 10871  004218  0E00               	movlw	0
 10872  00421A  6E0B               	movwf	___fleq@ff1,c
 10873  00421C  0E00               	movlw	0
 10874  00421E  6E0C               	movwf	___fleq@ff1+1,c
 10875  004220  0E00               	movlw	0
 10876  004222  6E0D               	movwf	___fleq@ff1+2,c
 10877  004224  0E00               	movlw	0
 10878  004226  6E0E               	movwf	___fleq@ff1+3,c
 10879  004228                     l8076:
 10880  004228  0E00               	movlw	0
 10881  00422A  140F               	andwf	___fleq@ff2,w,c
 10882  00422C  6E13               	movwf	??___fleq& (0+255),c
 10883  00422E  0E00               	movlw	0
 10884  004230  1410               	andwf	___fleq@ff2+1,w,c
 10885  004232  6E14               	movwf	(??___fleq+1)& (0+255),c
 10886  004234  0E80               	movlw	128
 10887  004236  1411               	andwf	___fleq@ff2+2,w,c
 10888  004238  6E15               	movwf	(??___fleq+2)& (0+255),c
 10889  00423A  0E7F               	movlw	127
 10890  00423C  1412               	andwf	___fleq@ff2+3,w,c
 10891  00423E  6E16               	movwf	(??___fleq+3)& (0+255),c
 10892  004240  5013               	movf	??___fleq,w,c
 10893  004242  1014               	iorwf	??___fleq+1,w,c
 10894  004244  1015               	iorwf	??___fleq+2,w,c
 10895  004246  1016               	iorwf	??___fleq+3,w,c
 10896  004248  A4D8               	btfss	status,2,c
 10897  00424A  D008               	goto	l8080
 10898  00424C  0E00               	movlw	0
 10899  00424E  6E0F               	movwf	___fleq@ff2,c
 10900  004250  0E00               	movlw	0
 10901  004252  6E10               	movwf	___fleq@ff2+1,c
 10902  004254  0E00               	movlw	0
 10903  004256  6E11               	movwf	___fleq@ff2+2,c
 10904  004258  0E00               	movlw	0
 10905  00425A  6E12               	movwf	___fleq@ff2+3,c
 10906  00425C                     l8080:
 10907  00425C  500F               	movf	___fleq@ff2,w,c
 10908  00425E  180B               	xorwf	___fleq@ff1,w,c
 10909  004260  E10A               	bnz	u9820
 10910  004262  5010               	movf	___fleq@ff2+1,w,c
 10911  004264  180C               	xorwf	___fleq@ff1+1,w,c
 10912  004266  E107               	bnz	u9820
 10913  004268  5011               	movf	___fleq@ff2+2,w,c
 10914  00426A  180D               	xorwf	___fleq@ff1+2,w,c
 10915  00426C  E104               	bnz	u9820
 10916  00426E  5012               	movf	___fleq@ff2+3,w,c
 10917  004270  180E               	xorwf	___fleq@ff1+3,w,c
 10918  004272  B4D8               	btfsc	status,2,c
 10919  004274  D002               	goto	l8084
 10920  004276                     u9820:
 10921  004276  90D8               	bcf	status,0,c
 10922  004278  0012               	return	
 10923  00427A                     l8084:
 10924  00427A  80D8               	bsf	status,0,c
 10925  00427C  0012               	return		;funcret
 10926  00427E                     __end_of___fleq:
 10927                           	opt callstack 0
 10928                           
 10929 ;; *************** function ___fldiv *****************
 10930 ;; Defined at:
 10931 ;;		line 11 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;  b               4   30[COMRAM] unsigned char 
 10934 ;;  a               4   34[COMRAM] unsigned char 
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;  grs             4   49[COMRAM] unsigned long 
 10937 ;;  rem             4   42[COMRAM] unsigned long 
 10938 ;;  new_exp         2   47[COMRAM] short 
 10939 ;;  aexp            1   54[COMRAM] unsigned char 
 10940 ;;  bexp            1   53[COMRAM] unsigned char 
 10941 ;;  sign            1   46[COMRAM] unsigned char 
 10942 ;; Return value:  Size  Location     Type
 10943 ;;                  4   30[COMRAM] unsigned char 
 10944 ;; Registers used:
 10945 ;;		wreg, status,2, status,0
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10951 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10952 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10953 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10954 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10955 ;;Total ram usage:       25 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:    1
 10958 ;; This function calls:
 10959 ;;		Nothing
 10960 ;; This function is called by:
 10961 ;;		_main
 10962 ;;		_readADC
 10963 ;;		_efgtoa
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           	psect	text25
 10968  002C1A                     __ptext25:
 10969                           	opt callstack 0
 10970  002C1A                     ___fldiv:
 10971                           	opt callstack 28
 10972                           
 10973                           ;incstack = 0
 10974  002C1A  5022               	movf	___fldiv@b+3,w,c
 10975  002C1C  0B80               	andlw	128
 10976  002C1E  6E2F               	movwf	___fldiv@sign,c
 10977  002C20  5022               	movf	___fldiv@b+3,w,c
 10978  002C22  2422               	addwf	___fldiv@b+3,w,c
 10979  002C24  6E36               	movwf	___fldiv@bexp,c
 10980  002C26  BE21               	btfsc	___fldiv@b+2,7,c
 10981  002C28  8036               	bsf	___fldiv@bexp,0,c
 10982  002C2A  5036               	movf	___fldiv@bexp,w,c
 10983  002C2C  B4D8               	btfsc	status,2,c
 10984  002C2E  D00D               	goto	l7734
 10985  002C30  2836               	incf	___fldiv@bexp,w,c
 10986  002C32  A4D8               	btfss	status,2,c
 10987  002C34  D008               	goto	l7730
 10988  002C36  0E00               	movlw	0
 10989  002C38  6E1F               	movwf	___fldiv@b,c
 10990  002C3A  0E00               	movlw	0
 10991  002C3C  6E20               	movwf	___fldiv@b+1,c
 10992  002C3E  0E00               	movlw	0
 10993  002C40  6E21               	movwf	___fldiv@b+2,c
 10994  002C42  0E00               	movlw	0
 10995  002C44  6E22               	movwf	___fldiv@b+3,c
 10996  002C46                     l7730:
 10997  002C46  8E21               	bsf	___fldiv@b+2,7,c
 10998  002C48  D006               	goto	L14
 10999  002C4A                     l7734:
 11000  002C4A  0E00               	movlw	0
 11001  002C4C  6E1F               	movwf	___fldiv@b,c
 11002  002C4E  0E00               	movlw	0
 11003  002C50  6E20               	movwf	___fldiv@b+1,c
 11004  002C52  0E00               	movlw	0
 11005  002C54  6E21               	movwf	___fldiv@b+2,c
 11006  002C56                     L14:
 11007  002C56  0E00               	movlw	0
 11008  002C58  6E22               	movwf	___fldiv@b+3,c
 11009  002C5A  5026               	movf	___fldiv@a+3,w,c
 11010  002C5C  0B80               	andlw	128
 11011  002C5E  1A2F               	xorwf	___fldiv@sign,f,c
 11012  002C60  5026               	movf	___fldiv@a+3,w,c
 11013  002C62  2426               	addwf	___fldiv@a+3,w,c
 11014  002C64  6E37               	movwf	___fldiv@aexp,c
 11015  002C66  BE25               	btfsc	___fldiv@a+2,7,c
 11016  002C68  8037               	bsf	___fldiv@aexp,0,c
 11017  002C6A  5037               	movf	___fldiv@aexp,w,c
 11018  002C6C  B4D8               	btfsc	status,2,c
 11019  002C6E  D00D               	goto	l7754
 11020  002C70  2837               	incf	___fldiv@aexp,w,c
 11021  002C72  A4D8               	btfss	status,2,c
 11022  002C74  D008               	goto	l7750
 11023  002C76  0E00               	movlw	0
 11024  002C78  6E23               	movwf	___fldiv@a,c
 11025  002C7A  0E00               	movlw	0
 11026  002C7C  6E24               	movwf	___fldiv@a+1,c
 11027  002C7E  0E00               	movlw	0
 11028  002C80  6E25               	movwf	___fldiv@a+2,c
 11029  002C82  0E00               	movlw	0
 11030  002C84  6E26               	movwf	___fldiv@a+3,c
 11031  002C86                     l7750:
 11032  002C86  8E25               	bsf	___fldiv@a+2,7,c
 11033  002C88  D006               	goto	L15
 11034  002C8A                     l7754:
 11035  002C8A  0E00               	movlw	0
 11036  002C8C  6E23               	movwf	___fldiv@a,c
 11037  002C8E  0E00               	movlw	0
 11038  002C90  6E24               	movwf	___fldiv@a+1,c
 11039  002C92  0E00               	movlw	0
 11040  002C94  6E25               	movwf	___fldiv@a+2,c
 11041  002C96                     L15:
 11042  002C96  0E00               	movlw	0
 11043  002C98  6E26               	movwf	___fldiv@a+3,c
 11044  002C9A  5023               	movf	___fldiv@a,w,c
 11045  002C9C  1024               	iorwf	___fldiv@a+1,w,c
 11046  002C9E  1025               	iorwf	___fldiv@a+2,w,c
 11047  002CA0  1026               	iorwf	___fldiv@a+3,w,c
 11048  002CA2  A4D8               	btfss	status,2,c
 11049  002CA4  D017               	goto	l7768
 11050  002CA6  0E00               	movlw	0
 11051  002CA8  6E1F               	movwf	___fldiv@b,c
 11052  002CAA  0E00               	movlw	0
 11053  002CAC  6E20               	movwf	___fldiv@b+1,c
 11054  002CAE  0E00               	movlw	0
 11055  002CB0  6E21               	movwf	___fldiv@b+2,c
 11056  002CB2  0E00               	movlw	0
 11057  002CB4  6E22               	movwf	___fldiv@b+3,c
 11058  002CB6  0E80               	movlw	128
 11059  002CB8  1221               	iorwf	___fldiv@b+2,f,c
 11060  002CBA  0E7F               	movlw	127
 11061  002CBC  1222               	iorwf	___fldiv@b+3,f,c
 11062  002CBE                     l7762:
 11063  002CBE  502F               	movf	___fldiv@sign,w,c
 11064  002CC0  1222               	iorwf	___fldiv@b+3,f,c
 11065  002CC2  C01F  F01F         	movff	___fldiv@b,?___fldiv
 11066  002CC6  C020  F020         	movff	___fldiv@b+1,?___fldiv+1
 11067  002CCA  C021  F021         	movff	___fldiv@b+2,?___fldiv+2
 11068  002CCE  C022  F022         	movff	___fldiv@b+3,?___fldiv+3
 11069  002CD2  0012               	return	
 11070  002CD4                     l7768:
 11071  002CD4  5036               	movf	___fldiv@bexp,w,c
 11072  002CD6  A4D8               	btfss	status,2,c
 11073  002CD8  D009               	goto	l7776
 11074  002CDA  0E00               	movlw	0
 11075  002CDC  6E1F               	movwf	?___fldiv,c
 11076  002CDE  0E00               	movlw	0
 11077  002CE0  6E20               	movwf	?___fldiv+1,c
 11078  002CE2  0E00               	movlw	0
 11079  002CE4  6E21               	movwf	?___fldiv+2,c
 11080  002CE6  0E00               	movlw	0
 11081  002CE8  6E22               	movwf	?___fldiv+3,c
 11082  002CEA  0012               	return	
 11083  002CEC                     l7776:
 11084  002CEC  5037               	movf	___fldiv@aexp,w,c
 11085  002CEE  C036  F027         	movff	___fldiv@bexp,??___fldiv
 11086  002CF2  6A28               	clrf	(??___fldiv+1)& (0+255),c
 11087  002CF4  5E27               	subwf	??___fldiv,f,c
 11088  002CF6  0E00               	movlw	0
 11089  002CF8  5A28               	subwfb	??___fldiv+1,f,c
 11090  002CFA  0E7F               	movlw	127
 11091  002CFC  2427               	addwf	??___fldiv,w,c
 11092  002CFE  6E30               	movwf	___fldiv@new_exp,c
 11093  002D00  0E00               	movlw	0
 11094  002D02  2028               	addwfc	??___fldiv+1,w,c
 11095  002D04  6E31               	movwf	___fldiv@new_exp+1,c
 11096  002D06  C01F  F02B         	movff	___fldiv@b,___fldiv@rem
 11097  002D0A  C020  F02C         	movff	___fldiv@b+1,___fldiv@rem+1
 11098  002D0E  C021  F02D         	movff	___fldiv@b+2,___fldiv@rem+2
 11099  002D12  C022  F02E         	movff	___fldiv@b+3,___fldiv@rem+3
 11100  002D16  0E00               	movlw	0
 11101  002D18  6E1F               	movwf	___fldiv@b,c
 11102  002D1A  0E00               	movlw	0
 11103  002D1C  6E20               	movwf	___fldiv@b+1,c
 11104  002D1E  0E00               	movlw	0
 11105  002D20  6E21               	movwf	___fldiv@b+2,c
 11106  002D22  0E00               	movlw	0
 11107  002D24  6E22               	movwf	___fldiv@b+3,c
 11108  002D26  0E00               	movlw	0
 11109  002D28  6E32               	movwf	___fldiv@grs,c
 11110  002D2A  0E00               	movlw	0
 11111  002D2C  6E33               	movwf	___fldiv@grs+1,c
 11112  002D2E  0E00               	movlw	0
 11113  002D30  6E34               	movwf	___fldiv@grs+2,c
 11114  002D32  0E00               	movlw	0
 11115  002D34  6E35               	movwf	___fldiv@grs+3,c
 11116  002D36  0E00               	movlw	0
 11117  002D38  6E37               	movwf	___fldiv@aexp,c
 11118  002D3A  D028               	goto	l1285
 11119  002D3C                     l7786:
 11120  002D3C  5037               	movf	___fldiv@aexp,w,c
 11121  002D3E  B4D8               	btfsc	status,2,c
 11122  002D40  D011               	goto	l7794
 11123  002D42  90D8               	bcf	status,0,c
 11124  002D44  362B               	rlcf	___fldiv@rem,f,c
 11125  002D46  362C               	rlcf	___fldiv@rem+1,f,c
 11126  002D48  362D               	rlcf	___fldiv@rem+2,f,c
 11127  002D4A  362E               	rlcf	___fldiv@rem+3,f,c
 11128  002D4C  90D8               	bcf	status,0,c
 11129  002D4E  361F               	rlcf	___fldiv@b,f,c
 11130  002D50  3620               	rlcf	___fldiv@b+1,f,c
 11131  002D52  3621               	rlcf	___fldiv@b+2,f,c
 11132  002D54  3622               	rlcf	___fldiv@b+3,f,c
 11133  002D56  BE35               	btfsc	___fldiv@grs+3,7,c
 11134  002D58  801F               	bsf	___fldiv@b,0,c
 11135  002D5A  90D8               	bcf	status,0,c
 11136  002D5C  3632               	rlcf	___fldiv@grs,f,c
 11137  002D5E  3633               	rlcf	___fldiv@grs+1,f,c
 11138  002D60  3634               	rlcf	___fldiv@grs+2,f,c
 11139  002D62  3635               	rlcf	___fldiv@grs+3,f,c
 11140  002D64                     l7794:
 11141  002D64  5023               	movf	___fldiv@a,w,c
 11142  002D66  5C2B               	subwf	___fldiv@rem,w,c
 11143  002D68  5024               	movf	___fldiv@a+1,w,c
 11144  002D6A  582C               	subwfb	___fldiv@rem+1,w,c
 11145  002D6C  5025               	movf	___fldiv@a+2,w,c
 11146  002D6E  582D               	subwfb	___fldiv@rem+2,w,c
 11147  002D70  5026               	movf	___fldiv@a+3,w,c
 11148  002D72  582E               	subwfb	___fldiv@rem+3,w,c
 11149  002D74  A0D8               	btfss	status,0,c
 11150  002D76  D009               	goto	l7800
 11151  002D78  8C35               	bsf	___fldiv@grs+3,6,c
 11152  002D7A  5023               	movf	___fldiv@a,w,c
 11153  002D7C  5E2B               	subwf	___fldiv@rem,f,c
 11154  002D7E  5024               	movf	___fldiv@a+1,w,c
 11155  002D80  5A2C               	subwfb	___fldiv@rem+1,f,c
 11156  002D82  5025               	movf	___fldiv@a+2,w,c
 11157  002D84  5A2D               	subwfb	___fldiv@rem+2,f,c
 11158  002D86  5026               	movf	___fldiv@a+3,w,c
 11159  002D88  5A2E               	subwfb	___fldiv@rem+3,f,c
 11160  002D8A                     l7800:
 11161  002D8A  2A37               	incf	___fldiv@aexp,f,c
 11162  002D8C                     l1285:
 11163  002D8C  0E19               	movlw	25
 11164  002D8E  6437               	cpfsgt	___fldiv@aexp,c
 11165  002D90  D7D5               	goto	l7786
 11166  002D92  502B               	movf	___fldiv@rem,w,c
 11167  002D94  102C               	iorwf	___fldiv@rem+1,w,c
 11168  002D96  102D               	iorwf	___fldiv@rem+2,w,c
 11169  002D98  102E               	iorwf	___fldiv@rem+3,w,c
 11170  002D9A  B4D8               	btfsc	status,2,c
 11171  002D9C  D011               	goto	l7812
 11172  002D9E  8032               	bsf	___fldiv@grs,0,c
 11173  002DA0  D00F               	goto	l7812
 11174  002DA2                     l7806:
 11175  002DA2  90D8               	bcf	status,0,c
 11176  002DA4  361F               	rlcf	___fldiv@b,f,c
 11177  002DA6  3620               	rlcf	___fldiv@b+1,f,c
 11178  002DA8  3621               	rlcf	___fldiv@b+2,f,c
 11179  002DAA  3622               	rlcf	___fldiv@b+3,f,c
 11180  002DAC  BE35               	btfsc	___fldiv@grs+3,7,c
 11181  002DAE  801F               	bsf	___fldiv@b,0,c
 11182  002DB0  90D8               	bcf	status,0,c
 11183  002DB2  3632               	rlcf	___fldiv@grs,f,c
 11184  002DB4  3633               	rlcf	___fldiv@grs+1,f,c
 11185  002DB6  3634               	rlcf	___fldiv@grs+2,f,c
 11186  002DB8  3635               	rlcf	___fldiv@grs+3,f,c
 11187  002DBA  0630               	decf	___fldiv@new_exp,f,c
 11188  002DBC  A0D8               	btfss	status,0,c
 11189  002DBE  0631               	decf	___fldiv@new_exp+1,f,c
 11190  002DC0                     l7812:
 11191  002DC0  AE21               	btfss	___fldiv@b+2,7,c
 11192  002DC2  D7EF               	goto	l7806
 11193  002DC4  0E00               	movlw	0
 11194  002DC6  6E37               	movwf	___fldiv@aexp,c
 11195  002DC8  AE35               	btfss	___fldiv@grs+3,7,c
 11196  002DCA  D017               	goto	l1296
 11197  002DCC  0EFF               	movlw	255
 11198  002DCE  1432               	andwf	___fldiv@grs,w,c
 11199  002DD0  6E27               	movwf	??___fldiv& (0+255),c
 11200  002DD2  0EFF               	movlw	255
 11201  002DD4  1433               	andwf	___fldiv@grs+1,w,c
 11202  002DD6  6E28               	movwf	(??___fldiv+1)& (0+255),c
 11203  002DD8  0EFF               	movlw	255
 11204  002DDA  1434               	andwf	___fldiv@grs+2,w,c
 11205  002DDC  6E29               	movwf	(??___fldiv+2)& (0+255),c
 11206  002DDE  0E7F               	movlw	127
 11207  002DE0  1435               	andwf	___fldiv@grs+3,w,c
 11208  002DE2  6E2A               	movwf	(??___fldiv+3)& (0+255),c
 11209  002DE4  5027               	movf	??___fldiv,w,c
 11210  002DE6  1028               	iorwf	??___fldiv+1,w,c
 11211  002DE8  1029               	iorwf	??___fldiv+2,w,c
 11212  002DEA  102A               	iorwf	??___fldiv+3,w,c
 11213  002DEC  B4D8               	btfsc	status,2,c
 11214  002DEE  D003               	goto	l1297
 11215  002DF0                     u9420:
 11216  002DF0  0E01               	movlw	1
 11217  002DF2  6E37               	movwf	___fldiv@aexp,c
 11218  002DF4  D002               	goto	l1296
 11219  002DF6                     l1297:
 11220  002DF6  B01F               	btfsc	___fldiv@b,0,c
 11221  002DF8  D7FB               	goto	u9420
 11222  002DFA                     l1296:
 11223  002DFA  5037               	movf	___fldiv@aexp,w,c
 11224  002DFC  B4D8               	btfsc	status,2,c
 11225  002DFE  D01F               	goto	l7832
 11226  002E00  0E01               	movlw	1
 11227  002E02  261F               	addwf	___fldiv@b,f,c
 11228  002E04  0E00               	movlw	0
 11229  002E06  2220               	addwfc	___fldiv@b+1,f,c
 11230  002E08  2221               	addwfc	___fldiv@b+2,f,c
 11231  002E0A  2222               	addwfc	___fldiv@b+3,f,c
 11232  002E0C  A022               	btfss	___fldiv@b+3,0,c
 11233  002E0E  D017               	goto	l7832
 11234  002E10  C01F  F027         	movff	___fldiv@b,??___fldiv
 11235  002E14  C020  F028         	movff	___fldiv@b+1,??___fldiv+1
 11236  002E18  C021  F029         	movff	___fldiv@b+2,??___fldiv+2
 11237  002E1C  C022  F02A         	movff	___fldiv@b+3,??___fldiv+3
 11238  002E20  342A               	rlcf	??___fldiv+3,w,c
 11239  002E22  322A               	rrcf	??___fldiv+3,f,c
 11240  002E24  3229               	rrcf	??___fldiv+2,f,c
 11241  002E26  3228               	rrcf	??___fldiv+1,f,c
 11242  002E28  3227               	rrcf	??___fldiv,f,c
 11243  002E2A  C027  F01F         	movff	??___fldiv,___fldiv@b
 11244  002E2E  C028  F020         	movff	??___fldiv+1,___fldiv@b+1
 11245  002E32  C029  F021         	movff	??___fldiv+2,___fldiv@b+2
 11246  002E36  C02A  F022         	movff	??___fldiv+3,___fldiv@b+3
 11247  002E3A  4A30               	infsnz	___fldiv@new_exp,f,c
 11248  002E3C  2A31               	incf	___fldiv@new_exp+1,f,c
 11249  002E3E                     l7832:
 11250  002E3E  BE31               	btfsc	___fldiv@new_exp+1,7,c
 11251  002E40  D010               	goto	l7836
 11252  002E42  5031               	movf	___fldiv@new_exp+1,w,c
 11253  002E44  E103               	bnz	u9460
 11254  002E46  2830               	incf	___fldiv@new_exp,w,c
 11255  002E48  A0D8               	btfss	status,0,c
 11256  002E4A  D00B               	goto	l7836
 11257  002E4C                     u9460:
 11258  002E4C  0E00               	movlw	0
 11259  002E4E  6E31               	movwf	___fldiv@new_exp+1,c
 11260  002E50  6830               	setf	___fldiv@new_exp,c
 11261  002E52  0E00               	movlw	0
 11262  002E54  6E1F               	movwf	___fldiv@b,c
 11263  002E56  0E00               	movlw	0
 11264  002E58  6E20               	movwf	___fldiv@b+1,c
 11265  002E5A  0E00               	movlw	0
 11266  002E5C  6E21               	movwf	___fldiv@b+2,c
 11267  002E5E  0E00               	movlw	0
 11268  002E60  6E22               	movwf	___fldiv@b+3,c
 11269  002E62                     l7836:
 11270  002E62  BE31               	btfsc	___fldiv@new_exp+1,7,c
 11271  002E64  D005               	goto	u9470
 11272  002E66  5031               	movf	___fldiv@new_exp+1,w,c
 11273  002E68  E111               	bnz	l7840
 11274  002E6A  0430               	decf	___fldiv@new_exp,w,c
 11275  002E6C  B0D8               	btfsc	status,0,c
 11276  002E6E  D00E               	goto	l7840
 11277  002E70                     u9470:
 11278  002E70  0E00               	movlw	0
 11279  002E72  6E31               	movwf	___fldiv@new_exp+1,c
 11280  002E74  0E00               	movlw	0
 11281  002E76  6E30               	movwf	___fldiv@new_exp,c
 11282  002E78  0E00               	movlw	0
 11283  002E7A  6E1F               	movwf	___fldiv@b,c
 11284  002E7C  0E00               	movlw	0
 11285  002E7E  6E20               	movwf	___fldiv@b+1,c
 11286  002E80  0E00               	movlw	0
 11287  002E82  6E21               	movwf	___fldiv@b+2,c
 11288  002E84  0E00               	movlw	0
 11289  002E86  6E22               	movwf	___fldiv@b+3,c
 11290  002E88  0E00               	movlw	0
 11291  002E8A  6E2F               	movwf	___fldiv@sign,c
 11292  002E8C                     l7840:
 11293  002E8C  C030  F036         	movff	___fldiv@new_exp,___fldiv@bexp
 11294  002E90  A036               	btfss	___fldiv@bexp,0,c
 11295  002E92  D002               	goto	l7846
 11296  002E94  8E21               	bsf	___fldiv@b+2,7,c
 11297  002E96  D001               	goto	l7848
 11298  002E98                     l7846:
 11299  002E98  9E21               	bcf	___fldiv@b+2,7,c
 11300  002E9A                     l7848:
 11301  002E9A  90D8               	bcf	status,0,c
 11302  002E9C  3036               	rrcf	___fldiv@bexp,w,c
 11303  002E9E  6E22               	movwf	___fldiv@b+3,c
 11304  002EA0  D70E               	goto	l7762
 11305  002EA2                     __end_of___fldiv:
 11306                           	opt callstack 0
 11307                           
 11308 ;; *************** function ___awmod *****************
 11309 ;; Defined at:
 11310 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  dividend        2   10[COMRAM] int 
 11313 ;;  divisor         2   12[COMRAM] int 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  sign            1   15[COMRAM] unsigned char 
 11316 ;;  counter         1   14[COMRAM] unsigned char 
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  2   10[COMRAM] int 
 11319 ;; Registers used:
 11320 ;;		wreg, status,2, status,0
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 0/0
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11330 ;;Total ram usage:        6 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; Hardware stack levels required when called:    1
 11333 ;; This function calls:
 11334 ;;		Nothing
 11335 ;; This function is called by:
 11336 ;;		_main
 11337 ;;		_efgtoa
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text26
 11342  004400                     __ptext26:
 11343                           	opt callstack 0
 11344  004400                     ___awmod:
 11345                           	opt callstack 25
 11346                           
 11347                           ;incstack = 0
 11348  004400  0E00               	movlw	0
 11349  004402  6E10               	movwf	___awmod@sign,c
 11350  004404  AE0C               	btfss	___awmod@dividend+1,7,c
 11351  004406  D006               	goto	l8044
 11352  004408  6C0B               	negf	___awmod@dividend,c
 11353  00440A  1E0C               	comf	___awmod@dividend+1,f,c
 11354  00440C  B0D8               	btfsc	status,0,c
 11355  00440E  2A0C               	incf	___awmod@dividend+1,f,c
 11356  004410  0E01               	movlw	1
 11357  004412  6E10               	movwf	___awmod@sign,c
 11358  004414                     l8044:
 11359  004414  AE0E               	btfss	___awmod@divisor+1,7,c
 11360  004416  D004               	goto	l8048
 11361  004418  6C0D               	negf	___awmod@divisor,c
 11362  00441A  1E0E               	comf	___awmod@divisor+1,f,c
 11363  00441C  B0D8               	btfsc	status,0,c
 11364  00441E  2A0E               	incf	___awmod@divisor+1,f,c
 11365  004420                     l8048:
 11366  004420  500D               	movf	___awmod@divisor,w,c
 11367  004422  100E               	iorwf	___awmod@divisor+1,w,c
 11368  004424  B4D8               	btfsc	status,2,c
 11369  004426  D018               	goto	l8064
 11370  004428  0E01               	movlw	1
 11371  00442A  6E0F               	movwf	___awmod@counter,c
 11372  00442C  D004               	goto	l8054
 11373  00442E                     l8052:
 11374  00442E  90D8               	bcf	status,0,c
 11375  004430  360D               	rlcf	___awmod@divisor,f,c
 11376  004432  360E               	rlcf	___awmod@divisor+1,f,c
 11377  004434  2A0F               	incf	___awmod@counter,f,c
 11378  004436                     l8054:
 11379  004436  AE0E               	btfss	___awmod@divisor+1,7,c
 11380  004438  D7FA               	goto	l8052
 11381  00443A                     u9770:
 11382  00443A  500D               	movf	___awmod@divisor,w,c
 11383  00443C  5C0B               	subwf	___awmod@dividend,w,c
 11384  00443E  500E               	movf	___awmod@divisor+1,w,c
 11385  004440  580C               	subwfb	___awmod@dividend+1,w,c
 11386  004442  A0D8               	btfss	status,0,c
 11387  004444  D004               	goto	l8060
 11388  004446  500D               	movf	___awmod@divisor,w,c
 11389  004448  5E0B               	subwf	___awmod@dividend,f,c
 11390  00444A  500E               	movf	___awmod@divisor+1,w,c
 11391  00444C  5A0C               	subwfb	___awmod@dividend+1,f,c
 11392  00444E                     l8060:
 11393  00444E  90D8               	bcf	status,0,c
 11394  004450  320E               	rrcf	___awmod@divisor+1,f,c
 11395  004452  320D               	rrcf	___awmod@divisor,f,c
 11396  004454  2E0F               	decfsz	___awmod@counter,f,c
 11397  004456  D7F1               	goto	u9770
 11398  004458                     l8064:
 11399  004458  5010               	movf	___awmod@sign,w,c
 11400  00445A  B4D8               	btfsc	status,2,c
 11401  00445C  D004               	goto	l8068
 11402  00445E  6C0B               	negf	___awmod@dividend,c
 11403  004460  1E0C               	comf	___awmod@dividend+1,f,c
 11404  004462  B0D8               	btfsc	status,0,c
 11405  004464  2A0C               	incf	___awmod@dividend+1,f,c
 11406  004466                     l8068:
 11407  004466  C00B  F00B         	movff	___awmod@dividend,?___awmod
 11408  00446A  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
 11409  00446E  0012               	return		;funcret
 11410  004470                     __end_of___awmod:
 11411                           	opt callstack 0
 11412                           
 11413 ;; *************** function _dtoa *****************
 11414 ;; Defined at:
 11415 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
 11418 ;;		 -> NULL(0), 
 11419 ;;  d               8   43[COMRAM] long long 
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;  n               8   67[COMRAM] long long 
 11422 ;;  i               2   75[COMRAM] int 
 11423 ;;  s               2   65[COMRAM] int 
 11424 ;;  w               2   63[COMRAM] int 
 11425 ;;  p               2   61[COMRAM] int 
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  2   41[COMRAM] int 
 11428 ;; Registers used:
 11429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11435 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11438 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11439 ;;Total ram usage:       36 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    8
 11442 ;; This function calls:
 11443 ;;		___aodiv
 11444 ;;		___aomod
 11445 ;;		_abs
 11446 ;;		_pad
 11447 ;; This function is called by:
 11448 ;;		_vfpfcnvrt
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	text27
 11453  002EA2                     __ptext27:
 11454                           	opt callstack 0
 11455  002EA2                     _dtoa:
 11456                           	opt callstack 19
 11457                           
 11458                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
 11459                           
 11460                           ;incstack = 0
 11461  002EA2  C02C  F044         	movff	dtoa@d,dtoa@n
 11462  002EA6  C02D  F045         	movff	dtoa@d+1,dtoa@n+1
 11463  002EAA  C02E  F046         	movff	dtoa@d+2,dtoa@n+2
 11464  002EAE  C02F  F047         	movff	dtoa@d+3,dtoa@n+3
 11465  002EB2  C030  F048         	movff	dtoa@d+4,dtoa@n+4
 11466  002EB6  C031  F049         	movff	dtoa@d+5,dtoa@n+5
 11467  002EBA  C032  F04A         	movff	dtoa@d+6,dtoa@n+6
 11468  002EBE  C033  F04B         	movff	dtoa@d+7,dtoa@n+7
 11469                           
 11470                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
 11471  002EC2  AE4B               	btfss	dtoa@n+7,7,c
 11472  002EC4  D002               	goto	u9990
 11473  002EC6  0E01               	movlw	1
 11474  002EC8  D001               	goto	u10000
 11475  002ECA                     u9990:
 11476  002ECA  0E00               	movlw	0
 11477  002ECC                     u10000:
 11478  002ECC  6E42               	movwf	dtoa@s,c
 11479  002ECE  6A43               	clrf	dtoa@s+1,c
 11480                           
 11481                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 11482  002ED0  5042               	movf	dtoa@s,w,c
 11483  002ED2  1043               	iorwf	dtoa@s+1,w,c
 11484  002ED4  B4D8               	btfsc	status,2,c
 11485  002ED6  D010               	goto	l8194
 11486                           
 11487                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 11488  002ED8  1E4B               	comf	dtoa@n+7,f,c
 11489  002EDA  1E4A               	comf	dtoa@n+6,f,c
 11490  002EDC  1E49               	comf	dtoa@n+5,f,c
 11491  002EDE  1E48               	comf	dtoa@n+4,f,c
 11492  002EE0  1E47               	comf	dtoa@n+3,f,c
 11493  002EE2  1E46               	comf	dtoa@n+2,f,c
 11494  002EE4  1E45               	comf	dtoa@n+1,f,c
 11495  002EE6  6C44               	negf	dtoa@n,c
 11496  002EE8  0E00               	movlw	0
 11497  002EEA  2245               	addwfc	dtoa@n+1,f,c
 11498  002EEC  2246               	addwfc	dtoa@n+2,f,c
 11499  002EEE  2247               	addwfc	dtoa@n+3,f,c
 11500  002EF0  2248               	addwfc	dtoa@n+4,f,c
 11501  002EF2  2249               	addwfc	dtoa@n+5,f,c
 11502  002EF4  224A               	addwfc	dtoa@n+6,f,c
 11503  002EF6  224B               	addwfc	dtoa@n+7,f,c
 11504  002EF8                     l8194:
 11505                           
 11506                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
 11507  002EF8  AE71               	btfss	_prec+1,7,c
 11508                           
 11509                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
 11510  002EFA  9272               	bcf	_flags,1,c
 11511                           
 11512                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
 11513  002EFC  BE71               	btfsc	_prec+1,7,c
 11514  002EFE  D005               	goto	u10030
 11515  002F00  5071               	movf	_prec+1,w,c
 11516  002F02  E108               	bnz	l497
 11517  002F04  0470               	decf	_prec,w,c
 11518  002F06  B0D8               	btfsc	status,0,c
 11519  002F08  D005               	goto	l497
 11520  002F0A                     u10030:
 11521  002F0A  0E00               	movlw	0
 11522  002F0C  6E3F               	movwf	dtoa@p+1,c
 11523  002F0E  0E01               	movlw	1
 11524  002F10  6E3E               	movwf	dtoa@p,c
 11525  002F12  D004               	goto	l499
 11526  002F14                     l497:
 11527  002F14  C070  F03E         	movff	_prec,dtoa@p
 11528  002F18  C071  F03F         	movff	_prec+1,dtoa@p+1
 11529  002F1C                     l499:
 11530                           
 11531                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 11532  002F1C  C06E  F040         	movff	_width,dtoa@w
 11533  002F20  C06F  F041         	movff	_width+1,dtoa@w+1
 11534                           
 11535                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
 11536  002F24  5042               	movf	dtoa@s,w,c
 11537  002F26  1043               	iorwf	dtoa@s+1,w,c
 11538  002F28  A4D8               	btfss	status,2,c
 11539  002F2A  D002               	goto	u10050
 11540  002F2C  A472               	btfss	_flags,2,c
 11541  002F2E  D003               	goto	l8208
 11542  002F30                     u10050:
 11543                           
 11544                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 11545  002F30  0640               	decf	dtoa@w,f,c
 11546  002F32  A0D8               	btfss	status,0,c
 11547  002F34  0641               	decf	dtoa@w+1,f,c
 11548  002F36                     l8208:
 11549                           
 11550                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
 11551  002F36  0E00               	movlw	0
 11552  002F38  6E4D               	movwf	dtoa@i+1,c
 11553  002F3A  0E4F               	movlw	79
 11554  002F3C  6E4C               	movwf	dtoa@i,c
 11555                           
 11556                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
 11557  002F3E  0E00               	movlw	0
 11558  002F40  0101               	movlb	1	; () banked
 11559  002F42  6F5E               	movwf	(_dbuf+79)& (0+255),b
 11560                           
 11561                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11562  002F44  D07C               	goto	l8222
 11563  002F46                     l8212:
 11564                           
 11565                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 11566  002F46  064C               	decf	dtoa@i,f,c
 11567  002F48  A0D8               	btfss	status,0,c
 11568  002F4A  064D               	decf	dtoa@i+1,f,c
 11569                           
 11570                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
 11571  002F4C  0E0F               	movlw	low _dbuf
 11572  002F4E  244C               	addwf	dtoa@i,w,c
 11573  002F50  6ED9               	movwf	fsr2l,c
 11574  002F52  0E01               	movlw	high _dbuf
 11575  002F54  204D               	addwfc	dtoa@i+1,w,c
 11576  002F56  6EDA               	movwf	fsr2h,c
 11577  002F58  C044  F00B         	movff	dtoa@n,___aomod@dividend
 11578  002F5C  C045  F00C         	movff	dtoa@n+1,___aomod@dividend+1
 11579  002F60  C046  F00D         	movff	dtoa@n+2,___aomod@dividend+2
 11580  002F64  C047  F00E         	movff	dtoa@n+3,___aomod@dividend+3
 11581  002F68  C048  F00F         	movff	dtoa@n+4,___aomod@dividend+4
 11582  002F6C  C049  F010         	movff	dtoa@n+5,___aomod@dividend+5
 11583  002F70  C04A  F011         	movff	dtoa@n+6,___aomod@dividend+6
 11584  002F74  C04B  F012         	movff	dtoa@n+7,___aomod@dividend+7
 11585  002F78  0E0A               	movlw	10
 11586  002F7A  6E13               	movwf	___aomod@divisor,c
 11587  002F7C  0E00               	movlw	0
 11588  002F7E  6E14               	movwf	___aomod@divisor+1,c
 11589  002F80  0E00               	movlw	0
 11590  002F82  6E15               	movwf	___aomod@divisor+2,c
 11591  002F84  0E00               	movlw	0
 11592  002F86  6E16               	movwf	___aomod@divisor+3,c
 11593  002F88  0E00               	movlw	0
 11594  002F8A  6E17               	movwf	___aomod@divisor+4,c
 11595  002F8C  0E00               	movlw	0
 11596  002F8E  6E18               	movwf	___aomod@divisor+5,c
 11597  002F90  0E00               	movlw	0
 11598  002F92  6E19               	movwf	___aomod@divisor+6,c
 11599  002F94  0E00               	movlw	0
 11600  002F96  6E1A               	movwf	___aomod@divisor+7,c
 11601  002F98  ECE4  F01D         	call	___aomod	;wreg free
 11602  002F9C  C00B  F034         	movff	?___aomod,??_dtoa
 11603  002FA0  C00C  F035         	movff	?___aomod+1,??_dtoa+1
 11604  002FA4  C00D  F036         	movff	?___aomod+2,??_dtoa+2
 11605  002FA8  C00E  F037         	movff	?___aomod+3,??_dtoa+3
 11606  002FAC  C00F  F038         	movff	?___aomod+4,??_dtoa+4
 11607  002FB0  C010  F039         	movff	?___aomod+5,??_dtoa+5
 11608  002FB4  C011  F03A         	movff	?___aomod+6,??_dtoa+6
 11609  002FB8  C012  F03B         	movff	?___aomod+7,??_dtoa+7
 11610  002FBC  C034  F01D         	movff	??_dtoa,abs@a
 11611  002FC0  C036  F01E         	movff	??_dtoa+2,abs@a+1
 11612  002FC4  EC54  F024         	call	_abs	;wreg free
 11613  002FC8  501D               	movf	?_abs,w,c
 11614  002FCA  0F30               	addlw	48
 11615  002FCC  6EDF               	movwf	indf2,c
 11616                           
 11617                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 11618  002FCE  063E               	decf	dtoa@p,f,c
 11619  002FD0  A0D8               	btfss	status,0,c
 11620  002FD2  063F               	decf	dtoa@p+1,f,c
 11621                           
 11622                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 11623  002FD4  0640               	decf	dtoa@w,f,c
 11624  002FD6  A0D8               	btfss	status,0,c
 11625  002FD8  0641               	decf	dtoa@w+1,f,c
 11626                           
 11627                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
 11628  002FDA  C044  F00B         	movff	dtoa@n,___aodiv@dividend
 11629  002FDE  C045  F00C         	movff	dtoa@n+1,___aodiv@dividend+1
 11630  002FE2  C046  F00D         	movff	dtoa@n+2,___aodiv@dividend+2
 11631  002FE6  C047  F00E         	movff	dtoa@n+3,___aodiv@dividend+3
 11632  002FEA  C048  F00F         	movff	dtoa@n+4,___aodiv@dividend+4
 11633  002FEE  C049  F010         	movff	dtoa@n+5,___aodiv@dividend+5
 11634  002FF2  C04A  F011         	movff	dtoa@n+6,___aodiv@dividend+6
 11635  002FF6  C04B  F012         	movff	dtoa@n+7,___aodiv@dividend+7
 11636  002FFA  0E0A               	movlw	10
 11637  002FFC  6E13               	movwf	___aodiv@divisor,c
 11638  002FFE  0E00               	movlw	0
 11639  003000  6E14               	movwf	___aodiv@divisor+1,c
 11640  003002  0E00               	movlw	0
 11641  003004  6E15               	movwf	___aodiv@divisor+2,c
 11642  003006  0E00               	movlw	0
 11643  003008  6E16               	movwf	___aodiv@divisor+3,c
 11644  00300A  0E00               	movlw	0
 11645  00300C  6E17               	movwf	___aodiv@divisor+4,c
 11646  00300E  0E00               	movlw	0
 11647  003010  6E18               	movwf	___aodiv@divisor+5,c
 11648  003012  0E00               	movlw	0
 11649  003014  6E19               	movwf	___aodiv@divisor+6,c
 11650  003016  0E00               	movlw	0
 11651  003018  6E1A               	movwf	___aodiv@divisor+7,c
 11652  00301A  EC00  F01C         	call	___aodiv	;wreg free
 11653  00301E  C00B  F044         	movff	?___aodiv,dtoa@n
 11654  003022  C00C  F045         	movff	?___aodiv+1,dtoa@n+1
 11655  003026  C00D  F046         	movff	?___aodiv+2,dtoa@n+2
 11656  00302A  C00E  F047         	movff	?___aodiv+3,dtoa@n+3
 11657  00302E  C00F  F048         	movff	?___aodiv+4,dtoa@n+4
 11658  003032  C010  F049         	movff	?___aodiv+5,dtoa@n+5
 11659  003036  C011  F04A         	movff	?___aodiv+6,dtoa@n+6
 11660  00303A  C012  F04B         	movff	?___aodiv+7,dtoa@n+7
 11661  00303E                     l8222:
 11662                           
 11663                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11664  00303E  BE4D               	btfsc	dtoa@i+1,7,c
 11665  003040  D01F               	goto	u10100
 11666  003042  504D               	movf	dtoa@i+1,w,c
 11667  003044  E103               	bnz	u10060
 11668  003046  044C               	decf	dtoa@i,w,c
 11669  003048  A0D8               	btfss	status,0,c
 11670  00304A  D01A               	goto	u10100
 11671  00304C                     u10060:
 11672  00304C  5044               	movf	dtoa@n,w,c
 11673  00304E  1045               	iorwf	dtoa@n+1,w,c
 11674  003050  1046               	iorwf	dtoa@n+2,w,c
 11675  003052  1047               	iorwf	dtoa@n+3,w,c
 11676  003054  1048               	iorwf	dtoa@n+4,w,c
 11677  003056  1049               	iorwf	dtoa@n+5,w,c
 11678  003058  104A               	iorwf	dtoa@n+6,w,c
 11679  00305A  104B               	iorwf	dtoa@n+7,w,c
 11680  00305C  A4D8               	btfss	status,2,c
 11681  00305E  D773               	goto	l8212
 11682  003060  BE3F               	btfsc	dtoa@p+1,7,c
 11683  003062  D005               	goto	u10080
 11684  003064  503F               	movf	dtoa@p+1,w,c
 11685  003066  E102               	bnz	u10081
 11686  003068  043E               	decf	dtoa@p,w,c
 11687  00306A  B0D8               	btfsc	status,0,c
 11688  00306C                     u10081:
 11689  00306C  D76C               	goto	l8212
 11690  00306E                     u10080:
 11691  00306E  BE41               	btfsc	dtoa@w+1,7,c
 11692  003070  D007               	goto	u10100
 11693  003072  5041               	movf	dtoa@w+1,w,c
 11694  003074  E103               	bnz	u10090
 11695  003076  0440               	decf	dtoa@w,w,c
 11696  003078  A0D8               	btfss	status,0,c
 11697  00307A  D002               	goto	u10100
 11698  00307C                     u10090:
 11699  00307C  B272               	btfsc	_flags,1,c
 11700  00307E  D763               	goto	l8212
 11701  003080                     u10100:
 11702                           
 11703                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
 11704  003080  5042               	movf	dtoa@s,w,c
 11705  003082  1043               	iorwf	dtoa@s+1,w,c
 11706  003084  A4D8               	btfss	status,2,c
 11707  003086  D002               	goto	u10120
 11708  003088  A472               	btfss	_flags,2,c
 11709  00308A  D017               	goto	l8246
 11710  00308C                     u10120:
 11711                           
 11712                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 11713  00308C  064C               	decf	dtoa@i,f,c
 11714  00308E  A0D8               	btfss	status,0,c
 11715  003090  064D               	decf	dtoa@i+1,f,c
 11716                           
 11717                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
 11718  003092  5042               	movf	dtoa@s,w,c
 11719  003094  1043               	iorwf	dtoa@s+1,w,c
 11720  003096  A4D8               	btfss	status,2,c
 11721  003098  D004               	goto	l8242
 11722  00309A  0E00               	movlw	0
 11723  00309C  6E3D               	movwf	_dtoa$1336+1,c
 11724  00309E  0E2B               	movlw	43
 11725  0030A0  D003               	goto	L16
 11726  0030A2                     l8242:
 11727  0030A2  0E00               	movlw	0
 11728  0030A4  6E3D               	movwf	_dtoa$1336+1,c
 11729  0030A6  0E2D               	movlw	45
 11730  0030A8                     L16:
 11731  0030A8  6E3C               	movwf	_dtoa$1336,c
 11732  0030AA  0E0F               	movlw	low _dbuf
 11733  0030AC  244C               	addwf	dtoa@i,w,c
 11734  0030AE  6ED9               	movwf	fsr2l,c
 11735  0030B0  0E01               	movlw	high _dbuf
 11736  0030B2  204D               	addwfc	dtoa@i+1,w,c
 11737  0030B4  6EDA               	movwf	fsr2h,c
 11738  0030B6  C03C  FFDF         	movff	_dtoa$1336,indf2
 11739  0030BA                     l8246:
 11740                           
 11741                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
 11742  0030BA  C02A  F01F         	movff	dtoa@fp,pad@fp
 11743  0030BE  C02B  F020         	movff	dtoa@fp+1,pad@fp+1
 11744  0030C2  0E0F               	movlw	low _dbuf
 11745  0030C4  244C               	addwf	dtoa@i,w,c
 11746  0030C6  6E21               	movwf	pad@buf,c
 11747  0030C8  0E01               	movlw	high _dbuf
 11748  0030CA  204D               	addwfc	dtoa@i+1,w,c
 11749  0030CC  6E22               	movwf	pad@buf+1,c
 11750  0030CE  C040  F023         	movff	dtoa@w,pad@p
 11751  0030D2  C041  F024         	movff	dtoa@w+1,pad@p+1
 11752  0030D6  EC69  F020         	call	_pad	;wreg free
 11753  0030DA  C01F  F02A         	movff	?_pad,?_dtoa
 11754  0030DE  C020  F02B         	movff	?_pad+1,?_dtoa+1
 11755  0030E2  0012               	return		;funcret
 11756  0030E4                     __end_of_dtoa:
 11757                           	opt callstack 0
 11758                           
 11759 ;; *************** function _abs *****************
 11760 ;; Defined at:
 11761 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  a               2   28[COMRAM] int 
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;		None
 11766 ;; Return value:  Size  Location     Type
 11767 ;;                  2   28[COMRAM] int 
 11768 ;; Registers used:
 11769 ;;		wreg, status,2, status,0
 11770 ;; Tracked objects:
 11771 ;;		On entry : 0/0
 11772 ;;		On exit  : 0/0
 11773 ;;		Unchanged: 0/0
 11774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;Total ram usage:        4 bytes
 11780 ;; Hardware stack levels used:    1
 11781 ;; Hardware stack levels required when called:    1
 11782 ;; This function calls:
 11783 ;;		Nothing
 11784 ;; This function is called by:
 11785 ;;		_dtoa
 11786 ;; This function uses a non-reentrant model
 11787 ;;
 11788                           
 11789                           	psect	text28
 11790  0048A8                     __ptext28:
 11791                           	opt callstack 0
 11792  0048A8                     _abs:
 11793                           	opt callstack 25
 11794                           
 11795                           ;incstack = 0
 11796  0048A8  BE1E               	btfsc	abs@a+1,7,c
 11797  0048AA  D005               	goto	u8830
 11798  0048AC  501E               	movf	abs@a+1,w,c
 11799  0048AE  E110               	bnz	l1387
 11800  0048B0  041D               	decf	abs@a,w,c
 11801  0048B2  B0D8               	btfsc	status,0,c
 11802  0048B4  D00D               	goto	l1387
 11803  0048B6                     u8830:
 11804  0048B6  C01D  F01F         	movff	abs@a,??_abs
 11805  0048BA  C01E  F020         	movff	abs@a+1,??_abs+1
 11806  0048BE  1E1F               	comf	??_abs,f,c
 11807  0048C0  1E20               	comf	??_abs+1,f,c
 11808  0048C2  4A1F               	infsnz	??_abs,f,c
 11809  0048C4  2A20               	incf	??_abs+1,f,c
 11810  0048C6  C01F  F01D         	movff	??_abs,?_abs
 11811  0048CA  C020  F01E         	movff	??_abs+1,?_abs+1
 11812  0048CE  0012               	return	
 11813  0048D0                     l1387:
 11814  0048D0  C01D  F01D         	movff	abs@a,?_abs
 11815  0048D4  C01E  F01E         	movff	abs@a+1,?_abs+1
 11816  0048D8  0012               	return		;funcret
 11817  0048DA                     __end_of_abs:
 11818                           	opt callstack 0
 11819                           
 11820 ;; *************** function ___aomod *****************
 11821 ;; Defined at:
 11822 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 11823 ;; Parameters:    Size  Location     Type
 11824 ;;  dividend        8   10[COMRAM] long long 
 11825 ;;  divisor         8   18[COMRAM] long long 
 11826 ;; Auto vars:     Size  Location     Type
 11827 ;;  sign            1   27[COMRAM] unsigned char 
 11828 ;;  counter         1   26[COMRAM] unsigned char 
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  8   10[COMRAM] long long 
 11831 ;; Registers used:
 11832 ;;		wreg, status,2, status,0
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11838 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11841 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11842 ;;Total ram usage:       18 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    1
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_dtoa
 11849 ;; This function uses a non-reentrant model
 11850 ;;
 11851                           
 11852                           	psect	text29
 11853  003BC8                     __ptext29:
 11854                           	opt callstack 0
 11855  003BC8                     ___aomod:
 11856                           	opt callstack 25
 11857                           
 11858                           ;incstack = 0
 11859  003BC8  0E00               	movlw	0
 11860  003BCA  6E1C               	movwf	___aomod@sign,c
 11861  003BCC  AE12               	btfss	___aomod@dividend+7,7,c
 11862  003BCE  D012               	goto	l7690
 11863  003BD0  1E12               	comf	___aomod@dividend+7,f,c
 11864  003BD2  1E11               	comf	___aomod@dividend+6,f,c
 11865  003BD4  1E10               	comf	___aomod@dividend+5,f,c
 11866  003BD6  1E0F               	comf	___aomod@dividend+4,f,c
 11867  003BD8  1E0E               	comf	___aomod@dividend+3,f,c
 11868  003BDA  1E0D               	comf	___aomod@dividend+2,f,c
 11869  003BDC  1E0C               	comf	___aomod@dividend+1,f,c
 11870  003BDE  6C0B               	negf	___aomod@dividend,c
 11871  003BE0  0E00               	movlw	0
 11872  003BE2  220C               	addwfc	___aomod@dividend+1,f,c
 11873  003BE4  220D               	addwfc	___aomod@dividend+2,f,c
 11874  003BE6  220E               	addwfc	___aomod@dividend+3,f,c
 11875  003BE8  220F               	addwfc	___aomod@dividend+4,f,c
 11876  003BEA  2210               	addwfc	___aomod@dividend+5,f,c
 11877  003BEC  2211               	addwfc	___aomod@dividend+6,f,c
 11878  003BEE  2212               	addwfc	___aomod@dividend+7,f,c
 11879  003BF0  0E01               	movlw	1
 11880  003BF2  6E1C               	movwf	___aomod@sign,c
 11881  003BF4                     l7690:
 11882  003BF4  AE1A               	btfss	___aomod@divisor+7,7,c
 11883  003BF6  D010               	goto	l7694
 11884  003BF8  1E1A               	comf	___aomod@divisor+7,f,c
 11885  003BFA  1E19               	comf	___aomod@divisor+6,f,c
 11886  003BFC  1E18               	comf	___aomod@divisor+5,f,c
 11887  003BFE  1E17               	comf	___aomod@divisor+4,f,c
 11888  003C00  1E16               	comf	___aomod@divisor+3,f,c
 11889  003C02  1E15               	comf	___aomod@divisor+2,f,c
 11890  003C04  1E14               	comf	___aomod@divisor+1,f,c
 11891  003C06  6C13               	negf	___aomod@divisor,c
 11892  003C08  0E00               	movlw	0
 11893  003C0A  2214               	addwfc	___aomod@divisor+1,f,c
 11894  003C0C  2215               	addwfc	___aomod@divisor+2,f,c
 11895  003C0E  2216               	addwfc	___aomod@divisor+3,f,c
 11896  003C10  2217               	addwfc	___aomod@divisor+4,f,c
 11897  003C12  2218               	addwfc	___aomod@divisor+5,f,c
 11898  003C14  2219               	addwfc	___aomod@divisor+6,f,c
 11899  003C16  221A               	addwfc	___aomod@divisor+7,f,c
 11900  003C18                     l7694:
 11901  003C18  5013               	movf	___aomod@divisor,w,c
 11902  003C1A  1014               	iorwf	___aomod@divisor+1,w,c
 11903  003C1C  1015               	iorwf	___aomod@divisor+2,w,c
 11904  003C1E  1016               	iorwf	___aomod@divisor+3,w,c
 11905  003C20  1017               	iorwf	___aomod@divisor+4,w,c
 11906  003C22  1018               	iorwf	___aomod@divisor+5,w,c
 11907  003C24  1019               	iorwf	___aomod@divisor+6,w,c
 11908  003C26  101A               	iorwf	___aomod@divisor+7,w,c
 11909  003C28  B4D8               	btfsc	status,2,c
 11910  003C2A  D03C               	goto	l7710
 11911  003C2C  0E01               	movlw	1
 11912  003C2E  6E1B               	movwf	___aomod@counter,c
 11913  003C30  D00A               	goto	l7700
 11914  003C32                     l7698:
 11915  003C32  90D8               	bcf	status,0,c
 11916  003C34  3613               	rlcf	___aomod@divisor,f,c
 11917  003C36  3614               	rlcf	___aomod@divisor+1,f,c
 11918  003C38  3615               	rlcf	___aomod@divisor+2,f,c
 11919  003C3A  3616               	rlcf	___aomod@divisor+3,f,c
 11920  003C3C  3617               	rlcf	___aomod@divisor+4,f,c
 11921  003C3E  3618               	rlcf	___aomod@divisor+5,f,c
 11922  003C40  3619               	rlcf	___aomod@divisor+6,f,c
 11923  003C42  361A               	rlcf	___aomod@divisor+7,f,c
 11924  003C44  2A1B               	incf	___aomod@counter,f,c
 11925  003C46                     l7700:
 11926  003C46  AE1A               	btfss	___aomod@divisor+7,7,c
 11927  003C48  D7F4               	goto	l7698
 11928  003C4A                     u9230:
 11929  003C4A  5013               	movf	___aomod@divisor,w,c
 11930  003C4C  5C0B               	subwf	___aomod@dividend,w,c
 11931  003C4E  5014               	movf	___aomod@divisor+1,w,c
 11932  003C50  580C               	subwfb	___aomod@dividend+1,w,c
 11933  003C52  5015               	movf	___aomod@divisor+2,w,c
 11934  003C54  580D               	subwfb	___aomod@dividend+2,w,c
 11935  003C56  5016               	movf	___aomod@divisor+3,w,c
 11936  003C58  580E               	subwfb	___aomod@dividend+3,w,c
 11937  003C5A  5017               	movf	___aomod@divisor+4,w,c
 11938  003C5C  580F               	subwfb	___aomod@dividend+4,w,c
 11939  003C5E  5018               	movf	___aomod@divisor+5,w,c
 11940  003C60  5810               	subwfb	___aomod@dividend+5,w,c
 11941  003C62  5019               	movf	___aomod@divisor+6,w,c
 11942  003C64  5811               	subwfb	___aomod@dividend+6,w,c
 11943  003C66  501A               	movf	___aomod@divisor+7,w,c
 11944  003C68  5812               	subwfb	___aomod@dividend+7,w,c
 11945  003C6A  A0D8               	btfss	status,0,c
 11946  003C6C  D010               	goto	l7706
 11947  003C6E  5013               	movf	___aomod@divisor,w,c
 11948  003C70  5E0B               	subwf	___aomod@dividend,f,c
 11949  003C72  5014               	movf	___aomod@divisor+1,w,c
 11950  003C74  5A0C               	subwfb	___aomod@dividend+1,f,c
 11951  003C76  5015               	movf	___aomod@divisor+2,w,c
 11952  003C78  5A0D               	subwfb	___aomod@dividend+2,f,c
 11953  003C7A  5016               	movf	___aomod@divisor+3,w,c
 11954  003C7C  5A0E               	subwfb	___aomod@dividend+3,f,c
 11955  003C7E  5017               	movf	___aomod@divisor+4,w,c
 11956  003C80  5A0F               	subwfb	___aomod@dividend+4,f,c
 11957  003C82  5018               	movf	___aomod@divisor+5,w,c
 11958  003C84  5A10               	subwfb	___aomod@dividend+5,f,c
 11959  003C86  5019               	movf	___aomod@divisor+6,w,c
 11960  003C88  5A11               	subwfb	___aomod@dividend+6,f,c
 11961  003C8A  501A               	movf	___aomod@divisor+7,w,c
 11962  003C8C  5A12               	subwfb	___aomod@dividend+7,f,c
 11963  003C8E                     l7706:
 11964  003C8E  90D8               	bcf	status,0,c
 11965  003C90  321A               	rrcf	___aomod@divisor+7,f,c
 11966  003C92  3219               	rrcf	___aomod@divisor+6,f,c
 11967  003C94  3218               	rrcf	___aomod@divisor+5,f,c
 11968  003C96  3217               	rrcf	___aomod@divisor+4,f,c
 11969  003C98  3216               	rrcf	___aomod@divisor+3,f,c
 11970  003C9A  3215               	rrcf	___aomod@divisor+2,f,c
 11971  003C9C  3214               	rrcf	___aomod@divisor+1,f,c
 11972  003C9E  3213               	rrcf	___aomod@divisor,f,c
 11973  003CA0  2E1B               	decfsz	___aomod@counter,f,c
 11974  003CA2  D7D3               	goto	u9230
 11975  003CA4                     l7710:
 11976  003CA4  501C               	movf	___aomod@sign,w,c
 11977  003CA6  B4D8               	btfsc	status,2,c
 11978  003CA8  D010               	goto	l7714
 11979  003CAA  1E12               	comf	___aomod@dividend+7,f,c
 11980  003CAC  1E11               	comf	___aomod@dividend+6,f,c
 11981  003CAE  1E10               	comf	___aomod@dividend+5,f,c
 11982  003CB0  1E0F               	comf	___aomod@dividend+4,f,c
 11983  003CB2  1E0E               	comf	___aomod@dividend+3,f,c
 11984  003CB4  1E0D               	comf	___aomod@dividend+2,f,c
 11985  003CB6  1E0C               	comf	___aomod@dividend+1,f,c
 11986  003CB8  6C0B               	negf	___aomod@dividend,c
 11987  003CBA  0E00               	movlw	0
 11988  003CBC  220C               	addwfc	___aomod@dividend+1,f,c
 11989  003CBE  220D               	addwfc	___aomod@dividend+2,f,c
 11990  003CC0  220E               	addwfc	___aomod@dividend+3,f,c
 11991  003CC2  220F               	addwfc	___aomod@dividend+4,f,c
 11992  003CC4  2210               	addwfc	___aomod@dividend+5,f,c
 11993  003CC6  2211               	addwfc	___aomod@dividend+6,f,c
 11994  003CC8  2212               	addwfc	___aomod@dividend+7,f,c
 11995  003CCA                     l7714:
 11996  003CCA  C00B  F00B         	movff	___aomod@dividend,?___aomod
 11997  003CCE  C00C  F00C         	movff	___aomod@dividend+1,?___aomod+1
 11998  003CD2  C00D  F00D         	movff	___aomod@dividend+2,?___aomod+2
 11999  003CD6  C00E  F00E         	movff	___aomod@dividend+3,?___aomod+3
 12000  003CDA  C00F  F00F         	movff	___aomod@dividend+4,?___aomod+4
 12001  003CDE  C010  F010         	movff	___aomod@dividend+5,?___aomod+5
 12002  003CE2  C011  F011         	movff	___aomod@dividend+6,?___aomod+6
 12003  003CE6  C012  F012         	movff	___aomod@dividend+7,?___aomod+7
 12004  003CEA  0012               	return		;funcret
 12005  003CEC                     __end_of___aomod:
 12006                           	opt callstack 0
 12007                           
 12008 ;; *************** function ___aodiv *****************
 12009 ;; Defined at:
 12010 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 12011 ;; Parameters:    Size  Location     Type
 12012 ;;  dividend        8   10[COMRAM] long long 
 12013 ;;  divisor         8   18[COMRAM] long long 
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;  quotient        8   28[COMRAM] long long 
 12016 ;;  sign            1   27[COMRAM] unsigned char 
 12017 ;;  counter         1   26[COMRAM] unsigned char 
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  8   10[COMRAM] long long 
 12020 ;; Registers used:
 12021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12027 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;Total ram usage:       26 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    1
 12034 ;; This function calls:
 12035 ;;		Nothing
 12036 ;; This function is called by:
 12037 ;;		_dtoa
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041                           	psect	text30
 12042  003800                     __ptext30:
 12043                           	opt callstack 0
 12044  003800                     ___aodiv:
 12045                           	opt callstack 25
 12046                           
 12047                           ;incstack = 0
 12048  003800  0E00               	movlw	0
 12049  003802  6E1C               	movwf	___aodiv@sign,c
 12050  003804  AE1A               	btfss	___aodiv@divisor+7,7,c
 12051  003806  D012               	goto	l7646
 12052  003808  1E1A               	comf	___aodiv@divisor+7,f,c
 12053  00380A  1E19               	comf	___aodiv@divisor+6,f,c
 12054  00380C  1E18               	comf	___aodiv@divisor+5,f,c
 12055  00380E  1E17               	comf	___aodiv@divisor+4,f,c
 12056  003810  1E16               	comf	___aodiv@divisor+3,f,c
 12057  003812  1E15               	comf	___aodiv@divisor+2,f,c
 12058  003814  1E14               	comf	___aodiv@divisor+1,f,c
 12059  003816  6C13               	negf	___aodiv@divisor,c
 12060  003818  0E00               	movlw	0
 12061  00381A  2214               	addwfc	___aodiv@divisor+1,f,c
 12062  00381C  2215               	addwfc	___aodiv@divisor+2,f,c
 12063  00381E  2216               	addwfc	___aodiv@divisor+3,f,c
 12064  003820  2217               	addwfc	___aodiv@divisor+4,f,c
 12065  003822  2218               	addwfc	___aodiv@divisor+5,f,c
 12066  003824  2219               	addwfc	___aodiv@divisor+6,f,c
 12067  003826  221A               	addwfc	___aodiv@divisor+7,f,c
 12068  003828  0E01               	movlw	1
 12069  00382A  6E1C               	movwf	___aodiv@sign,c
 12070  00382C                     l7646:
 12071  00382C  AE12               	btfss	___aodiv@dividend+7,7,c
 12072  00382E  D012               	goto	l7652
 12073  003830  1E12               	comf	___aodiv@dividend+7,f,c
 12074  003832  1E11               	comf	___aodiv@dividend+6,f,c
 12075  003834  1E10               	comf	___aodiv@dividend+5,f,c
 12076  003836  1E0F               	comf	___aodiv@dividend+4,f,c
 12077  003838  1E0E               	comf	___aodiv@dividend+3,f,c
 12078  00383A  1E0D               	comf	___aodiv@dividend+2,f,c
 12079  00383C  1E0C               	comf	___aodiv@dividend+1,f,c
 12080  00383E  6C0B               	negf	___aodiv@dividend,c
 12081  003840  0E00               	movlw	0
 12082  003842  220C               	addwfc	___aodiv@dividend+1,f,c
 12083  003844  220D               	addwfc	___aodiv@dividend+2,f,c
 12084  003846  220E               	addwfc	___aodiv@dividend+3,f,c
 12085  003848  220F               	addwfc	___aodiv@dividend+4,f,c
 12086  00384A  2210               	addwfc	___aodiv@dividend+5,f,c
 12087  00384C  2211               	addwfc	___aodiv@dividend+6,f,c
 12088  00384E  2212               	addwfc	___aodiv@dividend+7,f,c
 12089  003850  0E01               	movlw	1
 12090  003852  1A1C               	xorwf	___aodiv@sign,f,c
 12091  003854                     l7652:
 12092  003854  EE20  F01D         	lfsr	2,___aodiv@quotient
 12093  003858  0E07               	movlw	7
 12094  00385A                     u9151:
 12095  00385A  6ADE               	clrf	postinc2,c
 12096  00385C  06E8               	decf	wreg,f,c
 12097  00385E  E2FD               	bc	u9151
 12098  003860  5013               	movf	___aodiv@divisor,w,c
 12099  003862  1014               	iorwf	___aodiv@divisor+1,w,c
 12100  003864  1015               	iorwf	___aodiv@divisor+2,w,c
 12101  003866  1016               	iorwf	___aodiv@divisor+3,w,c
 12102  003868  1017               	iorwf	___aodiv@divisor+4,w,c
 12103  00386A  1018               	iorwf	___aodiv@divisor+5,w,c
 12104  00386C  1019               	iorwf	___aodiv@divisor+6,w,c
 12105  00386E  101A               	iorwf	___aodiv@divisor+7,w,c
 12106  003870  B4D8               	btfsc	status,2,c
 12107  003872  D046               	goto	l7674
 12108  003874  0E01               	movlw	1
 12109  003876  6E1B               	movwf	___aodiv@counter,c
 12110  003878  D00A               	goto	l7660
 12111  00387A                     l7658:
 12112  00387A  90D8               	bcf	status,0,c
 12113  00387C  3613               	rlcf	___aodiv@divisor,f,c
 12114  00387E  3614               	rlcf	___aodiv@divisor+1,f,c
 12115  003880  3615               	rlcf	___aodiv@divisor+2,f,c
 12116  003882  3616               	rlcf	___aodiv@divisor+3,f,c
 12117  003884  3617               	rlcf	___aodiv@divisor+4,f,c
 12118  003886  3618               	rlcf	___aodiv@divisor+5,f,c
 12119  003888  3619               	rlcf	___aodiv@divisor+6,f,c
 12120  00388A  361A               	rlcf	___aodiv@divisor+7,f,c
 12121  00388C  2A1B               	incf	___aodiv@counter,f,c
 12122  00388E                     l7660:
 12123  00388E  AE1A               	btfss	___aodiv@divisor+7,7,c
 12124  003890  D7F4               	goto	l7658
 12125  003892                     u9170:
 12126  003892  90D8               	bcf	status,0,c
 12127  003894  361D               	rlcf	___aodiv@quotient,f,c
 12128  003896  361E               	rlcf	___aodiv@quotient+1,f,c
 12129  003898  361F               	rlcf	___aodiv@quotient+2,f,c
 12130  00389A  3620               	rlcf	___aodiv@quotient+3,f,c
 12131  00389C  3621               	rlcf	___aodiv@quotient+4,f,c
 12132  00389E  3622               	rlcf	___aodiv@quotient+5,f,c
 12133  0038A0  3623               	rlcf	___aodiv@quotient+6,f,c
 12134  0038A2  3624               	rlcf	___aodiv@quotient+7,f,c
 12135  0038A4  5013               	movf	___aodiv@divisor,w,c
 12136  0038A6  5C0B               	subwf	___aodiv@dividend,w,c
 12137  0038A8  5014               	movf	___aodiv@divisor+1,w,c
 12138  0038AA  580C               	subwfb	___aodiv@dividend+1,w,c
 12139  0038AC  5015               	movf	___aodiv@divisor+2,w,c
 12140  0038AE  580D               	subwfb	___aodiv@dividend+2,w,c
 12141  0038B0  5016               	movf	___aodiv@divisor+3,w,c
 12142  0038B2  580E               	subwfb	___aodiv@dividend+3,w,c
 12143  0038B4  5017               	movf	___aodiv@divisor+4,w,c
 12144  0038B6  580F               	subwfb	___aodiv@dividend+4,w,c
 12145  0038B8  5018               	movf	___aodiv@divisor+5,w,c
 12146  0038BA  5810               	subwfb	___aodiv@dividend+5,w,c
 12147  0038BC  5019               	movf	___aodiv@divisor+6,w,c
 12148  0038BE  5811               	subwfb	___aodiv@dividend+6,w,c
 12149  0038C0  501A               	movf	___aodiv@divisor+7,w,c
 12150  0038C2  5812               	subwfb	___aodiv@dividend+7,w,c
 12151  0038C4  A0D8               	btfss	status,0,c
 12152  0038C6  D011               	goto	l7670
 12153  0038C8  5013               	movf	___aodiv@divisor,w,c
 12154  0038CA  5E0B               	subwf	___aodiv@dividend,f,c
 12155  0038CC  5014               	movf	___aodiv@divisor+1,w,c
 12156  0038CE  5A0C               	subwfb	___aodiv@dividend+1,f,c
 12157  0038D0  5015               	movf	___aodiv@divisor+2,w,c
 12158  0038D2  5A0D               	subwfb	___aodiv@dividend+2,f,c
 12159  0038D4  5016               	movf	___aodiv@divisor+3,w,c
 12160  0038D6  5A0E               	subwfb	___aodiv@dividend+3,f,c
 12161  0038D8  5017               	movf	___aodiv@divisor+4,w,c
 12162  0038DA  5A0F               	subwfb	___aodiv@dividend+4,f,c
 12163  0038DC  5018               	movf	___aodiv@divisor+5,w,c
 12164  0038DE  5A10               	subwfb	___aodiv@dividend+5,f,c
 12165  0038E0  5019               	movf	___aodiv@divisor+6,w,c
 12166  0038E2  5A11               	subwfb	___aodiv@dividend+6,f,c
 12167  0038E4  501A               	movf	___aodiv@divisor+7,w,c
 12168  0038E6  5A12               	subwfb	___aodiv@dividend+7,f,c
 12169  0038E8  801D               	bsf	___aodiv@quotient,0,c
 12170  0038EA                     l7670:
 12171  0038EA  90D8               	bcf	status,0,c
 12172  0038EC  321A               	rrcf	___aodiv@divisor+7,f,c
 12173  0038EE  3219               	rrcf	___aodiv@divisor+6,f,c
 12174  0038F0  3218               	rrcf	___aodiv@divisor+5,f,c
 12175  0038F2  3217               	rrcf	___aodiv@divisor+4,f,c
 12176  0038F4  3216               	rrcf	___aodiv@divisor+3,f,c
 12177  0038F6  3215               	rrcf	___aodiv@divisor+2,f,c
 12178  0038F8  3214               	rrcf	___aodiv@divisor+1,f,c
 12179  0038FA  3213               	rrcf	___aodiv@divisor,f,c
 12180  0038FC  2E1B               	decfsz	___aodiv@counter,f,c
 12181  0038FE  D7C9               	goto	u9170
 12182  003900                     l7674:
 12183  003900  501C               	movf	___aodiv@sign,w,c
 12184  003902  B4D8               	btfsc	status,2,c
 12185  003904  D010               	goto	l7678
 12186  003906  1E24               	comf	___aodiv@quotient+7,f,c
 12187  003908  1E23               	comf	___aodiv@quotient+6,f,c
 12188  00390A  1E22               	comf	___aodiv@quotient+5,f,c
 12189  00390C  1E21               	comf	___aodiv@quotient+4,f,c
 12190  00390E  1E20               	comf	___aodiv@quotient+3,f,c
 12191  003910  1E1F               	comf	___aodiv@quotient+2,f,c
 12192  003912  1E1E               	comf	___aodiv@quotient+1,f,c
 12193  003914  6C1D               	negf	___aodiv@quotient,c
 12194  003916  0E00               	movlw	0
 12195  003918  221E               	addwfc	___aodiv@quotient+1,f,c
 12196  00391A  221F               	addwfc	___aodiv@quotient+2,f,c
 12197  00391C  2220               	addwfc	___aodiv@quotient+3,f,c
 12198  00391E  2221               	addwfc	___aodiv@quotient+4,f,c
 12199  003920  2222               	addwfc	___aodiv@quotient+5,f,c
 12200  003922  2223               	addwfc	___aodiv@quotient+6,f,c
 12201  003924  2224               	addwfc	___aodiv@quotient+7,f,c
 12202  003926                     l7678:
 12203  003926  C01D  F00B         	movff	___aodiv@quotient,?___aodiv
 12204  00392A  C01E  F00C         	movff	___aodiv@quotient+1,?___aodiv+1
 12205  00392E  C01F  F00D         	movff	___aodiv@quotient+2,?___aodiv+2
 12206  003932  C020  F00E         	movff	___aodiv@quotient+3,?___aodiv+3
 12207  003936  C021  F00F         	movff	___aodiv@quotient+4,?___aodiv+4
 12208  00393A  C022  F010         	movff	___aodiv@quotient+5,?___aodiv+5
 12209  00393E  C023  F011         	movff	___aodiv@quotient+6,?___aodiv+6
 12210  003942  C024  F012         	movff	___aodiv@quotient+7,?___aodiv+7
 12211  003946  0012               	return		;funcret
 12212  003948                     __end_of___aodiv:
 12213                           	opt callstack 0
 12214                           
 12215 ;; *************** function _ctoa *****************
 12216 ;; Defined at:
 12217 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12218 ;; Parameters:    Size  Location     Type
 12219 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
 12220 ;;		 -> NULL(0), 
 12221 ;;  c               1   43[COMRAM] unsigned char 
 12222 ;; Auto vars:     Size  Location     Type
 12223 ;;  w               2   44[COMRAM] int 
 12224 ;;  l               2    0        int 
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  2   41[COMRAM] int 
 12227 ;; Registers used:
 12228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12229 ;; Tracked objects:
 12230 ;;		On entry : 0/0
 12231 ;;		On exit  : 0/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12234 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12237 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;Total ram usage:        5 bytes
 12239 ;; Hardware stack levels used:    1
 12240 ;; Hardware stack levels required when called:    8
 12241 ;; This function calls:
 12242 ;;		_pad
 12243 ;; This function is called by:
 12244 ;;		_vfpfcnvrt
 12245 ;; This function uses a non-reentrant model
 12246 ;;
 12247                           
 12248                           	psect	text31
 12249  00464C                     __ptext31:
 12250                           	opt callstack 0
 12251  00464C                     _ctoa:
 12252                           	opt callstack 19
 12253                           
 12254                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
 12255                           
 12256                           ;incstack = 0
 12257  00464C  506E               	movf	_width,w,c
 12258  00464E  106F               	iorwf	_width+1,w,c
 12259  004650  A4D8               	btfss	status,2,c
 12260  004652  D005               	goto	l8178
 12261  004654  C06E  F02D         	movff	_width,ctoa@w
 12262  004658  C06F  F02E         	movff	_width+1,ctoa@w+1
 12263  00465C  D006               	goto	l8180
 12264  00465E                     l8178:
 12265  00465E  0EFF               	movlw	255
 12266  004660  246E               	addwf	_width,w,c
 12267  004662  6E2D               	movwf	ctoa@w,c
 12268  004664  0EFF               	movlw	255
 12269  004666  206F               	addwfc	_width+1,w,c
 12270  004668  6E2E               	movwf	ctoa@w+1,c
 12271  00466A                     l8180:
 12272                           
 12273                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
 12274  00466A  C02C  F10F         	movff	ctoa@c,_dbuf
 12275                           
 12276                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
 12277  00466E  0E00               	movlw	0
 12278  004670  0101               	movlb	1	; () banked
 12279  004672  6F10               	movwf	(_dbuf+1)& (0+255),b
 12280                           
 12281                           ; BSR set to: 1
 12282                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
 12283  004674  C02A  F01F         	movff	ctoa@fp,pad@fp
 12284  004678  C02B  F020         	movff	ctoa@fp+1,pad@fp+1
 12285  00467C  0E0F               	movlw	low _dbuf
 12286  00467E  6E21               	movwf	pad@buf,c
 12287  004680  0E01               	movlw	high _dbuf
 12288  004682  6E22               	movwf	pad@buf+1,c
 12289  004684  C02D  F023         	movff	ctoa@w,pad@p
 12290  004688  C02E  F024         	movff	ctoa@w+1,pad@p+1
 12291  00468C  EC69  F020         	call	_pad	;wreg free
 12292  004690  C01F  F02A         	movff	?_pad,?_ctoa
 12293  004694  C020  F02B         	movff	?_pad+1,?_ctoa+1
 12294  004698  0012               	return		;funcret
 12295  00469A                     __end_of_ctoa:
 12296                           	opt callstack 0
 12297                           
 12298 ;; *************** function _pad *****************
 12299 ;; Defined at:
 12300 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 12303 ;;		 -> NULL(0), 
 12304 ;;  buf             2   32[COMRAM] PTR unsigned char 
 12305 ;;		 -> dbuf(80), 
 12306 ;;  p               2   34[COMRAM] int 
 12307 ;; Auto vars:     Size  Location     Type
 12308 ;;  w               2   39[COMRAM] int 
 12309 ;;  i               2   37[COMRAM] int 
 12310 ;; Return value:  Size  Location     Type
 12311 ;;                  2   30[COMRAM] int 
 12312 ;; Registers used:
 12313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12314 ;; Tracked objects:
 12315 ;;		On entry : 0/0
 12316 ;;		On exit  : 0/0
 12317 ;;		Unchanged: 0/0
 12318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12319 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12320 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12322 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12323 ;;Total ram usage:       11 bytes
 12324 ;; Hardware stack levels used:    1
 12325 ;; Hardware stack levels required when called:    7
 12326 ;; This function calls:
 12327 ;;		_fputc
 12328 ;;		_fputs
 12329 ;;		_strlen
 12330 ;; This function is called by:
 12331 ;;		_ctoa
 12332 ;;		_dtoa
 12333 ;;		_efgtoa
 12334 ;;		_xtoa
 12335 ;; This function uses a non-reentrant model
 12336 ;;
 12337                           
 12338                           	psect	text32
 12339  0040D2                     __ptext32:
 12340                           	opt callstack 0
 12341  0040D2                     _pad:
 12342                           	opt callstack 19
 12343                           
 12344                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 12345                           
 12346                           ;incstack = 0
 12347  0040D2  A072               	btfss	_flags,0,c
 12348  0040D4  D00A               	goto	l7528
 12349                           
 12350                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 12351  0040D6  C021  F018         	movff	pad@buf,fputs@s
 12352  0040DA  C022  F019         	movff	pad@buf+1,fputs@s+1
 12353  0040DE  C01F  F01A         	movff	pad@fp,fputs@fp
 12354  0040E2  C020  F01B         	movff	pad@fp+1,fputs@fp+1
 12355  0040E6  EC1E  F024         	call	_fputs	;wreg free
 12356  0040EA                     l7528:
 12357                           
 12358                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 12359  0040EA  BE24               	btfsc	pad@p+1,7,c
 12360  0040EC  D005               	goto	l7532
 12361  0040EE  C023  F028         	movff	pad@p,pad@w
 12362  0040F2  C024  F029         	movff	pad@p+1,pad@w+1
 12363  0040F6  D004               	goto	l479
 12364  0040F8                     l7532:
 12365  0040F8  0E00               	movlw	0
 12366  0040FA  6E29               	movwf	pad@w+1,c
 12367  0040FC  0E00               	movlw	0
 12368  0040FE  6E28               	movwf	pad@w,c
 12369  004100                     l479:
 12370                           
 12371                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12372  004100  0E00               	movlw	0
 12373  004102  6E27               	movwf	pad@i+1,c
 12374  004104  0E00               	movlw	0
 12375  004106  6E26               	movwf	pad@i,c
 12376                           
 12377                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 12378  004108  D00C               	goto	l7538
 12379  00410A                     l7534:
 12380                           
 12381                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 12382  00410A  0E00               	movlw	0
 12383  00410C  6E10               	movwf	fputc@c+1,c
 12384  00410E  0E20               	movlw	32
 12385  004110  6E0F               	movwf	fputc@c,c
 12386  004112  C01F  F011         	movff	pad@fp,fputc@fp
 12387  004116  C020  F012         	movff	pad@fp+1,fputc@fp+1
 12388  00411A  EC38  F022         	call	_fputc	;wreg free
 12389                           
 12390                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12391  00411E  4A26               	infsnz	pad@i,f,c
 12392  004120  2A27               	incf	pad@i+1,f,c
 12393  004122                     l7538:
 12394                           
 12395                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 12396  004122  5028               	movf	pad@w,w,c
 12397  004124  5C26               	subwf	pad@i,w,c
 12398  004126  5027               	movf	pad@i+1,w,c
 12399  004128  0A80               	xorlw	128
 12400  00412A  6E25               	movwf	??_pad& (0+255),c
 12401  00412C  5029               	movf	pad@w+1,w,c
 12402  00412E  0A80               	xorlw	128
 12403  004130  5825               	subwfb	??_pad& (0+255),w,c
 12404  004132  A0D8               	btfss	status,0,c
 12405  004134  D7EA               	goto	l7534
 12406                           
 12407                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 12408  004136  B072               	btfsc	_flags,0,c
 12409  004138  D00A               	goto	l7542
 12410                           
 12411                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 12412  00413A  C021  F018         	movff	pad@buf,fputs@s
 12413  00413E  C022  F019         	movff	pad@buf+1,fputs@s+1
 12414  004142  C01F  F01A         	movff	pad@fp,fputs@fp
 12415  004146  C020  F01B         	movff	pad@fp+1,fputs@fp+1
 12416  00414A  EC1E  F024         	call	_fputs	;wreg free
 12417  00414E                     l7542:
 12418                           
 12419                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 12420  00414E  C021  F00B         	movff	pad@buf,strlen@s
 12421  004152  C022  F00C         	movff	pad@buf+1,strlen@s+1
 12422  004156  EC15  F025         	call	_strlen	;wreg free
 12423  00415A  5028               	movf	pad@w,w,c
 12424  00415C  240B               	addwf	?_strlen,w,c
 12425  00415E  6E1F               	movwf	?_pad,c
 12426  004160  5029               	movf	pad@w+1,w,c
 12427  004162  200C               	addwfc	?_strlen+1,w,c
 12428  004164  6E20               	movwf	?_pad+1,c
 12429  004166  0012               	return		;funcret
 12430  004168                     __end_of_pad:
 12431                           	opt callstack 0
 12432                           
 12433 ;; *************** function _strlen *****************
 12434 ;; Defined at:
 12435 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  s               2   10[COMRAM] PTR const unsigned char 
 12438 ;;		 -> dbuf(80), 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;  a               2   12[COMRAM] PTR const unsigned char 
 12441 ;;		 -> dbuf(80), 
 12442 ;; Return value:  Size  Location     Type
 12443 ;;                  2   10[COMRAM] unsigned int 
 12444 ;; Registers used:
 12445 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12446 ;; Tracked objects:
 12447 ;;		On entry : 0/0
 12448 ;;		On exit  : 0/0
 12449 ;;		Unchanged: 0/0
 12450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12455 ;;Total ram usage:        4 bytes
 12456 ;; Hardware stack levels used:    1
 12457 ;; Hardware stack levels required when called:    1
 12458 ;; This function calls:
 12459 ;;		Nothing
 12460 ;; This function is called by:
 12461 ;;		_pad
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           	psect	text33
 12466  004A2A                     __ptext33:
 12467                           	opt callstack 0
 12468  004A2A                     _strlen:
 12469                           	opt callstack 24
 12470                           
 12471                           ;incstack = 0
 12472  004A2A  C00B  F00D         	movff	strlen@s,strlen@a
 12473  004A2E  C00C  F00E         	movff	strlen@s+1,strlen@a+1
 12474  004A32  D002               	goto	l7308
 12475  004A34                     l7306:
 12476  004A34  4A0B               	infsnz	strlen@s,f,c
 12477  004A36  2A0C               	incf	strlen@s+1,f,c
 12478  004A38                     l7308:
 12479  004A38  C00B  FFD9         	movff	strlen@s,fsr2l
 12480  004A3C  C00C  FFDA         	movff	strlen@s+1,fsr2h
 12481  004A40  50DF               	movf	indf2,w,c
 12482  004A42  A4D8               	btfss	status,2,c
 12483  004A44  D7F7               	goto	l7306
 12484  004A46  500D               	movf	strlen@a,w,c
 12485  004A48  5C0B               	subwf	strlen@s,w,c
 12486  004A4A  6E0B               	movwf	?_strlen,c
 12487  004A4C  500E               	movf	strlen@a+1,w,c
 12488  004A4E  580C               	subwfb	strlen@s+1,w,c
 12489  004A50  6E0C               	movwf	?_strlen+1,c
 12490  004A52  0012               	return		;funcret
 12491  004A54                     __end_of_strlen:
 12492                           	opt callstack 0
 12493                           
 12494 ;; *************** function _fputs *****************
 12495 ;; Defined at:
 12496 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  s               2   23[COMRAM] PTR const unsigned char 
 12499 ;;		 -> dbuf(80), 
 12500 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 12501 ;;		 -> NULL(0), 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;  i               2   28[COMRAM] int 
 12504 ;;  c               1   27[COMRAM] unsigned char 
 12505 ;; Return value:  Size  Location     Type
 12506 ;;                  2   23[COMRAM] int 
 12507 ;; Registers used:
 12508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12515 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12517 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12518 ;;Total ram usage:        7 bytes
 12519 ;; Hardware stack levels used:    1
 12520 ;; Hardware stack levels required when called:    6
 12521 ;; This function calls:
 12522 ;;		_fputc
 12523 ;; This function is called by:
 12524 ;;		_pad
 12525 ;; This function uses a non-reentrant model
 12526 ;;
 12527                           
 12528                           	psect	text34
 12529  00483C                     __ptext34:
 12530                           	opt callstack 0
 12531  00483C                     _fputs:
 12532                           	opt callstack 19
 12533                           
 12534                           ;incstack = 0
 12535  00483C  0E00               	movlw	0
 12536  00483E  6E1E               	movwf	fputs@i+1,c
 12537  004840  0E00               	movlw	0
 12538  004842  6E1D               	movwf	fputs@i,c
 12539  004844  D00B               	goto	l7302
 12540  004846                     l7298:
 12541  004846  C01C  F00F         	movff	fputs@c,fputc@c
 12542  00484A  6A10               	clrf	fputc@c+1,c
 12543  00484C  C01A  F011         	movff	fputs@fp,fputc@fp
 12544  004850  C01B  F012         	movff	fputs@fp+1,fputc@fp+1
 12545  004854  EC38  F022         	call	_fputc	;wreg free
 12546  004858  4A1D               	infsnz	fputs@i,f,c
 12547  00485A  2A1E               	incf	fputs@i+1,f,c
 12548  00485C                     l7302:
 12549  00485C  501D               	movf	fputs@i,w,c
 12550  00485E  2418               	addwf	fputs@s,w,c
 12551  004860  6ED9               	movwf	fsr2l,c
 12552  004862  501E               	movf	fputs@i+1,w,c
 12553  004864  2019               	addwfc	fputs@s+1,w,c
 12554  004866  6EDA               	movwf	fsr2h,c
 12555  004868  50DF               	movf	indf2,w,c
 12556  00486A  6E1C               	movwf	fputs@c,c
 12557  00486C  501C               	movf	fputs@c,w,c
 12558  00486E  B4D8               	btfsc	status,2,c
 12559  004870  0012               	return	
 12560  004872  D7E9               	goto	l7298
 12561  004874                     __end_of_fputs:
 12562                           	opt callstack 0
 12563                           
 12564 ;; *************** function _fputc *****************
 12565 ;; Defined at:
 12566 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 12567 ;; Parameters:    Size  Location     Type
 12568 ;;  c               2   14[COMRAM] int 
 12569 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12570 ;;		 -> NULL(0), 
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;		None
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  2   14[COMRAM] int 
 12575 ;; Registers used:
 12576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12584 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12586 ;;Total ram usage:        9 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; Hardware stack levels required when called:    5
 12589 ;; This function calls:
 12590 ;;		_putch
 12591 ;; This function is called by:
 12592 ;;		_pad
 12593 ;;		_vfpfcnvrt
 12594 ;;		_fputs
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text35
 12599  004470                     __ptext35:
 12600                           	opt callstack 0
 12601  004470                     _fputc:
 12602                           	opt callstack 19
 12603                           
 12604                           ;incstack = 0
 12605  004470  5011               	movf	fputc@fp,w,c
 12606  004472  1012               	iorwf	fputc@fp+1,w,c
 12607  004474  B4D8               	btfsc	status,2,c
 12608  004476  D004               	goto	u8310
 12609  004478  5011               	movf	fputc@fp,w,c
 12610  00447A  1012               	iorwf	fputc@fp+1,w,c
 12611  00447C  A4D8               	btfss	status,2,c
 12612  00447E  D004               	goto	l7288
 12613  004480                     u8310:
 12614  004480  500F               	movf	fputc@c,w,c
 12615  004482  ECE7  F025         	call	_putch
 12616  004486  0012               	return	
 12617  004488                     l7288:
 12618  004488  EE20 F004          	lfsr	2,4
 12619  00448C  5011               	movf	fputc@fp,w,c
 12620  00448E  26D9               	addwf	fsr2l,f,c
 12621  004490  5012               	movf	fputc@fp+1,w,c
 12622  004492  22DA               	addwfc	fsr2h,f,c
 12623  004494  50DE               	movf	postinc2,w,c
 12624  004496  10DE               	iorwf	postinc2,w,c
 12625  004498  B4D8               	btfsc	status,2,c
 12626  00449A  D016               	goto	u8330
 12627  00449C  EE20 F004          	lfsr	2,4
 12628  0044A0  5011               	movf	fputc@fp,w,c
 12629  0044A2  26D9               	addwf	fsr2l,f,c
 12630  0044A4  5012               	movf	fputc@fp+1,w,c
 12631  0044A6  22DA               	addwfc	fsr2h,f,c
 12632  0044A8  EE10 F002          	lfsr	1,2
 12633  0044AC  5011               	movf	fputc@fp,w,c
 12634  0044AE  26E1               	addwf	fsr1l,f,c
 12635  0044B0  5012               	movf	fputc@fp+1,w,c
 12636  0044B2  22E2               	addwfc	fsr1h,f,c
 12637  0044B4  50DE               	movf	postinc2,w,c
 12638  0044B6  5CE6               	subwf	postinc1,w,c
 12639  0044B8  50E6               	movf	postinc1,w,c
 12640  0044BA  0A80               	xorlw	128
 12641  0044BC  6E17               	movwf	(??_fputc+4)& (0+255),c
 12642  0044BE  50DE               	movf	postinc2,w,c
 12643  0044C0  0A80               	xorlw	128
 12644  0044C2  5817               	subwfb	(??_fputc+4)& (0+255),w,c
 12645  0044C4  B0D8               	btfsc	status,0,c
 12646  0044C6  0012               	return	
 12647  0044C8                     u8330:
 12648  0044C8  EE20 F002          	lfsr	2,2
 12649  0044CC  5011               	movf	fputc@fp,w,c
 12650  0044CE  26D9               	addwf	fsr2l,f,c
 12651  0044D0  5012               	movf	fputc@fp+1,w,c
 12652  0044D2  22DA               	addwfc	fsr2h,f,c
 12653  0044D4  2ADE               	incf	postinc2,f,c
 12654  0044D6  0E00               	movlw	0
 12655  0044D8  22DD               	addwfc	postdec2,f,c
 12656  0044DA  0012               	return		;funcret
 12657  0044DC                     __end_of_fputc:
 12658                           	opt callstack 0
 12659                           
 12660 ;; *************** function _putch *****************
 12661 ;; Defined at:
 12662 ;;		line 102 in file "lcd.c"
 12663 ;; Parameters:    Size  Location     Type
 12664 ;;  data            1    wreg     unsigned char 
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;  data            1   13[COMRAM] unsigned char 
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  1    wreg      void 
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0, cstack
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12680 ;;Total ram usage:        1 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:    4
 12683 ;; This function calls:
 12684 ;;		_send_byte
 12685 ;; This function is called by:
 12686 ;;		_fputc
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           	psect	text36
 12691  004BCE                     __ptext36:
 12692                           	opt callstack 0
 12693  004BCE                     _putch:
 12694                           	opt callstack 19
 12695                           
 12696                           ;incstack = 0
 12697                           ;putch@data stored from wreg
 12698  004BCE  6E0E               	movwf	putch@data,c
 12699                           
 12700                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
 12701  004BD0  848C               	bsf	3980,2,c	;volatile
 12702                           
 12703                           ;lcd.c: 104:     send_byte((unsigned char)data);
 12704  004BD2  500E               	movf	putch@data,w,c
 12705  004BD4  ECD5  F025         	call	_send_byte
 12706  004BD8  0012               	return		;funcret
 12707  004BDA                     __end_of_putch:
 12708                           	opt callstack 0
 12709                           
 12710 ;; *************** function _atoi *****************
 12711 ;; Defined at:
 12712 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 12713 ;; Parameters:    Size  Location     Type
 12714 ;;  s               2   17[COMRAM] PTR const unsigned char 
 12715 ;;		 -> STR_51(10), STR_50(14), STR_49(11), STR_48(12), 
 12716 ;;		 -> STR_47(10), STR_46(15), STR_45(14), STR_44(12), 
 12717 ;;		 -> STR_43(10), STR_42(15), STR_41(12), STR_40(8), 
 12718 ;;		 -> STR_39(13), STR_38(7), STR_37(14), STR_36(9), 
 12719 ;;		 -> STR_35(7), STR_34(14), STR_33(15), STR_32(12), 
 12720 ;;		 -> STR_31(16), STR_30(9), STR_29(9), STR_28(11), 
 12721 ;;		 -> STR_27(13), STR_26(15), STR_25(11), STR_24(15), 
 12722 ;;		 -> STR_23(12), STR_22(15), STR_21(13), STR_20(11), 
 12723 ;;		 -> STR_19(10), STR_18(10), STR_17(10), STR_16(11), 
 12724 ;;		 -> STR_15(11), STR_14(11), STR_13(10), STR_12(9), 
 12725 ;;		 -> STR_11(8), STR_10(11), STR_9(16), STR_8(5), 
 12726 ;;		 -> STR_7(16), STR_6(7), STR_5(11), STR_4(11), 
 12727 ;;		 -> STR_3(15), STR_2(15), STR_1(11), 
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;  n               2   30[COMRAM] int 
 12730 ;;  neg             2   23[COMRAM] int 
 12731 ;; Return value:  Size  Location     Type
 12732 ;;                  2   17[COMRAM] int 
 12733 ;; Registers used:
 12734 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12735 ;; Tracked objects:
 12736 ;;		On entry : 0/0
 12737 ;;		On exit  : 0/0
 12738 ;;		Unchanged: 0/0
 12739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12741 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12743 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12744 ;;Total ram usage:       15 bytes
 12745 ;; Hardware stack levels used:    1
 12746 ;; Hardware stack levels required when called:    2
 12747 ;; This function calls:
 12748 ;;		___wmul
 12749 ;;		_isdigit
 12750 ;;		_isspace
 12751 ;; This function is called by:
 12752 ;;		_vfpfcnvrt
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text37
 12757  003A88                     __ptext37:
 12758                           	opt callstack 0
 12759  003A88                     _atoi:
 12760                           	opt callstack 25
 12761                           
 12762                           ;incstack = 0
 12763  003A88  0E00               	movlw	0
 12764  003A8A  6E20               	movwf	atoi@n+1,c
 12765  003A8C  0E00               	movlw	0
 12766  003A8E  6E1F               	movwf	atoi@n,c
 12767  003A90  0E00               	movlw	0
 12768  003A92  6E19               	movwf	atoi@neg+1,c
 12769  003A94  0E00               	movlw	0
 12770  003A96  6E18               	movwf	atoi@neg,c
 12771  003A98  D002               	goto	l8618
 12772  003A9A                     l8616:
 12773  003A9A  4A12               	infsnz	atoi@s,f,c
 12774  003A9C  2A13               	incf	atoi@s+1,f,c
 12775  003A9E                     l8618:
 12776  003A9E  0E01               	movlw	1
 12777  003AA0  6E1E               	movwf	_atoi$1877,c
 12778  003AA2  C012  FFF6         	movff	atoi@s,tblptrl
 12779  003AA6  C013  FFF7         	movff	atoi@s+1,tblptrh
 12780  003AAA                     	if	0	;tblptru may be non-zero
 12781  003AAA                     	endif
 12782  003AAA                     	if	0	;tblptru may be non-zero
 12783  003AAA                     	endif
 12784  003AAA  0008               	tblrd		*
 12785  003AAC  50F5               	movf	tablat,w,c
 12786  003AAE  0A20               	xorlw	32
 12787  003AB0  B4D8               	btfsc	status,2,c
 12788  003AB2  D018               	goto	l8626
 12789  003AB4  0EF7               	movlw	247
 12790  003AB6  6E14               	movwf	??_atoi& (0+255),c
 12791  003AB8  0EFF               	movlw	255
 12792  003ABA  6E15               	movwf	(??_atoi+1)& (0+255),c
 12793  003ABC  C012  FFF6         	movff	atoi@s,tblptrl
 12794  003AC0  C013  FFF7         	movff	atoi@s+1,tblptrh
 12795  003AC4                     	if	0	;tblptru may be non-zero
 12796  003AC4                     	endif
 12797  003AC4                     	if	0	;tblptru may be non-zero
 12798  003AC4                     	endif
 12799  003AC4  0008               	tblrd		*
 12800  003AC6  50F5               	movf	tablat,w,c
 12801  003AC8  6E16               	movwf	(??_atoi+2)& (0+255),c
 12802  003ACA  6A17               	clrf	(??_atoi+3)& (0+255),c
 12803  003ACC  5014               	movf	??_atoi,w,c
 12804  003ACE  2616               	addwf	??_atoi+2,f,c
 12805  003AD0  5015               	movf	??_atoi+1,w,c
 12806  003AD2  2217               	addwfc	??_atoi+3,f,c
 12807  003AD4  5017               	movf	??_atoi+3,w,c
 12808  003AD6  E104               	bnz	u10840
 12809  003AD8  0E05               	movlw	5
 12810  003ADA  5C16               	subwf	??_atoi+2,w,c
 12811  003ADC  A0D8               	btfss	status,0,c
 12812  003ADE  D002               	goto	l8626
 12813  003AE0                     u10840:
 12814  003AE0  0E00               	movlw	0
 12815  003AE2  6E1E               	movwf	_atoi$1877,c
 12816  003AE4                     l8626:
 12817  003AE4  C01E  F01A         	movff	_atoi$1877,_atoi$1876
 12818  003AE8  6A1B               	clrf	_atoi$1876+1,c
 12819  003AEA  501A               	movf	_atoi$1876,w,c
 12820  003AEC  101B               	iorwf	_atoi$1876+1,w,c
 12821  003AEE  B4D8               	btfsc	status,2,c
 12822  003AF0  D008               	goto	l8636
 12823  003AF2  D7D3               	goto	l8616
 12824  003AF4                     l8632:
 12825  003AF4  0E00               	movlw	0
 12826  003AF6  6E19               	movwf	atoi@neg+1,c
 12827  003AF8  0E01               	movlw	1
 12828  003AFA  6E18               	movwf	atoi@neg,c
 12829  003AFC                     l8634:
 12830  003AFC  4A12               	infsnz	atoi@s,f,c
 12831  003AFE  2A13               	incf	atoi@s+1,f,c
 12832  003B00  D02E               	goto	l8642
 12833  003B02                     l8636:
 12834  003B02  C012  FFF6         	movff	atoi@s,tblptrl
 12835  003B06  C013  FFF7         	movff	atoi@s+1,tblptrh
 12836  003B0A                     	if	0	;tblptru may be non-zero
 12837  003B0A                     	endif
 12838  003B0A                     	if	0	;tblptru may be non-zero
 12839  003B0A                     	endif
 12840  003B0A  0008               	tblrd		*
 12841  003B0C  50F5               	movf	tablat,w,c
 12842  003B0E  6E14               	movwf	??_atoi& (0+255),c
 12843  003B10  6A15               	clrf	(??_atoi+1)& (0+255),c
 12844                           
 12845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12846                           ; Switch size 1, requested type "simple"
 12847                           ; Number of cases is 1, Range of values is 0 to 0
 12848                           ; switch strategies available:
 12849                           ; Name         Instructions Cycles
 12850                           ; simple_byte            4     3 (average)
 12851                           ;	Chosen strategy is simple_byte
 12852  003B12  5015               	movf	??_atoi+1,w,c
 12853  003B14  0A00               	xorlw	0	; case 0
 12854  003B16  A4D8               	btfss	status,2,c
 12855  003B18  D022               	goto	l8642
 12856                           
 12857                           ; Switch size 1, requested type "simple"
 12858                           ; Number of cases is 2, Range of values is 43 to 45
 12859                           ; switch strategies available:
 12860                           ; Name         Instructions Cycles
 12861                           ; simple_byte            7     4 (average)
 12862                           ;	Chosen strategy is simple_byte
 12863  003B1A  5014               	movf	??_atoi,w,c
 12864  003B1C  0A2B               	xorlw	43	; case 43
 12865  003B1E  B4D8               	btfsc	status,2,c
 12866  003B20  D7ED               	goto	l8634
 12867  003B22  0A06               	xorlw	6	; case 45
 12868  003B24  B4D8               	btfsc	status,2,c
 12869  003B26  D7E6               	goto	l8632
 12870  003B28  D01A               	goto	l8642
 12871  003B2A                     l8638:
 12872  003B2A  C01F  F00B         	movff	atoi@n,___wmul@multiplier
 12873  003B2E  C020  F00C         	movff	atoi@n+1,___wmul@multiplier+1
 12874  003B32  0E00               	movlw	0
 12875  003B34  6E0E               	movwf	___wmul@multiplicand+1,c
 12876  003B36  0E0A               	movlw	10
 12877  003B38  6E0D               	movwf	___wmul@multiplicand,c
 12878  003B3A  EC53  F025         	call	___wmul	;wreg free
 12879  003B3E  C012  FFF6         	movff	atoi@s,tblptrl
 12880  003B42  C013  FFF7         	movff	atoi@s+1,tblptrh
 12881  003B46                     	if	0	;tblptru may be non-zero
 12882  003B46                     	endif
 12883  003B46                     	if	0	;tblptru may be non-zero
 12884  003B46                     	endif
 12885  003B46  0008               	tblrd		*
 12886  003B48  50F5               	movf	tablat,w,c
 12887  003B4A  5E0B               	subwf	?___wmul,f,c
 12888  003B4C  0E00               	movlw	0
 12889  003B4E  5A0C               	subwfb	?___wmul+1,f,c
 12890  003B50  0E30               	movlw	48
 12891  003B52  240B               	addwf	?___wmul,w,c
 12892  003B54  6E1F               	movwf	atoi@n,c
 12893  003B56  0E00               	movlw	0
 12894  003B58  200C               	addwfc	?___wmul+1,w,c
 12895  003B5A  6E20               	movwf	atoi@n+1,c
 12896  003B5C  D7CF               	goto	l8634
 12897  003B5E                     l8642:
 12898  003B5E  0ED0               	movlw	208
 12899  003B60  6E14               	movwf	??_atoi& (0+255),c
 12900  003B62  0EFF               	movlw	255
 12901  003B64  6E15               	movwf	(??_atoi+1)& (0+255),c
 12902  003B66  C012  FFF6         	movff	atoi@s,tblptrl
 12903  003B6A  C013  FFF7         	movff	atoi@s+1,tblptrh
 12904  003B6E                     	if	0	;tblptru may be non-zero
 12905  003B6E                     	endif
 12906  003B6E                     	if	0	;tblptru may be non-zero
 12907  003B6E                     	endif
 12908  003B6E  0008               	tblrd		*
 12909  003B70  50F5               	movf	tablat,w,c
 12910  003B72  6E16               	movwf	(??_atoi+2)& (0+255),c
 12911  003B74  6A17               	clrf	(??_atoi+3)& (0+255),c
 12912  003B76  5014               	movf	??_atoi,w,c
 12913  003B78  2616               	addwf	??_atoi+2,f,c
 12914  003B7A  5015               	movf	??_atoi+1,w,c
 12915  003B7C  2217               	addwfc	??_atoi+3,f,c
 12916  003B7E  5017               	movf	??_atoi+3,w,c
 12917  003B80  E106               	bnz	u10860
 12918  003B82  0E0A               	movlw	10
 12919  003B84  5C16               	subwf	??_atoi+2,w,c
 12920  003B86  B0D8               	btfsc	status,0,c
 12921  003B88  D002               	goto	u10860
 12922  003B8A  0E01               	movlw	1
 12923  003B8C  D001               	goto	u10870
 12924  003B8E                     u10860:
 12925  003B8E  0E00               	movlw	0
 12926  003B90                     u10870:
 12927  003B90  6E1C               	movwf	_atoi$1878,c
 12928  003B92  6A1D               	clrf	_atoi$1878+1,c
 12929  003B94  501C               	movf	_atoi$1878,w,c
 12930  003B96  101D               	iorwf	_atoi$1878+1,w,c
 12931  003B98  A4D8               	btfss	status,2,c
 12932  003B9A  D7C7               	goto	l8638
 12933  003B9C  5018               	movf	atoi@neg,w,c
 12934  003B9E  1019               	iorwf	atoi@neg+1,w,c
 12935  003BA0  A4D8               	btfss	status,2,c
 12936  003BA2  D00D               	goto	l1418
 12937  003BA4  C01F  F014         	movff	atoi@n,??_atoi
 12938  003BA8  C020  F015         	movff	atoi@n+1,??_atoi+1
 12939  003BAC  1E14               	comf	??_atoi,f,c
 12940  003BAE  1E15               	comf	??_atoi+1,f,c
 12941  003BB0  4A14               	infsnz	??_atoi,f,c
 12942  003BB2  2A15               	incf	??_atoi+1,f,c
 12943  003BB4  C014  F012         	movff	??_atoi,?_atoi
 12944  003BB8  C015  F013         	movff	??_atoi+1,?_atoi+1
 12945  003BBC  0012               	return	
 12946  003BBE                     l1418:
 12947  003BBE  C01F  F012         	movff	atoi@n,?_atoi
 12948  003BC2  C020  F013         	movff	atoi@n+1,?_atoi+1
 12949  003BC6  0012               	return		;funcret
 12950  003BC8                     __end_of_atoi:
 12951                           	opt callstack 0
 12952                           
 12953 ;; *************** function _isspace *****************
 12954 ;; Defined at:
 12955 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 12956 ;; Parameters:    Size  Location     Type
 12957 ;;  c               2   10[COMRAM] int 
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;		None
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  2   10[COMRAM] int 
 12962 ;; Registers used:
 12963 ;;		wreg, status,2, status,0
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;Total ram usage:        7 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    1
 12976 ;; This function calls:
 12977 ;;		Nothing
 12978 ;; This function is called by:
 12979 ;;		_atoi
 12980 ;; This function uses a non-reentrant model
 12981 ;;
 12982                           
 12983                           	psect	text38
 12984  0047C2                     __ptext38:
 12985                           	opt callstack 0
 12986  0047C2                     _isspace:
 12987                           	opt callstack 25
 12988                           
 12989                           ;incstack = 0
 12990  0047C2  0E01               	movlw	1
 12991  0047C4  6E11               	movwf	_isspace$1916,c
 12992  0047C6  0E20               	movlw	32
 12993  0047C8  180B               	xorwf	isspace@c,w,c
 12994  0047CA  100C               	iorwf	isspace@c+1,w,c
 12995  0047CC  B4D8               	btfsc	status,2,c
 12996  0047CE  D014               	goto	l8170
 12997  0047D0  0EF7               	movlw	247
 12998  0047D2  6E0D               	movwf	??_isspace& (0+255),c
 12999  0047D4  0EFF               	movlw	255
 13000  0047D6  6E0E               	movwf	(??_isspace+1)& (0+255),c
 13001  0047D8  C00B  F00F         	movff	isspace@c,??_isspace+2
 13002  0047DC  C00C  F010         	movff	isspace@c+1,??_isspace+3
 13003  0047E0  500D               	movf	??_isspace,w,c
 13004  0047E2  260F               	addwf	??_isspace+2,f,c
 13005  0047E4  500E               	movf	??_isspace+1,w,c
 13006  0047E6  2210               	addwfc	??_isspace+3,f,c
 13007  0047E8  5010               	movf	??_isspace+3,w,c
 13008  0047EA  E104               	bnz	u9970
 13009  0047EC  0E05               	movlw	5
 13010  0047EE  5C0F               	subwf	??_isspace+2,w,c
 13011  0047F0  A0D8               	btfss	status,0,c
 13012  0047F2  D002               	goto	l8170
 13013  0047F4                     u9970:
 13014  0047F4  0E00               	movlw	0
 13015  0047F6  6E11               	movwf	_isspace$1916,c
 13016  0047F8                     l8170:
 13017  0047F8  C011  F00B         	movff	_isspace$1916,?_isspace
 13018  0047FC  6A0C               	clrf	?_isspace+1,c
 13019  0047FE  0012               	return		;funcret
 13020  004800                     __end_of_isspace:
 13021                           	opt callstack 0
 13022                           
 13023 ;; *************** function _isdigit *****************
 13024 ;; Defined at:
 13025 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;  c               2   10[COMRAM] int 
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;		None
 13030 ;; Return value:  Size  Location     Type
 13031 ;;                  2   10[COMRAM] int 
 13032 ;; Registers used:
 13033 ;;		wreg, status,2, status,0
 13034 ;; Tracked objects:
 13035 ;;		On entry : 0/0
 13036 ;;		On exit  : 0/0
 13037 ;;		Unchanged: 0/0
 13038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13041 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13042 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;Total ram usage:        6 bytes
 13044 ;; Hardware stack levels used:    1
 13045 ;; Hardware stack levels required when called:    1
 13046 ;; This function calls:
 13047 ;;		Nothing
 13048 ;; This function is called by:
 13049 ;;		_vfpfcnvrt
 13050 ;;		_atoi
 13051 ;; This function uses a non-reentrant model
 13052 ;;
 13053                           
 13054                           	psect	text39
 13055  00496C                     __ptext39:
 13056                           	opt callstack 0
 13057  00496C                     _isdigit:
 13058                           	opt callstack 26
 13059                           
 13060                           ;incstack = 0
 13061  00496C  0ED0               	movlw	208
 13062  00496E  6E0D               	movwf	??_isdigit& (0+255),c
 13063  004970  0EFF               	movlw	255
 13064  004972  6E0E               	movwf	(??_isdigit+1)& (0+255),c
 13065  004974  C00B  F00F         	movff	isdigit@c,??_isdigit+2
 13066  004978  C00C  F010         	movff	isdigit@c+1,??_isdigit+3
 13067  00497C  500D               	movf	??_isdigit,w,c
 13068  00497E  260F               	addwf	??_isdigit+2,f,c
 13069  004980  500E               	movf	??_isdigit+1,w,c
 13070  004982  2210               	addwfc	??_isdigit+3,f,c
 13071  004984  5010               	movf	??_isdigit+3,w,c
 13072  004986  E106               	bnz	u9110
 13073  004988  0E0A               	movlw	10
 13074  00498A  5C0F               	subwf	??_isdigit+2,w,c
 13075  00498C  B0D8               	btfsc	status,0,c
 13076  00498E  D002               	goto	u9110
 13077  004990  0E01               	movlw	1
 13078  004992  D001               	goto	u9120
 13079  004994                     u9110:
 13080  004994  0E00               	movlw	0
 13081  004996                     u9120:
 13082  004996  6E0B               	movwf	?_isdigit,c
 13083  004998  6A0C               	clrf	?_isdigit+1,c
 13084  00499A  0012               	return		;funcret
 13085  00499C                     __end_of_isdigit:
 13086                           	opt callstack 0
 13087                           
 13088 ;; *************** function _left *****************
 13089 ;; Defined at:
 13090 ;;		line 641 in file "main.c"
 13091 ;; Parameters:    Size  Location     Type
 13092 ;;		None
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;		None
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  1    wreg      void 
 13097 ;; Registers used:
 13098 ;;		wreg
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;Total ram usage:        1 bytes
 13109 ;; Hardware stack levels used:    1
 13110 ;; Hardware stack levels required when called:    1
 13111 ;; This function calls:
 13112 ;;		Nothing
 13113 ;; This function is called by:
 13114 ;;		_main
 13115 ;;		_turnright
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text40
 13120  004AF0                     __ptext40:
 13121                           	opt callstack 0
 13122  004AF0                     _left:
 13123                           	opt callstack 29
 13124                           
 13125                           ;main.c: 643:     LATBbits.LATB2 = 1 ;
 13126                           
 13127                           ;incstack = 0
 13128  004AF0  848A               	bsf	3978,2,c	;volatile
 13129                           
 13130                           ;main.c: 644:     _delay((unsigned long)((1100)*(10000000/4000000.0)));
 13131  004AF2  0E04               	movlw	4
 13132  004AF4  6E0B               	movwf	??_left& (0+255),c
 13133  004AF6  0E91               	movlw	145
 13134  004AF8                     u12517:
 13135  004AF8  2EE8               	decfsz	wreg,f,c
 13136  004AFA  D7FE               	bra	u12517
 13137  004AFC  2E0B               	decfsz	??_left& (0+255),f,c
 13138  004AFE  D7FC               	bra	u12517
 13139  004B00  F000               	nop	
 13140                           
 13141                           ;main.c: 645:     LATBbits.LATB2 = 0 ;
 13142  004B02  948A               	bcf	3978,2,c	;volatile
 13143                           
 13144                           ;main.c: 646:     _delay((unsigned long)((1000)*(10000000/4000000.0)));
 13145  004B04  0E04               	movlw	4
 13146  004B06  6E0B               	movwf	??_left& (0+255),c
 13147  004B08  0E3E               	movlw	62
 13148  004B0A                     u12527:
 13149  004B0A  2EE8               	decfsz	wreg,f,c
 13150  004B0C  D7FE               	bra	u12527
 13151  004B0E  2E0B               	decfsz	??_left& (0+255),f,c
 13152  004B10  D7FC               	bra	u12527
 13153  004B12  0012               	return		;funcret
 13154  004B14                     __end_of_left:
 13155                           	opt callstack 0
 13156                           
 13157 ;; *************** function _initLCD *****************
 13158 ;; Defined at:
 13159 ;;		line 69 in file "lcd.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;		None
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg, status,2, status,0, cstack
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13177 ;;Total ram usage:        1 bytes
 13178 ;; Hardware stack levels used:    1
 13179 ;; Hardware stack levels required when called:    5
 13180 ;; This function calls:
 13181 ;;		_lcdInst
 13182 ;;		_send_byte
 13183 ;;		_send_nibble
 13184 ;; This function is called by:
 13185 ;;		_main
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           	psect	text41
 13190  0044DC                     __ptext41:
 13191                           	opt callstack 0
 13192  0044DC                     _initLCD:
 13193                           	opt callstack 25
 13194                           
 13195                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
 13196                           
 13197                           ;incstack = 0
 13198  0044DC  0E31               	movlw	49
 13199  0044DE  6E0F               	movwf	??_initLCD& (0+255),c
 13200  0044E0  0EB2               	movlw	178
 13201  0044E2                     u12537:
 13202  0044E2  2EE8               	decfsz	wreg,f,c
 13203  0044E4  D7FE               	bra	u12537
 13204  0044E6  2E0F               	decfsz	??_initLCD& (0+255),f,c
 13205  0044E8  D7FC               	bra	u12537
 13206  0044EA  D000               	nop2	
 13207                           
 13208                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
 13209  0044EC  948C               	bcf	3980,2,c	;volatile
 13210                           
 13211                           ;lcd.c: 74:     send_nibble(0b0011);
 13212  0044EE  0E03               	movlw	3
 13213  0044F0  ECC0  F025         	call	_send_nibble
 13214                           
 13215                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
 13216  0044F4  0E11               	movlw	17
 13217  0044F6  6E0F               	movwf	??_initLCD& (0+255),c
 13218  0044F8  0E3A               	movlw	58
 13219  0044FA                     u12547:
 13220  0044FA  2EE8               	decfsz	wreg,f,c
 13221  0044FC  D7FE               	bra	u12547
 13222  0044FE  2E0F               	decfsz	??_initLCD& (0+255),f,c
 13223  004500  D7FC               	bra	u12547
 13224  004502  D000               	nop2	
 13225                           
 13226                           ;lcd.c: 76:     send_nibble(0b0011);
 13227  004504  0E03               	movlw	3
 13228  004506  ECC0  F025         	call	_send_nibble
 13229                           
 13230                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
 13231  00450A  0E7D               	movlw	125
 13232  00450C                     u12557:
 13233  00450C  2EE8               	decfsz	wreg,f,c
 13234  00450E  D7FE               	bra	u12557
 13235                           
 13236                           ;lcd.c: 78:     send_byte(0b00110010);
 13237  004510  0E32               	movlw	50
 13238  004512  ECD5  F025         	call	_send_byte
 13239                           
 13240                           ;lcd.c: 80:     send_byte(0b00101000);
 13241  004516  0E28               	movlw	40
 13242  004518  ECD5  F025         	call	_send_byte
 13243                           
 13244                           ;lcd.c: 81:     send_byte(0b00001000);
 13245  00451C  0E08               	movlw	8
 13246  00451E  ECD5  F025         	call	_send_byte
 13247                           
 13248                           ;lcd.c: 82:     send_byte(0b00000001);
 13249  004522  0E01               	movlw	1
 13250  004524  ECD5  F025         	call	_send_byte
 13251                           
 13252                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
 13253  004528  0E11               	movlw	17
 13254  00452A  6E0F               	movwf	??_initLCD& (0+255),c
 13255  00452C  0E3A               	movlw	58
 13256  00452E                     u12567:
 13257  00452E  2EE8               	decfsz	wreg,f,c
 13258  004530  D7FE               	bra	u12567
 13259  004532  2E0F               	decfsz	??_initLCD& (0+255),f,c
 13260  004534  D7FC               	bra	u12567
 13261  004536  D000               	nop2	
 13262                           
 13263                           ;lcd.c: 84:     send_byte(0b00000110);
 13264  004538  0E06               	movlw	6
 13265  00453A  ECD5  F025         	call	_send_byte
 13266                           
 13267                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
 13268  00453E  0E0F               	movlw	15
 13269  004540  ECED  F025         	call	_lcdInst
 13270  004544  0012               	return		;funcret
 13271  004546                     __end_of_initLCD:
 13272                           	opt callstack 0
 13273                           
 13274 ;; *************** function _lcdInst *****************
 13275 ;; Defined at:
 13276 ;;		line 64 in file "lcd.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;  data            1    wreg     unsigned char 
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;  data            1   13[COMRAM] unsigned char 
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		wreg, status,2, status,0, cstack
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13294 ;;Total ram usage:        1 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:    4
 13297 ;; This function calls:
 13298 ;;		_send_byte
 13299 ;; This function is called by:
 13300 ;;		_initLCD
 13301 ;;		_main
 13302 ;;		_lcd_shift_cursor
 13303 ;;		_lcd_shift_display
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           	psect	text42
 13308  004BDA                     __ptext42:
 13309                           	opt callstack 0
 13310  004BDA                     _lcdInst:
 13311                           	opt callstack 26
 13312                           
 13313                           ;incstack = 0
 13314                           ;lcdInst@data stored from wreg
 13315  004BDA  6E0E               	movwf	lcdInst@data,c
 13316                           
 13317                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
 13318  004BDC  948C               	bcf	3980,2,c	;volatile
 13319                           
 13320                           ;lcd.c: 66:     send_byte(data);
 13321  004BDE  500E               	movf	lcdInst@data,w,c
 13322  004BE0  ECD5  F025         	call	_send_byte
 13323  004BE4  0012               	return		;funcret
 13324  004BE6                     __end_of_lcdInst:
 13325                           	opt callstack 0
 13326                           
 13327 ;; *************** function _send_byte *****************
 13328 ;; Defined at:
 13329 ;;		line 55 in file "lcd.c"
 13330 ;; Parameters:    Size  Location     Type
 13331 ;;  data            1    wreg     unsigned char 
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  data            1   12[COMRAM] unsigned char 
 13334 ;; Return value:  Size  Location     Type
 13335 ;;                  1    wreg      void 
 13336 ;; Registers used:
 13337 ;;		wreg, status,2, status,0, cstack
 13338 ;; Tracked objects:
 13339 ;;		On entry : 0/0
 13340 ;;		On exit  : 0/0
 13341 ;;		Unchanged: 0/0
 13342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13347 ;;Total ram usage:        1 bytes
 13348 ;; Hardware stack levels used:    1
 13349 ;; Hardware stack levels required when called:    3
 13350 ;; This function calls:
 13351 ;;		_send_nibble
 13352 ;; This function is called by:
 13353 ;;		_lcdInst
 13354 ;;		_initLCD
 13355 ;;		_putch
 13356 ;; This function uses a non-reentrant model
 13357 ;;
 13358                           
 13359                           	psect	text43
 13360  004BAA                     __ptext43:
 13361                           	opt callstack 0
 13362  004BAA                     _send_byte:
 13363                           	opt callstack 19
 13364                           
 13365                           ;incstack = 0
 13366                           ;send_byte@data stored from wreg
 13367  004BAA  6E0D               	movwf	send_byte@data,c
 13368                           
 13369                           ;lcd.c: 57:     send_nibble(data >> 4);
 13370  004BAC  380D               	swapf	send_byte@data,w,c
 13371  004BAE  0B0F               	andlw	15
 13372  004BB0  ECC0  F025         	call	_send_nibble
 13373                           
 13374                           ;lcd.c: 60:     send_nibble(data);
 13375  004BB4  500D               	movf	send_byte@data,w,c
 13376  004BB6  ECC0  F025         	call	_send_nibble
 13377  004BBA  0012               	return		;funcret
 13378  004BBC                     __end_of_send_byte:
 13379                           	opt callstack 0
 13380                           
 13381 ;; *************** function _send_nibble *****************
 13382 ;; Defined at:
 13383 ;;		line 44 in file "lcd.c"
 13384 ;; Parameters:    Size  Location     Type
 13385 ;;  data            1    wreg     unsigned char 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;  data            1   11[COMRAM] unsigned char 
 13388 ;; Return value:  Size  Location     Type
 13389 ;;                  1    wreg      void 
 13390 ;; Registers used:
 13391 ;;		wreg, status,2, status,0, cstack
 13392 ;; Tracked objects:
 13393 ;;		On entry : 0/0
 13394 ;;		On exit  : 0/0
 13395 ;;		Unchanged: 0/0
 13396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13401 ;;Total ram usage:        1 bytes
 13402 ;; Hardware stack levels used:    1
 13403 ;; Hardware stack levels required when called:    2
 13404 ;; This function calls:
 13405 ;;		_pulse_e
 13406 ;; This function is called by:
 13407 ;;		_send_byte
 13408 ;;		_initLCD
 13409 ;; This function uses a non-reentrant model
 13410 ;;
 13411                           
 13412                           	psect	text44
 13413  004B80                     __ptext44:
 13414                           	opt callstack 0
 13415  004B80                     _send_nibble:
 13416                           	opt callstack 19
 13417                           
 13418                           ;incstack = 0
 13419                           ;send_nibble@data stored from wreg
 13420  004B80  6E0C               	movwf	send_nibble@data,c
 13421                           
 13422                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
 13423  004B82  508C               	movf	3980,w,c	;volatile
 13424  004B84  0B0F               	andlw	15
 13425  004B86  6E8C               	movwf	3980,c	;volatile
 13426                           
 13427                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
 13428  004B88  380C               	swapf	send_nibble@data,w,c
 13429  004B8A  0BF0               	andlw	240
 13430  004B8C  108C               	iorwf	3980,w,c	;volatile
 13431  004B8E  6E8C               	movwf	3980,c	;volatile
 13432                           
 13433                           ;lcd.c: 48:     pulse_e();
 13434  004B90  EC2A  F025         	call	_pulse_e	;wreg free
 13435  004B94  0012               	return		;funcret
 13436  004B96                     __end_of_send_nibble:
 13437                           	opt callstack 0
 13438                           
 13439 ;; *************** function _pulse_e *****************
 13440 ;; Defined at:
 13441 ;;		line 28 in file "lcd.c"
 13442 ;; Parameters:    Size  Location     Type
 13443 ;;		None
 13444 ;; Auto vars:     Size  Location     Type
 13445 ;;  interruptSta    1   10[COMRAM] unsigned char 
 13446 ;; Return value:  Size  Location     Type
 13447 ;;                  1    wreg      void 
 13448 ;; Registers used:
 13449 ;;		wreg
 13450 ;; Tracked objects:
 13451 ;;		On entry : 0/0
 13452 ;;		On exit  : 0/0
 13453 ;;		Unchanged: 0/0
 13454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13459 ;;Total ram usage:        1 bytes
 13460 ;; Hardware stack levels used:    1
 13461 ;; Hardware stack levels required when called:    1
 13462 ;; This function calls:
 13463 ;;		Nothing
 13464 ;; This function is called by:
 13465 ;;		_send_nibble
 13466 ;; This function uses a non-reentrant model
 13467 ;;
 13468                           
 13469                           	psect	text45
 13470  004A54                     __ptext45:
 13471                           	opt callstack 0
 13472  004A54                     _pulse_e:
 13473                           	opt callstack 19
 13474                           
 13475                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
 13476                           
 13477                           ;incstack = 0
 13478  004A54  0E00               	movlw	0
 13479  004A56  BEF2               	btfsc	4082,7,c	;volatile
 13480  004A58  0E01               	movlw	1
 13481  004A5A  6E0B               	movwf	pulse_e@interruptState,c
 13482                           
 13483                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
 13484  004A5C  9EF2               	bcf	4082,7,c	;volatile
 13485                           
 13486                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
 13487  004A5E  868C               	bsf	3980,3,c	;volatile
 13488                           
 13489                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
 13490  004A60  0E14               	movlw	20
 13491  004A62                     u12577:
 13492  004A62  2EE8               	decfsz	wreg,f,c
 13493  004A64  D7FE               	bra	u12577
 13494  004A66  D000               	nop2	
 13495                           
 13496                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
 13497  004A68  968C               	bcf	3980,3,c	;volatile
 13498                           
 13499                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
 13500  004A6A  0E53               	movlw	83
 13501  004A6C                     u12587:
 13502  004A6C  2EE8               	decfsz	wreg,f,c
 13503  004A6E  D7FE               	bra	u12587
 13504  004A70  F000               	nop	
 13505                           
 13506                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
 13507  004A72  B00B               	btfsc	pulse_e@interruptState,0,c
 13508  004A74  D002               	bra	u8295
 13509  004A76  9EF2               	bcf	4082,7,c	;volatile
 13510  004A78  D001               	bra	u8296
 13511  004A7A                     u8295:
 13512  004A7A  8EF2               	bsf	4082,7,c	;volatile
 13513  004A7C                     u8296:
 13514  004A7C  0012               	return		;funcret
 13515  004A7E                     __end_of_pulse_e:
 13516                           	opt callstack 0
 13517                           
 13518 ;; *************** function _frontsensor *****************
 13519 ;; Defined at:
 13520 ;;		line 695 in file "main.c"
 13521 ;; Parameters:    Size  Location     Type
 13522 ;;		None
 13523 ;; Auto vars:     Size  Location     Type
 13524 ;;  front           2   26[COMRAM] int 
 13525 ;;  time            2   24[COMRAM] int 
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  2   18[COMRAM] int 
 13528 ;; Registers used:
 13529 ;;		wreg, status,2, status,0, cstack
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/0
 13532 ;;		On exit  : 0/0
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13536 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13538 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13539 ;;Total ram usage:       10 bytes
 13540 ;; Hardware stack levels used:    1
 13541 ;; Hardware stack levels required when called:    2
 13542 ;; This function calls:
 13543 ;;		___awdiv
 13544 ;; This function is called by:
 13545 ;;		_main
 13546 ;; This function uses a non-reentrant model
 13547 ;;
 13548                           
 13549                           	psect	text46
 13550  004384                     __ptext46:
 13551                           	opt callstack 0
 13552  004384                     _frontsensor:
 13553                           	opt callstack 28
 13554                           
 13555                           ;main.c: 698:     int front;;main.c: 700:     TMR1H = 0;
 13556                           
 13557                           ;incstack = 0
 13558  004384  0E00               	movlw	0
 13559  004386  6ECF               	movwf	4047,c	;volatile
 13560                           
 13561                           ;main.c: 701:     TMR1L = 0;
 13562  004388  0E00               	movlw	0
 13563  00438A  6ECE               	movwf	4046,c	;volatile
 13564                           
 13565                           ;main.c: 703:     LATCbits.LATC1 = 1;
 13566  00438C  828B               	bsf	3979,1,c	;volatile
 13567                           
 13568                           ;main.c: 704:     _delay((unsigned long)((10)*(10000000/4000000.0)));
 13569  00438E  0E08               	movlw	8
 13570  004390                     u12597:
 13571  004390  2EE8               	decfsz	wreg,f,c
 13572  004392  D7FE               	bra	u12597
 13573  004394  F000               	nop	
 13574                           
 13575                           ;main.c: 705:     LATCbits.LATC1 = 0;
 13576  004396  928B               	bcf	3979,1,c	;volatile
 13577  004398                     l313:
 13578  004398  A482               	btfss	3970,2,c	;volatile
 13579  00439A  D7FE               	goto	l313
 13580                           
 13581                           ;main.c: 709:     TMR1ON = 1;
 13582  00439C  80CD               	bsf	4045,0,c	;volatile
 13583                           
 13584                           ;main.c: 710:     time = 0;
 13585  00439E  0E00               	movlw	0
 13586  0043A0  6E1A               	movwf	frontsensor@time+1,c
 13587  0043A2  0E00               	movlw	0
 13588  0043A4  6E19               	movwf	frontsensor@time,c
 13589                           
 13590                           ;main.c: 712:     while(PORTCbits.RC2 == 1 && time < 1000)
 13591  0043A6  D002               	goto	l8918
 13592  0043A8                     l8916:
 13593                           
 13594                           ;main.c: 713:     {;main.c: 714:         time ++;
 13595  0043A8  4A19               	infsnz	frontsensor@time,f,c
 13596  0043AA  2A1A               	incf	frontsensor@time+1,f,c
 13597  0043AC                     l8918:
 13598                           
 13599                           ;main.c: 712:     while(PORTCbits.RC2 == 1 && time < 1000)
 13600  0043AC  A482               	btfss	3970,2,c	;volatile
 13601  0043AE  D008               	goto	u11250
 13602  0043B0  BE1A               	btfsc	frontsensor@time+1,7,c
 13603  0043B2  D7FA               	goto	l8916
 13604  0043B4  0EE8               	movlw	232
 13605  0043B6  5C19               	subwf	frontsensor@time,w,c
 13606  0043B8  0E03               	movlw	3
 13607  0043BA  581A               	subwfb	frontsensor@time+1,w,c
 13608  0043BC  A0D8               	btfss	status,0,c
 13609  0043BE  D7F4               	goto	l8916
 13610  0043C0                     u11250:
 13611                           
 13612                           ;main.c: 717:     TMR1ON = 0;
 13613  0043C0  90CD               	bcf	4045,0,c	;volatile
 13614                           
 13615                           ;main.c: 719:     front = (TMR1L | (TMR1H<<8));
 13616  0043C2  50CF               	movf	4047,w,c	;volatile
 13617  0043C4  6E16               	movwf	(??_frontsensor+1)& (0+255),c
 13618  0043C6  6A15               	clrf	??_frontsensor& (0+255),c
 13619  0043C8  50CE               	movf	4046,w,c	;volatile
 13620  0043CA  6E17               	movwf	(??_frontsensor+2)& (0+255),c
 13621  0043CC  6A18               	clrf	(??_frontsensor+3)& (0+255),c
 13622  0043CE  5015               	movf	??_frontsensor,w,c
 13623  0043D0  1017               	iorwf	??_frontsensor+2,w,c
 13624  0043D2  6E1B               	movwf	frontsensor@front,c
 13625  0043D4  5016               	movf	??_frontsensor+1,w,c
 13626  0043D6  1018               	iorwf	??_frontsensor+3,w,c
 13627  0043D8  6E1C               	movwf	frontsensor@front+1,c
 13628                           
 13629                           ;main.c: 720:     front = front/155;
 13630  0043DA  C01B  F00B         	movff	frontsensor@front,___awdiv@dividend
 13631  0043DE  C01C  F00C         	movff	frontsensor@front+1,___awdiv@dividend+1
 13632  0043E2  0E00               	movlw	0
 13633  0043E4  6E0E               	movwf	___awdiv@divisor+1,c
 13634  0043E6  0E9B               	movlw	155
 13635  0043E8  6E0D               	movwf	___awdiv@divisor,c
 13636  0043EA  EC3F  F021         	call	___awdiv	;wreg free
 13637  0043EE  C00B  F01B         	movff	?___awdiv,frontsensor@front
 13638  0043F2  C00C  F01C         	movff	?___awdiv+1,frontsensor@front+1
 13639                           
 13640                           ;main.c: 722:     return front;
 13641  0043F6  C01B  F013         	movff	frontsensor@front,?_frontsensor
 13642  0043FA  C01C  F014         	movff	frontsensor@front+1,?_frontsensor+1
 13643  0043FE  0012               	return		;funcret
 13644  004400                     __end_of_frontsensor:
 13645                           	opt callstack 0
 13646                           
 13647 ;; *************** function ___awdiv *****************
 13648 ;; Defined at:
 13649 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
 13650 ;; Parameters:    Size  Location     Type
 13651 ;;  dividend        2   10[COMRAM] int 
 13652 ;;  divisor         2   12[COMRAM] int 
 13653 ;; Auto vars:     Size  Location     Type
 13654 ;;  quotient        2   16[COMRAM] int 
 13655 ;;  sign            1   15[COMRAM] unsigned char 
 13656 ;;  counter         1   14[COMRAM] unsigned char 
 13657 ;; Return value:  Size  Location     Type
 13658 ;;                  2   10[COMRAM] int 
 13659 ;; Registers used:
 13660 ;;		wreg, status,2, status,0
 13661 ;; Tracked objects:
 13662 ;;		On entry : 0/0
 13663 ;;		On exit  : 0/0
 13664 ;;		Unchanged: 0/0
 13665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;Total ram usage:        8 bytes
 13671 ;; Hardware stack levels used:    1
 13672 ;; Hardware stack levels required when called:    1
 13673 ;; This function calls:
 13674 ;;		Nothing
 13675 ;; This function is called by:
 13676 ;;		_frontsensor
 13677 ;;		_efgtoa
 13678 ;;		_backsensor
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           	psect	text47
 13683  00427E                     __ptext47:
 13684                           	opt callstack 0
 13685  00427E                     ___awdiv:
 13686                           	opt callstack 25
 13687                           
 13688                           ;incstack = 0
 13689  00427E  0E00               	movlw	0
 13690  004280  6E10               	movwf	___awdiv@sign,c
 13691  004282  AE0E               	btfss	___awdiv@divisor+1,7,c
 13692  004284  D006               	goto	l8000
 13693  004286  6C0D               	negf	___awdiv@divisor,c
 13694  004288  1E0E               	comf	___awdiv@divisor+1,f,c
 13695  00428A  B0D8               	btfsc	status,0,c
 13696  00428C  2A0E               	incf	___awdiv@divisor+1,f,c
 13697  00428E  0E01               	movlw	1
 13698  004290  6E10               	movwf	___awdiv@sign,c
 13699  004292                     l8000:
 13700  004292  AE0C               	btfss	___awdiv@dividend+1,7,c
 13701  004294  D006               	goto	l8006
 13702  004296  6C0B               	negf	___awdiv@dividend,c
 13703  004298  1E0C               	comf	___awdiv@dividend+1,f,c
 13704  00429A  B0D8               	btfsc	status,0,c
 13705  00429C  2A0C               	incf	___awdiv@dividend+1,f,c
 13706  00429E  0E01               	movlw	1
 13707  0042A0  1A10               	xorwf	___awdiv@sign,f,c
 13708  0042A2                     l8006:
 13709  0042A2  0E00               	movlw	0
 13710  0042A4  6E12               	movwf	___awdiv@quotient+1,c
 13711  0042A6  0E00               	movlw	0
 13712  0042A8  6E11               	movwf	___awdiv@quotient,c
 13713  0042AA  500D               	movf	___awdiv@divisor,w,c
 13714  0042AC  100E               	iorwf	___awdiv@divisor+1,w,c
 13715  0042AE  B4D8               	btfsc	status,2,c
 13716  0042B0  D01C               	goto	l8028
 13717  0042B2  0E01               	movlw	1
 13718  0042B4  6E0F               	movwf	___awdiv@counter,c
 13719  0042B6  D004               	goto	l8014
 13720  0042B8                     l8012:
 13721  0042B8  90D8               	bcf	status,0,c
 13722  0042BA  360D               	rlcf	___awdiv@divisor,f,c
 13723  0042BC  360E               	rlcf	___awdiv@divisor+1,f,c
 13724  0042BE  2A0F               	incf	___awdiv@counter,f,c
 13725  0042C0                     l8014:
 13726  0042C0  AE0E               	btfss	___awdiv@divisor+1,7,c
 13727  0042C2  D7FA               	goto	l8012
 13728  0042C4                     u9710:
 13729  0042C4  90D8               	bcf	status,0,c
 13730  0042C6  3611               	rlcf	___awdiv@quotient,f,c
 13731  0042C8  3612               	rlcf	___awdiv@quotient+1,f,c
 13732  0042CA  500D               	movf	___awdiv@divisor,w,c
 13733  0042CC  5C0B               	subwf	___awdiv@dividend,w,c
 13734  0042CE  500E               	movf	___awdiv@divisor+1,w,c
 13735  0042D0  580C               	subwfb	___awdiv@dividend+1,w,c
 13736  0042D2  A0D8               	btfss	status,0,c
 13737  0042D4  D005               	goto	l8024
 13738  0042D6  500D               	movf	___awdiv@divisor,w,c
 13739  0042D8  5E0B               	subwf	___awdiv@dividend,f,c
 13740  0042DA  500E               	movf	___awdiv@divisor+1,w,c
 13741  0042DC  5A0C               	subwfb	___awdiv@dividend+1,f,c
 13742  0042DE  8011               	bsf	___awdiv@quotient,0,c
 13743  0042E0                     l8024:
 13744  0042E0  90D8               	bcf	status,0,c
 13745  0042E2  320E               	rrcf	___awdiv@divisor+1,f,c
 13746  0042E4  320D               	rrcf	___awdiv@divisor,f,c
 13747  0042E6  2E0F               	decfsz	___awdiv@counter,f,c
 13748  0042E8  D7ED               	goto	u9710
 13749  0042EA                     l8028:
 13750  0042EA  5010               	movf	___awdiv@sign,w,c
 13751  0042EC  B4D8               	btfsc	status,2,c
 13752  0042EE  D004               	goto	l8032
 13753  0042F0  6C11               	negf	___awdiv@quotient,c
 13754  0042F2  1E12               	comf	___awdiv@quotient+1,f,c
 13755  0042F4  B0D8               	btfsc	status,0,c
 13756  0042F6  2A12               	incf	___awdiv@quotient+1,f,c
 13757  0042F8                     l8032:
 13758  0042F8  C011  F00B         	movff	___awdiv@quotient,?___awdiv
 13759  0042FC  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
 13760  004300  0012               	return		;funcret
 13761  004302                     __end_of___awdiv:
 13762                           	opt callstack 0
 13763                           
 13764 ;; *************** function _forward *****************
 13765 ;; Defined at:
 13766 ;;		line 628 in file "main.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;		None
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;		None
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  1    wreg      void 
 13773 ;; Registers used:
 13774 ;;		wreg
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;Total ram usage:        1 bytes
 13785 ;; Hardware stack levels used:    1
 13786 ;; Hardware stack levels required when called:    1
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_main
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text48
 13795  00499C                     __ptext48:
 13796                           	opt callstack 0
 13797  00499C                     _forward:
 13798                           	opt callstack 29
 13799                           
 13800                           ;main.c: 630:     LATBbits.LATB2 = 1 ;
 13801                           
 13802                           ;incstack = 0
 13803  00499C  848A               	bsf	3978,2,c	;volatile
 13804                           
 13805                           ;main.c: 631:     LATBbits.LATB3 = 1 ;
 13806  00499E  868A               	bsf	3978,3,c	;volatile
 13807                           
 13808                           ;main.c: 632:     _delay((unsigned long)((1300)*(10000000/4000000.0)));
 13809  0049A0  0E05               	movlw	5
 13810  0049A2  6E0B               	movwf	??_forward& (0+255),c
 13811  0049A4  0E37               	movlw	55
 13812  0049A6                     u12607:
 13813  0049A6  2EE8               	decfsz	wreg,f,c
 13814  0049A8  D7FE               	bra	u12607
 13815  0049AA  2E0B               	decfsz	??_forward& (0+255),f,c
 13816  0049AC  D7FC               	bra	u12607
 13817  0049AE  F000               	nop	
 13818                           
 13819                           ;main.c: 633:     LATBbits.LATB2 = 0 ;
 13820  0049B0  948A               	bcf	3978,2,c	;volatile
 13821                           
 13822                           ;main.c: 634:     _delay((unsigned long)((400)*(10000000/4000000.0)));
 13823  0049B2  0EC8               	movlw	200
 13824  0049B4                     u12617:
 13825  0049B4  D000               	nop2	
 13826  0049B6  2EE8               	decfsz	wreg,f,c
 13827  0049B8  D7FD               	bra	u12617
 13828                           
 13829                           ;main.c: 635:     LATBbits.LATB3 = 0 ;
 13830  0049BA  968A               	bcf	3978,3,c	;volatile
 13831                           
 13832                           ;main.c: 636:     _delay((unsigned long)((1000)*(10000000/4000000.0)));
 13833  0049BC  0E04               	movlw	4
 13834  0049BE  6E0B               	movwf	??_forward& (0+255),c
 13835  0049C0  0E3E               	movlw	62
 13836  0049C2                     u12627:
 13837  0049C2  2EE8               	decfsz	wreg,f,c
 13838  0049C4  D7FE               	bra	u12627
 13839  0049C6  2E0B               	decfsz	??_forward& (0+255),f,c
 13840  0049C8  D7FC               	bra	u12627
 13841  0049CA  0012               	return		;funcret
 13842  0049CC                     __end_of_forward:
 13843                           	opt callstack 0
 13844                           
 13845 ;; *************** function _backright *****************
 13846 ;; Defined at:
 13847 ;;		line 685 in file "main.c"
 13848 ;; Parameters:    Size  Location     Type
 13849 ;;		None
 13850 ;; Auto vars:     Size  Location     Type
 13851 ;;		None
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  1    wreg      void 
 13854 ;; Registers used:
 13855 ;;		wreg
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13865 ;;Total ram usage:        1 bytes
 13866 ;; Hardware stack levels used:    1
 13867 ;; Hardware stack levels required when called:    1
 13868 ;; This function calls:
 13869 ;;		Nothing
 13870 ;; This function is called by:
 13871 ;;		_main
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text49
 13876  004B14                     __ptext49:
 13877                           	opt callstack 0
 13878  004B14                     _backright:
 13879                           	opt callstack 29
 13880                           
 13881                           ;main.c: 687:     LATBbits.LATB2 = 1 ;
 13882                           
 13883                           ;incstack = 0
 13884  004B14  848A               	bsf	3978,2,c	;volatile
 13885                           
 13886                           ;main.c: 688:     _delay((unsigned long)((1750)*(10000000/4000000.0)));
 13887  004B16  0E06               	movlw	6
 13888  004B18  6E0B               	movwf	??_backright& (0+255),c
 13889  004B1A  0EAD               	movlw	173
 13890  004B1C                     u12637:
 13891  004B1C  2EE8               	decfsz	wreg,f,c
 13892  004B1E  D7FE               	bra	u12637
 13893  004B20  2E0B               	decfsz	??_backright& (0+255),f,c
 13894  004B22  D7FC               	bra	u12637
 13895  004B24  D000               	nop2	
 13896                           
 13897                           ;main.c: 689:     LATBbits.LATB2 = 0 ;
 13898  004B26  948A               	bcf	3978,2,c	;volatile
 13899                           
 13900                           ;main.c: 690:     _delay((unsigned long)((1000)*(10000000/4000000.0)));
 13901  004B28  0E04               	movlw	4
 13902  004B2A  6E0B               	movwf	??_backright& (0+255),c
 13903  004B2C  0E3E               	movlw	62
 13904  004B2E                     u12647:
 13905  004B2E  2EE8               	decfsz	wreg,f,c
 13906  004B30  D7FE               	bra	u12647
 13907  004B32  2E0B               	decfsz	??_backright& (0+255),f,c
 13908  004B34  D7FC               	bra	u12647
 13909  004B36  0012               	return		;funcret
 13910  004B38                     __end_of_backright:
 13911                           	opt callstack 0
 13912                           
 13913 ;; *************** function _backleft *****************
 13914 ;; Defined at:
 13915 ;;		line 675 in file "main.c"
 13916 ;; Parameters:    Size  Location     Type
 13917 ;;		None
 13918 ;; Auto vars:     Size  Location     Type
 13919 ;;		None
 13920 ;; Return value:  Size  Location     Type
 13921 ;;                  1    wreg      void 
 13922 ;; Registers used:
 13923 ;;		wreg
 13924 ;; Tracked objects:
 13925 ;;		On entry : 0/0
 13926 ;;		On exit  : 0/0
 13927 ;;		Unchanged: 0/0
 13928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13933 ;;Total ram usage:        1 bytes
 13934 ;; Hardware stack levels used:    1
 13935 ;; Hardware stack levels required when called:    1
 13936 ;; This function calls:
 13937 ;;		Nothing
 13938 ;; This function is called by:
 13939 ;;		_main
 13940 ;; This function uses a non-reentrant model
 13941 ;;
 13942                           
 13943                           	psect	text50
 13944  004B38                     __ptext50:
 13945                           	opt callstack 0
 13946  004B38                     _backleft:
 13947                           	opt callstack 29
 13948                           
 13949                           ;main.c: 677:     LATBbits.LATB3 = 1 ;
 13950                           
 13951                           ;incstack = 0
 13952  004B38  868A               	bsf	3978,3,c	;volatile
 13953                           
 13954                           ;main.c: 678:     _delay((unsigned long)((1100)*(10000000/4000000.0)));
 13955  004B3A  0E04               	movlw	4
 13956  004B3C  6E0B               	movwf	??_backleft& (0+255),c
 13957  004B3E  0E91               	movlw	145
 13958  004B40                     u12657:
 13959  004B40  2EE8               	decfsz	wreg,f,c
 13960  004B42  D7FE               	bra	u12657
 13961  004B44  2E0B               	decfsz	??_backleft& (0+255),f,c
 13962  004B46  D7FC               	bra	u12657
 13963  004B48  F000               	nop	
 13964                           
 13965                           ;main.c: 679:     LATBbits.LATB3 = 0 ;
 13966  004B4A  968A               	bcf	3978,3,c	;volatile
 13967                           
 13968                           ;main.c: 680:     _delay((unsigned long)((1000)*(10000000/4000000.0)));
 13969  004B4C  0E04               	movlw	4
 13970  004B4E  6E0B               	movwf	??_backleft& (0+255),c
 13971  004B50  0E3E               	movlw	62
 13972  004B52                     u12667:
 13973  004B52  2EE8               	decfsz	wreg,f,c
 13974  004B54  D7FE               	bra	u12667
 13975  004B56  2E0B               	decfsz	??_backleft& (0+255),f,c
 13976  004B58  D7FC               	bra	u12667
 13977  004B5A  0012               	return		;funcret
 13978  004B5C                     __end_of_backleft:
 13979                           	opt callstack 0
 13980                           
 13981 ;; *************** function _backdrive *****************
 13982 ;; Defined at:
 13983 ;;		line 661 in file "main.c"
 13984 ;; Parameters:    Size  Location     Type
 13985 ;;		None
 13986 ;; Auto vars:     Size  Location     Type
 13987 ;;		None
 13988 ;; Return value:  Size  Location     Type
 13989 ;;                  1    wreg      void 
 13990 ;; Registers used:
 13991 ;;		wreg
 13992 ;; Tracked objects:
 13993 ;;		On entry : 0/0
 13994 ;;		On exit  : 0/0
 13995 ;;		Unchanged: 0/0
 13996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14001 ;;Total ram usage:        1 bytes
 14002 ;; Hardware stack levels used:    1
 14003 ;; Hardware stack levels required when called:    1
 14004 ;; This function calls:
 14005 ;;		Nothing
 14006 ;; This function is called by:
 14007 ;;		_main
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text51
 14012  0049CC                     __ptext51:
 14013                           	opt callstack 0
 14014  0049CC                     _backdrive:
 14015                           	opt callstack 29
 14016                           
 14017                           ;main.c: 663:     LATBbits.LATB2 = 1 ;
 14018                           
 14019                           ;incstack = 0
 14020  0049CC  848A               	bsf	3978,2,c	;volatile
 14021                           
 14022                           ;main.c: 664:     LATBbits.LATB3 = 1 ;
 14023  0049CE  868A               	bsf	3978,3,c	;volatile
 14024                           
 14025                           ;main.c: 665:     _delay((unsigned long)((1200)*(10000000/4000000.0)));
 14026  0049D0  0E04               	movlw	4
 14027  0049D2  6E0B               	movwf	??_backdrive& (0+255),c
 14028  0049D4  0EE4               	movlw	228
 14029  0049D6                     u12677:
 14030  0049D6  2EE8               	decfsz	wreg,f,c
 14031  0049D8  D7FE               	bra	u12677
 14032  0049DA  2E0B               	decfsz	??_backdrive& (0+255),f,c
 14033  0049DC  D7FC               	bra	u12677
 14034  0049DE  D000               	nop2	
 14035                           
 14036                           ;main.c: 666:     LATBbits.LATB3 = 0 ;
 14037  0049E0  968A               	bcf	3978,3,c	;volatile
 14038                           
 14039                           ;main.c: 667:     _delay((unsigned long)((400)*(10000000/4000000.0)));
 14040  0049E2  0EC8               	movlw	200
 14041  0049E4                     u12687:
 14042  0049E4  D000               	nop2	
 14043  0049E6  2EE8               	decfsz	wreg,f,c
 14044  0049E8  D7FD               	bra	u12687
 14045                           
 14046                           ;main.c: 668:     LATBbits.LATB2 = 0 ;
 14047  0049EA  948A               	bcf	3978,2,c	;volatile
 14048                           
 14049                           ;main.c: 669:     _delay((unsigned long)((1000)*(10000000/4000000.0)));
 14050  0049EC  0E04               	movlw	4
 14051  0049EE  6E0B               	movwf	??_backdrive& (0+255),c
 14052  0049F0  0E3E               	movlw	62
 14053  0049F2                     u12697:
 14054  0049F2  2EE8               	decfsz	wreg,f,c
 14055  0049F4  D7FE               	bra	u12697
 14056  0049F6  2E0B               	decfsz	??_backdrive& (0+255),f,c
 14057  0049F8  D7FC               	bra	u12697
 14058  0049FA  0012               	return		;funcret
 14059  0049FC                     __end_of_backdrive:
 14060                           	opt callstack 0
 14061                           
 14062 ;; *************** function _I2C_Master_Write *****************
 14063 ;; Defined at:
 14064 ;;		line 70 in file "I2C.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;  byteToWrite     2   11[COMRAM] unsigned int 
 14067 ;; Auto vars:     Size  Location     Type
 14068 ;;		None
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  1    wreg      void 
 14071 ;; Registers used:
 14072 ;;		wreg, status,2, status,0, cstack
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14082 ;;Total ram usage:        2 bytes
 14083 ;; Hardware stack levels used:    1
 14084 ;; Hardware stack levels required when called:    2
 14085 ;; This function calls:
 14086 ;;		_I2C_Master_Wait
 14087 ;; This function is called by:
 14088 ;;		_main
 14089 ;; This function uses a non-reentrant model
 14090 ;;
 14091                           
 14092                           	psect	text52
 14093  004BE6                     __ptext52:
 14094                           	opt callstack 0
 14095  004BE6                     _I2C_Master_Write:
 14096                           	opt callstack 28
 14097                           
 14098                           ;I2C.c: 71:     I2C_Master_Wait();
 14099                           
 14100                           ;incstack = 0
 14101  004BE6  ECDE  F025         	call	_I2C_Master_Wait	;wreg free
 14102                           
 14103                           ;I2C.c: 74:     SSPBUF = byteToWrite;
 14104  004BEA  C00C  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 14105  004BEE  0012               	return		;funcret
 14106  004BF0                     __end_of_I2C_Master_Write:
 14107                           	opt callstack 0
 14108                           
 14109 ;; *************** function _I2C_Master_Stop *****************
 14110 ;; Defined at:
 14111 ;;		line 65 in file "I2C.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;		None
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  1    wreg      void 
 14118 ;; Registers used:
 14119 ;;		wreg, status,2, status,0, cstack
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;Total ram usage:        0 bytes
 14130 ;; Hardware stack levels used:    1
 14131 ;; Hardware stack levels required when called:    2
 14132 ;; This function calls:
 14133 ;;		_I2C_Master_Wait
 14134 ;; This function is called by:
 14135 ;;		_main
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text53
 14140  004BF0                     __ptext53:
 14141                           	opt callstack 0
 14142  004BF0                     _I2C_Master_Stop:
 14143                           	opt callstack 28
 14144                           
 14145                           ;I2C.c: 66:     I2C_Master_Wait();
 14146                           
 14147                           ;incstack = 0
 14148  004BF0  ECDE  F025         	call	_I2C_Master_Wait	;wreg free
 14149                           
 14150                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
 14151  004BF4  84C5               	bsf	4037,2,c	;volatile
 14152  004BF6  0012               	return		;funcret
 14153  004BF8                     __end_of_I2C_Master_Stop:
 14154                           	opt callstack 0
 14155                           
 14156 ;; *************** function _I2C_Master_Start *****************
 14157 ;; Defined at:
 14158 ;;		line 55 in file "I2C.c"
 14159 ;; Parameters:    Size  Location     Type
 14160 ;;		None
 14161 ;; Auto vars:     Size  Location     Type
 14162 ;;		None
 14163 ;; Return value:  Size  Location     Type
 14164 ;;                  1    wreg      void 
 14165 ;; Registers used:
 14166 ;;		wreg, status,2, status,0, cstack
 14167 ;; Tracked objects:
 14168 ;;		On entry : 0/0
 14169 ;;		On exit  : 0/0
 14170 ;;		Unchanged: 0/0
 14171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14176 ;;Total ram usage:        0 bytes
 14177 ;; Hardware stack levels used:    1
 14178 ;; Hardware stack levels required when called:    2
 14179 ;; This function calls:
 14180 ;;		_I2C_Master_Wait
 14181 ;; This function is called by:
 14182 ;;		_main
 14183 ;; This function uses a non-reentrant model
 14184 ;;
 14185                           
 14186                           	psect	text54
 14187  004BF8                     __ptext54:
 14188                           	opt callstack 0
 14189  004BF8                     _I2C_Master_Start:
 14190                           	opt callstack 28
 14191                           
 14192                           ;I2C.c: 56:     I2C_Master_Wait();
 14193                           
 14194                           ;incstack = 0
 14195  004BF8  ECDE  F025         	call	_I2C_Master_Wait	;wreg free
 14196                           
 14197                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
 14198  004BFC  80C5               	bsf	4037,0,c	;volatile
 14199  004BFE  0012               	return		;funcret
 14200  004C00                     __end_of_I2C_Master_Start:
 14201                           	opt callstack 0
 14202                           
 14203 ;; *************** function _I2C_Master_Read *****************
 14204 ;; Defined at:
 14205 ;;		line 77 in file "I2C.c"
 14206 ;; Parameters:    Size  Location     Type
 14207 ;;  ackBit          1    wreg     unsigned char 
 14208 ;; Auto vars:     Size  Location     Type
 14209 ;;  ackBit          1   11[COMRAM] unsigned char 
 14210 ;;  receivedByte    1   12[COMRAM] unsigned char 
 14211 ;; Return value:  Size  Location     Type
 14212 ;;                  1    wreg      unsigned char 
 14213 ;; Registers used:
 14214 ;;		wreg, status,2, status,0, cstack
 14215 ;; Tracked objects:
 14216 ;;		On entry : 0/0
 14217 ;;		On exit  : 0/0
 14218 ;;		Unchanged: 0/0
 14219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14224 ;;Total ram usage:        2 bytes
 14225 ;; Hardware stack levels used:    1
 14226 ;; Hardware stack levels required when called:    2
 14227 ;; This function calls:
 14228 ;;		_I2C_Master_Wait
 14229 ;; This function is called by:
 14230 ;;		_main
 14231 ;; This function uses a non-reentrant model
 14232 ;;
 14233                           
 14234                           	psect	text55
 14235  004B5C                     __ptext55:
 14236                           	opt callstack 0
 14237  004B5C                     _I2C_Master_Read:
 14238                           	opt callstack 28
 14239                           
 14240                           ;incstack = 0
 14241                           ;I2C_Master_Read@ackBit stored from wreg
 14242  004B5C  6E0C               	movwf	I2C_Master_Read@ackBit,c
 14243                           
 14244                           ;I2C.c: 78:     I2C_Master_Wait();
 14245  004B5E  ECDE  F025         	call	_I2C_Master_Wait	;wreg free
 14246                           
 14247                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
 14248  004B62  86C5               	bsf	4037,3,c	;volatile
 14249                           
 14250                           ;I2C.c: 81:     I2C_Master_Wait();
 14251  004B64  ECDE  F025         	call	_I2C_Master_Wait	;wreg free
 14252                           
 14253                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
 14254  004B68  CFC9 F00D          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 14255                           
 14256                           ;I2C.c: 86:     I2C_Master_Wait();
 14257  004B6C  ECDE  F025         	call	_I2C_Master_Wait	;wreg free
 14258                           
 14259                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
 14260  004B70  B00C               	btfsc	I2C_Master_Read@ackBit,0,c
 14261  004B72  D002               	bra	u7305
 14262  004B74  9AC5               	bcf	4037,5,c	;volatile
 14263  004B76  D001               	bra	u7306
 14264  004B78                     u7305:
 14265  004B78  8AC5               	bsf	4037,5,c	;volatile
 14266  004B7A                     u7306:
 14267                           
 14268                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
 14269  004B7A  88C5               	bsf	4037,4,c	;volatile
 14270                           
 14271                           ;I2C.c: 90:     return receivedByte;
 14272  004B7C  500D               	movf	I2C_Master_Read@receivedByte,w,c
 14273  004B7E  0012               	return		;funcret
 14274  004B80                     __end_of_I2C_Master_Read:
 14275                           	opt callstack 0
 14276                           
 14277 ;; *************** function _I2C_Master_Wait *****************
 14278 ;; Defined at:
 14279 ;;		line 21 in file "I2C.c"
 14280 ;; Parameters:    Size  Location     Type
 14281 ;;		None
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;		None
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  1    wreg      void 
 14286 ;; Registers used:
 14287 ;;		wreg, status,2, status,0
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14297 ;;Total ram usage:        1 bytes
 14298 ;; Hardware stack levels used:    1
 14299 ;; Hardware stack levels required when called:    1
 14300 ;; This function calls:
 14301 ;;		Nothing
 14302 ;; This function is called by:
 14303 ;;		_I2C_Master_Start
 14304 ;;		_I2C_Master_Stop
 14305 ;;		_I2C_Master_Write
 14306 ;;		_I2C_Master_Read
 14307 ;;		_I2C_Master_RepeatedStart
 14308 ;; This function uses a non-reentrant model
 14309 ;;
 14310                           
 14311                           	psect	text56
 14312  004BBC                     __ptext56:
 14313                           	opt callstack 0
 14314  004BBC                     _I2C_Master_Wait:
 14315                           	opt callstack 28
 14316                           
 14317                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 14318                           
 14319                           ;I2C.c: 28:     }
 14320                           
 14321                           ;incstack = 0
 14322  004BBC  B4C7               	btfsc	4039,2,c	;volatile
 14323  004BBE  D7FE               	goto	_I2C_Master_Wait
 14324  004BC0  CFC5 F00B          	movff	4037,??_I2C_Master_Wait	;volatile
 14325  004BC4  0E1F               	movlw	31
 14326  004BC6  160B               	andwf	??_I2C_Master_Wait,f,c
 14327  004BC8  B4D8               	btfsc	status,2,c
 14328  004BCA  0012               	return	
 14329  004BCC  D7F7               	goto	_I2C_Master_Wait
 14330  004BCE                     __end_of_I2C_Master_Wait:
 14331                           	opt callstack 0
 14332                           
 14333 ;; *************** function _I2C_Master_Init *****************
 14334 ;; Defined at:
 14335 ;;		line 32 in file "I2C.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;  clockFreq       4   23[COMRAM] const unsigned long 
 14338 ;; Auto vars:     Size  Location     Type
 14339 ;;		None
 14340 ;; Return value:  Size  Location     Type
 14341 ;;                  1    wreg      void 
 14342 ;; Registers used:
 14343 ;;		wreg, status,2, status,0, cstack
 14344 ;; Tracked objects:
 14345 ;;		On entry : 0/0
 14346 ;;		On exit  : 0/0
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14352 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14353 ;;Total ram usage:        8 bytes
 14354 ;; Hardware stack levels used:    1
 14355 ;; Hardware stack levels required when called:    2
 14356 ;; This function calls:
 14357 ;;		___lldiv
 14358 ;; This function is called by:
 14359 ;;		_main
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           	psect	text57
 14364  004546                     __ptext57:
 14365                           	opt callstack 0
 14366  004546                     _I2C_Master_Init:
 14367                           	opt callstack 28
 14368                           
 14369                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
 14370                           
 14371                           ;incstack = 0
 14372  004546  9AC6               	bcf	4038,5,c	;volatile
 14373                           
 14374                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
 14375  004548  8694               	bsf	3988,3,c	;volatile
 14376                           
 14377                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
 14378  00454A  8894               	bsf	3988,4,c	;volatile
 14379                           
 14380                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
 14381  00454C  0E80               	movlw	128
 14382  00454E  6E0B               	movwf	___lldiv@dividend,c
 14383  004550  0E96               	movlw	150
 14384  004552  6E0C               	movwf	___lldiv@dividend+1,c
 14385  004554  0E98               	movlw	152
 14386  004556  6E0D               	movwf	___lldiv@dividend+2,c
 14387  004558  0E00               	movlw	0
 14388  00455A  6E0E               	movwf	___lldiv@dividend+3,c
 14389  00455C  C018  F01C         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 14390  004560  C019  F01D         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 14391  004564  C01A  F01E         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 14392  004568  C01B  F01F         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 14393  00456C  0E02               	movlw	2
 14394  00456E                     u7285:
 14395  00456E  90D8               	bcf	status,0,c
 14396  004570  361C               	rlcf	??_I2C_Master_Init,f,c
 14397  004572  361D               	rlcf	??_I2C_Master_Init+1,f,c
 14398  004574  361E               	rlcf	??_I2C_Master_Init+2,f,c
 14399  004576  361F               	rlcf	??_I2C_Master_Init+3,f,c
 14400  004578  2EE8               	decfsz	wreg,f,c
 14401  00457A  D7F9               	goto	u7285
 14402  00457C  C01C  F00F         	movff	??_I2C_Master_Init,___lldiv@divisor
 14403  004580  C01D  F010         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 14404  004584  C01E  F011         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 14405  004588  C01F  F012         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 14406  00458C  EC81  F021         	call	___lldiv	;wreg free
 14407  004590  040B               	decf	?___lldiv,w,c
 14408  004592  6EC8               	movwf	4040,c	;volatile
 14409                           
 14410                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
 14411  004594  0E80               	movlw	128
 14412  004596  6EC7               	movwf	4039,c	;volatile
 14413                           
 14414                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
 14415  004598  0E28               	movlw	40
 14416  00459A  6EC6               	movwf	4038,c	;volatile
 14417                           
 14418                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
 14419  00459C  0E00               	movlw	0
 14420  00459E  6EC5               	movwf	4037,c	;volatile
 14421  0045A0  0012               	return		;funcret
 14422  0045A2                     __end_of_I2C_Master_Init:
 14423                           	opt callstack 0
 14424                           
 14425 ;; *************** function ___lldiv *****************
 14426 ;; Defined at:
 14427 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  dividend        4   10[COMRAM] unsigned long 
 14430 ;;  divisor         4   14[COMRAM] unsigned long 
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;  quotient        4   18[COMRAM] unsigned long 
 14433 ;;  counter         1   22[COMRAM] unsigned char 
 14434 ;; Return value:  Size  Location     Type
 14435 ;;                  4   10[COMRAM] unsigned long 
 14436 ;; Registers used:
 14437 ;;		wreg, status,2, status,0
 14438 ;; Tracked objects:
 14439 ;;		On entry : 0/0
 14440 ;;		On exit  : 0/0
 14441 ;;		Unchanged: 0/0
 14442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14443 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14444 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14446 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14447 ;;Total ram usage:       13 bytes
 14448 ;; Hardware stack levels used:    1
 14449 ;; Hardware stack levels required when called:    1
 14450 ;; This function calls:
 14451 ;;		Nothing
 14452 ;; This function is called by:
 14453 ;;		_I2C_Master_Init
 14454 ;; This function uses a non-reentrant model
 14455 ;;
 14456                           
 14457                           	psect	text58
 14458  004302                     __ptext58:
 14459                           	opt callstack 0
 14460  004302                     ___lldiv:
 14461                           	opt callstack 28
 14462                           
 14463                           ;incstack = 0
 14464  004302  0E00               	movlw	0
 14465  004304  6E13               	movwf	___lldiv@quotient,c
 14466  004306  0E00               	movlw	0
 14467  004308  6E14               	movwf	___lldiv@quotient+1,c
 14468  00430A  0E00               	movlw	0
 14469  00430C  6E15               	movwf	___lldiv@quotient+2,c
 14470  00430E  0E00               	movlw	0
 14471  004310  6E16               	movwf	___lldiv@quotient+3,c
 14472  004312  500F               	movf	___lldiv@divisor,w,c
 14473  004314  1010               	iorwf	___lldiv@divisor+1,w,c
 14474  004316  1011               	iorwf	___lldiv@divisor+2,w,c
 14475  004318  1012               	iorwf	___lldiv@divisor+3,w,c
 14476  00431A  B4D8               	btfsc	status,2,c
 14477  00431C  D02A               	goto	l728
 14478  00431E  0E01               	movlw	1
 14479  004320  6E17               	movwf	___lldiv@counter,c
 14480  004322  D006               	goto	l6056
 14481  004324                     l6054:
 14482  004324  90D8               	bcf	status,0,c
 14483  004326  360F               	rlcf	___lldiv@divisor,f,c
 14484  004328  3610               	rlcf	___lldiv@divisor+1,f,c
 14485  00432A  3611               	rlcf	___lldiv@divisor+2,f,c
 14486  00432C  3612               	rlcf	___lldiv@divisor+3,f,c
 14487  00432E  2A17               	incf	___lldiv@counter,f,c
 14488  004330                     l6056:
 14489  004330  AE12               	btfss	___lldiv@divisor+3,7,c
 14490  004332  D7F8               	goto	l6054
 14491  004334                     u7160:
 14492  004334  90D8               	bcf	status,0,c
 14493  004336  3613               	rlcf	___lldiv@quotient,f,c
 14494  004338  3614               	rlcf	___lldiv@quotient+1,f,c
 14495  00433A  3615               	rlcf	___lldiv@quotient+2,f,c
 14496  00433C  3616               	rlcf	___lldiv@quotient+3,f,c
 14497  00433E  500F               	movf	___lldiv@divisor,w,c
 14498  004340  5C0B               	subwf	___lldiv@dividend,w,c
 14499  004342  5010               	movf	___lldiv@divisor+1,w,c
 14500  004344  580C               	subwfb	___lldiv@dividend+1,w,c
 14501  004346  5011               	movf	___lldiv@divisor+2,w,c
 14502  004348  580D               	subwfb	___lldiv@dividend+2,w,c
 14503  00434A  5012               	movf	___lldiv@divisor+3,w,c
 14504  00434C  580E               	subwfb	___lldiv@dividend+3,w,c
 14505  00434E  A0D8               	btfss	status,0,c
 14506  004350  D009               	goto	l6066
 14507  004352  500F               	movf	___lldiv@divisor,w,c
 14508  004354  5E0B               	subwf	___lldiv@dividend,f,c
 14509  004356  5010               	movf	___lldiv@divisor+1,w,c
 14510  004358  5A0C               	subwfb	___lldiv@dividend+1,f,c
 14511  00435A  5011               	movf	___lldiv@divisor+2,w,c
 14512  00435C  5A0D               	subwfb	___lldiv@dividend+2,f,c
 14513  00435E  5012               	movf	___lldiv@divisor+3,w,c
 14514  004360  5A0E               	subwfb	___lldiv@dividend+3,f,c
 14515  004362  8013               	bsf	___lldiv@quotient,0,c
 14516  004364                     l6066:
 14517  004364  90D8               	bcf	status,0,c
 14518  004366  3212               	rrcf	___lldiv@divisor+3,f,c
 14519  004368  3211               	rrcf	___lldiv@divisor+2,f,c
 14520  00436A  3210               	rrcf	___lldiv@divisor+1,f,c
 14521  00436C  320F               	rrcf	___lldiv@divisor,f,c
 14522  00436E  2E17               	decfsz	___lldiv@counter,f,c
 14523  004370  D7E1               	goto	u7160
 14524  004372                     l728:
 14525  004372  C013  F00B         	movff	___lldiv@quotient,?___lldiv
 14526  004376  C014  F00C         	movff	___lldiv@quotient+1,?___lldiv+1
 14527  00437A  C015  F00D         	movff	___lldiv@quotient+2,?___lldiv+2
 14528  00437E  C016  F00E         	movff	___lldiv@quotient+3,?___lldiv+3
 14529  004382  0012               	return		;funcret
 14530  004384                     __end_of___lldiv:
 14531                           	opt callstack 0
 14532                           
 14533 ;; *************** function _EEPROM_save *****************
 14534 ;; Defined at:
 14535 ;;		line 797 in file "main.c"
 14536 ;; Parameters:    Size  Location     Type
 14537 ;;		None
 14538 ;; Auto vars:     Size  Location     Type
 14539 ;;  loop            2   26[COMRAM] int 
 14540 ;;  loop            2   24[COMRAM] int 
 14541 ;;  loop            2   22[COMRAM] int 
 14542 ;;  shift           2   28[COMRAM] int 
 14543 ;;  temp            2   20[COMRAM] int 
 14544 ;;  x               2   18[COMRAM] int 
 14545 ;; Return value:  Size  Location     Type
 14546 ;;                  1    wreg      void 
 14547 ;; Registers used:
 14548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14549 ;; Tracked objects:
 14550 ;;		On entry : 0/0
 14551 ;;		On exit  : 0/0
 14552 ;;		Unchanged: 0/0
 14553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14555 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14557 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14558 ;;Total ram usage:       14 bytes
 14559 ;; Hardware stack levels used:    1
 14560 ;; Hardware stack levels required when called:    2
 14561 ;; This function calls:
 14562 ;;		_EEPROM_ReadByte
 14563 ;;		_EEPROM_WriteByte
 14564 ;;		___wmul
 14565 ;; This function is called by:
 14566 ;;		_main
 14567 ;; This function uses a non-reentrant model
 14568 ;;
 14569                           
 14570                           	psect	text59
 14571  003674                     __ptext59:
 14572                           	opt callstack 0
 14573  003674                     _EEPROM_save:
 14574                           	opt callstack 28
 14575                           
 14576                           ;main.c: 798:     int x;;main.c: 799:     if (EEPROM_ReadByte(0) < 32 && EEPROM_ReadByte
      +                          (0) > -1)
 14577                           
 14578                           ;incstack = 0
 14579  003674  0E00               	movlw	0
 14580  003676  ECCB  F025         	call	_EEPROM_ReadByte
 14581  00367A  6E11               	movwf	??_EEPROM_save& (0+255),c
 14582  00367C  0E20               	movlw	32
 14583  00367E  6011               	cpfslt	??_EEPROM_save,c
 14584  003680  D00B               	goto	l8936
 14585  003682  0E00               	movlw	0
 14586  003684  ECCB  F025         	call	_EEPROM_ReadByte
 14587                           
 14588                           ;main.c: 800:          x = EEPROM_ReadByte(0);
 14589  003688  0E00               	movlw	0
 14590  00368A  ECCB  F025         	call	_EEPROM_ReadByte
 14591  00368E  6E11               	movwf	??_EEPROM_save& (0+255),c
 14592  003690  5011               	movf	??_EEPROM_save,w,c
 14593  003692  6E13               	movwf	EEPROM_save@x,c
 14594  003694  6A14               	clrf	EEPROM_save@x+1,c
 14595  003696  D009               	goto	l8940
 14596  003698                     l8936:
 14597                           
 14598                           ;main.c: 802:         EEPROM_WriteByte(0,0);
 14599  003698  0E00               	movlw	0
 14600  00369A  6E0B               	movwf	EEPROM_WriteByte@eepromData,c
 14601  00369C  0E00               	movlw	0
 14602  00369E  EC6D  F024         	call	_EEPROM_WriteByte
 14603                           
 14604                           ;main.c: 803:         x = 0;
 14605  0036A2  0E00               	movlw	0
 14606  0036A4  6E14               	movwf	EEPROM_save@x+1,c
 14607  0036A6  0E00               	movlw	0
 14608  0036A8  6E13               	movwf	EEPROM_save@x,c
 14609  0036AA                     l8940:
 14610                           
 14611                           ;main.c: 805:     if (x == 31) {
 14612  0036AA  0E1F               	movlw	31
 14613  0036AC  1813               	xorwf	EEPROM_save@x,w,c
 14614  0036AE  1014               	iorwf	EEPROM_save@x+1,w,c
 14615  0036B0  A4D8               	btfss	status,2,c
 14616  0036B2  D009               	goto	l8946
 14617                           
 14618                           ;main.c: 807:         EEPROM_WriteByte(0,0);
 14619  0036B4  0E00               	movlw	0
 14620  0036B6  6E0B               	movwf	EEPROM_WriteByte@eepromData,c
 14621  0036B8  0E00               	movlw	0
 14622  0036BA  EC6D  F024         	call	_EEPROM_WriteByte
 14623                           
 14624                           ;main.c: 808:         x = 0;
 14625  0036BE  0E00               	movlw	0
 14626  0036C0  6E14               	movwf	EEPROM_save@x+1,c
 14627  0036C2  0E00               	movlw	0
 14628  0036C4  6E13               	movwf	EEPROM_save@x,c
 14629  0036C6                     l8946:
 14630                           
 14631                           ;main.c: 812:     int shift = x * 33;
 14632  0036C6  C013  F00B         	movff	EEPROM_save@x,___wmul@multiplier
 14633  0036CA  C014  F00C         	movff	EEPROM_save@x+1,___wmul@multiplier+1
 14634  0036CE  0E00               	movlw	0
 14635  0036D0  6E0E               	movwf	___wmul@multiplicand+1,c
 14636  0036D2  0E21               	movlw	33
 14637  0036D4  6E0D               	movwf	___wmul@multiplicand,c
 14638  0036D6  EC53  F025         	call	___wmul	;wreg free
 14639  0036DA  C00B  F01D         	movff	?___wmul,EEPROM_save@shift
 14640  0036DE  C00C  F01E         	movff	?___wmul+1,EEPROM_save@shift+1
 14641                           
 14642                           ;main.c: 815:     EEPROM_WriteByte((shift + 1),time);
 14643  0036E2  C108  F00B         	movff	_time,EEPROM_WriteByte@eepromData
 14644  0036E6  281D               	incf	EEPROM_save@shift,w,c
 14645  0036E8  EC6D  F024         	call	_EEPROM_WriteByte
 14646                           
 14647                           ;main.c: 816:     EEPROM_WriteByte((shift + 2),Canister);
 14648  0036EC  C106  F00B         	movff	_Canister,EEPROM_WriteByte@eepromData
 14649  0036F0  501D               	movf	EEPROM_save@shift,w,c
 14650  0036F2  0F02               	addlw	2
 14651  0036F4  EC6D  F024         	call	_EEPROM_WriteByte
 14652                           
 14653                           ;main.c: 817:     EEPROM_WriteByte((shift + 3),balls);
 14654  0036F8  C104  F00B         	movff	_balls,EEPROM_WriteByte@eepromData
 14655  0036FC  501D               	movf	EEPROM_save@shift,w,c
 14656  0036FE  0F03               	addlw	3
 14657  003700  EC6D  F024         	call	_EEPROM_WriteByte
 14658                           
 14659                           ;main.c: 820:     int temp;;main.c: 821:     for (int loop = 0; loop < 10; loop++){
 14660  003704  0E00               	movlw	0
 14661  003706  6E18               	movwf	EEPROM_save@loop+1,c
 14662  003708  0E00               	movlw	0
 14663  00370A  6E17               	movwf	EEPROM_save@loop,c
 14664  00370C                     l8960:
 14665                           
 14666                           ;main.c: 822:         temp = shift + 4 + loop;
 14667  00370C  5017               	movf	EEPROM_save@loop,w,c
 14668  00370E  241D               	addwf	EEPROM_save@shift,w,c
 14669  003710  6E11               	movwf	??_EEPROM_save& (0+255),c
 14670  003712  5018               	movf	EEPROM_save@loop+1,w,c
 14671  003714  201E               	addwfc	EEPROM_save@shift+1,w,c
 14672  003716  6E12               	movwf	(??_EEPROM_save+1)& (0+255),c
 14673  003718  0E04               	movlw	4
 14674  00371A  2411               	addwf	??_EEPROM_save,w,c
 14675  00371C  6E15               	movwf	EEPROM_save@temp,c
 14676  00371E  0E00               	movlw	0
 14677  003720  2012               	addwfc	??_EEPROM_save+1,w,c
 14678  003722  6E16               	movwf	EEPROM_save@temp+1,c
 14679                           
 14680                           ;main.c: 823:         EEPROM_WriteByte(temp , State[loop]);
 14681  003724  90D8               	bcf	status,0,c
 14682  003726  3417               	rlcf	EEPROM_save@loop,w,c
 14683  003728  6ED9               	movwf	fsr2l,c
 14684  00372A  3418               	rlcf	EEPROM_save@loop+1,w,c
 14685  00372C  6EDA               	movwf	fsr2h,c
 14686  00372E  0EC8               	movlw	low _State
 14687  003730  26D9               	addwf	fsr2l,f,c
 14688  003732  0E01               	movlw	high _State
 14689  003734  22DA               	addwfc	fsr2h,f,c
 14690  003736  50DF               	movf	indf2,w,c
 14691  003738  6E0B               	movwf	EEPROM_WriteByte@eepromData,c
 14692  00373A  5015               	movf	EEPROM_save@temp,w,c
 14693  00373C  EC6D  F024         	call	_EEPROM_WriteByte
 14694                           
 14695                           ;main.c: 824:     }
 14696  003740  4A17               	infsnz	EEPROM_save@loop,f,c
 14697  003742  2A18               	incf	EEPROM_save@loop+1,f,c
 14698  003744  BE18               	btfsc	EEPROM_save@loop+1,7,c
 14699  003746  D7E2               	goto	l8960
 14700  003748  5018               	movf	EEPROM_save@loop+1,w,c
 14701  00374A  E104               	bnz	u11280
 14702  00374C  0E0A               	movlw	10
 14703  00374E  5C17               	subwf	EEPROM_save@loop,w,c
 14704  003750  A0D8               	btfss	status,0,c
 14705  003752  D7DC               	goto	l8960
 14706  003754                     u11280:
 14707                           
 14708                           ;main.c: 826:     for (int loop = 0; loop < 10; loop++){
 14709  003754  0E00               	movlw	0
 14710  003756  6E1A               	movwf	EEPROM_save@loop_1106+1,c
 14711  003758  0E00               	movlw	0
 14712  00375A  6E19               	movwf	EEPROM_save@loop_1106,c
 14713  00375C                     l8974:
 14714                           
 14715                           ;main.c: 827:         temp = shift + 14 + loop;
 14716  00375C  5019               	movf	EEPROM_save@loop_1106,w,c
 14717  00375E  241D               	addwf	EEPROM_save@shift,w,c
 14718  003760  6E11               	movwf	??_EEPROM_save& (0+255),c
 14719  003762  501A               	movf	EEPROM_save@loop_1106+1,w,c
 14720  003764  201E               	addwfc	EEPROM_save@shift+1,w,c
 14721  003766  6E12               	movwf	(??_EEPROM_save+1)& (0+255),c
 14722  003768  0E0E               	movlw	14
 14723  00376A  2411               	addwf	??_EEPROM_save,w,c
 14724  00376C  6E15               	movwf	EEPROM_save@temp,c
 14725  00376E  0E00               	movlw	0
 14726  003770  2012               	addwfc	??_EEPROM_save+1,w,c
 14727  003772  6E16               	movwf	EEPROM_save@temp+1,c
 14728                           
 14729                           ;main.c: 828:         EEPROM_WriteByte(temp, DistanceCanister[loop]);
 14730  003774  90D8               	bcf	status,0,c
 14731  003776  3419               	rlcf	EEPROM_save@loop_1106,w,c
 14732  003778  6ED9               	movwf	fsr2l,c
 14733  00377A  341A               	rlcf	EEPROM_save@loop_1106+1,w,c
 14734  00377C  6EDA               	movwf	fsr2h,c
 14735  00377E  0EB4               	movlw	low _DistanceCanister
 14736  003780  26D9               	addwf	fsr2l,f,c
 14737  003782  0E01               	movlw	high _DistanceCanister
 14738  003784  22DA               	addwfc	fsr2h,f,c
 14739  003786  50DF               	movf	indf2,w,c
 14740  003788  6E0B               	movwf	EEPROM_WriteByte@eepromData,c
 14741  00378A  5015               	movf	EEPROM_save@temp,w,c
 14742  00378C  EC6D  F024         	call	_EEPROM_WriteByte
 14743                           
 14744                           ;main.c: 829:     }
 14745  003790  4A19               	infsnz	EEPROM_save@loop_1106,f,c
 14746  003792  2A1A               	incf	EEPROM_save@loop_1106+1,f,c
 14747  003794  BE1A               	btfsc	EEPROM_save@loop_1106+1,7,c
 14748  003796  D7E2               	goto	l8974
 14749  003798  501A               	movf	EEPROM_save@loop_1106+1,w,c
 14750  00379A  E104               	bnz	u11290
 14751  00379C  0E0A               	movlw	10
 14752  00379E  5C19               	subwf	EEPROM_save@loop_1106,w,c
 14753  0037A0  A0D8               	btfss	status,0,c
 14754  0037A2  D7DC               	goto	l8974
 14755  0037A4                     u11290:
 14756                           
 14757                           ;main.c: 831:     for (int loop = 0; loop < 10; loop++){
 14758  0037A4  0E00               	movlw	0
 14759  0037A6  6E1C               	movwf	EEPROM_save@loop_1107+1,c
 14760  0037A8  0E00               	movlw	0
 14761  0037AA  6E1B               	movwf	EEPROM_save@loop_1107,c
 14762  0037AC                     l8988:
 14763                           
 14764                           ;main.c: 832:         temp = shift + 24 + loop;
 14765  0037AC  501B               	movf	EEPROM_save@loop_1107,w,c
 14766  0037AE  241D               	addwf	EEPROM_save@shift,w,c
 14767  0037B0  6E11               	movwf	??_EEPROM_save& (0+255),c
 14768  0037B2  501C               	movf	EEPROM_save@loop_1107+1,w,c
 14769  0037B4  201E               	addwfc	EEPROM_save@shift+1,w,c
 14770  0037B6  6E12               	movwf	(??_EEPROM_save+1)& (0+255),c
 14771  0037B8  0E18               	movlw	24
 14772  0037BA  2411               	addwf	??_EEPROM_save,w,c
 14773  0037BC  6E15               	movwf	EEPROM_save@temp,c
 14774  0037BE  0E00               	movlw	0
 14775  0037C0  2012               	addwfc	??_EEPROM_save+1,w,c
 14776  0037C2  6E16               	movwf	EEPROM_save@temp+1,c
 14777                           
 14778                           ;main.c: 833:         EEPROM_WriteByte(temp, BallDispensed[loop]);
 14779  0037C4  90D8               	bcf	status,0,c
 14780  0037C6  341B               	rlcf	EEPROM_save@loop_1107,w,c
 14781  0037C8  6ED9               	movwf	fsr2l,c
 14782  0037CA  341C               	rlcf	EEPROM_save@loop_1107+1,w,c
 14783  0037CC  6EDA               	movwf	fsr2h,c
 14784  0037CE  0EA0               	movlw	low _BallDispensed
 14785  0037D0  26D9               	addwf	fsr2l,f,c
 14786  0037D2  0E01               	movlw	high _BallDispensed
 14787  0037D4  22DA               	addwfc	fsr2h,f,c
 14788  0037D6  50DF               	movf	indf2,w,c
 14789  0037D8  6E0B               	movwf	EEPROM_WriteByte@eepromData,c
 14790  0037DA  5015               	movf	EEPROM_save@temp,w,c
 14791  0037DC  EC6D  F024         	call	_EEPROM_WriteByte
 14792                           
 14793                           ;main.c: 834:     }
 14794  0037E0  4A1B               	infsnz	EEPROM_save@loop_1107,f,c
 14795  0037E2  2A1C               	incf	EEPROM_save@loop_1107+1,f,c
 14796  0037E4  BE1C               	btfsc	EEPROM_save@loop_1107+1,7,c
 14797  0037E6  D7E2               	goto	l8988
 14798  0037E8  501C               	movf	EEPROM_save@loop_1107+1,w,c
 14799  0037EA  E104               	bnz	u11300
 14800  0037EC  0E0A               	movlw	10
 14801  0037EE  5C1B               	subwf	EEPROM_save@loop_1107,w,c
 14802  0037F0  A0D8               	btfss	status,0,c
 14803  0037F2  D7DC               	goto	l8988
 14804  0037F4                     u11300:
 14805                           
 14806                           ;main.c: 836:     EEPROM_WriteByte(0,x+1);
 14807  0037F4  2813               	incf	EEPROM_save@x,w,c
 14808  0037F6  6E0B               	movwf	EEPROM_WriteByte@eepromData,c
 14809  0037F8  0E00               	movlw	0
 14810  0037FA  EC6D  F024         	call	_EEPROM_WriteByte
 14811  0037FE  0012               	return		;funcret
 14812  003800                     __end_of_EEPROM_save:
 14813                           	opt callstack 0
 14814                           
 14815 ;; *************** function _EEPROM_prev *****************
 14816 ;; Defined at:
 14817 ;;		line 840 in file "main.c"
 14818 ;; Parameters:    Size  Location     Type
 14819 ;;  trial           2   16[COMRAM] int 
 14820 ;; Auto vars:     Size  Location     Type
 14821 ;;  loop            2   26[COMRAM] int 
 14822 ;;  loop            2   24[COMRAM] int 
 14823 ;;  loop            2   22[COMRAM] int 
 14824 ;;  shift           2   30[COMRAM] int 
 14825 ;;  x               2   28[COMRAM] int 
 14826 ;;  temp            2   20[COMRAM] int 
 14827 ;; Return value:  Size  Location     Type
 14828 ;;                  1    wreg      void 
 14829 ;; Registers used:
 14830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14837 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14839 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14840 ;;Total ram usage:       16 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; Hardware stack levels required when called:    2
 14843 ;; This function calls:
 14844 ;;		_EEPROM_ReadByte
 14845 ;;		_EEPROM_WriteByte
 14846 ;;		___wmul
 14847 ;; This function is called by:
 14848 ;;		_main
 14849 ;; This function uses a non-reentrant model
 14850 ;;
 14851                           
 14852                           	psect	text60
 14853  0034C6                     __ptext60:
 14854                           	opt callstack 0
 14855  0034C6                     _EEPROM_prev:
 14856                           	opt callstack 28
 14857                           
 14858                           ;main.c: 841:     int x;;main.c: 842:     if (EEPROM_ReadByte(0) < 32 && EEPROM_ReadByte
      +                          (0) > -1)
 14859                           
 14860                           ;incstack = 0
 14861  0034C6  0E00               	movlw	0
 14862  0034C8  ECCB  F025         	call	_EEPROM_ReadByte
 14863  0034CC  6E13               	movwf	??_EEPROM_prev& (0+255),c
 14864  0034CE  0E20               	movlw	32
 14865  0034D0  6013               	cpfslt	??_EEPROM_prev,c
 14866  0034D2  D00B               	goto	l9004
 14867  0034D4  0E00               	movlw	0
 14868  0034D6  ECCB  F025         	call	_EEPROM_ReadByte
 14869                           
 14870                           ;main.c: 843:          x = EEPROM_ReadByte(0);
 14871  0034DA  0E00               	movlw	0
 14872  0034DC  ECCB  F025         	call	_EEPROM_ReadByte
 14873  0034E0  6E13               	movwf	??_EEPROM_prev& (0+255),c
 14874  0034E2  5013               	movf	??_EEPROM_prev,w,c
 14875  0034E4  6E1D               	movwf	EEPROM_prev@x,c
 14876  0034E6  6A1E               	clrf	EEPROM_prev@x+1,c
 14877  0034E8  D009               	goto	l9008
 14878  0034EA                     l9004:
 14879                           
 14880                           ;main.c: 845:         EEPROM_WriteByte(0,0);
 14881  0034EA  0E00               	movlw	0
 14882  0034EC  6E0B               	movwf	EEPROM_WriteByte@eepromData,c
 14883  0034EE  0E00               	movlw	0
 14884  0034F0  EC6D  F024         	call	_EEPROM_WriteByte
 14885                           
 14886                           ;main.c: 846:         x = 0;
 14887  0034F4  0E00               	movlw	0
 14888  0034F6  6E1E               	movwf	EEPROM_prev@x+1,c
 14889  0034F8  0E00               	movlw	0
 14890  0034FA  6E1D               	movwf	EEPROM_prev@x,c
 14891  0034FC                     l9008:
 14892                           
 14893                           ;main.c: 850:     x = x - trial;
 14894  0034FC  5011               	movf	EEPROM_prev@trial,w,c
 14895  0034FE  5C1D               	subwf	EEPROM_prev@x,w,c
 14896  003500  6E1D               	movwf	EEPROM_prev@x,c
 14897  003502  5012               	movf	EEPROM_prev@trial+1,w,c
 14898  003504  581E               	subwfb	EEPROM_prev@x+1,w,c
 14899  003506  6E1E               	movwf	EEPROM_prev@x+1,c
 14900                           
 14901                           ;main.c: 851:     if (x < 0){
 14902  003508  AE1E               	btfss	EEPROM_prev@x+1,7,c
 14903  00350A  D006               	goto	l9014
 14904                           
 14905                           ;main.c: 852:         x = x + 31;
 14906  00350C  0E1F               	movlw	31
 14907  00350E  241D               	addwf	EEPROM_prev@x,w,c
 14908  003510  6E1D               	movwf	EEPROM_prev@x,c
 14909  003512  0E00               	movlw	0
 14910  003514  201E               	addwfc	EEPROM_prev@x+1,w,c
 14911  003516  6E1E               	movwf	EEPROM_prev@x+1,c
 14912  003518                     l9014:
 14913                           
 14914                           ;main.c: 856:     int shift = x * 33;
 14915  003518  C01D  F00B         	movff	EEPROM_prev@x,___wmul@multiplier
 14916  00351C  C01E  F00C         	movff	EEPROM_prev@x+1,___wmul@multiplier+1
 14917  003520  0E00               	movlw	0
 14918  003522  6E0E               	movwf	___wmul@multiplicand+1,c
 14919  003524  0E21               	movlw	33
 14920  003526  6E0D               	movwf	___wmul@multiplicand,c
 14921  003528  EC53  F025         	call	___wmul	;wreg free
 14922  00352C  C00B  F01F         	movff	?___wmul,EEPROM_prev@shift
 14923  003530  C00C  F020         	movff	?___wmul+1,EEPROM_prev@shift+1
 14924                           
 14925                           ;main.c: 859:     time = EEPROM_ReadByte(shift + 1);
 14926  003534  281F               	incf	EEPROM_prev@shift,w,c
 14927  003536  ECCB  F025         	call	_EEPROM_ReadByte
 14928  00353A  6E13               	movwf	??_EEPROM_prev& (0+255),c
 14929  00353C  5013               	movf	??_EEPROM_prev,w,c
 14930  00353E  0101               	movlb	1	; () banked
 14931  003540  6F08               	movwf	_time& (0+255),b
 14932  003542  6B09               	clrf	(_time+1)& (0+255),b
 14933                           
 14934                           ; BSR set to: 1
 14935                           ;main.c: 860:     Canister = EEPROM_ReadByte(shift + 2);
 14936  003544  501F               	movf	EEPROM_prev@shift,w,c
 14937  003546  0F02               	addlw	2
 14938  003548  ECCB  F025         	call	_EEPROM_ReadByte
 14939  00354C  6E13               	movwf	??_EEPROM_prev& (0+255),c
 14940  00354E  5013               	movf	??_EEPROM_prev,w,c
 14941  003550  0101               	movlb	1	; () banked
 14942  003552  6F06               	movwf	_Canister& (0+255),b
 14943  003554  6B07               	clrf	(_Canister+1)& (0+255),b
 14944                           
 14945                           ; BSR set to: 1
 14946                           ;main.c: 861:     balls = EEPROM_ReadByte(shift + 3);
 14947  003556  501F               	movf	EEPROM_prev@shift,w,c
 14948  003558  0F03               	addlw	3
 14949  00355A  ECCB  F025         	call	_EEPROM_ReadByte
 14950  00355E  6E13               	movwf	??_EEPROM_prev& (0+255),c
 14951  003560  5013               	movf	??_EEPROM_prev,w,c
 14952  003562  0101               	movlb	1	; () banked
 14953  003564  6F04               	movwf	_balls& (0+255),b
 14954  003566  6B05               	clrf	(_balls+1)& (0+255),b
 14955                           
 14956                           ; BSR set to: 1
 14957                           ;main.c: 864:     int temp;;main.c: 865:     for (int loop = 0; loop < 10; loop++){
 14958  003568  0E00               	movlw	0
 14959  00356A  6E18               	movwf	EEPROM_prev@loop+1,c
 14960  00356C  0E00               	movlw	0
 14961  00356E  6E17               	movwf	EEPROM_prev@loop,c
 14962  003570                     l9028:
 14963                           
 14964                           ;main.c: 866:         temp = shift + 4 + loop;
 14965  003570  5017               	movf	EEPROM_prev@loop,w,c
 14966  003572  241F               	addwf	EEPROM_prev@shift,w,c
 14967  003574  6E13               	movwf	??_EEPROM_prev& (0+255),c
 14968  003576  5018               	movf	EEPROM_prev@loop+1,w,c
 14969  003578  2020               	addwfc	EEPROM_prev@shift+1,w,c
 14970  00357A  6E14               	movwf	(??_EEPROM_prev+1)& (0+255),c
 14971  00357C  0E04               	movlw	4
 14972  00357E  2413               	addwf	??_EEPROM_prev,w,c
 14973  003580  6E15               	movwf	EEPROM_prev@temp,c
 14974  003582  0E00               	movlw	0
 14975  003584  2014               	addwfc	??_EEPROM_prev+1,w,c
 14976  003586  6E16               	movwf	EEPROM_prev@temp+1,c
 14977                           
 14978                           ;main.c: 867:         State[loop] = EEPROM_ReadByte(temp);
 14979  003588  5015               	movf	EEPROM_prev@temp,w,c
 14980  00358A  ECCB  F025         	call	_EEPROM_ReadByte
 14981  00358E  6E13               	movwf	??_EEPROM_prev& (0+255),c
 14982  003590  6A14               	clrf	(??_EEPROM_prev+1)& (0+255),c
 14983  003592  90D8               	bcf	status,0,c
 14984  003594  3417               	rlcf	EEPROM_prev@loop,w,c
 14985  003596  6ED9               	movwf	fsr2l,c
 14986  003598  3418               	rlcf	EEPROM_prev@loop+1,w,c
 14987  00359A  6EDA               	movwf	fsr2h,c
 14988  00359C  0EC8               	movlw	low _State
 14989  00359E  26D9               	addwf	fsr2l,f,c
 14990  0035A0  0E01               	movlw	high _State
 14991  0035A2  22DA               	addwfc	fsr2h,f,c
 14992  0035A4  C013  FFDE         	movff	??_EEPROM_prev,postinc2
 14993  0035A8  C014  FFDD         	movff	??_EEPROM_prev+1,postdec2
 14994                           
 14995                           ;main.c: 868:     }
 14996  0035AC  4A17               	infsnz	EEPROM_prev@loop,f,c
 14997  0035AE  2A18               	incf	EEPROM_prev@loop+1,f,c
 14998  0035B0  BE18               	btfsc	EEPROM_prev@loop+1,7,c
 14999  0035B2  D7DE               	goto	l9028
 15000  0035B4  5018               	movf	EEPROM_prev@loop+1,w,c
 15001  0035B6  E104               	bnz	u11330
 15002  0035B8  0E0A               	movlw	10
 15003  0035BA  5C17               	subwf	EEPROM_prev@loop,w,c
 15004  0035BC  A0D8               	btfss	status,0,c
 15005  0035BE  D7D8               	goto	l9028
 15006  0035C0                     u11330:
 15007                           
 15008                           ;main.c: 870:     for (int loop = 0; loop < 10; loop++){
 15009  0035C0  0E00               	movlw	0
 15010  0035C2  6E1A               	movwf	EEPROM_prev@loop_1114+1,c
 15011  0035C4  0E00               	movlw	0
 15012  0035C6  6E19               	movwf	EEPROM_prev@loop_1114,c
 15013  0035C8                     l9042:
 15014                           
 15015                           ;main.c: 871:         temp = shift + 14 + loop;
 15016  0035C8  5019               	movf	EEPROM_prev@loop_1114,w,c
 15017  0035CA  241F               	addwf	EEPROM_prev@shift,w,c
 15018  0035CC  6E13               	movwf	??_EEPROM_prev& (0+255),c
 15019  0035CE  501A               	movf	EEPROM_prev@loop_1114+1,w,c
 15020  0035D0  2020               	addwfc	EEPROM_prev@shift+1,w,c
 15021  0035D2  6E14               	movwf	(??_EEPROM_prev+1)& (0+255),c
 15022  0035D4  0E0E               	movlw	14
 15023  0035D6  2413               	addwf	??_EEPROM_prev,w,c
 15024  0035D8  6E15               	movwf	EEPROM_prev@temp,c
 15025  0035DA  0E00               	movlw	0
 15026  0035DC  2014               	addwfc	??_EEPROM_prev+1,w,c
 15027  0035DE  6E16               	movwf	EEPROM_prev@temp+1,c
 15028                           
 15029                           ;main.c: 872:         DistanceCanister[loop] = EEPROM_ReadByte(temp);
 15030  0035E0  5015               	movf	EEPROM_prev@temp,w,c
 15031  0035E2  ECCB  F025         	call	_EEPROM_ReadByte
 15032  0035E6  6E13               	movwf	??_EEPROM_prev& (0+255),c
 15033  0035E8  6A14               	clrf	(??_EEPROM_prev+1)& (0+255),c
 15034  0035EA  90D8               	bcf	status,0,c
 15035  0035EC  3419               	rlcf	EEPROM_prev@loop_1114,w,c
 15036  0035EE  6ED9               	movwf	fsr2l,c
 15037  0035F0  341A               	rlcf	EEPROM_prev@loop_1114+1,w,c
 15038  0035F2  6EDA               	movwf	fsr2h,c
 15039  0035F4  0EB4               	movlw	low _DistanceCanister
 15040  0035F6  26D9               	addwf	fsr2l,f,c
 15041  0035F8  0E01               	movlw	high _DistanceCanister
 15042  0035FA  22DA               	addwfc	fsr2h,f,c
 15043  0035FC  C013  FFDE         	movff	??_EEPROM_prev,postinc2
 15044  003600  C014  FFDD         	movff	??_EEPROM_prev+1,postdec2
 15045                           
 15046                           ;main.c: 873:     }
 15047  003604  4A19               	infsnz	EEPROM_prev@loop_1114,f,c
 15048  003606  2A1A               	incf	EEPROM_prev@loop_1114+1,f,c
 15049  003608  BE1A               	btfsc	EEPROM_prev@loop_1114+1,7,c
 15050  00360A  D7DE               	goto	l9042
 15051  00360C  501A               	movf	EEPROM_prev@loop_1114+1,w,c
 15052  00360E  E104               	bnz	u11340
 15053  003610  0E0A               	movlw	10
 15054  003612  5C19               	subwf	EEPROM_prev@loop_1114,w,c
 15055  003614  A0D8               	btfss	status,0,c
 15056  003616  D7D8               	goto	l9042
 15057  003618                     u11340:
 15058                           
 15059                           ;main.c: 875:     for (int loop = 0; loop < 10; loop++){
 15060  003618  0E00               	movlw	0
 15061  00361A  6E1C               	movwf	EEPROM_prev@loop_1115+1,c
 15062  00361C  0E00               	movlw	0
 15063  00361E  6E1B               	movwf	EEPROM_prev@loop_1115,c
 15064  003620                     l9056:
 15065                           
 15066                           ;main.c: 876:         temp = shift + 24 + loop;
 15067  003620  501B               	movf	EEPROM_prev@loop_1115,w,c
 15068  003622  241F               	addwf	EEPROM_prev@shift,w,c
 15069  003624  6E13               	movwf	??_EEPROM_prev& (0+255),c
 15070  003626  501C               	movf	EEPROM_prev@loop_1115+1,w,c
 15071  003628  2020               	addwfc	EEPROM_prev@shift+1,w,c
 15072  00362A  6E14               	movwf	(??_EEPROM_prev+1)& (0+255),c
 15073  00362C  0E18               	movlw	24
 15074  00362E  2413               	addwf	??_EEPROM_prev,w,c
 15075  003630  6E15               	movwf	EEPROM_prev@temp,c
 15076  003632  0E00               	movlw	0
 15077  003634  2014               	addwfc	??_EEPROM_prev+1,w,c
 15078  003636  6E16               	movwf	EEPROM_prev@temp+1,c
 15079                           
 15080                           ;main.c: 877:         BallDispensed[loop] = EEPROM_ReadByte(temp);
 15081  003638  5015               	movf	EEPROM_prev@temp,w,c
 15082  00363A  ECCB  F025         	call	_EEPROM_ReadByte
 15083  00363E  6E13               	movwf	??_EEPROM_prev& (0+255),c
 15084  003640  6A14               	clrf	(??_EEPROM_prev+1)& (0+255),c
 15085  003642  90D8               	bcf	status,0,c
 15086  003644  341B               	rlcf	EEPROM_prev@loop_1115,w,c
 15087  003646  6ED9               	movwf	fsr2l,c
 15088  003648  341C               	rlcf	EEPROM_prev@loop_1115+1,w,c
 15089  00364A  6EDA               	movwf	fsr2h,c
 15090  00364C  0EA0               	movlw	low _BallDispensed
 15091  00364E  26D9               	addwf	fsr2l,f,c
 15092  003650  0E01               	movlw	high _BallDispensed
 15093  003652  22DA               	addwfc	fsr2h,f,c
 15094  003654  C013  FFDE         	movff	??_EEPROM_prev,postinc2
 15095  003658  C014  FFDD         	movff	??_EEPROM_prev+1,postdec2
 15096                           
 15097                           ;main.c: 878:     }
 15098  00365C  4A1B               	infsnz	EEPROM_prev@loop_1115,f,c
 15099  00365E  2A1C               	incf	EEPROM_prev@loop_1115+1,f,c
 15100  003660  BE1C               	btfsc	EEPROM_prev@loop_1115+1,7,c
 15101  003662  D7DE               	goto	l9056
 15102  003664  501C               	movf	EEPROM_prev@loop_1115+1,w,c
 15103  003666  E105               	bnz	u11350
 15104  003668  0E0A               	movlw	10
 15105  00366A  5C1B               	subwf	EEPROM_prev@loop_1115,w,c
 15106  00366C  B0D8               	btfsc	status,0,c
 15107  00366E  0012               	return	
 15108  003670  D7D7               	goto	l9056
 15109  003672                     u11350:
 15110  003672  0012               	return		;funcret
 15111  003674                     __end_of_EEPROM_prev:
 15112                           	opt callstack 0
 15113                           
 15114 ;; *************** function ___wmul *****************
 15115 ;; Defined at:
 15116 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;  multiplier      2   10[COMRAM] unsigned int 
 15119 ;;  multiplicand    2   12[COMRAM] unsigned int 
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;  product         2   14[COMRAM] unsigned int 
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  2   10[COMRAM] unsigned int 
 15124 ;; Registers used:
 15125 ;;		wreg, status,2, status,0, prodl, prodh
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15134 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15135 ;;Total ram usage:        6 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; Hardware stack levels required when called:    1
 15138 ;; This function calls:
 15139 ;;		Nothing
 15140 ;; This function is called by:
 15141 ;;		_readADC
 15142 ;;		_EEPROM_save
 15143 ;;		_EEPROM_prev
 15144 ;;		_atoi
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148                           	psect	text61
 15149  004AA6                     __ptext61:
 15150                           	opt callstack 0
 15151  004AA6                     ___wmul:
 15152                           	opt callstack 28
 15153                           
 15154                           ;incstack = 0
 15155  004AA6  500B               	movf	___wmul@multiplier,w,c
 15156  004AA8  020D               	mulwf	___wmul@multiplicand,c
 15157  004AAA  CFF3 F00F          	movff	prodl,___wmul@product
 15158  004AAE  CFF4 F010          	movff	prodh,___wmul@product+1
 15159  004AB2  500B               	movf	___wmul@multiplier,w,c
 15160  004AB4  020E               	mulwf	___wmul@multiplicand+1,c
 15161  004AB6  50F3               	movf	prodl,w,c
 15162  004AB8  2610               	addwf	___wmul@product+1,f,c
 15163  004ABA  500C               	movf	___wmul@multiplier+1,w,c
 15164  004ABC  020D               	mulwf	___wmul@multiplicand,c
 15165  004ABE  50F3               	movf	prodl,w,c
 15166  004AC0  2610               	addwf	___wmul@product+1,f,c
 15167  004AC2  C00F  F00B         	movff	___wmul@product,?___wmul
 15168  004AC6  C010  F00C         	movff	___wmul@product+1,?___wmul+1
 15169  004ACA  0012               	return		;funcret
 15170  004ACC                     __end_of___wmul:
 15171                           	opt callstack 0
 15172                           
 15173 ;; *************** function _EEPROM_WriteByte *****************
 15174 ;; Defined at:
 15175 ;;		line 771 in file "main.c"
 15176 ;; Parameters:    Size  Location     Type
 15177 ;;  eepromAddres    1    wreg     unsigned char 
 15178 ;;  eepromData      1   10[COMRAM] unsigned char 
 15179 ;; Auto vars:     Size  Location     Type
 15180 ;;  eepromAddres    1   11[COMRAM] unsigned char 
 15181 ;;  gie_Status      1   12[COMRAM] unsigned char 
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  1    wreg      void 
 15184 ;; Registers used:
 15185 ;;		wreg, status,2
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15191 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15195 ;;Total ram usage:        3 bytes
 15196 ;; Hardware stack levels used:    1
 15197 ;; Hardware stack levels required when called:    1
 15198 ;; This function calls:
 15199 ;;		Nothing
 15200 ;; This function is called by:
 15201 ;;		_EEPROM_save
 15202 ;;		_EEPROM_prev
 15203 ;; This function uses a non-reentrant model
 15204 ;;
 15205                           
 15206                           	psect	text62
 15207  0048DA                     __ptext62:
 15208                           	opt callstack 0
 15209  0048DA                     _EEPROM_WriteByte:
 15210                           	opt callstack 28
 15211                           
 15212                           ;incstack = 0
 15213                           ;EEPROM_WriteByte@eepromAddress stored from wreg
 15214  0048DA  6E0C               	movwf	EEPROM_WriteByte@eepromAddress,c
 15215  0048DC                     
 15216                           ;main.c: 773: unsigned char gie_Status;;main.c: 774: while(EECON1bits.WR){};
 15217  0048DC  B2A6               	btfsc	4006,1,c	;volsfr
 15218  0048DE  D7FE               	goto	l6002
 15219                           
 15220                           ;main.c: 775:     EEADR=eepromAddress;
 15221  0048E0  C00C  FFA9         	movff	EEPROM_WriteByte@eepromAddress,4009	;volatile
 15222                           
 15223                           ;main.c: 776:     EEDATA=eepromData;
 15224  0048E4  C00B  FFA8         	movff	EEPROM_WriteByte@eepromData,4008	;volatile
 15225                           
 15226                           ;main.c: 777:     WREN=1;
 15227  0048E8  84A6               	bsf	4006,2,c	;volsfr
 15228                           
 15229                           ;main.c: 778:     gie_Status = GIE;
 15230  0048EA  0E00               	movlw	0
 15231  0048EC  BEF2               	btfsc	4082,7,c	;volatile
 15232  0048EE  0E01               	movlw	1
 15233  0048F0  6E0D               	movwf	EEPROM_WriteByte@gie_Status,c
 15234                           
 15235                           ;main.c: 779:     GIE = 0;
 15236  0048F2  9EF2               	bcf	4082,7,c	;volatile
 15237                           
 15238                           ;main.c: 780:     EECON2=0x55;
 15239  0048F4  0E55               	movlw	85
 15240  0048F6  6EA7               	movwf	4007,c	;volsfr
 15241                           
 15242                           ;main.c: 781:     EECON2=0xaa;
 15243  0048F8  0EAA               	movlw	170
 15244  0048FA  6EA7               	movwf	4007,c	;volsfr
 15245                           
 15246                           ;main.c: 782:     EECON1bits.WR=1;
 15247  0048FC  82A6               	bsf	4006,1,c	;volsfr
 15248                           
 15249                           ;main.c: 783:     GIE = gie_Status;
 15250  0048FE  A00D               	btfss	EEPROM_WriteByte@gie_Status,0,c
 15251  004900  D002               	goto	u7080
 15252  004902  8EF2               	bsf	4082,7,c	;volatile
 15253  004904  D001               	goto	u7095
 15254  004906                     u7080:
 15255  004906  9EF2               	bcf	4082,7,c	;volatile
 15256  004908                     u7095:
 15257                           
 15258                           ;main.c: 784:     WREN=0;
 15259  004908  94A6               	bcf	4006,2,c	;volsfr
 15260  00490A  0012               	return		;funcret
 15261  00490C                     __end_of_EEPROM_WriteByte:
 15262                           	opt callstack 0
 15263                           
 15264 ;; *************** function _EEPROM_ReadByte *****************
 15265 ;; Defined at:
 15266 ;;		line 788 in file "main.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  eepromAddres    1    wreg     unsigned char 
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;  eepromAddres    1   10[COMRAM] unsigned char 
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      unsigned char 
 15273 ;; Registers used:
 15274 ;;		wreg, status,2
 15275 ;; Tracked objects:
 15276 ;;		On entry : 0/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15284 ;;Total ram usage:        1 bytes
 15285 ;; Hardware stack levels used:    1
 15286 ;; Hardware stack levels required when called:    1
 15287 ;; This function calls:
 15288 ;;		Nothing
 15289 ;; This function is called by:
 15290 ;;		_EEPROM_save
 15291 ;;		_EEPROM_prev
 15292 ;; This function uses a non-reentrant model
 15293 ;;
 15294                           
 15295                           	psect	text63
 15296  004B96                     __ptext63:
 15297                           	opt callstack 0
 15298  004B96                     _EEPROM_ReadByte:
 15299                           	opt callstack 28
 15300                           
 15301                           ;incstack = 0
 15302                           ;EEPROM_ReadByte@eepromAddress stored from wreg
 15303  004B96  6E0B               	movwf	EEPROM_ReadByte@eepromAddress,c
 15304  004B98                     
 15305                           ;main.c: 790:     while(EECON1bits.RD || EECON1bits.WR);
 15306  004B98  B0A6               	btfsc	4006,0,c	;volsfr
 15307  004B9A  D7FE               	goto	l6024
 15308  004B9C  B2A6               	btfsc	4006,1,c	;volsfr
 15309  004B9E  D7FC               	goto	l6024
 15310                           
 15311                           ;main.c: 791:     EEADR=eepromAddress;
 15312  004BA0  C00B  FFA9         	movff	EEPROM_ReadByte@eepromAddress,4009	;volatile
 15313                           
 15314                           ;main.c: 792:     EECON1bits.RD = 1;
 15315  004BA4  80A6               	bsf	4006,0,c	;volsfr
 15316                           
 15317                           ;main.c: 793:     return(EEDATA);
 15318  004BA6  50A8               	movf	4008,w,c	;volatile
 15319  004BA8  0012               	return		;funcret
 15320  004BAA                     __end_of_EEPROM_ReadByte:
 15321                           	opt callstack 0
 15322                           
 15323 ;; *************** function _interruptHandler *****************
 15324 ;; Defined at:
 15325 ;;		line 882 in file "main.c"
 15326 ;; Parameters:    Size  Location     Type
 15327 ;;		None
 15328 ;; Auto vars:     Size  Location     Type
 15329 ;;  i               2    8[COMRAM] int 
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  1    wreg      void 
 15332 ;; Registers used:
 15333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 15334 ;; Tracked objects:
 15335 ;;		On entry : 0/0
 15336 ;;		On exit  : 0/0
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15341 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15342 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15343 ;;Total ram usage:       10 bytes
 15344 ;; Hardware stack levels used:    1
 15345 ;; This function calls:
 15346 ;;		Nothing
 15347 ;; This function is called by:
 15348 ;;		Interrupt level 2
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352                           	psect	intcode
 15353  000008                     __pintcode:
 15354                           	opt callstack 0
 15355  000008                     _interruptHandler:
 15356                           	opt callstack 19
 15357                           
 15358                           ;incstack = 0
 15359  000008  8274               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15360  00000A  ED76  F01E         	call	int_func,f	;refresh shadow registers
 15361                           
 15362                           	psect	intcode_body
 15363  003CEC                     __pintcode_body:
 15364                           	opt callstack 19
 15365  003CEC                     int_func:
 15366                           	opt callstack 19
 15367  003CEC  0006               	pop		; remove dummy address from shadow register refresh
 15368  003CEE  CFF6 F005          	movff	tblptrl,??_interruptHandler+4
 15369  003CF2  CFF7 F006          	movff	tblptrh,??_interruptHandler+5
 15370  003CF6  CFF8 F007          	movff	tblptru,??_interruptHandler+6
 15371  003CFA  CFF5 F008          	movff	tablat,??_interruptHandler+7
 15372                           
 15373                           ;main.c: 884:     keypress = (PORTB & 0xF0) >> 4;
 15374  003CFE  3881               	swapf	3969,w,c	;volatile
 15375  003D00  0B0F               	andlw	15
 15376  003D02  0B0F               	andlw	15
 15377  003D04  0101               	movlb	1	; () banked
 15378  003D06  6F0A               	movwf	_keypress& (0+255),b
 15379                           
 15380                           ; BSR set to: 1
 15381                           ;main.c: 887:     if(TMR0IF){
 15382  003D08  A4F2               	btfss	4082,2,c	;volatile
 15383  003D0A  D007               	goto	i2l7150
 15384                           
 15385                           ; BSR set to: 1
 15386                           ;main.c: 888:         timer++;
 15387  003D0C  0E01               	movlw	1
 15388  003D0E  2700               	addwf	_timer& (0+255),f,b	;volatile
 15389  003D10  0E00               	movlw	0
 15390  003D12  2301               	addwfc	(_timer+1)& (0+255),f,b	;volatile
 15391  003D14  2302               	addwfc	(_timer+2)& (0+255),f,b	;volatile
 15392  003D16  2303               	addwfc	(_timer+3)& (0+255),f,b	;volatile
 15393                           
 15394                           ; BSR set to: 1
 15395                           ;main.c: 889:         TMR0IF = 0;
 15396  003D18  94F2               	bcf	4082,2,c	;volatile
 15397  003D1A                     i2l7150:
 15398                           
 15399                           ; BSR set to: 1
 15400                           ;main.c: 892:     if(INT1IF){
 15401  003D1A  A0F0               	btfss	4080,0,c	;volatile
 15402  003D1C  D054               	goto	i2u828_40
 15403                           
 15404                           ; BSR set to: 1
 15405                           ;main.c: 895:         INT1IF = 0;
 15406  003D1E  90F0               	bcf	4080,0,c	;volatile
 15407                           
 15408                           ; BSR set to: 1
 15409                           ;main.c: 897:         if (keys[keypress] == 'A') {
 15410  003D20  0E13               	movlw	low _keys
 15411  003D22  250A               	addwf	_keypress& (0+255),w,b
 15412  003D24  6EF6               	movwf	tblptrl,c
 15413  003D26  6AF7               	clrf	tblptrh,c
 15414  003D28  0EFE               	movlw	high _keys
 15415  003D2A  22F7               	addwfc	tblptrh,f,c
 15416  003D2C                     	if	0	;There are less than 3 active tblptr bytes
 15417  003D2C                     	endif
 15418  003D2C  0008               	tblrd		*
 15419  003D2E  50F5               	movf	tablat,w,c
 15420  003D30  0A41               	xorlw	65
 15421  003D32  A4D8               	btfss	status,2,c
 15422  003D34  D003               	goto	i2l7160
 15423                           
 15424                           ; BSR set to: 1
 15425                           ;main.c: 899:             start = 1;
 15426  003D36  0E01               	movlw	1
 15427  003D38  6F0B               	movwf	_start& (0+255),b	;volatile
 15428  003D3A  D045               	goto	i2u828_40
 15429  003D3C                     i2l7160:
 15430                           
 15431                           ; BSR set to: 1
 15432                           ;main.c: 904:         if (keys[keypress] == '#') {
 15433  003D3C  0E13               	movlw	low _keys
 15434  003D3E  250A               	addwf	_keypress& (0+255),w,b
 15435  003D40  6EF6               	movwf	tblptrl,c
 15436  003D42  6AF7               	clrf	tblptrh,c
 15437  003D44  0EFE               	movlw	high _keys
 15438  003D46  22F7               	addwfc	tblptrh,f,c
 15439  003D48                     	if	0	;There are less than 3 active tblptr bytes
 15440  003D48                     	endif
 15441  003D48  0008               	tblrd		*
 15442  003D4A  50F5               	movf	tablat,w,c
 15443  003D4C  0A23               	xorlw	35
 15444  003D4E  A4D8               	btfss	status,2,c
 15445  003D50  D003               	goto	i2l7166
 15446                           
 15447                           ; BSR set to: 1
 15448                           ;main.c: 906:             exit_key = 1;
 15449  003D52  0E01               	movlw	1
 15450  003D54  6F0C               	movwf	_exit_key& (0+255),b	;volatile
 15451  003D56  D037               	goto	i2u828_40
 15452  003D58                     i2l7166:
 15453                           
 15454                           ; BSR set to: 1
 15455                           ;main.c: 910:         if (keys[keypress] == 'B') {
 15456  003D58  0E13               	movlw	low _keys
 15457  003D5A  250A               	addwf	_keypress& (0+255),w,b
 15458  003D5C  6EF6               	movwf	tblptrl,c
 15459  003D5E  6AF7               	clrf	tblptrh,c
 15460  003D60  0EFE               	movlw	high _keys
 15461  003D62  22F7               	addwfc	tblptrh,f,c
 15462  003D64                     	if	0	;There are less than 3 active tblptr bytes
 15463  003D64                     	endif
 15464  003D64  0008               	tblrd		*
 15465  003D66  50F5               	movf	tablat,w,c
 15466  003D68  0A42               	xorlw	66
 15467  003D6A  A4D8               	btfss	status,2,c
 15468  003D6C  D003               	goto	i2l7172
 15469                           
 15470                           ; BSR set to: 1
 15471                           ;main.c: 912:             B_was_pressed = 1;
 15472  003D6E  0E01               	movlw	1
 15473  003D70  6F0D               	movwf	_B_was_pressed& (0+255),b	;volatile
 15474  003D72  D029               	goto	i2u828_40
 15475  003D74                     i2l7172:
 15476                           
 15477                           ; BSR set to: 1
 15478                           ;main.c: 916:         for ( int i = 0; i < 10; i++ ) {
 15479  003D74  0E00               	movlw	0
 15480  003D76  6E0A               	movwf	interruptHandler@i+1,c
 15481  003D78  0E00               	movlw	0
 15482  003D7A  6E09               	movwf	interruptHandler@i,c
 15483  003D7C                     i2l7178:
 15484                           
 15485                           ; BSR set to: 1
 15486                           ;main.c: 918:             if ((char)i + '0' == keys[keypress]) {
 15487  003D7C  0E13               	movlw	low _keys
 15488  003D7E  250A               	addwf	_keypress& (0+255),w,b
 15489  003D80  6EF6               	movwf	tblptrl,c
 15490  003D82  6AF7               	clrf	tblptrh,c
 15491  003D84  0EFE               	movlw	high _keys
 15492  003D86  22F7               	addwfc	tblptrh,f,c
 15493  003D88                     	if	0	;There are less than 3 active tblptr bytes
 15494  003D88                     	endif
 15495  003D88  0008               	tblrd		*
 15496  003D8A  50F5               	movf	tablat,w,c
 15497  003D8C  6E01               	movwf	??_interruptHandler& (0+255),c
 15498  003D8E  6A02               	clrf	(??_interruptHandler+1)& (0+255),c
 15499  003D90  5009               	movf	interruptHandler@i,w,c
 15500  003D92  6E03               	movwf	(??_interruptHandler+2)& (0+255),c
 15501  003D94  6A04               	clrf	(??_interruptHandler+3)& (0+255),c
 15502  003D96  0E30               	movlw	48
 15503  003D98  2603               	addwf	??_interruptHandler+2,f,c
 15504  003D9A  0E00               	movlw	0
 15505  003D9C  2204               	addwfc	??_interruptHandler+3,f,c
 15506  003D9E  5001               	movf	??_interruptHandler,w,c
 15507  003DA0  1803               	xorwf	??_interruptHandler+2,w,c
 15508  003DA2  E107               	bnz	i2l7184
 15509  003DA4  5002               	movf	??_interruptHandler+1,w,c
 15510  003DA6  1804               	xorwf	??_interruptHandler+3,w,c
 15511  003DA8  A4D8               	btfss	status,2,c
 15512  003DAA  D003               	goto	i2l7184
 15513                           
 15514                           ; BSR set to: 1
 15515                           ;main.c: 919:                 key_was_pressed = 1;
 15516  003DAC  0E01               	movlw	1
 15517  003DAE  6F0E               	movwf	_key_was_pressed& (0+255),b	;volatile
 15518  003DB0  D00A               	goto	i2u828_40
 15519  003DB2                     i2l7184:
 15520                           
 15521                           ; BSR set to: 1
 15522                           ;main.c: 923:         }
 15523  003DB2  4A09               	infsnz	interruptHandler@i,f,c
 15524  003DB4  2A0A               	incf	interruptHandler@i+1,f,c
 15525                           
 15526                           ; BSR set to: 1
 15527  003DB6  BE0A               	btfsc	interruptHandler@i+1,7,c
 15528  003DB8  D7E1               	goto	i2l7178
 15529  003DBA  500A               	movf	interruptHandler@i+1,w,c
 15530  003DBC  E104               	bnz	i2u828_40
 15531  003DBE  0E0A               	movlw	10
 15532  003DC0  5C09               	subwf	interruptHandler@i,w,c
 15533  003DC2  A0D8               	btfss	status,0,c
 15534  003DC4  D7DB               	goto	i2l7178
 15535  003DC6                     i2u828_40:
 15536                           
 15537                           ; BSR set to: 1
 15538  003DC6  C008  FFF5         	movff	??_interruptHandler+7,tablat
 15539  003DCA  C007  FFF8         	movff	??_interruptHandler+6,tblptru
 15540  003DCE  C006  FFF7         	movff	??_interruptHandler+5,tblptrh
 15541  003DD2  C005  FFF6         	movff	??_interruptHandler+4,tblptrl
 15542  003DD6  9274               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15543  003DD8  0011               	retfie		f
 15544  003DDA                     __end_of_interruptHandler:
 15545                           	opt callstack 0
 15546                           
 15547                           	psect	rparam
 15548  0000                     
 15549                           	psect	temp
 15550  000074                     btemp:
 15551                           	opt callstack 0
 15552  000074                     	ds	1
 15553  0000                     int$flags	set	btemp
 15554  0000                     wtemp8	set	btemp+1
 15555  0000                     ttemp5	set	btemp+1
 15556  0000                     ttemp6	set	btemp+4
 15557  0000                     ttemp7	set	btemp+8
 15558                           tosu	equ	0xFFF
 15559                           tosh	equ	0xFFE
 15560                           tosl	equ	0xFFD
 15561                           stkptr	equ	0xFFC
 15562                           pclatu	equ	0xFFB
 15563                           pclath	equ	0xFFA
 15564                           pcl	equ	0xFF9
 15565                           tblptru	equ	0xFF8
 15566                           tblptrh	equ	0xFF7
 15567                           tblptrl	equ	0xFF6
 15568                           tablat	equ	0xFF5
 15569                           prodh	equ	0xFF4
 15570                           prodl	equ	0xFF3
 15571                           indf0	equ	0xFEF
 15572                           postinc0	equ	0xFEE
 15573                           postdec0	equ	0xFED
 15574                           preinc0	equ	0xFEC
 15575                           plusw0	equ	0xFEB
 15576                           fsr0h	equ	0xFEA
 15577                           fsr0l	equ	0xFE9
 15578                           wreg	equ	0xFE8
 15579                           indf1	equ	0xFE7
 15580                           postinc1	equ	0xFE6
 15581                           postdec1	equ	0xFE5
 15582                           preinc1	equ	0xFE4
 15583                           plusw1	equ	0xFE3
 15584                           fsr1h	equ	0xFE2
 15585                           fsr1l	equ	0xFE1
 15586                           bsr	equ	0xFE0
 15587                           indf2	equ	0xFDF
 15588                           postinc2	equ	0xFDE
 15589                           postdec2	equ	0xFDD
 15590                           preinc2	equ	0xFDC
 15591                           plusw2	equ	0xFDB
 15592                           fsr2h	equ	0xFDA
 15593                           fsr2l	equ	0xFD9
 15594                           status	equ	0xFD8


Data Sizes:
    Strings     468
    Constant    23
    Data        60
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    101     115
    BANK0           128    112     114
    BANK1           256     65     220
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_62(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_62(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_57(CODE[4]), STR_56(CODE[4]), STR_53(CODE[4]), STR_52(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_57(CODE[4]), STR_56(CODE[4]), STR_53(CODE[4]), STR_52(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_51(CODE[10]), STR_50(CODE[14]), STR_49(CODE[11]), STR_48(CODE[12]), 
		 -> STR_47(CODE[10]), STR_46(CODE[15]), STR_45(CODE[14]), STR_44(CODE[12]), 
		 -> STR_43(CODE[10]), STR_42(CODE[15]), STR_41(CODE[12]), STR_40(CODE[8]), 
		 -> STR_39(CODE[13]), STR_38(CODE[7]), STR_37(CODE[14]), STR_36(CODE[9]), 
		 -> STR_35(CODE[7]), STR_34(CODE[14]), STR_33(CODE[15]), STR_32(CODE[12]), 
		 -> STR_31(CODE[16]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[11]), 
		 -> STR_27(CODE[13]), STR_26(CODE[15]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[12]), STR_22(CODE[15]), STR_21(CODE[13]), STR_20(CODE[11]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[11]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_11(CODE[8]), STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[5]), 
		 -> STR_7(CODE[16]), STR_6(CODE[7]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1929_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_51(CODE[10]), STR_50(CODE[14]), STR_49(CODE[11]), STR_48(CODE[12]), 
		 -> STR_47(CODE[10]), STR_46(CODE[15]), STR_45(CODE[14]), STR_44(CODE[12]), 
		 -> STR_43(CODE[10]), STR_42(CODE[15]), STR_41(CODE[12]), STR_40(CODE[8]), 
		 -> STR_39(CODE[13]), STR_38(CODE[7]), STR_37(CODE[14]), STR_36(CODE[9]), 
		 -> STR_35(CODE[7]), STR_34(CODE[14]), STR_33(CODE[15]), STR_32(CODE[12]), 
		 -> STR_31(CODE[16]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[11]), 
		 -> STR_27(CODE[13]), STR_26(CODE[15]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[12]), STR_22(CODE[15]), STR_21(CODE[13]), STR_20(CODE[11]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[11]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_11(CODE[8]), STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[5]), 
		 -> STR_7(CODE[16]), STR_6(CODE[7]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_51(CODE[10]), STR_50(CODE[14]), STR_49(CODE[11]), STR_48(CODE[12]), 
		 -> STR_47(CODE[10]), STR_46(CODE[15]), STR_45(CODE[14]), STR_44(CODE[12]), 
		 -> STR_43(CODE[10]), STR_42(CODE[15]), STR_41(CODE[12]), STR_40(CODE[8]), 
		 -> STR_39(CODE[13]), STR_38(CODE[7]), STR_37(CODE[14]), STR_36(CODE[9]), 
		 -> STR_35(CODE[7]), STR_34(CODE[14]), STR_33(CODE[15]), STR_32(CODE[12]), 
		 -> STR_31(CODE[16]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[11]), 
		 -> STR_27(CODE[13]), STR_26(CODE[15]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[12]), STR_22(CODE[15]), STR_21(CODE[13]), STR_20(CODE[11]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[11]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_11(CODE[8]), STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[5]), 
		 -> STR_7(CODE[16]), STR_6(CODE[7]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_51(CODE[10]), STR_50(CODE[14]), STR_49(CODE[11]), STR_48(CODE[12]), 
		 -> STR_47(CODE[10]), STR_46(CODE[15]), STR_45(CODE[14]), STR_44(CODE[12]), 
		 -> STR_43(CODE[10]), STR_42(CODE[15]), STR_41(CODE[12]), STR_40(CODE[8]), 
		 -> STR_39(CODE[13]), STR_38(CODE[7]), STR_37(CODE[14]), STR_36(CODE[9]), 
		 -> STR_35(CODE[7]), STR_34(CODE[14]), STR_33(CODE[15]), STR_32(CODE[12]), 
		 -> STR_31(CODE[16]), STR_30(CODE[9]), STR_29(CODE[9]), STR_28(CODE[11]), 
		 -> STR_27(CODE[13]), STR_26(CODE[15]), STR_25(CODE[11]), STR_24(CODE[15]), 
		 -> STR_23(CODE[12]), STR_22(CODE[15]), STR_21(CODE[13]), STR_20(CODE[11]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[11]), 
		 -> STR_15(CODE[11]), STR_14(CODE[11]), STR_13(CODE[10]), STR_12(CODE[9]), 
		 -> STR_11(CODE[8]), STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[5]), 
		 -> STR_7(CODE[16]), STR_6(CODE[7]), STR_5(CODE[11]), STR_4(CODE[11]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 


Critical Paths under _main in COMRAM

    _readADC->___fldiv
    ___xxtofl->___wmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___fltol
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->_readADC
    ___fldiv->___xxtofl
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _frontsensor->___awdiv
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv
    _EEPROM_save->___wmul
    _EEPROM_prev->___wmul

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0  111615
                                             99 COMRAM     2     2      0
                                              0 BANK1     65    65      0
                        _EEPROM_prev
                        _EEPROM_save
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _backdrive
                           _backleft
                          _backright
                            _forward
                        _frontsensor
                            _initLCD
                            _lcdInst
                               _left
                             _printf
                            _readADC
                              _right
 ---------------------------------------------------------------------------------
 (1) _right                                                1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              7     3      4    5482
                                             55 COMRAM     7     3      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                             16 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   71428
                                            100 BANK0     12     4      8
                        _frontsensor (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   66715
                                             97 COMRAM     2     2      0
                                             94 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   66095
                                             93 COMRAM     4     4      0
                                             56 BANK0     38    32      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7377
                                             41 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             16 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             10 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   37187
                                             81 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1232
                                             16 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     641
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             10 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             55 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             10 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1057
                                             71 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5087
                                             71 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4162
                                             55 COMRAM    16     8      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             10 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             30 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3686
                                             62 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             10 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3623
                                             30 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     973
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7163
                                             41 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             28 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             10 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             10 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5176
                                             41 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4897
                                             30 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1602
                                             23 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1102
                                             14 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                             13 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2485
                                             17 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             10 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             10 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _left                                                 1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                             14 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     158
                                             13 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (9) _send_byte                                            1     1      0     127
                                             12 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (10) _send_nibble                                         1     1      0      65
                                             11 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (11) _pulse_e                                             1     1      0      34
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _frontsensor                                         10     8      2    1093
                                             18 COMRAM    10     8      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     985
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _forward                                              1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _backright                                            1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _backleft                                             1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _backdrive                                            1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                             11 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                             11 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             23 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             10 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _EEPROM_save                                         14    14      0    2834
                                             16 COMRAM    14    14      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _EEPROM_prev                                         16    14      2    2989
                                             16 COMRAM    16    14      2
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1202
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     3     2      1     827
                                             10 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _interruptHandler                                   10    10      0      68
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_prev
     _EEPROM_ReadByte
     _EEPROM_WriteByte
     ___wmul
   _EEPROM_save
     _EEPROM_ReadByte
     _EEPROM_WriteByte
     ___wmul
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awmod
   ___fladd
     ___fldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
   ___fldiv
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
     _readADC (ARG)
       ___fldiv
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
   ___flmul
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flsub
     ___fladd
       ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
     ___fldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
   ___fltol
     ___fladd (ARG)
       ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___xxtofl
     ___wmul (ARG)
   _backdrive
   _backleft
   _backright
   _forward
   _frontsensor
     ___awdiv
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _left
   _printf
     _frontsensor (ARG)
       ___awdiv
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
             _readADC (ARG)
               ___fldiv
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
               ___wmul
               ___xxtofl
                 ___wmul (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower
   _readADC
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
   _right

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     41      DC       7       85.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     70      72       5       89.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     65      73       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C1      34        0.0%
DATA                 0      0     1C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 10 14:50:41 2019

                 ___fldiv@aexp 0037                   ___fldiv@bexp 0036                   ___fldiv@sign 002F  
                  __CFG_CPD$ON 000000                   ___awdiv@sign 0010            ___wmul@multiplicand 000D  
                  __CFG_BORV$3 000000                   main@Distance 019C                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                  __CFG_OSC$HS 000000                            l313 4398                            l335 4180  
                          l239 0978                            l613 3100                            l269 1150  
                          l615 3108                            l553 1840                            l479 4100  
                          l728 4372                            l497 2F14                            l499 2F1C  
                          l579 1B22                            l966 3E6E                            _GIE 007F97  
                 __CFG_CPB$OFF 000000                            _PSA 007EAB                            _abs 48A8  
                          _pad 40D2                   ___awmod@sign 0010                            wreg 000FE8  
                 ___flmul@aexp 002C                   ___flmul@bexp 0031                   ___flmul@sign 002B  
                 ___flmul@temp 0036                   ___flmul@prod 0032                   __CFG_LVP$OFF 000000  
                 ___fltol@exp1 0051                   __CFG_WDT$OFF 000000                    main@compare 0176  
                         ?_abs 001D                           l1230 2A50                           l1231 2A2E  
                         l1315 263C                           l1332 28DA                           l1324 2854  
                         l1325 2850                           l1246 2B22                           l1430 3426  
                         l1255 2B88                           l1256 2B84                           l1513 4728  
                         l1418 3BBE                           l1363 3A04                           l1356 3986  
                         l1285 2D8C                           l1526 4772                           l1296 2DFA  
                         l1297 2DF6                           l1387 48D0                           l6002 48DC  
                         l6024 4B98                           l6112 3A76                           l6054 4324  
                         ?_pad 001F                           l6056 4330                           l8000 4292  
                         l6066 4364                           l6082 39B4                           l8012 42B8  
                         l8100 3E58                           l6084 39BA                           l6076 3996  
                         l8014 42C0                           l8006 42A2                           l7302 485C  
                         l6094 3A2A                           l6086 39C6                           l8032 42F8  
                         l8024 42E0                           l6096 3A36                           l6088 39EC  
                         l7306 4A34                           l8106 3EA6                           l8114 4A18  
                         l7410 2A40                           l7330 293A                           l9004 34EA  
                         l8028 42EA                           l7308 4A38                           l8212 2F46  
                         l8060 444E                           l8052 442E                           l8044 4414  
                         l8140 3FDE                           l8124 3F94                           l9014 3518  
                         l8222 303E                           l8054 4436                           l7510 2BFE  
                         l7334 293E                           l8150 3FF6                           l8310 169C  
                         l9008 34FC                           l8208 2F36                           l8064 4458  
                         l8048 4420                           l8080 425C                           l7504 2BF4  
                         l7432 2A96                           l7424 2A74                           l7408 2A3C  
                         l8152 4002                           l8144 3FEE                           l9042 35C8  
                         l8170 47F8                           l8242 30A2                           l7434 2A9A  
                         l7442 2AAC                           l7354 2982                           l7610 34B4  
                         l7602 3448                           l8322 1710                           l9028 3570  
                         l7532 40F8                           l8180 466A                           l7700 3C46  
                         l8068 4466                           l8084 427A                           l8076 4228  
                         l8092 3E0E                           l7508 2BFC                           l7460 2B46  
                         l7452 2B12                           l8500 1D62                           l8420 1B1A  
                         l8412 1AC2                           l8332 17D4                           l8308 1684  
                         l8316 16CC                           l8260 1520                           l9204 0322  
                         l7542 414E                           l7534 410A                           l7710 3CA4  
                         l8246 30BA                           l7470 2B5C                           l7366 29A6  
                         l7358 2986                           l8158 401E                           l7606 3486  
                         l8510 1DB8                           l8422 1B3C                           l8406 1A84  
                         l8326 174A                           l9310 0720                           l9222 0380  
                         l9214 034E                           l9150 016E                           l9142 0112  
                         l9056 3620                           l7288 4488                           l7528 40EA  
                         l7800 2D8A                           l8096 3E42                           l8520 1DE4  
                         l8344 1828                           l8328 1798                           l8272 154E  
                         l8280 1564                           l7298 4846                           l7538 4122  
                         l8178 465E                           l7714 3CCA                           l7706 3C8E  
                         l8194 2EF8                           l7730 2C46                           l7562 3F2C  
                         l8434 1BBE                           l8362 1898                           l8354 1850  
                         l8290 15D0                           l8610 32E6                           l9250 04B0  
                         l9226 039A                           l7660 388E                           l7652 3854  
                         l7812 2DC0                           l7476 2B66                           l7396 29E2  
                         l8380 18DE                           l8364 189C                           l8348 184A  
                         l8292 15E8                           l9412 0A56                           l9308 0718  
                         l9244 0470                           l9228 039E                           l9164 022E  
                         l7670 38EA                           l7646 382C                           l7806 2DA2  
                         l7750 2C86                           l7734 2C4A                           l7558 3F22  
                         l7574 4608                           l8446 1BEE                           l8454 1C0E  
                         l8462 1C32                           l8470 1CCA                           l8390 1918  
                         l8374 18BA                           l8710 1F16                           l8702 1F08  
                         l9430 0B38                           l9422 0B08                           l9190 0296  
                         l9158 01CA                           l8632 3AF4                           l8616 3A9A  
                         l7840 2E8C                           l7832 2E3E                           l7496 2BCE  
                         l7568 3F6C                           l7592 3388                           l8536 1E44  
                         l8544 1E7E                           l8384 18EE                           l8712 1F58  
                         l9432 0B3C                           l9272 05C2                           l9416 0A68  
                         l8642 3B5E                           l8634 3AFC                           l8626 3AE4  
                         l8618 3A9E                           l7658 387A                           l7674 3900  
                         l7690 3BF4                           l7762 2CBE                           l7754 2C8A  
                         l8482 1D0C                           l8298 1618                           l8810 2456  
                         l8706 1F0C                           l9530 0F1C                           l9426 0B1E  
                         l9362 0926                           l9266 0582                           l9186 028E  
                         l8636 3B02                           l7836 2E62                           l8572 316E  
                         l8564 314C                           l8724 1FC4                           l9372 095A  
                         l9348 08A0                           l9196 02B0                           _ADON 007E10  
                         l8638 3B2A                           l7678 3926                           l7694 3C18  
                         l7846 2E98                           l7870 25EC                           l8398 1A0E  
                         l8662 405A                           l8558 311C                           l8830 2562  
                         l8726 1FE2                           l9710 1348                           l9542 0F42  
                         l9518 0EC6                           l9470 0D20                           l9454 0C4E  
                         l7848 2E9A                           l7776 2CEC                           l7768 2CD4  
                         l7944 281A                           l7872 25FC                           l8664 4068  
                         l8824 2526                           l8744 20BA                           l8728 1FF0  
                         l8840 2588                           l9712 1356                           l9616 10DC  
                         l9448 0C0E                           l9384 099C                           l9368 0944  
                         l7698 3C32                           l7794 2D64                           l7786 2D3C  
                         l7938 27FC                           l8498 1D58                           l8586 31FC  
                         l8594 3272                           l8834 256E                           l8746 20D8  
                         l8690 1EFC                           l9386 09A4                           l8940 36AA  
                         l8916 43A8                           l7980 28F8                           l7964 2898  
                         l7868 25E8                           l8772 2226                           l8764 21C0  
                         l8748 20E6                           l9476 0D60                           l8918 43AC  
                         l7886 2628                           l8782 22D8                           l8694 1F00  
                         l8686 1EEA                           l9734 13F4                           l9742 1420  
                         l9718 1374                           l9662 11EA                           l9574 0FF4  
                         l9558 0F9E                           l9494 0DEC                           l8960 370C  
                         l8936 3698                           l7968 28B6                           l7896 265A  
                         l7888 262C                           l8688 1EEC                           l9752 1460  
                         l9736 1402                           l9760 1482                           l9656 11B6  
                         l9576 1000                           l8946 36C6                           l8794 235E  
                         l8698 1F04                           l8866 45B6                           l9770 14C2  
                         l9674 1230                           l8868 45DC                           l9756 1472  
                         l9596 1068                           l8974 375C                           l9694 12CA  
                         STR_1 FF71                           STR_2 FE86                           STR_3 FE95  
                         STR_4 FF45                           STR_5 FF45                           l8988 37AC  
                         STR_6 FFD8                           STR_7 FE2A                           STR_8 FFE6  
                         STR_9 FE2A                           _T0CS 007EAD                           _T0SE 007EAC  
                         _LATD 000F8C                           u7080 4906                           u7160 4334  
                         u7240 3A40                           u7305 4B78                           u7306 4B7A  
                         u9010 3406                           u9110 4994                           u8310 4480  
                         u9030 3466                           u7095 4908                           u9015 33FC  
                         u9120 4996                           u8330 44C8                           u9035 345C  
                         u9060 48A0                           u7285 456E                           u9230 3C4A  
                         u9070 48A2                           u9151 385A                           u8520 2A58  
                         u8360 4964                           u9080 475A                           u9170 3892  
                         u8370 4966                           u9090 475C                           u9420 2DF0  
                         u8470 2A04                           u8295 4A7A                           u8296 4A7C  
                         u8480 2A14                           u9610 284A                           u8730 2BDA  
                         u8650 2B6A                           u8490 2A16                           u9460 2E4C  
                         u8900 3F66                           u9710 42C4                           u8830 48B6  
                         u9470 2E70                           u8670 2B7E                           u8910 4642  
                         u9560 2648                           u8840 3EE8                           u9650 28A6  
                         u9570 27BE                           u8930 470E                           u8770 4934  
                         u9820 4276                           u9660 28C4                           u9900 3FB2  
                         u8940 4710                           u8780 4936                           u8845 3EDE  
                         u8917 4638                           u9575 27B4                           u8960 3356  
                         u9905 3FA8                           u9770 443A                           u8890 3F64  
                         u8970 3376                           u9940 4008                           u8885 3F46  
                         u8965 334C                           u9970 47F4                           u9890 3F82  
                         u8995 33A0                           u8996 33A6                           u8997 33B4  
                         u9990 2ECA                           _WREN 007D32                           abs@a 001D  
                         _dbuf 010F                           _atoi 3A88                           _ctoa 464C  
                         _main 0012                           _dtoa 2EA2                           _left 4AF0  
     __end_of_interruptHandler 3DDA                           _keys FE13                           _prec 0070  
                         _time 0108                           _nout 00F0                           pad@i 0026  
                         pad@p 0023                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 0028                           fsr2l 000FD9                           btemp 0074  
                         _xtoa 30E4                  ___fpclassifyf 3EAA                           prodh 000FF4  
                         prodl 000FF3                           start 000E                  __CFG_IESO$OFF 000000  
              ___fldiv@new_exp 0030       __size_of_EEPROM_ReadByte 0014                   _tolower$1990 0017  
                __CFG_MCLRE$ON 000000                   ___param_bank 000000                          ??_abs 001F  
                        ??_pad 0025          I2C_Master_Read@ackBit 000C               ?_I2C_Master_Init 0018  
             ?_I2C_Master_Read 0001               ?_I2C_Master_Wait 0001               ?_I2C_Master_Stop 0001  
                 main@dispense 0170                  ___fltol@sign1 0050                __end_of___aodiv 3948  
                        ?_atoi 0012                          ?_ctoa 002A                __end_of___fladd 2C1A  
                        ?_main 0001                          ?_dtoa 002A                          ?_left 0001  
              __end_of___aomod 3CEC                __end_of___fldiv 2EA2                __end_of___awdiv 4302  
              __end_of___flneg 4A2A                          _EEADR 000FA9                          STR_10 FF45  
                        STR_11 FFD0                          STR_12 FFAD                          STR_20 FF50  
                        STR_13 FF7C                          STR_21 FF07                          STR_14 FF45  
                        STR_30 FFBF                          STR_22 FEA4                          STR_15 FF45  
                        STR_23 FF21                          STR_31 FE3A                          STR_16 FF45  
                        STR_40 FFC8                          STR_32 FF39                          STR_24 FE59  
                        STR_17 FF90                          STR_25 FF5B                          STR_41 FF2D  
                        STR_33 FE4A                          STR_18 FF86                          STR_34 FEEC  
                        STR_50 FEC2                          STR_26 FE77                          STR_42 FE68  
                        STR_19 FF7C                          STR_51 FF9A                          STR_35 FFDF  
                        STR_43 FF9A                          STR_27 FEFA                          STR_44 FF2D  
                        STR_60 FFFB                          STR_52 FFEB                          STR_36 FFA4  
                        STR_28 FF66                __end_of___awmod 4470                          STR_53 FFF3  
                        STR_29 FFB6                          STR_37 FEDE                          STR_45 FED0  
                        STR_62 FFFB                          STR_38 FFDF                          STR_46 FEB3  
                        STR_47 FF9A                          STR_39 FF14                          STR_48 FF2D  
                        STR_56 FFEF                          STR_49 FEC5                          STR_57 FFF7  
              __end_of___flmul 290E                __end_of___flsub 47C2                __end_of___fltol 4030  
                        u10000 2ECC                __end_of___lldiv 4384                          u10100 3080  
                        u10030 2F0A                          u10120 308C                          u10200 15A8  
                        u11000 2028                          u10050 2F30                          u11010 202A  
                        u10060 304C                          u11020 2038                          u10310 1836  
                        u10230 165A                          u10080 306E                          u10240 165C  
                        u10160 153E                          u11120 225A                          u10081 306C  
                        u10090 307C                          u11050 211E                          u11300 37F4  
                        u10340 1868                          u11060 2120                          u10190 15A6  
                        u11150 23E0                          u11070 212E                          u10280 17FC  
                        u11160 23E2                          u11330 35C0                          u11250 43C0  
                        u10610 1DCE                          u11410 0226                          u11340 3618  
                        u10380 18B6                          u10700 31A0                ___awdiv@divisor 000D  
                        u11350 3672                          u10630 1E2E                          u10550 1CEE  
                        u10710 31A2                          u11190 248A                          u12207 0314  
                        ?_xtoa 002A                          u11280 3754                          u10640 1E30  
                        u10800 32B2                          u11600 0750                          u11601 074E  
                        u12217 0336                          u12137 0148                          u11290 37A4  
                        u10810 32B6                          u10730 31DA                          u12307 0992  
                        u12227 0354                          u12147 0156                          u10740 31DC  
                        u11700 0A64                          u11540 05D4                          u12317 09B0  
                        u11541 05D2                          u12237 0446                          u12157 0166  
                        u10670 30F6                          u11550 05E4                          u12407 101E  
                        u12327 0BE4                          u11551 05E2                          u12247 0558  
                        u12167 01A4                          u10840 3AE0                          u10760 324E  
                        u11640 093E                          u11560 05F4                          u12417 1086  
                        u12337 0CF6                          u12257 0608                          u11561 05F2  
                        u12177 01B0                          u10770 3282                          u10690 316A  
                        u11730 0B06                          u11650 0954                          u12507 4AE6  
                        u12427 10FA                          u12347 0D6C                          u12267 065E  
                        u12187 01C2                          u10860 3B8E                          u10940 40AE  
                        u11580 0730                          u12517 4AF8                          u10765 323C  
                        u12437 1162                          u12357 0E9A                          u12277 0764  
                        u11581 072E                          u12197 023A                          u10870 3B90  
                        u10790 32A4                          u11590 0740                          u12607 49A6  
                        u12527 4B0A                          u10791 32A2                          u12447 124C  
                        u12367 0EDA                          u12287 0914                          u11591 073E  
                        u12617 49B4                          u12537 44E2                          u12457 12E6  
                        u12377 0F10                          u12297 0980                          u12627 49C2  
                        u12547 44FA                          u12467 1392                          u12387 0F60  
                        u12637 4B1C                          u12557 450C                          u12477 146A  
                        u12397 0FBA                          u12647 4B2E                          u12567 452E  
                        u12487 14CC                          u12657 4B40                          u12577 4A62  
                        u12497 4AD4                          u12667 4B52                          u12587 4A6C  
                        u12677 49D6                          u12597 4390                          u12687 49E4  
                        u12697 49F2                ___awdiv@counter 000F                   vfpfcnvrt@fmt 00BA  
                        _TMR0H 000FD7                   vfpfcnvrt@llu 00C6                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR1L 000FCE                          _PORTB 000F81  
                        _TRISD 000F95                  __CFG_PWRT$OFF 000000                   main@miniTick 0172  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                __end_of_lcdInst 4BE6                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
                 main@keypress 0181                 __CFG_EBTR3$OFF 000000                          _State 01C8  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
                        _balls 0104                __end_of_readADC 41F4                __end_of_initLCD 4546  
               __CFG_EBTRB$OFF 000000                          _flags 0072                  _BallDispensed 01A0  
                        _fputc 4470                __end_of_isalpha 48A8                __end_of_forward 49CC  
                        _fputs 483C                __end_of_isdigit 499C                          _right 4ACC  
                        _timer 0100                          atoi@n 001F                          pad@fp 001F  
                        atoi@s 0012                          _width 006E                          ctoa@c 002C  
                        _putch 4BCE                          _start 010B                          ctoa@w 002D  
                        main@j 017A                          dtoa@d 002C                          dtoa@i 004C  
                        main@x 0196                          dtoa@n 0044                          dtoa@p 003E  
                        dtoa@s 0042                          dtoa@w 0040                __end_of_islower 493C  
              __end_of_isspace 4800                __end_of_isupper 496C                          tablat 000FF5  
                 ?_frontsensor 0013                send_nibble@data 000C                __end_of_pulse_e 4A7E  
                        ttemp5 0075                          ttemp6 0078                          ttemp7 007C  
                        status 000FD8    I2C_Master_Read@receivedByte 000D                   main@statleft 0188  
                        wtemp8 0075                 ?___fpclassifyf 000B                __end_of_tolower 4732  
                        xtoa@c 004F                          xtoa@d 002C                          xtoa@i 004D  
                        xtoa@n 0045                          xtoa@p 0041                          xtoa@w 0043  
                        xtoa@x 0034                __end_of_strncmp 40D2                __end_of_toupper 477C  
               __CFG_PBADEN$ON 000000                   _toupper$2005 0017             main@number_pressed 0167  
              __initialization 469A           __size_of_EEPROM_save 018C           __size_of_EEPROM_prev 01AE  
                 __end_of_atoi 3BC8                   __end_of_ctoa 469A                   __end_of_main 14D6  
                 __end_of_dtoa 30E4                   __end_of_left 4B14                   __end_of_keys FE24  
                 __end_of_xtoa 3310                EEPROM_save@loop 0017                EEPROM_save@temp 0015  
                       ??_atoi 0014                         ??_ctoa 002D                         ??_main 0064  
                       ??_dtoa 0034                         ??_left 000B                         ??_xtoa 0035  
                __activetblptr 000002                EEPROM_prev@loop 0017                EEPROM_prev@temp 0015  
            ?_I2C_Master_Start 0001              ?_I2C_Master_Write 000C             ??_I2C_Master_Start 000C  
                       _ADCON0 000FC2                         _ADCON1 000FC1             ??_I2C_Master_Write 000E  
                 ?_send_nibble 0001                         ?_fputc 000F                         ?_fputs 0018  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         _EEDATA 000FA8  
                       _EECON2 000FA7                         ?_right 0001                         _T08BIT 007EAE  
             ___awdiv@dividend 000B                         ?_putch 0001           EEPROM_prev@loop_1114 0019  
         EEPROM_prev@loop_1115 001B                         _INT1IE 007F83                         _INT1IF 007F80  
                       i2l7150 3D1A                         i2l7160 3D3C               __end_of_backleft 4B5C  
                       i2l7172 3D74                         i2l7166 3D58                         i2l7184 3DB2  
                       i2l7178 3D7C                  vfpfcnvrt@done 00CE                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _TMR0ON 007EAF                         _TMR1ON 007E68  
                       _SSPADD 000FC8                         _SSPBUF 000FC9                  main@miniClear 017F  
             __end_of___xxtofl 3A88                  main@miniState 0184                 __CFG_XINST$OFF 000000  
                 vfprintf@cfmt 0062                         ___flge 3DDA                         ___fleq 41F4  
                    ??___aodiv 001B                      ??___fladd 0040                      ??___aomod 001B  
                       ___wmul 4AA6                      ??___fldiv 0027                      ??___awdiv 000F  
                    ??___flneg 000F                 __CFG_STVREN$ON 000000                      ??___awmod 000F  
                    ??___flmul 0027                      ??___flsub 0050                      ??___fltol 004C  
                    ??___lldiv 0013                         _efgtoa 14D6                         _floorf 3310  
            ??_EEPROM_ReadByte 000B                         clear_0 46C0                         clear_1 46D2  
             ___awdiv@quotient 0011                ___awmod@divisor 000D                ___awmod@counter 000F  
                    ??_lcdInst 000E                         _printf 4A7E       __end_of_EEPROM_WriteByte 490C  
                       pad@buf 0021                         ctoa@fp 002A                         dtoa@fp 002A  
                       _strcpy 45F8                         _strlen 4A2A                      ??_readADC 003C  
                    ??_initLCD 000F                         fputc@c 000F                         fputs@c 001C  
                       fputs@i 001D                         fputs@s 0018                      ??_isalpha 000D  
                    ??_forward 000B                      ??_isdigit 000D                ___fpclassifyf@e 0013  
              ___fpclassifyf@u 0015                ___fpclassifyf@x 000B                      ??_islower 000D  
                 __mediumconst FE12                      ??_isspace 000D                         tblptrh 000FF7  
                    ??_isupper 000D                         tblptrl 000FF6                         tblptru 000FF8  
             __end_of_vfprintf 45F8                      ??_pulse_e 000B                      ??_tolower 0013  
      main@number_pressed_1025 0178                  main@statright 0186                         xtoa@fp 002A  
                    ??_strncmp 0011                      ??_toupper 0013                     ___flge@ff1 003F  
                   ___flge@ff2 0043                ??___fpclassifyf 000F                   ___xxtofl@arg 001B  
        pulse_e@interruptState 000B                   ___xxtofl@exp 001A                   ___xxtofl@val 0011  
                   ___fleq@ff1 000B                     ___fleq@ff2 000F                     __accesstop 0080  
      __end_of__initialization 46D8                     ___flneg@f1 000B                  ___rparam_used 000001  
                   ___fltol@f1 0048             __size_of_backdrive 0030             __size_of_backright 0024  
               __pcstackCOMRAM 0001                frontsensor@time 0019                   __pidataBANK1 4800  
                __end_of_fputc 44DC                  __end_of_fputs 4874                  __end_of_right 4AF0  
                __end_of_putch 4BDA                _key_was_pressed 010E               EEPROM_save@shift 001D  
EEPROM_WriteByte@eepromAddress 000C                        ??_fputc 0013                        ??_fputs 001C  
                      ??_right 000B                  _B_was_pressed 010D                        ??_putch 000E  
                   __pbssBANK0 00F0                     __pbssBANK1 0100              ?_interruptHandler 0001  
             EEPROM_prev@shift 001F           __size_of_frontsensor 007C               EEPROM_prev@trial 0011  
           ??_interruptHandler 0001                        ?___flge 003F                        ?___fleq 000B  
                      ?___wmul 000B   EEPROM_ReadByte@eepromAddress 000B                        ?_efgtoa 0052  
                      ?_floorf 0038             __size_of_send_byte 0012                        ?_printf 00E4  
                    ?_backleft 0001                        ?_strcpy 000B                        ?_strlen 000B  
                    ?___xxtofl 0011              __end_of_backdrive 49FC              __end_of_backright 4B38  
           __size_of_vfpfcnvrt 0718                        _SSPCON1 000FC6                        _SSPCON2 000FC5  
                      _SSPSTAT 000FC7           __size_of_send_nibble 0016               _DistanceCanister 01B4  
                      __Hparam 0000                        __Lparam 0000                __size_of___flge 00D0  
              __size_of___fleq 008A                        ___aodiv 3800                        ___fladd 290E  
                      ___aomod 3BC8                        ___fldiv 2C1A                        ___awdiv 427E  
                      ___flneg 49FC                        ___awmod 4400                        ___flmul 25BC  
                      ___flsub 477C                        ___fltol 3F76                        ___lldiv 4302  
              __size_of___wmul 0026                      ?_vfprintf 00DE                __size_of_efgtoa 09CE  
              __size_of_floorf 01B6                        __pcinit 469A                        __ramtop 1000  
                      _lcdInst 4BDA                        __ptext0 0012                        __ptext1 4ACC  
                      __ptext2 4168                        __ptext3 3948                        __ptext4 4A7E  
                      __ptext5 45A2                        __ptext6 1EA4                        __ptext7 30E4  
                      __ptext8 4732                        __ptext9 490C                     ??_backleft 000B  
              __size_of_printf 0028                        _readADC 4168                __size_of_strcpy 0054  
              __size_of_strlen 002A                        _initLCD 44DC                   __size_of_abs 0032  
                 __size_of_pad 0096                        _isalpha 4874                        _forward 499C  
                      _isdigit 496C                     ??___xxtofl 0015               ___awmod@dividend 000B  
                      _islower 490C                        _isspace 47C2                        _isupper 493C  
     __size_of_I2C_Master_Init 005C       __size_of_I2C_Master_Read 0024                        efgtoa@c 0058  
                      efgtoa@d 0098                        efgtoa@e 00B0                        efgtoa@f 0054  
                      efgtoa@g 00AC                        efgtoa@h 00A2                        efgtoa@i 00AA  
                      efgtoa@l 00A6                        efgtoa@m 0094                        efgtoa@n 00B2  
                      efgtoa@p 009C                        efgtoa@t 0090                        efgtoa@u 00B4  
                      efgtoa@w 009F       __size_of_I2C_Master_Wait 0012       __size_of_I2C_Master_Stop 0008  
                      atoi@neg 0018                        _pulse_e 4A54                        _tolower 46E6  
                      main@now 0165                        _strncmp 4030                 __pintcode_body 3CEC  
                      _toupper 4732           end_of_initialization 46D8                        floorf@e 0046  
                      floorf@m 0042                        floorf@u 0048                        floorf@x 0038  
        __end_of_LCD_SIZE_HORZ FE2A              __end_of_send_byte 4BBC          __end_of_LCD_SIZE_VERT FE29  
                      fputc@fp 0011                  __Lmediumconst FE12                        int_func 3CEC  
                      fputs@fp 001A                  ??_EEPROM_save 0011                  ??_EEPROM_prev 0013  
              _EEPROM_ReadByte 4B96      __size_of_I2C_Master_Start 0008      __size_of_I2C_Master_Write 000A  
              ___lldiv@divisor 000F                ___lldiv@counter 0017              __end_of_vfpfcnvrt 25BC  
                   efgtoa@mode 00A1                     efgtoa@sign 009A                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     ??_vfprintf 0062                        strcpy@d 0013  
                      strlen@a 000D                        strcpy@s 0011                        strlen@s 000B  
                    _PORTAbits 000F80                      _PORTBbits 000F81                      _PORTCbits 000F82  
            ?_EEPROM_WriteByte 000B                    ___fladd@grs 0047             ??_EEPROM_WriteByte 000C  
                ___xxtofl@sign 0019                      _TRISAbits 000F92                      _TRISBbits 000F93  
                    _TRISCbits 000F94                    ___fldiv@grs 0032                    ___fldiv@rem 002B  
                  ___flmul@grs 002D                     main@countl 015F                     main@countr 0161  
                send_byte@data 000D                     main@righty 018E               frontsensor@front 001B  
          __end_of_EEPROM_save 3800            __end_of_EEPROM_prev 3674                 __end_of___flge 3EAA  
               __end_of___fleq 427E                    vfpfcnvrt@ap 00BC                    vfpfcnvrt@ct 00DA  
                  vfpfcnvrt@fp 00B8                    vfpfcnvrt@ll 00BE                 __end_of___wmul 4ACC  
               __end_of_efgtoa 1EA4                 __end_of_floorf 34C6                     floorf@F524 0066  
               __end_of_printf 4AA6                 __end_of_strcpy 464C                 __end_of_strlen 4A54  
          start_initialization 469A                    __end_of_abs 48DA                    __end_of_pad 4168  
      __end_of_EEPROM_ReadByte 4BAA              ??_I2C_Master_Init 001C              ??_I2C_Master_Read 000C  
            ??_I2C_Master_Wait 000B              ??_I2C_Master_Stop 000C          __end_of___fpclassifyf 3F76  
            interruptHandler@i 0009                    vfprintf@fmt 00E0                       ??___flge 0047  
                     ??___fleq 0013                       ??___wmul 000F                       ??_efgtoa 0059  
     I2C_Master_Init@clockFreq 0018                    __pdataBANK1 01A0                       ??_floorf 003C  
             __CFG_LPT1OSC$OFF 000000                       ??_printf 0064      __size_of_interruptHandler 3DD2  
                     ??_strcpy 000F                       ??_strlen 000D                      ___fladd@a 003C  
                    ___fladd@b 0038                      ___fldiv@a 0023                      ___fldiv@b 001F  
                    ___flmul@a 0023                      ___flmul@b 001F                    __pbssCOMRAM 0066  
                    ___flsub@a 004C                      ___flsub@b 0048              __size_of_backleft 0024  
                __pcstackBANK0 0080                  __pcstackBANK1 015F               ___aodiv@dividend 000B  
            __size_of___xxtofl 0140                      _backdrive 49CC                      _backright 4B14  
                ??_frontsensor 0015                      _atoi$1876 001A                      _atoi$1877 001E  
                    _atoi$1878 001C                    _EEPROM_save 3674               _I2C_Master_Start 4BF8  
                  _EEPROM_prev 34C6               _I2C_Master_Write 4BE6                    _efgtoa$1360 0086  
                  _efgtoa$1370 008E                    _efgtoa$1364 0088                    _efgtoa$1359 0084  
                  _efgtoa$1368 008A                    _efgtoa$1369 008C                      _dtoa$1336 003C  
            __CFG_CCP2MX$PORTC 000000                      __pintcode 0008                  __pmediumconst FE12  
                     ?___aodiv 000B                       ?___fladd 0038                       ?___aomod 000B  
                     ?___fldiv 001F                       ?___awdiv 000B               ___aodiv@quotient 001D  
                     ?___flneg 000B                       ?___awmod 000B                       ?___flmul 001F  
                     ?___flsub 0048                       ?___fltol 0048                       ?___lldiv 000B  
                     ?_lcdInst 0001              __size_of_vfprintf 0056                       ?_readADC 0038  
                     ?_initLCD 0001                       ?_isalpha 000B                       ?_forward 0001  
                     ?_isdigit 000B                       ?_islower 000B                       ?_isspace 000B  
                     ?_isupper 000B                  ??_send_nibble 000C                       ?_pulse_e 0001  
                     ?_tolower 0011                     ?_backdrive 0001                 __size_of_fputc 006C  
               __size_of_fputs 0038                       ?_strncmp 000B                       ?_toupper 0011  
               __size_of_right 0024                     ?_backright 0001               ?_EEPROM_ReadByte 0001  
               __size_of_putch 000C                 ___wmul@product 000F                       _LATAbits 000F89  
                     _LATBbits 000F8A                       _LATCbits 000F8B                       _LATDbits 000F8C  
         EEPROM_save@loop_1106 0019           EEPROM_save@loop_1107 001B                      _send_byte 4BAA  
               _LCD_LINE1_ADDR FE27                 _LCD_LINE2_ADDR FE26                 _LCD_LINE3_ADDR FE25  
               _LCD_LINE4_ADDR FE24            __end_of_frontsensor 4400                       i2u828_40 3DC6  
             __CFG_WDTPS$32768 000000                      _vfpfcnvrt 1EA4     EEPROM_WriteByte@gie_Status 000D  
                    _xtoa$1380 003D                      _xtoa$1381 003F                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0              ___wmul@multiplier 000B                      main@clear 0192  
                    main@clock 0169                      main@count 019A                      main@lefty 018C  
                    main@front 0194                       _Canister 0106                      main@prev2 0182  
                    main@state 0190     EEPROM_WriteByte@eepromData 000B                   EEPROM_save@x 0013  
                 _isspace$1916 0011                   EEPROM_prev@x 001D                     vfpfcnvrt@c 00DD  
                   vfpfcnvrt@f 00D6                      copy_data0 46AE      __size_of_EEPROM_WriteByte 0032  
       __end_of_LCD_LINE1_ADDR FE28         __end_of_LCD_LINE2_ADDR FE27         __end_of_LCD_LINE3_ADDR FE26  
       __end_of_LCD_LINE4_ADDR FE25            __end_of_send_nibble 4B96                     _EECON1bits 000FA6  
                   ?_send_byte 0001                       __Hrparam 0000                     vfprintf@ap 00E2  
                     __Lrparam 0000                     vfprintf@fp 00DE             __CFG_BOREN$SBORDIS 000000  
             __size_of___aodiv 0148               __size_of___fladd 030C               __size_of___aomod 0124  
             __size_of___fldiv 0288               __size_of___awdiv 0084               __size_of___flneg 002E  
             __size_of___awmod 0070               __size_of___flmul 0352               __size_of___flsub 0046  
             __size_of___fltol 00BA               __size_of___lldiv 0082                     ?_vfpfcnvrt 00B8  
               readADC@channel 003E                ___aodiv@divisor 0013               _interruptHandler 0008  
              ___aodiv@counter 001B                       _backleft 4B38             ___fpclassifyf@F463 006A  
             __size_of_lcdInst 000C                _I2C_Master_Init 4546               __size_of_readADC 008C  
              _I2C_Master_Read 4B5C               __size_of_initLCD 006A                       ___xxtofl 3948  
              _I2C_Master_Wait 4BBC                _I2C_Master_Stop 4BF0               __size_of_isalpha 0034  
             __size_of_forward 0030               __size_of_isdigit 0030               __size_of_islower 0030  
             __size_of_isspace 003E                       __ptext10 4874                       __ptext11 4030  
                     __ptext20 290E                       __ptext12 14D6                       __ptext21 49FC  
                     __ptext13 46E6                       __ptext30 3800                       __ptext22 25BC  
                     __ptext14 493C                       __ptext31 464C                       __ptext23 3DDA  
                     __ptext15 45F8                       __ptext40 4AF0                       __ptext32 40D2  
                     __ptext24 41F4                       __ptext16 3310                       __ptext41 44DC  
                     __ptext33 4A2A                       __ptext25 2C1A                       __ptext17 3EAA  
                     __ptext50 4B38                       __ptext42 4BDA                       __ptext34 483C  
                     __ptext26 4400                       __ptext18 3F76                       __ptext51 49CC  
                     __ptext43 4BAA                       __ptext35 4470                       __ptext27 2EA2  
                     __ptext19 477C                       __ptext60 34C6                       __ptext52 4BE6  
                     __ptext44 4B80                       __ptext36 4BCE                       __ptext28 48A8  
                     __ptext61 4AA6                       __ptext53 4BF0                       __ptext45 4A54  
                     __ptext37 3A88                       __ptext29 3BC8                       __ptext62 48DA  
                     __ptext54 4BF8                       __ptext46 4384                       __ptext38 47C2  
                     __ptext63 4B96                       __ptext55 4B5C                       __ptext47 427E  
                     __ptext39 496C                       __ptext56 4BBC                       __ptext48 499C  
                     __ptext57 4546                       __ptext49 4B14                       __ptext58 4302  
                     __ptext59 3674               __size_of_isupper 0030                    ??_backdrive 000B  
                  ??_backright 000B               __size_of_pulse_e 002A               __size_of_tolower 004C  
                   strcpy@dest 000B               __size_of_strncmp 00A2               __size_of_toupper 004A  
                  _frontsensor 4384                  __size_of_atoi 0140                  __size_of_ctoa 004E  
                __size_of_main 14C4                  __size_of_dtoa 0242                  __size_of_left 0024  
                     _exit_key 010C                  __size_of_xtoa 022C                       _keypress 010A  
                     efgtoa@fp 0052                       efgtoa@ne 0096                       efgtoa@pp 0092  
                     efgtoa@ou 0080                       int$flags 0074                       _vfprintf 45A2  
                     main@back 0163                      printf@fmt 00E4                       main@circ 017B  
                     main@tick 0174                       main@prev 018A    I2C_Master_Write@byteToWrite 000C  
             ___aomod@dividend 000B                      putch@data 000E                 _vfpfcnvrt$1402 00D4  
     __end_of_I2C_Master_Start 4C00                 _vfpfcnvrt$1395 00D0                 _vfpfcnvrt$1396 00D2  
     __end_of_I2C_Master_Write 4BF0                     _INTCONbits 000FF2                       isalpha@c 000B  
                     isdigit@c 000B                    _send_nibble 4B80                       intlevel2 0000  
                _LCD_SIZE_HORZ FE29                       islower@c 000B                  _LCD_SIZE_VERT FE28  
                     isspace@c 000B               ___lldiv@dividend 000B                   ?_EEPROM_save 0001  
                    strcpy@src 000D                   ?_EEPROM_prev 0011                    ??_send_byte 000D  
                     isupper@c 000B                      strncmp@_l 000B                      strncmp@_r 000D  
                  efgtoa@nmode 009E                       printf@ap 00EE        __end_of_I2C_Master_Init 45A2  
              ___aomod@divisor 0013        __end_of_I2C_Master_Read 4B80        __end_of_I2C_Master_Wait 4BCE  
      __end_of_I2C_Master_Stop 4BF8                    ??_vfpfcnvrt 005E                    lcdInst@data 000E  
              ___aomod@counter 001B                       tolower@c 0011         __size_of___fpclassifyf 00CC  
             ___lldiv@quotient 0013                       strncmp@l 0012                       strncmp@n 000F  
                     strncmp@r 0014                       toupper@c 0011                    _SSPCON1bits 000FC6  
                  _SSPCON2bits 000FC5                  ___fladd@signs 0044                   ___aodiv@sign 001C  
             _EEPROM_WriteByte 48DA                   ___fladd@aexp 0045                   ___fladd@bexp 0046  
                 ___aomod@sign 001C  
