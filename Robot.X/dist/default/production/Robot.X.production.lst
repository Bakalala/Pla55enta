

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb  2 21:55:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 2.05
    62                           ; Generated 20/12/2018 GMT
    63                           ; 
    64                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4620 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  001BDE                     __pidataCOMRAM:
    98                           	opt callstack 0
    99                           
   100                           ;initializer for _balls
   101  001BDE  0005               	dw	5
   102                           
   103                           ;initializer for _time
   104  001BE0  001E               	dw	30
   105                           
   106                           	psect	idataBANK0
   107  001BE2                     __pidataBANK0:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _Canister
   111  001BE2  0008               	dw	8
   112                           
   113                           	psect	idataBANK1
   114  001930                     __pidataBANK1:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _BallDispensed
   118  001930  0001               	dw	1
   119  001932  0001               	dw	1
   120  001934  0001               	dw	1
   121  001936  0000               	dw	0
   122  001938  0000               	dw	0
   123  00193A  0001               	dw	1
   124  00193C  0001               	dw	1
   125  00193E  0000               	dw	0
   126  001940  FFFF               	dw	65535
   127  001942  FFFF               	dw	65535
   128                           
   129                           ;initializer for _DistanceCanister
   130  001944  0014               	dw	20
   131  001946  001E               	dw	30
   132  001948  0028               	dw	40
   133  00194A  003B               	dw	59
   134  00194C  007B               	dw	123
   135  00194E  00D4               	dw	212
   136  001950  014C               	dw	332
   137  001952  0190               	dw	400
   138  001954  FFFF               	dw	65535
   139  001956  FFFF               	dw	65535
   140                           
   141                           ;initializer for _State
   142  001958  0001               	dw	1
   143  00195A  0001               	dw	1
   144  00195C  0001               	dw	1
   145  00195E  0000               	dw	0
   146  001960  0000               	dw	0
   147  001962  0001               	dw	1
   148  001964  0001               	dw	1
   149  001966  0000               	dw	0
   150  001968  FFFF               	dw	65535
   151  00196A  FFFF               	dw	65535
   152                           
   153                           	psect	mediumconst
   154  00FE68                     __pmediumconst:
   155                           	opt callstack 0
   156  00FE68  00                 	db	0
   157  00FE69                     _keys:
   158                           	opt callstack 0
   159  00FE69  31                 	db	49
   160  00FE6A  32                 	db	50
   161  00FE6B  33                 	db	51
   162  00FE6C  41                 	db	65
   163  00FE6D  34                 	db	52
   164  00FE6E  35                 	db	53
   165  00FE6F  36                 	db	54
   166  00FE70  42                 	db	66
   167  00FE71  37                 	db	55
   168  00FE72  38                 	db	56
   169  00FE73  39                 	db	57
   170  00FE74  43                 	db	67
   171  00FE75  2A                 	db	42
   172  00FE76  30                 	db	48
   173  00FE77  23                 	db	35
   174  00FE78  44                 	db	68
   175  00FE79  00                 	db	0
   176  00FE7A                     __end_of_keys:
   177                           	opt callstack 0
   178  00FE7A  50                 	db	80
   179  00FE7B                     __end_of_LCD_LINE4_ADDR:
   180                           	opt callstack 0
   181  00FE7B  10                 	db	16
   182  00FE7C                     __end_of_LCD_LINE3_ADDR:
   183                           	opt callstack 0
   184  00FE7C  40                 	db	64
   185  00FE7D                     __end_of_LCD_LINE2_ADDR:
   186                           	opt callstack 0
   187  00FE7D  00                 	db	0
   188  00FE7E                     __end_of_LCD_LINE1_ADDR:
   189                           	opt callstack 0
   190  00FE7E                     _LCD_SIZE_VERT:
   191                           	opt callstack 0
   192  00FE7E  04                 	db	4
   193  00FE7F                     __end_of_LCD_SIZE_VERT:
   194                           	opt callstack 0
   195  00FE7F                     _LCD_SIZE_HORZ:
   196                           	opt callstack 0
   197  00FE7F  10                 	db	16
   198  00FE80                     __end_of_LCD_SIZE_HORZ:
   199                           	opt callstack 0
   200  0000                     _PORTB	set	3969
   201  0000                     _ADCON1	set	4033
   202  0000                     _TRISD	set	3989
   203  0000                     _LATD	set	3980
   204  0000                     _LATDbits	set	3980
   205  0000                     _INTCONbits	set	4082
   206  0000                     _INT1IF	set	32640
   207  0000                     _INT1IE	set	32643
   208  00FE80                     STR_4:
   209  00FE80  49                 	db	73	;'I'
   210  00FE81  74                 	db	116	;'t'
   211  00FE82  27                 	db	39
   212  00FE83  73                 	db	115	;'s'
   213  00FE84  20                 	db	32
   214  00FE85  79                 	db	121	;'y'
   215  00FE86  61                 	db	97	;'a'
   216  00FE87  20                 	db	32
   217  00FE88  62                 	db	98	;'b'
   218  00FE89  6F                 	db	111	;'o'
   219  00FE8A  79                 	db	121	;'y'
   220  00FE8B  20                 	db	32
   221  00FE8C  41                 	db	65	;'A'
   222  00FE8D  6C                 	db	108	;'l'
   223  00FE8E  69                 	db	105	;'i'
   224  00FE8F  21                 	db	33
   225  00FE90  00                 	db	0
   226  00FE91  49                 	db	73	;'I'
   227  00FE92  6E                 	db	110	;'n'
   228  00FE93  64                 	db	100	;'d'
   229  00FE94  69                 	db	105	;'i'
   230  00FE95  76                 	db	118	;'v'
   231  00FE96  69                 	db	105	;'i'
   232  00FE97  64                 	db	100	;'d'
   233  00FE98  75                 	db	117	;'u'
   234  00FE99  61                 	db	97	;'a'
   235  00FE9A  6C                 	db	108	;'l'
   236  00FE9B  20                 	db	32
   237  00FE9C  49                 	db	73	;'I'
   238  00FE9D  6E                 	db	110	;'n'
   239  00FE9E  66                 	db	102	;'f'
   240  00FE9F  6F                 	db	111	;'o'
   241  00FEA0  00                 	db	0
   242  00FEA1  50                 	db	80	;'P'
   243  00FEA2  72                 	db	114	;'r'
   244  00FEA3  65                 	db	101	;'e'
   245  00FEA4  73                 	db	115	;'s'
   246  00FEA5  73                 	db	115	;'s'
   247  00FEA6  20                 	db	32
   248  00FEA7  30                 	db	48	;'0'
   249  00FEA8  20                 	db	32
   250  00FEA9  74                 	db	116	;'t'
   251  00FEAA  6F                 	db	111	;'o'
   252  00FEAB  20                 	db	32
   253  00FEAC  25                 	db	37
   254  00FEAD  64                 	db	100	;'d'
   255  00FEAE  20                 	db	32
   256  00FEAF  00                 	db	0
   257  00FEB0                     STR_5:
   258  00FEB0  48                 	db	72	;'H'
   259  00FEB1  65                 	db	101	;'e'
   260  00FEB2  20                 	db	32
   261  00FEB3  67                 	db	103	;'g'
   262  00FEB4  65                 	db	101	;'e'
   263  00FEB5  74                 	db	116	;'t'
   264  00FEB6  74                 	db	116	;'t'
   265  00FEB7  69                 	db	105	;'i'
   266  00FEB8  6E                 	db	110	;'n'
   267  00FEB9  20                 	db	32
   268  00FEBA  68                 	db	104	;'h'
   269  00FEBB  6F                 	db	111	;'o'
   270  00FEBC  74                 	db	116	;'t'
   271  00FEBD  20                 	db	32
   272  00FEBE  00                 	db	0
   273  00FEBF                     STR_13:
   274  00FEBF  4F                 	db	79	;'O'
   275  00FEC0  70                 	db	112	;'p'
   276  00FEC1  65                 	db	101	;'e'
   277  00FEC2  72                 	db	114	;'r'
   278  00FEC3  61                 	db	97	;'a'
   279  00FEC4  74                 	db	116	;'t'
   280  00FEC5  69                 	db	105	;'i'
   281  00FEC6  6F                 	db	111	;'o'
   282  00FEC7  6E                 	db	110	;'n'
   283  00FEC8  20                 	db	32
   284  00FEC9  54                 	db	84	;'T'
   285  00FECA  69                 	db	105	;'i'
   286  00FECB  6D                 	db	109	;'m'
   287  00FECC  65                 	db	101	;'e'
   288  00FECD  00                 	db	0
   289  00FECE                     STR_24:
   290  00FECE  44                 	db	68	;'D'
   291  00FECF  69                 	db	105	;'i'
   292  00FED0  73                 	db	115	;'s'
   293  00FED1  74                 	db	116	;'t'
   294  00FED2  61                 	db	97	;'a'
   295  00FED3  6E                 	db	110	;'n'
   296  00FED4  63                 	db	99	;'c'
   297  00FED5  65                 	db	101	;'e'
   298  00FED6  20                 	db	32
   299  00FED7  25                 	db	37
   300  00FED8  64                 	db	100	;'d'
   301  00FED9  20                 	db	32
   302  00FEDA  63                 	db	99	;'c'
   303  00FEDB  6D                 	db	109	;'m'
   304  00FEDC  00                 	db	0
   305  00FEDD  23                 	db	35
   306  00FEDE  20                 	db	32
   307  00FEDF  6F                 	db	111	;'o'
   308  00FEE0  66                 	db	102	;'f'
   309  00FEE1  20                 	db	32
   310  00FEE2  43                 	db	67	;'C'
   311  00FEE3  61                 	db	97	;'a'
   312  00FEE4  6E                 	db	110	;'n'
   313  00FEE5  69                 	db	105	;'i'
   314  00FEE6  73                 	db	115	;'s'
   315  00FEE7  74                 	db	116	;'t'
   316  00FEE8  65                 	db	101	;'e'
   317  00FEE9  72                 	db	114	;'r'
   318  00FEEA  73                 	db	115	;'s'
   319  00FEEB  00                 	db	0
   320  00FEEC                     STR_11:
   321  00FEEC  43                 	db	67	;'C'
   322  00FEED  61                 	db	97	;'a'
   323  00FEEE  6E                 	db	110	;'n'
   324  00FEEF  69                 	db	105	;'i'
   325  00FEF0  73                 	db	115	;'s'
   326  00FEF1  74                 	db	116	;'t'
   327  00FEF2  65                 	db	101	;'e'
   328  00FEF3  72                 	db	114	;'r'
   329  00FEF4  20                 	db	32
   330  00FEF5  49                 	db	73	;'I'
   331  00FEF6  6E                 	db	110	;'n'
   332  00FEF7  64                 	db	100	;'d'
   333  00FEF8  65                 	db	101	;'e'
   334  00FEF9  78                 	db	120	;'x'
   335  00FEFA  00                 	db	0
   336  00FEFB                     STR_28:
   337  00FEFB  43                 	db	67	;'C'
   338  00FEFC  61                 	db	97	;'a'
   339  00FEFD  6E                 	db	110	;'n'
   340  00FEFE  69                 	db	105	;'i'
   341  00FEFF  73                 	db	115	;'s'
   342  00FF00  74                 	db	116	;'t'
   343  00FF01  65                 	db	101	;'e'
   344  00FF02  72                 	db	114	;'r'
   345  00FF03  20                 	db	32
   346  00FF04  45                 	db	69	;'E'
   347  00FF05  6D                 	db	109	;'m'
   348  00FF06  70                 	db	112	;'p'
   349  00FF07  74                 	db	116	;'t'
   350  00FF08  79                 	db	121	;'y'
   351  00FF09  00                 	db	0
   352  00FF0A                     STR_32:
   353  00FF0A  4E                 	db	78	;'N'
   354  00FF0B  6F                 	db	111	;'o'
   355  00FF0C  20                 	db	32
   356  00FF0D  42                 	db	66	;'B'
   357  00FF0E  61                 	db	97	;'a'
   358  00FF0F  6C                 	db	108	;'l'
   359  00FF10  6C                 	db	108	;'l'
   360  00FF11  20                 	db	32
   361  00FF12  41                 	db	65	;'A'
   362  00FF13  64                 	db	100	;'d'
   363  00FF14  64                 	db	100	;'d'
   364  00FF15  65                 	db	101	;'e'
   365  00FF16  64                 	db	100	;'d'
   366  00FF17  00                 	db	0
   367  00FF18                     STR_27:
   368  00FF18  43                 	db	67	;'C'
   369  00FF19  61                 	db	97	;'a'
   370  00FF1A  6E                 	db	110	;'n'
   371  00FF1B  69                 	db	105	;'i'
   372  00FF1C  73                 	db	115	;'s'
   373  00FF1D  74                 	db	116	;'t'
   374  00FF1E  65                 	db	101	;'e'
   375  00FF1F  72                 	db	114	;'r'
   376  00FF20  20                 	db	32
   377  00FF21  46                 	db	70	;'F'
   378  00FF22  75                 	db	117	;'u'
   379  00FF23  6C                 	db	108	;'l'
   380  00FF24  6C                 	db	108	;'l'
   381  00FF25  00                 	db	0
   382  00FF26                     STR_3:
   383  00FF26  41                 	db	65	;'A'
   384  00FF27  20                 	db	32
   385  00FF28  66                 	db	102	;'f'
   386  00FF29  6F                 	db	111	;'o'
   387  00FF2A  72                 	db	114	;'r'
   388  00FF2B  20                 	db	32
   389  00FF2C  41                 	db	65	;'A'
   390  00FF2D  6C                 	db	108	;'l'
   391  00FF2E  69                 	db	105	;'i'
   392  00FF2F  20                 	db	32
   393  00FF30  3B                 	db	59	;';'
   394  00FF31  29                 	db	41
   395  00FF32  00                 	db	0
   396  00FF33  25                 	db	37
   397  00FF34  64                 	db	100	;'d'
   398  00FF35  20                 	db	32
   399  00FF36  43                 	db	67	;'C'
   400  00FF37  61                 	db	97	;'a'
   401  00FF38  6E                 	db	110	;'n'
   402  00FF39  69                 	db	105	;'i'
   403  00FF3A  73                 	db	115	;'s'
   404  00FF3B  74                 	db	116	;'t'
   405  00FF3C  65                 	db	101	;'e'
   406  00FF3D  72                 	db	114	;'r'
   407  00FF3E  73                 	db	115	;'s'
   408  00FF3F  00                 	db	0
   409  00FF40                     STR_34:
   410  00FF40  45                 	db	69	;'E'
   411  00FF41  72                 	db	114	;'r'
   412  00FF42  72                 	db	114	;'r'
   413  00FF43  6F                 	db	111	;'o'
   414  00FF44  72                 	db	114	;'r'
   415  00FF45  3A                 	db	58	;':'
   416  00FF46  20                 	db	32
   417  00FF47  50                 	db	80	;'P'
   418  00FF48  72                 	db	114	;'r'
   419  00FF49  65                 	db	101	;'e'
   420  00FF4A  73                 	db	115	;'s'
   421  00FF4B  73                 	db	115	;'s'
   422  00FF4C  00                 	db	0
   423  00FF4D                     STR_10:
   424  00FF4D  76                 	db	118	;'v'
   425  00FF4E  69                 	db	105	;'i'
   426  00FF4F  65                 	db	101	;'e'
   427  00FF50  77                 	db	119	;'w'
   428  00FF51  20                 	db	32
   429  00FF52  72                 	db	114	;'r'
   430  00FF53  65                 	db	101	;'e'
   431  00FF54  73                 	db	115	;'s'
   432  00FF55  75                 	db	117	;'u'
   433  00FF56  6C                 	db	108	;'l'
   434  00FF57  74                 	db	116	;'t'
   435  00FF58  73                 	db	115	;'s'
   436  00FF59  00                 	db	0
   437  00FF5A                     STR_35:
   438  00FF5A  43                 	db	67	;'C'
   439  00FF5B  6F                 	db	111	;'o'
   440  00FF5C  72                 	db	114	;'r'
   441  00FF5D  72                 	db	114	;'r'
   442  00FF5E  65                 	db	101	;'e'
   443  00FF5F  63                 	db	99	;'c'
   444  00FF60  74                 	db	116	;'t'
   445  00FF61  20                 	db	32
   446  00FF62  20                 	db	32
   447  00FF63  4B                 	db	75	;'K'
   448  00FF64  65                 	db	101	;'e'
   449  00FF65  79                 	db	121	;'y'
   450  00FF66  00                 	db	0
   451  00FF67                     STR_12:
   452  00FF67  73                 	db	115	;'s'
   453  00FF68  74                 	db	116	;'t'
   454  00FF69  61                 	db	97	;'a'
   455  00FF6A  72                 	db	114	;'r'
   456  00FF6B  74                 	db	116	;'t'
   457  00FF6C  73                 	db	115	;'s'
   458  00FF6D  20                 	db	32
   459  00FF6E  61                 	db	97	;'a'
   460  00FF6F  74                 	db	116	;'t'
   461  00FF70  20                 	db	32
   462  00FF71  30                 	db	48	;'0'
   463  00FF72  00                 	db	0
   464  00FF73                     STR_23:
   465  00FF73  43                 	db	67	;'C'
   466  00FF74  61                 	db	97	;'a'
   467  00FF75  6E                 	db	110	;'n'
   468  00FF76  73                 	db	115	;'s'
   469  00FF77  69                 	db	105	;'i'
   470  00FF78  74                 	db	116	;'t'
   471  00FF79  65                 	db	101	;'e'
   472  00FF7A  72                 	db	114	;'r'
   473  00FF7B  20                 	db	32
   474  00FF7C  25                 	db	37
   475  00FF7D  63                 	db	99	;'c'
   476  00FF7E  00                 	db	0
   477  00FF7F                     STR_7:
   478  00FF7F  41                 	db	65	;'A'
   479  00FF80  6C                 	db	108	;'l'
   480  00FF81  6D                 	db	109	;'m'
   481  00FF82  6F                 	db	111	;'o'
   482  00FF83  73                 	db	115	;'s'
   483  00FF84  74                 	db	116	;'t'
   484  00FF85  20                 	db	32
   485  00FF86  64                 	db	100	;'d'
   486  00FF87  6F                 	db	111	;'o'
   487  00FF88  6E                 	db	110	;'n'
   488  00FF89  65                 	db	101	;'e'
   489  00FF8A  00                 	db	0
   490  00FF8B  6F                 	db	111	;'o'
   491  00FF8C  66                 	db	102	;'f'
   492  00FF8D  20                 	db	32
   493  00FF8E  43                 	db	67	;'C'
   494  00FF8F  61                 	db	97	;'a'
   495  00FF90  6E                 	db	110	;'n'
   496  00FF91  69                 	db	105	;'i'
   497  00FF92  73                 	db	115	;'s'
   498  00FF93  74                 	db	116	;'t'
   499  00FF94  65                 	db	101	;'e'
   500  00FF95  72                 	db	114	;'r'
   501  00FF96  00                 	db	0
   502  00FF97                     STR_9:
   503  00FF97  50                 	db	80	;'P'
   504  00FF98  72                 	db	114	;'r'
   505  00FF99  65                 	db	101	;'e'
   506  00FF9A  73                 	db	115	;'s'
   507  00FF9B  73                 	db	115	;'s'
   508  00FF9C  20                 	db	32
   509  00FF9D  41                 	db	65	;'A'
   510  00FF9E  20                 	db	32
   511  00FF9F  74                 	db	116	;'t'
   512  00FFA0  6F                 	db	111	;'o'
   513  00FFA1  00                 	db	0
   514  00FFA2                     STR_14:
   515  00FFA2  25                 	db	37
   516  00FFA3  64                 	db	100	;'d'
   517  00FFA4  20                 	db	32
   518  00FFA5  73                 	db	115	;'s'
   519  00FFA6  65                 	db	101	;'e'
   520  00FFA7  63                 	db	99	;'c'
   521  00FFA8  6F                 	db	111	;'o'
   522  00FFA9  6E                 	db	110	;'n'
   523  00FFAA  64                 	db	100	;'d'
   524  00FFAB  73                 	db	115	;'s'
   525  00FFAC  00                 	db	0
   526  00FFAD  23                 	db	35
   527  00FFAE  20                 	db	32
   528  00FFAF  6F                 	db	111	;'o'
   529  00FFB0  66                 	db	102	;'f'
   530  00FFB1  20                 	db	32
   531  00FFB2  42                 	db	66	;'B'
   532  00FFB3  61                 	db	97	;'a'
   533  00FFB4  6C                 	db	108	;'l'
   534  00FFB5  6C                 	db	108	;'l'
   535  00FFB6  73                 	db	115	;'s'
   536  00FFB7  00                 	db	0
   537  00FFB8                     STR_6:
   538  00FFB8  48                 	db	72	;'H'
   539  00FFB9  69                 	db	105	;'i'
   540  00FFBA  20                 	db	32
   541  00FFBB  43                 	db	67	;'C'
   542  00FFBC  75                 	db	117	;'u'
   543  00FFBD  6C                 	db	108	;'l'
   544  00FFBE  6C                 	db	108	;'l'
   545  00FFBF  20                 	db	32
   546  00FFC0  21                 	db	33
   547  00FFC1  00                 	db	0
   548  00FFC2                     STR_25:
   549  00FFC2  2A                 	db	42
   550  00FFC3  20                 	db	32
   551  00FFC4  74                 	db	116	;'t'
   552  00FFC5  6F                 	db	111	;'o'
   553  00FFC6  20                 	db	32
   554  00FFC7  65                 	db	101	;'e'
   555  00FFC8  78                 	db	120	;'x'
   556  00FFC9  69                 	db	105	;'i'
   557  00FFCA  74                 	db	116	;'t'
   558  00FFCB  00                 	db	0
   559  00FFCC                     STR_8:
   560  00FFCC  41                 	db	65	;'A'
   561  00FFCD  4E                 	db	78	;'N'
   562  00FFCE  44                 	db	68	;'D'
   563  00FFCF  20                 	db	32
   564  00FFD0  44                 	db	68	;'D'
   565  00FFD1  4F                 	db	79	;'O'
   566  00FFD2  4E                 	db	78	;'N'
   567  00FFD3  45                 	db	69	;'E'
   568  00FFD4  00                 	db	0
   569  00FFD5  73                 	db	115	;'s'
   570  00FFD6  75                 	db	117	;'u'
   571  00FFD7  70                 	db	112	;'p'
   572  00FFD8  70                 	db	112	;'p'
   573  00FFD9  6C                 	db	108	;'l'
   574  00FFDA  69                 	db	105	;'i'
   575  00FFDB  65                 	db	101	;'e'
   576  00FFDC  64                 	db	100	;'d'
   577  00FFDD  00                 	db	0
   578  00FFDE  25                 	db	37
   579  00FFDF  64                 	db	100	;'d'
   580  00FFE0  20                 	db	32
   581  00FFE1  62                 	db	98	;'b'
   582  00FFE2  61                 	db	97	;'a'
   583  00FFE3  6C                 	db	108	;'l'
   584  00FFE4  6C                 	db	108	;'l'
   585  00FFE5  73                 	db	115	;'s'
   586  00FFE6  00                 	db	0
   587  00FFE7                     STR_2:
   588  00FFE7  74                 	db	116	;'t'
   589  00FFE8  6F                 	db	111	;'o'
   590  00FFE9  20                 	db	32
   591  00FFEA  73                 	db	115	;'s'
   592  00FFEB  74                 	db	116	;'t'
   593  00FFEC  61                 	db	97	;'a'
   594  00FFED  72                 	db	114	;'r'
   595  00FFEE  74                 	db	116	;'t'
   596  00FFEF  00                 	db	0
   597  00FFF0                     STR_1:
   598  00FFF0  50                 	db	80	;'P'
   599  00FFF1  72                 	db	114	;'r'
   600  00FFF2  65                 	db	101	;'e'
   601  00FFF3  73                 	db	115	;'s'
   602  00FFF4  73                 	db	115	;'s'
   603  00FFF5  20                 	db	32
   604  00FFF6  41                 	db	65	;'A'
   605  00FFF7  00                 	db	0
   606  00FFF8                     STR_37:
   607  00FFF8  41                 	db	65	;'A'
   608  00FFF9  20                 	db	32
   609  00FFFA  20                 	db	32
   610  00FFFB  4B                 	db	75	;'K'
   611  00FFFC  65                 	db	101	;'e'
   612  00FFFD  79                 	db	121	;'y'
   613  00FFFE  00                 	db	0
   614  0000                     
   615                           ; #config settings
   616  00FFFF  00                 	db	0	; dummy byte at the end
   617  0000                     
   618                           	psect	cinit
   619  0015A4                     __pcinit:
   620                           	opt callstack 0
   621  0015A4                     start_initialization:
   622                           	opt callstack 0
   623  0015A4                     __initialization:
   624                           	opt callstack 0
   625                           
   626                           ; Initialize objects allocated to BANK1 (60 bytes)
   627                           ; load TBLPTR registers with __pidataBANK1
   628  0015A4  0E30               	movlw	low __pidataBANK1
   629  0015A6  6EF6               	movwf	tblptrl,c
   630  0015A8  0E19               	movlw	high __pidataBANK1
   631  0015AA  6EF7               	movwf	tblptrh,c
   632  0015AC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   633  0015AE  6EF8               	movwf	tblptru,c
   634  0015B0  EE01  F000         	lfsr	0,__pdataBANK1
   635  0015B4  EE10 F03C          	lfsr	1,60
   636  0015B8                     copy_data0:
   637  0015B8  0009               	tblrd		*+
   638  0015BA  CFF5 FFEE          	movff	tablat,postinc0
   639  0015BE  50E5               	movf	postdec1,w,c
   640  0015C0  50E1               	movf	fsr1l,w,c
   641  0015C2  E1FA               	bnz	copy_data0
   642                           
   643                           ; Initialize objects allocated to BANK0 (2 bytes)
   644                           ; load TBLPTR registers with __pidataBANK0
   645  0015C4  0EE2               	movlw	low __pidataBANK0
   646  0015C6  6EF6               	movwf	tblptrl,c
   647  0015C8  0E1B               	movlw	high __pidataBANK0
   648  0015CA  6EF7               	movwf	tblptrh,c
   649  0015CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   650  0015CE  6EF8               	movwf	tblptru,c
   651  0015D0  0009               	tblrd		*+	;fetch initializer
   652  0015D2  CFF5 F0FE          	movff	tablat,__pdataBANK0
   653  0015D6  0009               	tblrd		*+	;fetch initializer
   654  0015D8  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   655                           
   656                           ; Initialize objects allocated to COMRAM (4 bytes)
   657                           ; load TBLPTR registers with __pidataCOMRAM
   658  0015DC  0EDE               	movlw	low __pidataCOMRAM
   659  0015DE  6EF6               	movwf	tblptrl,c
   660  0015E0  0E1B               	movlw	high __pidataCOMRAM
   661  0015E2  6EF7               	movwf	tblptrh,c
   662  0015E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   663  0015E6  6EF8               	movwf	tblptru,c
   664  0015E8  EE00  F076         	lfsr	0,__pdataCOMRAM
   665  0015EC  EE10 F004          	lfsr	1,4
   666  0015F0                     copy_data1:
   667  0015F0  0009               	tblrd		*+
   668  0015F2  CFF5 FFEE          	movff	tablat,postinc0
   669  0015F6  50E5               	movf	postdec1,w,c
   670  0015F8  50E1               	movf	fsr1l,w,c
   671  0015FA  E1FA               	bnz	copy_data1
   672                           
   673                           ; Clear objects allocated to BANK1 (32 bytes)
   674  0015FC  EE01  F03C         	lfsr	0,__pbssBANK1
   675  001600  0E20               	movlw	32
   676  001602                     clear_0:
   677  001602  6AEE               	clrf	postinc0,c
   678  001604  06E8               	decf	wreg,f,c
   679  001606  E1FD               	bnz	clear_0
   680                           
   681                           ; Clear objects allocated to BANK0 (9 bytes)
   682  001608  EE00  F0F5         	lfsr	0,__pbssBANK0
   683  00160C  0E09               	movlw	9
   684  00160E                     clear_1:
   685  00160E  6AEE               	clrf	postinc0,c
   686  001610  06E8               	decf	wreg,f,c
   687  001612  E1FD               	bnz	clear_1
   688                           
   689                           ; Clear objects allocated to COMRAM (4 bytes)
   690  001614  6A75               	clrf	(__pbssCOMRAM+3)& (0+255),c
   691  001616  6A74               	clrf	(__pbssCOMRAM+2)& (0+255),c
   692  001618  6A73               	clrf	(__pbssCOMRAM+1)& (0+255),c
   693  00161A  6A72               	clrf	__pbssCOMRAM& (0+255),c
   694  00161C                     end_of_initialization:
   695                           	opt callstack 0
   696  00161C                     __end_of__initialization:
   697                           	opt callstack 0
   698  00161C  907A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   699  00161E  927A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   700  001620  0E00               	movlw	low (__Lmediumconst shr (0+16))
   701  001622  6EF8               	movwf	tblptru,c
   702  001624  0100               	movlb	0
   703  001626  EF09  F000         	goto	_main	;jump to C main() function
   704                           
   705                           	psect	bssCOMRAM
   706  000072                     __pbssCOMRAM:
   707                           	opt callstack 0
   708  000072                     _nout:
   709                           	opt callstack 0
   710  000072                     	ds	2
   711  000074                     _error:
   712                           	opt callstack 0
   713  000074                     	ds	2
   714                           
   715                           	psect	dataCOMRAM
   716  000076                     __pdataCOMRAM:
   717                           	opt callstack 0
   718  000076                     _balls:
   719                           	opt callstack 0
   720  000076                     	ds	2
   721  000078                     _time:
   722                           	opt callstack 0
   723  000078                     	ds	2
   724                           
   725                           	psect	bssBANK0
   726  0000F5                     __pbssBANK0:
   727                           	opt callstack 0
   728  0000F5                     _width:
   729                           	opt callstack 0
   730  0000F5                     	ds	2
   731  0000F7                     _prec:
   732                           	opt callstack 0
   733  0000F7                     	ds	2
   734  0000F9                     _flags:
   735                           	opt callstack 0
   736  0000F9                     	ds	2
   737  0000FB                     _start:
   738                           	opt callstack 0
   739  0000FB                     	ds	1
   740  0000FC                     _exit_key:
   741                           	opt callstack 0
   742  0000FC                     	ds	1
   743  0000FD                     _key_was_pressed:
   744                           	opt callstack 0
   745  0000FD                     	ds	1
   746                           
   747                           	psect	dataBANK0
   748  0000FE                     __pdataBANK0:
   749                           	opt callstack 0
   750  0000FE                     _Canister:
   751                           	opt callstack 0
   752  0000FE                     	ds	2
   753                           
   754                           	psect	bssBANK1
   755  00013C                     __pbssBANK1:
   756                           	opt callstack 0
   757  00013C                     _dbuf:
   758                           	opt callstack 0
   759  00013C                     	ds	32
   760                           
   761                           	psect	dataBANK1
   762  000100                     __pdataBANK1:
   763                           	opt callstack 0
   764  000100                     _BallDispensed:
   765                           	opt callstack 0
   766  000100                     	ds	20
   767  000114                     _DistanceCanister:
   768                           	opt callstack 0
   769  000114                     	ds	20
   770  000128                     _State:
   771                           	opt callstack 0
   772  000128                     	ds	20
   773                           
   774                           	psect	cstackBANK0
   775  000080                     __pcstackBANK0:
   776                           	opt callstack 0
   777  000080                     ?_strlen:
   778                           	opt callstack 0
   779  000080                     ?___awmod:
   780                           	opt callstack 0
   781  000080                     ?___aodiv:
   782                           	opt callstack 0
   783  000080                     ?___aomod:
   784                           	opt callstack 0
   785  000080                     pulse_e@interruptState:
   786                           	opt callstack 0
   787  000080                     ___awmod@dividend:
   788                           	opt callstack 0
   789  000080                     strlen@s:
   790                           	opt callstack 0
   791  000080                     ___aodiv@dividend:
   792                           	opt callstack 0
   793  000080                     ___aomod@dividend:
   794                           	opt callstack 0
   795                           
   796                           ; 8 bytes @ 0x0
   797  000080                     	ds	1
   798  000081                     send_nibble@data:
   799                           	opt callstack 0
   800                           
   801                           ; 1 bytes @ 0x1
   802  000081                     	ds	1
   803  000082                     send_byte@data:
   804                           	opt callstack 0
   805  000082                     ___awmod@divisor:
   806                           	opt callstack 0
   807  000082                     strlen@a:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0x2
   811  000082                     	ds	1
   812  000083                     lcdInst@data:
   813                           	opt callstack 0
   814  000083                     putch@data:
   815                           	opt callstack 0
   816                           
   817                           ; 1 bytes @ 0x3
   818  000083                     	ds	1
   819  000084                     ??_initLCD:
   820  000084                     ___awmod@counter:
   821                           	opt callstack 0
   822  000084                     fputc@c:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0x4
   826  000084                     	ds	1
   827  000085                     ___awmod@sign:
   828                           	opt callstack 0
   829                           
   830                           ; 1 bytes @ 0x5
   831  000085                     	ds	1
   832  000086                     fputc@fp:
   833                           	opt callstack 0
   834                           
   835                           ; 2 bytes @ 0x6
   836  000086                     	ds	2
   837  000088                     ??_fputc:
   838  000088                     ___aodiv@divisor:
   839                           	opt callstack 0
   840  000088                     ___aomod@divisor:
   841                           	opt callstack 0
   842                           
   843                           ; 8 bytes @ 0x8
   844  000088                     	ds	5
   845  00008D                     fputs@s:
   846                           	opt callstack 0
   847                           
   848                           ; 2 bytes @ 0xD
   849  00008D                     	ds	2
   850  00008F                     fputs@fp:
   851                           	opt callstack 0
   852                           
   853                           ; 2 bytes @ 0xF
   854  00008F                     	ds	1
   855  000090                     ___aodiv@counter:
   856                           	opt callstack 0
   857  000090                     ___aomod@counter:
   858                           	opt callstack 0
   859                           
   860                           ; 1 bytes @ 0x10
   861  000090                     	ds	1
   862  000091                     ___aodiv@sign:
   863                           	opt callstack 0
   864  000091                     ___aomod@sign:
   865                           	opt callstack 0
   866  000091                     fputs@c:
   867                           	opt callstack 0
   868                           
   869                           ; 1 bytes @ 0x11
   870  000091                     	ds	1
   871  000092                     ?_abs:
   872                           	opt callstack 0
   873  000092                     abs@a:
   874                           	opt callstack 0
   875  000092                     fputs@i:
   876                           	opt callstack 0
   877  000092                     ___aodiv@quotient:
   878                           	opt callstack 0
   879                           
   880                           ; 8 bytes @ 0x12
   881  000092                     	ds	2
   882  000094                     ??_abs:
   883  000094                     ?_pad:
   884                           	opt callstack 0
   885  000094                     pad@fp:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x14
   889  000094                     	ds	2
   890  000096                     pad@buf:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x16
   894  000096                     	ds	2
   895  000098                     pad@p:
   896                           	opt callstack 0
   897                           
   898                           ; 2 bytes @ 0x18
   899  000098                     	ds	2
   900  00009A                     ??_pad:
   901                           
   902                           ; 1 bytes @ 0x1A
   903  00009A                     	ds	1
   904  00009B                     pad@i:
   905                           	opt callstack 0
   906                           
   907                           ; 2 bytes @ 0x1B
   908  00009B                     	ds	2
   909  00009D                     pad@w:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0x1D
   913  00009D                     	ds	2
   914  00009F                     ?_ctoa:
   915                           	opt callstack 0
   916  00009F                     ?_dtoa:
   917                           	opt callstack 0
   918  00009F                     ctoa@fp:
   919                           	opt callstack 0
   920  00009F                     dtoa@fp:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x1F
   924  00009F                     	ds	2
   925  0000A1                     ctoa@c:
   926                           	opt callstack 0
   927  0000A1                     dtoa@d:
   928                           	opt callstack 0
   929                           
   930                           ; 8 bytes @ 0x21
   931  0000A1                     	ds	1
   932  0000A2                     ctoa@w:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x22
   936  0000A2                     	ds	7
   937  0000A9                     ??_dtoa:
   938                           
   939                           ; 1 bytes @ 0x29
   940  0000A9                     	ds	8
   941  0000B1                     _dtoa$339:
   942                           	opt callstack 0
   943                           
   944                           ; 2 bytes @ 0x31
   945  0000B1                     	ds	2
   946  0000B3                     dtoa@p:
   947                           	opt callstack 0
   948                           
   949                           ; 2 bytes @ 0x33
   950  0000B3                     	ds	2
   951  0000B5                     dtoa@w:
   952                           	opt callstack 0
   953                           
   954                           ; 2 bytes @ 0x35
   955  0000B5                     	ds	2
   956  0000B7                     dtoa@s:
   957                           	opt callstack 0
   958                           
   959                           ; 2 bytes @ 0x37
   960  0000B7                     	ds	2
   961  0000B9                     dtoa@n:
   962                           	opt callstack 0
   963                           
   964                           ; 8 bytes @ 0x39
   965  0000B9                     	ds	8
   966  0000C1                     dtoa@i:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x41
   970  0000C1                     	ds	2
   971  0000C3                     ?_vfpfcnvrt:
   972                           	opt callstack 0
   973  0000C3                     vfpfcnvrt@fp:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x43
   977  0000C3                     	ds	2
   978  0000C5                     vfpfcnvrt@fmt:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x45
   982  0000C5                     	ds	2
   983  0000C7                     vfpfcnvrt@ap:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x47
   987  0000C7                     	ds	2
   988  0000C9                     ??_vfpfcnvrt:
   989                           
   990                           ; 1 bytes @ 0x49
   991  0000C9                     	ds	2
   992  0000CB                     vfpfcnvrt@ll:
   993                           	opt callstack 0
   994                           
   995                           ; 8 bytes @ 0x4B
   996  0000CB                     	ds	8
   997  0000D3                     vfpfcnvrt@c:
   998                           	opt callstack 0
   999                           
  1000                           ; 1 bytes @ 0x53
  1001  0000D3                     	ds	1
  1002  0000D4                     ?_vfprintf:
  1003                           	opt callstack 0
  1004  0000D4                     vfprintf@fp:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x54
  1008  0000D4                     	ds	2
  1009  0000D6                     vfprintf@fmt:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x56
  1013  0000D6                     	ds	2
  1014  0000D8                     vfprintf@ap:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x58
  1018  0000D8                     	ds	2
  1019  0000DA                     vfprintf@cfmt:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x5A
  1023  0000DA                     	ds	2
  1024  0000DC                     ?_printf:
  1025                           	opt callstack 0
  1026  0000DC                     printf@fmt:
  1027                           	opt callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x5C
  1030  0000DC                     	ds	4
  1031  0000E0                     
  1032                           ; 1 bytes @ 0x60
  1033  0000E0                     	ds	2
  1034  0000E2                     printf@ap:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x62
  1038  0000E2                     	ds	2
  1039  0000E4                     ??_main:
  1040                           
  1041                           ; 1 bytes @ 0x64
  1042  0000E4                     	ds	2
  1043  0000E6                     main@tick:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x66
  1047  0000E6                     	ds	2
  1048  0000E8                     main@miniTick:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x68
  1052  0000E8                     	ds	2
  1053  0000EA                     main@number_pressed:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x6A
  1057  0000EA                     	ds	2
  1058  0000EC                     main@miniClear:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x6C
  1062  0000EC                     	ds	2
  1063  0000EE                     main@keypress:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x6E
  1067  0000EE                     	ds	1
  1068  0000EF                     main@miniState:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x6F
  1072  0000EF                     	ds	4
  1073  0000F3                     main@state:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x73
  1077  0000F3                     	ds	2
  1078                           
  1079                           	psect	cstackCOMRAM
  1080  000001                     __pcstackCOMRAM:
  1081                           	opt callstack 0
  1082  000001                     ?i2_strlen:
  1083                           	opt callstack 0
  1084  000001                     ?i2___aodiv:
  1085                           	opt callstack 0
  1086  000001                     ?i2___aomod:
  1087                           	opt callstack 0
  1088  000001                     i2pulse_e@interruptState:
  1089                           	opt callstack 0
  1090  000001                     i2strlen@s:
  1091                           	opt callstack 0
  1092  000001                     i2___aodiv@dividend:
  1093                           	opt callstack 0
  1094  000001                     i2___aomod@dividend:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 8 bytes @ 0x0
  1098  000001                     	ds	1
  1099  000002                     i2send_nibble@data:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x1
  1103  000002                     	ds	1
  1104  000003                     i2send_byte@data:
  1105                           	opt callstack 0
  1106  000003                     i2strlen@a:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x2
  1110  000003                     	ds	1
  1111  000004                     i2lcdInst@data:
  1112                           	opt callstack 0
  1113  000004                     i2putch@data:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x3
  1117  000004                     	ds	1
  1118  000005                     i2fputc@c:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x4
  1122  000005                     	ds	2
  1123  000007                     i2fputc@fp:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x6
  1127  000007                     	ds	2
  1128  000009                     ??i2_fputc:
  1129  000009                     i2___aodiv@divisor:
  1130                           	opt callstack 0
  1131  000009                     i2___aomod@divisor:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 8 bytes @ 0x8
  1135  000009                     	ds	5
  1136  00000E                     i2fputs@s:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 2 bytes @ 0xD
  1140  00000E                     	ds	2
  1141  000010                     i2fputs@fp:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0xF
  1145  000010                     	ds	1
  1146  000011                     i2___aodiv@counter:
  1147                           	opt callstack 0
  1148  000011                     i2___aomod@counter:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x10
  1152  000011                     	ds	1
  1153  000012                     i2___aodiv@sign:
  1154                           	opt callstack 0
  1155  000012                     i2___aomod@sign:
  1156                           	opt callstack 0
  1157  000012                     i2fputs@c:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x11
  1161  000012                     	ds	1
  1162  000013                     ?i2_abs:
  1163                           	opt callstack 0
  1164  000013                     i2abs@a:
  1165                           	opt callstack 0
  1166  000013                     i2fputs@i:
  1167                           	opt callstack 0
  1168  000013                     i2___aodiv@quotient:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 8 bytes @ 0x12
  1172  000013                     	ds	2
  1173  000015                     ??i2_abs:
  1174  000015                     ?i2_pad:
  1175                           	opt callstack 0
  1176  000015                     i2pad@fp:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x14
  1180  000015                     	ds	2
  1181  000017                     i2pad@buf:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x16
  1185  000017                     	ds	2
  1186  000019                     i2pad@p:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x18
  1190  000019                     	ds	2
  1191  00001B                     ??i2_pad:
  1192                           
  1193                           ; 1 bytes @ 0x1A
  1194  00001B                     	ds	1
  1195  00001C                     i2pad@i:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x1B
  1199  00001C                     	ds	2
  1200  00001E                     i2pad@w:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x1D
  1204  00001E                     	ds	2
  1205  000020                     ?i2_ctoa:
  1206                           	opt callstack 0
  1207  000020                     ?i2_dtoa:
  1208                           	opt callstack 0
  1209  000020                     i2ctoa@fp:
  1210                           	opt callstack 0
  1211  000020                     i2dtoa@fp:
  1212                           	opt callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x1F
  1215  000020                     	ds	2
  1216  000022                     i2ctoa@c:
  1217                           	opt callstack 0
  1218  000022                     i2dtoa@d:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 8 bytes @ 0x21
  1222  000022                     	ds	1
  1223  000023                     i2ctoa@w:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x22
  1227  000023                     	ds	7
  1228  00002A                     ??i2_dtoa:
  1229                           
  1230                           ; 1 bytes @ 0x29
  1231  00002A                     	ds	8
  1232  000032                     i2_dtoa$339:
  1233                           	opt callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x31
  1236  000032                     	ds	2
  1237  000034                     i2dtoa@p:
  1238                           	opt callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x33
  1241  000034                     	ds	2
  1242  000036                     i2dtoa@w:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x35
  1246  000036                     	ds	2
  1247  000038                     i2dtoa@s:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x37
  1251  000038                     	ds	2
  1252  00003A                     i2dtoa@n:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 8 bytes @ 0x39
  1256  00003A                     	ds	8
  1257  000042                     i2dtoa@i:
  1258                           	opt callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x41
  1261  000042                     	ds	2
  1262  000044                     ?i2_vfpfcnvrt:
  1263                           	opt callstack 0
  1264  000044                     i2vfpfcnvrt@fp:
  1265                           	opt callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x43
  1268  000044                     	ds	2
  1269  000046                     i2vfpfcnvrt@fmt:
  1270                           	opt callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x45
  1273  000046                     	ds	2
  1274  000048                     i2vfpfcnvrt@ap:
  1275                           	opt callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x47
  1278  000048                     	ds	2
  1279  00004A                     ??i2_vfpfcnvrt:
  1280                           
  1281                           ; 1 bytes @ 0x49
  1282  00004A                     	ds	2
  1283  00004C                     i2vfpfcnvrt@ll:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 8 bytes @ 0x4B
  1287  00004C                     	ds	8
  1288  000054                     i2vfpfcnvrt@c:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x53
  1292  000054                     	ds	1
  1293  000055                     ?i2_vfprintf:
  1294                           	opt callstack 0
  1295  000055                     i2vfprintf@fp:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x54
  1299  000055                     	ds	2
  1300  000057                     i2vfprintf@fmt:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x56
  1304  000057                     	ds	2
  1305  000059                     i2vfprintf@ap:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x58
  1309  000059                     	ds	2
  1310  00005B                     i2vfprintf@cfmt:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x5A
  1314  00005B                     	ds	2
  1315  00005D                     ?i2_printf:
  1316                           	opt callstack 0
  1317  00005D                     i2printf@fmt:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x5C
  1321  00005D                     	ds	2
  1322  00005F                     i2printf@ret:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x5E
  1326  00005F                     	ds	2
  1327  000061                     i2printf@ap:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x60
  1331  000061                     	ds	2
  1332  000063                     ??_interruptHandler:
  1333                           
  1334                           ; 1 bytes @ 0x62
  1335  000063                     	ds	12
  1336  00006F                     interruptHandler@i:
  1337                           	opt callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x6E
  1340  00006F                     	ds	2
  1341  000071                     interruptHandler@keypress:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 1 bytes @ 0x70
  1345  000071                     	ds	1
  1346                           
  1347 ;;
  1348 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1349 ;;
  1350 ;; *************** function _main *****************
  1351 ;; Defined at:
  1352 ;;		line 38 in file "main.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  miniState       2  111[BANK0 ] int 
  1357 ;;  miniClear       2  108[BANK0 ] int 
  1358 ;;  number_press    2  106[BANK0 ] int 
  1359 ;;  miniTick        2  104[BANK0 ] int 
  1360 ;;  keypress        1  110[BANK0 ] unsigned char 
  1361 ;;  state           2  115[BANK0 ] int 
  1362 ;;  clear           2    0        int 
  1363 ;;  tick            2  102[BANK0 ] int 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;Total ram usage:       17 bytes
  1378 ;; Hardware stack levels required when called:   23
  1379 ;; This function calls:
  1380 ;;		___awmod
  1381 ;;		_initLCD
  1382 ;;		_lcdInst
  1383 ;;		_printf
  1384 ;; This function is called by:
  1385 ;;		Startup code after reset
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text0
  1390  000012                     __ptext0:
  1391                           	opt callstack 0
  1392  000012                     _main:
  1393                           	opt callstack 8
  1394                           
  1395                           ;main.c: 42:     LATD = 0x00;
  1396                           
  1397                           ;incstack = 0
  1398  000012  0E00               	movlw	0
  1399  000014  6E8C               	movwf	3980,c	;volatile
  1400                           
  1401                           ;main.c: 43:     TRISD = 0x00;
  1402  000016  0E00               	movlw	0
  1403  000018  6E95               	movwf	3989,c	;volatile
  1404                           
  1405                           ;main.c: 46:     ADCON1 = 0b00001111;
  1406  00001A  0E0F               	movlw	15
  1407  00001C  6EC1               	movwf	4033,c	;volatile
  1408                           
  1409                           ;main.c: 49:     INT1IE = 1;
  1410  00001E  86F0               	bsf	4080,3,c	;volatile
  1411                           
  1412                           ;main.c: 52:     initLCD();
  1413  000020  EC4E  F00B         	call	_initLCD	;wreg free
  1414                           
  1415                           ;main.c: 55:     (INTCONbits.GIE = 1);
  1416  000024  8EF2               	bsf	4082,7,c	;volatile
  1417                           
  1418                           ;main.c: 59:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  1419  000026  0E0C               	movlw	12
  1420  000028  ECDB  F00D         	call	_lcdInst
  1421                           
  1422                           ;main.c: 60:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1423  00002C  0E01               	movlw	1
  1424  00002E  ECDB  F00D         	call	_lcdInst
  1425  000032  0E11               	movlw	17
  1426  000034  0100               	movlb	0	; () banked
  1427  000036  6FE4               	movwf	??_main& (0+255),b
  1428  000038  0E3A               	movlw	58
  1429  00003A                     u2497:
  1430  00003A  2EE8               	decfsz	wreg,f,c
  1431  00003C  D7FE               	bra	u2497
  1432  00003E  2FE4               	decfsz	??_main& (0+255),f,b
  1433  000040  D7FC               	bra	u2497
  1434  000042  F000               	nop	
  1435                           
  1436                           ;main.c: 61:     printf("Press A");
  1437  000044  0EF0               	movlw	low STR_1
  1438  000046  0100               	movlb	0	; () banked
  1439  000048  6FDC               	movwf	printf@fmt& (0+255),b
  1440  00004A  0EFF               	movlw	high STR_1
  1441  00004C  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1442  00004E  EC92  F00D         	call	_printf	;wreg free
  1443  000052  0EC0               	movlw	192
  1444  000054  ECDB  F00D         	call	_lcdInst
  1445                           
  1446                           ;main.c: 63:     printf("to start");
  1447  000058  0EE7               	movlw	low STR_2
  1448  00005A  0100               	movlb	0	; () banked
  1449  00005C  6FDC               	movwf	printf@fmt& (0+255),b
  1450  00005E  0EFF               	movlw	high STR_2
  1451  000060  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1452  000062  EC92  F00D         	call	_printf	;wreg free
  1453  000066  0ED0               	movlw	208
  1454  000068  ECDB  F00D         	call	_lcdInst
  1455                           
  1456                           ;main.c: 65:     printf("A for Ali ;)");
  1457  00006C  0E26               	movlw	low STR_3
  1458  00006E  0100               	movlb	0	; () banked
  1459  000070  6FDC               	movwf	printf@fmt& (0+255),b
  1460  000072  0EFF               	movlw	high STR_3
  1461  000074  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1462  000076  EC92  F00D         	call	_printf	;wreg free
  1463  00007A                     l2691:
  1464  00007A  0100               	movlb	0	; () banked
  1465  00007C  51FB               	movf	_start& (0+255),w,b	;volatile
  1466  00007E  B4D8               	btfsc	status,2,c
  1467  000080  D7FC               	goto	l2691
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;main.c: 69:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1471  000082  0E01               	movlw	1
  1472  000084  ECDB  F00D         	call	_lcdInst
  1473  000088  0E11               	movlw	17
  1474  00008A  0100               	movlb	0	; () banked
  1475  00008C  6FE4               	movwf	??_main& (0+255),b
  1476  00008E  0E3A               	movlw	58
  1477  000090                     u2507:
  1478  000090  2EE8               	decfsz	wreg,f,c
  1479  000092  D7FE               	bra	u2507
  1480  000094  2FE4               	decfsz	??_main& (0+255),f,b
  1481  000096  D7FC               	bra	u2507
  1482  000098  F000               	nop	
  1483                           
  1484                           ;main.c: 70:     printf("It's ya boy Ali!");
  1485  00009A  0E80               	movlw	low STR_4
  1486  00009C  0100               	movlb	0	; () banked
  1487  00009E  6FDC               	movwf	printf@fmt& (0+255),b
  1488  0000A0  0EFE               	movlw	high STR_4
  1489  0000A2  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1490  0000A4  EC92  F00D         	call	_printf	;wreg free
  1491                           
  1492                           ;main.c: 71:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1493  0000A8  0E33               	movlw	51
  1494  0000AA  0100               	movlb	0	; () banked
  1495  0000AC  6FE5               	movwf	(??_main+1)& (0+255),b
  1496  0000AE  0EBB               	movlw	187
  1497  0000B0  6FE4               	movwf	??_main& (0+255),b
  1498  0000B2  0EDF               	movlw	223
  1499  0000B4                     u2517:
  1500  0000B4  2EE8               	decfsz	wreg,f,c
  1501  0000B6  D7FE               	bra	u2517
  1502  0000B8  2FE4               	decfsz	??_main& (0+255),f,b
  1503  0000BA  D7FC               	bra	u2517
  1504  0000BC  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1505  0000BE  D7FA               	bra	u2517
  1506  0000C0  D000               	nop2	
  1507  0000C2  0E90               	movlw	144
  1508  0000C4  ECDB  F00D         	call	_lcdInst
  1509                           
  1510                           ;main.c: 73:     printf("He gettin hot ");
  1511  0000C8  0EB0               	movlw	low STR_5
  1512  0000CA  0100               	movlb	0	; () banked
  1513  0000CC  6FDC               	movwf	printf@fmt& (0+255),b
  1514  0000CE  0EFE               	movlw	high STR_5
  1515  0000D0  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1516  0000D2  EC92  F00D         	call	_printf	;wreg free
  1517                           
  1518                           ;main.c: 74:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1519  0000D6  0E33               	movlw	51
  1520  0000D8  0100               	movlb	0	; () banked
  1521  0000DA  6FE5               	movwf	(??_main+1)& (0+255),b
  1522  0000DC  0EBB               	movlw	187
  1523  0000DE  6FE4               	movwf	??_main& (0+255),b
  1524  0000E0  0EDF               	movlw	223
  1525  0000E2                     u2527:
  1526  0000E2  2EE8               	decfsz	wreg,f,c
  1527  0000E4  D7FE               	bra	u2527
  1528  0000E6  2FE4               	decfsz	??_main& (0+255),f,b
  1529  0000E8  D7FC               	bra	u2527
  1530  0000EA  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1531  0000EC  D7FA               	bra	u2527
  1532  0000EE  D000               	nop2	
  1533                           
  1534                           ;main.c: 76:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1535  0000F0  0E01               	movlw	1
  1536  0000F2  ECDB  F00D         	call	_lcdInst
  1537  0000F6  0E11               	movlw	17
  1538  0000F8  0100               	movlb	0	; () banked
  1539  0000FA  6FE4               	movwf	??_main& (0+255),b
  1540  0000FC  0E3A               	movlw	58
  1541  0000FE                     u2537:
  1542  0000FE  2EE8               	decfsz	wreg,f,c
  1543  000100  D7FE               	bra	u2537
  1544  000102  2FE4               	decfsz	??_main& (0+255),f,b
  1545  000104  D7FC               	bra	u2537
  1546  000106  F000               	nop	
  1547                           
  1548                           ;main.c: 77:     printf("Hi Cull !");
  1549  000108  0EB8               	movlw	low STR_6
  1550  00010A  0100               	movlb	0	; () banked
  1551  00010C  6FDC               	movwf	printf@fmt& (0+255),b
  1552  00010E  0EFF               	movlw	high STR_6
  1553  000110  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1554  000112  EC92  F00D         	call	_printf	;wreg free
  1555                           
  1556                           ;main.c: 78:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1557  000116  0E33               	movlw	51
  1558  000118  0100               	movlb	0	; () banked
  1559  00011A  6FE5               	movwf	(??_main+1)& (0+255),b
  1560  00011C  0EBB               	movlw	187
  1561  00011E  6FE4               	movwf	??_main& (0+255),b
  1562  000120  0EDF               	movlw	223
  1563  000122                     u2547:
  1564  000122  2EE8               	decfsz	wreg,f,c
  1565  000124  D7FE               	bra	u2547
  1566  000126  2FE4               	decfsz	??_main& (0+255),f,b
  1567  000128  D7FC               	bra	u2547
  1568  00012A  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1569  00012C  D7FA               	bra	u2547
  1570  00012E  D000               	nop2	
  1571  000130  0E90               	movlw	144
  1572  000132  ECDB  F00D         	call	_lcdInst
  1573                           
  1574                           ;main.c: 80:     printf("Almost done");
  1575  000136  0E7F               	movlw	low STR_7
  1576  000138  0100               	movlb	0	; () banked
  1577  00013A  6FDC               	movwf	printf@fmt& (0+255),b
  1578  00013C  0EFF               	movlw	high STR_7
  1579  00013E  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1580  000140  EC92  F00D         	call	_printf	;wreg free
  1581  000144  0ED0               	movlw	208
  1582  000146  ECDB  F00D         	call	_lcdInst
  1583                           
  1584                           ;main.c: 82:     _delay((unsigned long)((2000)*(10000000/4000.0)));
  1585  00014A  0E1A               	movlw	26
  1586  00014C  0100               	movlb	0	; () banked
  1587  00014E  6FE5               	movwf	(??_main+1)& (0+255),b
  1588  000150  0E5E               	movlw	94
  1589  000152  6FE4               	movwf	??_main& (0+255),b
  1590  000154  0E6E               	movlw	110
  1591  000156                     u2557:
  1592  000156  2EE8               	decfsz	wreg,f,c
  1593  000158  D7FE               	bra	u2557
  1594  00015A  2FE4               	decfsz	??_main& (0+255),f,b
  1595  00015C  D7FC               	bra	u2557
  1596  00015E  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1597  000160  D7FA               	bra	u2557
  1598  000162  F000               	nop	
  1599                           
  1600                           ;main.c: 83:     printf("AND DONE");
  1601  000164  0ECC               	movlw	low STR_8
  1602  000166  0100               	movlb	0	; () banked
  1603  000168  6FDC               	movwf	printf@fmt& (0+255),b
  1604  00016A  0EFF               	movlw	high STR_8
  1605  00016C  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1606  00016E  EC92  F00D         	call	_printf	;wreg free
  1607                           
  1608                           ;main.c: 84:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1609  000172  0E33               	movlw	51
  1610  000174  0100               	movlb	0	; () banked
  1611  000176  6FE5               	movwf	(??_main+1)& (0+255),b
  1612  000178  0EBB               	movlw	187
  1613  00017A  6FE4               	movwf	??_main& (0+255),b
  1614  00017C  0EDF               	movlw	223
  1615  00017E                     u2567:
  1616  00017E  2EE8               	decfsz	wreg,f,c
  1617  000180  D7FE               	bra	u2567
  1618  000182  2FE4               	decfsz	??_main& (0+255),f,b
  1619  000184  D7FC               	bra	u2567
  1620  000186  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1621  000188  D7FA               	bra	u2567
  1622  00018A  D000               	nop2	
  1623                           
  1624                           ;main.c: 86:     start = 0;
  1625  00018C  0E00               	movlw	0
  1626  00018E  0100               	movlb	0	; () banked
  1627  000190  6FFB               	movwf	_start& (0+255),b	;volatile
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;main.c: 88:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1631  000192  0E01               	movlw	1
  1632  000194  ECDB  F00D         	call	_lcdInst
  1633  000198  0E11               	movlw	17
  1634  00019A  0100               	movlb	0	; () banked
  1635  00019C  6FE4               	movwf	??_main& (0+255),b
  1636  00019E  0E3A               	movlw	58
  1637  0001A0                     u2577:
  1638  0001A0  2EE8               	decfsz	wreg,f,c
  1639  0001A2  D7FE               	bra	u2577
  1640  0001A4  2FE4               	decfsz	??_main& (0+255),f,b
  1641  0001A6  D7FC               	bra	u2577
  1642  0001A8  F000               	nop	
  1643                           
  1644                           ;main.c: 89:     printf("Press A to");
  1645  0001AA  0E97               	movlw	low STR_9
  1646  0001AC  0100               	movlb	0	; () banked
  1647  0001AE  6FDC               	movwf	printf@fmt& (0+255),b
  1648  0001B0  0EFF               	movlw	high STR_9
  1649  0001B2  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1650  0001B4  EC92  F00D         	call	_printf	;wreg free
  1651  0001B8  0E90               	movlw	144
  1652  0001BA  ECDB  F00D         	call	_lcdInst
  1653                           
  1654                           ;main.c: 91:     printf("view results");
  1655  0001BE  0E4D               	movlw	low STR_10
  1656  0001C0  0100               	movlb	0	; () banked
  1657  0001C2  6FDC               	movwf	printf@fmt& (0+255),b
  1658  0001C4  0EFF               	movlw	high STR_10
  1659  0001C6  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1660  0001C8  EC92  F00D         	call	_printf	;wreg free
  1661  0001CC                     l2737:
  1662  0001CC  0100               	movlb	0	; () banked
  1663  0001CE  51FB               	movf	_start& (0+255),w,b	;volatile
  1664  0001D0  B4D8               	btfsc	status,2,c
  1665  0001D2  D7FC               	goto	l2737
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 95:     error = 1;
  1669  0001D4  0E00               	movlw	0
  1670  0001D6  6E75               	movwf	_error+1,c
  1671  0001D8  0E01               	movlw	1
  1672  0001DA  6E74               	movwf	_error,c
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 98:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1676  0001DC  0E01               	movlw	1
  1677  0001DE  ECDB  F00D         	call	_lcdInst
  1678  0001E2  0E11               	movlw	17
  1679  0001E4  0100               	movlb	0	; () banked
  1680  0001E6  6FE4               	movwf	??_main& (0+255),b
  1681  0001E8  0E3A               	movlw	58
  1682  0001EA                     u2587:
  1683  0001EA  2EE8               	decfsz	wreg,f,c
  1684  0001EC  D7FE               	bra	u2587
  1685  0001EE  2FE4               	decfsz	??_main& (0+255),f,b
  1686  0001F0  D7FC               	bra	u2587
  1687  0001F2  F000               	nop	
  1688                           
  1689                           ;main.c: 99:     printf("Canister Index");
  1690  0001F4  0EEC               	movlw	low STR_11
  1691  0001F6  0100               	movlb	0	; () banked
  1692  0001F8  6FDC               	movwf	printf@fmt& (0+255),b
  1693  0001FA  0EFE               	movlw	high STR_11
  1694  0001FC  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1695  0001FE  EC92  F00D         	call	_printf	;wreg free
  1696  000202  0E90               	movlw	144
  1697  000204  ECDB  F00D         	call	_lcdInst
  1698                           
  1699                           ;main.c: 101:     printf("starts at 0");
  1700  000208  0E67               	movlw	low STR_12
  1701  00020A  0100               	movlb	0	; () banked
  1702  00020C  6FDC               	movwf	printf@fmt& (0+255),b
  1703  00020E  0EFF               	movlw	high STR_12
  1704  000210  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1705  000212  EC92  F00D         	call	_printf	;wreg free
  1706                           
  1707                           ;main.c: 102:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1708  000216  0E33               	movlw	51
  1709  000218  0100               	movlb	0	; () banked
  1710  00021A  6FE5               	movwf	(??_main+1)& (0+255),b
  1711  00021C  0EBB               	movlw	187
  1712  00021E  6FE4               	movwf	??_main& (0+255),b
  1713  000220  0EDF               	movlw	223
  1714  000222                     u2597:
  1715  000222  2EE8               	decfsz	wreg,f,c
  1716  000224  D7FE               	bra	u2597
  1717  000226  2FE4               	decfsz	??_main& (0+255),f,b
  1718  000228  D7FC               	bra	u2597
  1719  00022A  2FE5               	decfsz	(??_main+1)& (0+255),f,b
  1720  00022C  D7FA               	bra	u2597
  1721  00022E  D000               	nop2	
  1722                           
  1723                           ;main.c: 109:         int state = 0;
  1724                           
  1725                           ;main.c: 106:     while(1){
  1726  000230  0E00               	movlw	0
  1727  000232  0100               	movlb	0	; () banked
  1728  000234  6FF4               	movwf	(main@state+1)& (0+255),b
  1729  000236  0E00               	movlw	0
  1730  000238  6FF3               	movwf	main@state& (0+255),b
  1731                           
  1732                           ;main.c: 110:         int tick = 0;
  1733  00023A  0E00               	movlw	0
  1734  00023C  6FE7               	movwf	(main@tick+1)& (0+255),b
  1735  00023E  0E00               	movlw	0
  1736  000240  6FE6               	movwf	main@tick& (0+255),b
  1737                           
  1738                           ;main.c: 113:         key_was_pressed = 0;
  1739  000242  0E00               	movlw	0
  1740  000244  6FFD               	movwf	_key_was_pressed& (0+255),b	;volatile
  1741                           
  1742                           ;main.c: 114:         exit_key = 0;
  1743  000246  0E00               	movlw	0
  1744  000248  6FFC               	movwf	_exit_key& (0+255),b	;volatile
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;main.c: 117:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1748                           
  1749                           ; BSR set to: 0
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;main.c: 116:         if (state == 0 & clear == 1) {
  1753  00024A  0E01               	movlw	1
  1754  00024C  ECDB  F00D         	call	_lcdInst
  1755  000250  0E11               	movlw	17
  1756  000252  0100               	movlb	0	; () banked
  1757  000254  6FE4               	movwf	??_main& (0+255),b
  1758  000256  0E3A               	movlw	58
  1759  000258                     u2607:
  1760  000258  2EE8               	decfsz	wreg,f,c
  1761  00025A  D7FE               	bra	u2607
  1762  00025C  2FE4               	decfsz	??_main& (0+255),f,b
  1763  00025E  D7FC               	bra	u2607
  1764  000260  F000               	nop	
  1765                           
  1766                           ;main.c: 118:         printf("Operation Time");
  1767  000262  0EBF               	movlw	low STR_13
  1768  000264  0100               	movlb	0	; () banked
  1769  000266  6FDC               	movwf	printf@fmt& (0+255),b
  1770  000268  0EFE               	movlw	high STR_13
  1771  00026A  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1772  00026C  EC92  F00D         	call	_printf	;wreg free
  1773  000270  0E90               	movlw	144
  1774  000272  ECDB  F00D         	call	_lcdInst
  1775                           
  1776                           ;main.c: 120:         printf("%d seconds", time);
  1777  000276  0EA2               	movlw	low STR_14
  1778  000278  0100               	movlb	0	; () banked
  1779  00027A  6FDC               	movwf	printf@fmt& (0+255),b
  1780  00027C  0EFF               	movlw	high STR_14
  1781  00027E  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1782  000280  0E00               	movlw	0
  1783  000282  6FDF               	movwf	(?_printf+3)& (0+255),b
  1784  000284  0E1E               	movlw	30
  1785  000286  6FDE               	movwf	(?_printf+2)& (0+255),b
  1786  000288  EC92  F00D         	call	_printf	;wreg free
  1787                           
  1788                           ;main.c: 160:         if(key_was_pressed){
  1789  00028C  0100               	movlb	0	; () banked
  1790  00028E  51FD               	movf	_key_was_pressed& (0+255),w,b	;volatile
  1791  000290  B4D8               	btfsc	status,2,c
  1792  000292  D13C               	goto	l2925
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;main.c: 162:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1796  000294  3881               	swapf	3969,w,c	;volatile
  1797  000296  0B0F               	andlw	15
  1798  000298  0B0F               	andlw	15
  1799  00029A  6FEE               	movwf	main@keypress& (0+255),b
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;main.c: 163:             int miniTick = 0;
  1803  00029C  0E00               	movlw	0
  1804  00029E  6FE9               	movwf	(main@miniTick+1)& (0+255),b
  1805  0002A0  0E00               	movlw	0
  1806  0002A2  6FE8               	movwf	main@miniTick& (0+255),b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;main.c: 164:             int miniState = 0;
  1810  0002A4  0E00               	movlw	0
  1811  0002A6  6FF0               	movwf	(main@miniState+1)& (0+255),b
  1812  0002A8  0E00               	movlw	0
  1813  0002AA  6FEF               	movwf	main@miniState& (0+255),b
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 165:             int miniClear = 1;
  1817  0002AC  0E00               	movlw	0
  1818  0002AE  6FED               	movwf	(main@miniClear+1)& (0+255),b
  1819  0002B0  0E01               	movlw	1
  1820  0002B2  6FEC               	movwf	main@miniClear& (0+255),b
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;main.c: 167:             int number_pressed = (int) (keys[keypress] - '0');
  1824  0002B4  0E69               	movlw	low _keys
  1825  0002B6  25EE               	addwf	main@keypress& (0+255),w,b
  1826  0002B8  6EF6               	movwf	tblptrl,c
  1827  0002BA  6AF7               	clrf	tblptrh,c
  1828  0002BC  0EFE               	movlw	high _keys
  1829  0002BE  22F7               	addwfc	tblptrh,f,c
  1830  0002C0                     	if	0	;There are less than 3 active tblptr bytes
  1831  0002C0                     	endif
  1832  0002C0  0008               	tblrd		*
  1833  0002C2  CFF5 F0E4          	movff	tablat,??_main
  1834  0002C6  0ED0               	movlw	208
  1835  0002C8  25E4               	addwf	??_main& (0+255),w,b
  1836  0002CA  6FEA               	movwf	main@number_pressed& (0+255),b
  1837  0002CC  6BEB               	clrf	(main@number_pressed+1)& (0+255),b
  1838  0002CE  0EFF               	movlw	255
  1839  0002D0  23EB               	addwfc	(main@number_pressed+1)& (0+255),f,b
  1840                           
  1841                           ;main.c: 169:             while(!exit_key) {
  1842  0002D2  D114               	goto	l2921
  1843  0002D4                     l2839:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;main.c: 171:                 if (miniState == 0 & miniClear == 1) {
  1847  0002D4  51EF               	movf	main@miniState& (0+255),w,b
  1848  0002D6  11F0               	iorwf	(main@miniState+1)& (0+255),w,b
  1849  0002D8  A4D8               	btfss	status,2,c
  1850  0002DA  D048               	goto	l2859
  1851                           
  1852                           ; BSR set to: 0
  1853  0002DC  05EC               	decf	main@miniClear& (0+255),w,b
  1854  0002DE  11ED               	iorwf	(main@miniClear+1)& (0+255),w,b
  1855  0002E0  A4D8               	btfss	status,2,c
  1856  0002E2  D044               	goto	l2859
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;main.c: 173:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1860  0002E4  0E01               	movlw	1
  1861  0002E6  ECDB  F00D         	call	_lcdInst
  1862  0002EA  0E11               	movlw	17
  1863  0002EC  0100               	movlb	0	; () banked
  1864  0002EE  6FE4               	movwf	??_main& (0+255),b
  1865  0002F0  0E3A               	movlw	58
  1866  0002F2                     u2617:
  1867  0002F2  2EE8               	decfsz	wreg,f,c
  1868  0002F4  D7FE               	bra	u2617
  1869  0002F6  2FE4               	decfsz	??_main& (0+255),f,b
  1870  0002F8  D7FC               	bra	u2617
  1871  0002FA  F000               	nop	
  1872                           
  1873                           ;main.c: 174:                     printf("Cansiter %c", keys[keypress]);
  1874  0002FC  0E73               	movlw	low STR_23
  1875  0002FE  0100               	movlb	0	; () banked
  1876  000300  6FDC               	movwf	printf@fmt& (0+255),b
  1877  000302  0EFF               	movlw	high STR_23
  1878  000304  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1879  000306  0E69               	movlw	low _keys
  1880  000308  25EE               	addwf	main@keypress& (0+255),w,b
  1881  00030A  6EF6               	movwf	tblptrl,c
  1882  00030C  6AF7               	clrf	tblptrh,c
  1883  00030E  0EFE               	movlw	high _keys
  1884  000310  22F7               	addwfc	tblptrh,f,c
  1885  000312                     	if	0	;There are less than 3 active tblptr bytes
  1886  000312                     	endif
  1887  000312  0008               	tblrd		*
  1888  000314  50F5               	movf	tablat,w,c
  1889  000316  6FDE               	movwf	(?_printf+2)& (0+255),b
  1890  000318  6BDF               	clrf	(?_printf+3)& (0+255),b
  1891  00031A  EC92  F00D         	call	_printf	;wreg free
  1892  00031E  0E90               	movlw	144
  1893  000320  ECDB  F00D         	call	_lcdInst
  1894                           
  1895                           ;main.c: 176:                     printf("Distance %d cm", DistanceCanister[number_press
      +                          ed] );
  1896  000324  0ECE               	movlw	low STR_24
  1897  000326  0100               	movlb	0	; () banked
  1898  000328  6FDC               	movwf	printf@fmt& (0+255),b
  1899  00032A  0EFE               	movlw	high STR_24
  1900  00032C  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1901  00032E  90D8               	bcf	status,0,c
  1902  000330  35EA               	rlcf	main@number_pressed& (0+255),w,b
  1903  000332  6ED9               	movwf	fsr2l,c
  1904  000334  35EB               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1905  000336  6EDA               	movwf	fsr2h,c
  1906  000338  0E14               	movlw	low _DistanceCanister
  1907  00033A  26D9               	addwf	fsr2l,f,c
  1908  00033C  0E01               	movlw	high _DistanceCanister
  1909  00033E  22DA               	addwfc	fsr2h,f,c
  1910  000340  CFDE F0DE          	movff	postinc2,?_printf+2
  1911  000344  CFDD F0DF          	movff	postdec2,?_printf+3
  1912  000348  EC92  F00D         	call	_printf	;wreg free
  1913  00034C  0ED0               	movlw	208
  1914  00034E  ECDB  F00D         	call	_lcdInst
  1915                           
  1916                           ;main.c: 178:                     printf("* to exit");
  1917  000352  0EC2               	movlw	low STR_25
  1918  000354  0100               	movlb	0	; () banked
  1919  000356  6FDC               	movwf	printf@fmt& (0+255),b
  1920  000358  0EFF               	movlw	high STR_25
  1921  00035A  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1922  00035C  EC92  F00D         	call	_printf	;wreg free
  1923  000360                     l2857:
  1924                           
  1925                           ;main.c: 179:                     miniClear = 0;
  1926  000360  0E00               	movlw	0
  1927  000362  0100               	movlb	0	; () banked
  1928  000364  6FED               	movwf	(main@miniClear+1)& (0+255),b
  1929  000366  0E00               	movlw	0
  1930  000368  6FEC               	movwf	main@miniClear& (0+255),b
  1931                           
  1932                           ;main.c: 180:                 }
  1933  00036A  D09D               	goto	l2907
  1934  00036C                     l2859:
  1935                           
  1936                           ; BSR set to: 0
  1937  00036C  05EF               	decf	main@miniState& (0+255),w,b
  1938  00036E  11F0               	iorwf	(main@miniState+1)& (0+255),w,b
  1939  000370  A4D8               	btfss	status,2,c
  1940  000372  D04A               	goto	l2883
  1941                           
  1942                           ; BSR set to: 0
  1943  000374  05EC               	decf	main@miniClear& (0+255),w,b
  1944  000376  11ED               	iorwf	(main@miniClear+1)& (0+255),w,b
  1945  000378  A4D8               	btfss	status,2,c
  1946  00037A  D046               	goto	l2883
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;main.c: 184:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1950  00037C  0E01               	movlw	1
  1951  00037E  ECDB  F00D         	call	_lcdInst
  1952  000382  0E11               	movlw	17
  1953  000384  0100               	movlb	0	; () banked
  1954  000386  6FE4               	movwf	??_main& (0+255),b
  1955  000388  0E3A               	movlw	58
  1956  00038A                     u2627:
  1957  00038A  2EE8               	decfsz	wreg,f,c
  1958  00038C  D7FE               	bra	u2627
  1959  00038E  2FE4               	decfsz	??_main& (0+255),f,b
  1960  000390  D7FC               	bra	u2627
  1961  000392  F000               	nop	
  1962                           
  1963                           ;main.c: 185:                     printf("Cansiter %c", keys[keypress]);
  1964  000394  0E73               	movlw	low STR_23
  1965  000396  0100               	movlb	0	; () banked
  1966  000398  6FDC               	movwf	printf@fmt& (0+255),b
  1967  00039A  0EFF               	movlw	high STR_23
  1968  00039C  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  1969  00039E  0E69               	movlw	low _keys
  1970  0003A0  25EE               	addwf	main@keypress& (0+255),w,b
  1971  0003A2  6EF6               	movwf	tblptrl,c
  1972  0003A4  6AF7               	clrf	tblptrh,c
  1973  0003A6  0EFE               	movlw	high _keys
  1974  0003A8  22F7               	addwfc	tblptrh,f,c
  1975  0003AA                     	if	0	;There are less than 3 active tblptr bytes
  1976  0003AA                     	endif
  1977  0003AA  0008               	tblrd		*
  1978  0003AC  50F5               	movf	tablat,w,c
  1979  0003AE  6FDE               	movwf	(?_printf+2)& (0+255),b
  1980  0003B0  6BDF               	clrf	(?_printf+3)& (0+255),b
  1981  0003B2  EC92  F00D         	call	_printf	;wreg free
  1982  0003B6  0E90               	movlw	144
  1983  0003B8  ECDB  F00D         	call	_lcdInst
  1984                           
  1985                           ;main.c: 187:                     if (State[number_pressed] == 1)
  1986  0003BC  90D8               	bcf	status,0,c
  1987  0003BE  0100               	movlb	0	; () banked
  1988  0003C0  35EA               	rlcf	main@number_pressed& (0+255),w,b
  1989  0003C2  6ED9               	movwf	fsr2l,c
  1990  0003C4  35EB               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1991  0003C6  6EDA               	movwf	fsr2h,c
  1992  0003C8  0E28               	movlw	low _State
  1993  0003CA  26D9               	addwf	fsr2l,f,c
  1994  0003CC  0E01               	movlw	high _State
  1995  0003CE  22DA               	addwfc	fsr2h,f,c
  1996  0003D0  04DE               	decf	postinc2,w,c
  1997  0003D2  10DE               	iorwf	postinc2,w,c
  1998  0003D4  A4D8               	btfss	status,2,c
  1999  0003D6  D007               	goto	l2875
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;main.c: 188:                         printf("Canister Full");
  2003  0003D8  0E18               	movlw	low STR_27
  2004  0003DA  6FDC               	movwf	printf@fmt& (0+255),b
  2005  0003DC  0EFF               	movlw	high STR_27
  2006  0003DE  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  2007  0003E0  EC92  F00D         	call	_printf	;wreg free
  2008  0003E4  D006               	goto	l2877
  2009  0003E6                     l2875:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;main.c: 190:                         printf("Canister Empty");
  2013  0003E6  0EFB               	movlw	low STR_28
  2014  0003E8  6FDC               	movwf	printf@fmt& (0+255),b
  2015  0003EA  0EFE               	movlw	high STR_28
  2016  0003EC  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  2017  0003EE  EC92  F00D         	call	_printf	;wreg free
  2018  0003F2                     l2877:
  2019  0003F2  0ED0               	movlw	208
  2020  0003F4  ECDB  F00D         	call	_lcdInst
  2021                           
  2022                           ;main.c: 192:                     printf("* to exit");
  2023  0003F8  0EC2               	movlw	low STR_25
  2024  0003FA  0100               	movlb	0	; () banked
  2025  0003FC  6FDC               	movwf	printf@fmt& (0+255),b
  2026  0003FE  0EFF               	movlw	high STR_25
  2027  000400  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  2028  000402  EC92  F00D         	call	_printf	;wreg free
  2029  000406  D7AC               	goto	l2857
  2030  000408                     l2883:
  2031                           
  2032                           ; BSR set to: 0
  2033  000408  0E02               	movlw	2
  2034  00040A  19EF               	xorwf	main@miniState& (0+255),w,b
  2035  00040C  11F0               	iorwf	(main@miniState+1)& (0+255),w,b
  2036  00040E  A4D8               	btfss	status,2,c
  2037  000410  D04A               	goto	l2907
  2038                           
  2039                           ; BSR set to: 0
  2040  000412  05EC               	decf	main@miniClear& (0+255),w,b
  2041  000414  11ED               	iorwf	(main@miniClear+1)& (0+255),w,b
  2042  000416  A4D8               	btfss	status,2,c
  2043  000418  D046               	goto	l2907
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;main.c: 198:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2047  00041A  0E01               	movlw	1
  2048  00041C  ECDB  F00D         	call	_lcdInst
  2049  000420  0E11               	movlw	17
  2050  000422  0100               	movlb	0	; () banked
  2051  000424  6FE4               	movwf	??_main& (0+255),b
  2052  000426  0E3A               	movlw	58
  2053  000428                     u2637:
  2054  000428  2EE8               	decfsz	wreg,f,c
  2055  00042A  D7FE               	bra	u2637
  2056  00042C  2FE4               	decfsz	??_main& (0+255),f,b
  2057  00042E  D7FC               	bra	u2637
  2058  000430  F000               	nop	
  2059                           
  2060                           ;main.c: 199:                     printf("Cansiter %c", keys[keypress]);
  2061  000432  0E73               	movlw	low STR_23
  2062  000434  0100               	movlb	0	; () banked
  2063  000436  6FDC               	movwf	printf@fmt& (0+255),b
  2064  000438  0EFF               	movlw	high STR_23
  2065  00043A  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  2066  00043C  0E69               	movlw	low _keys
  2067  00043E  25EE               	addwf	main@keypress& (0+255),w,b
  2068  000440  6EF6               	movwf	tblptrl,c
  2069  000442  6AF7               	clrf	tblptrh,c
  2070  000444  0EFE               	movlw	high _keys
  2071  000446  22F7               	addwfc	tblptrh,f,c
  2072  000448                     	if	0	;There are less than 3 active tblptr bytes
  2073  000448                     	endif
  2074  000448  0008               	tblrd		*
  2075  00044A  50F5               	movf	tablat,w,c
  2076  00044C  6FDE               	movwf	(?_printf+2)& (0+255),b
  2077  00044E  6BDF               	clrf	(?_printf+3)& (0+255),b
  2078  000450  EC92  F00D         	call	_printf	;wreg free
  2079  000454  0E90               	movlw	144
  2080  000456  ECDB  F00D         	call	_lcdInst
  2081                           
  2082                           ;main.c: 201:                     if (BallDispensed[number_pressed] == 1)
  2083  00045A  90D8               	bcf	status,0,c
  2084  00045C  0100               	movlb	0	; () banked
  2085  00045E  35EA               	rlcf	main@number_pressed& (0+255),w,b
  2086  000460  6ED9               	movwf	fsr2l,c
  2087  000462  35EB               	rlcf	(main@number_pressed+1)& (0+255),w,b
  2088  000464  6EDA               	movwf	fsr2h,c
  2089  000466  0E00               	movlw	low _BallDispensed
  2090  000468  26D9               	addwf	fsr2l,f,c
  2091  00046A  0E01               	movlw	high _BallDispensed
  2092  00046C  22DA               	addwfc	fsr2h,f,c
  2093  00046E  04DE               	decf	postinc2,w,c
  2094  000470  10DE               	iorwf	postinc2,w,c
  2095  000472  A4D8               	btfss	status,2,c
  2096  000474  D007               	goto	l2899
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;main.c: 202:                         printf("Ball Added");
  2100  000476  0E0D               	movlw	low (STR_32+3)
  2101  000478  6FDC               	movwf	printf@fmt& (0+255),b
  2102  00047A  0EFF               	movlw	high (STR_32+3)
  2103  00047C  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  2104  00047E  EC92  F00D         	call	_printf	;wreg free
  2105  000482  D006               	goto	l2901
  2106  000484                     l2899:
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;main.c: 204:                         printf("No Ball Added");
  2110  000484  0E0A               	movlw	low STR_32
  2111  000486  6FDC               	movwf	printf@fmt& (0+255),b
  2112  000488  0EFF               	movlw	high STR_32
  2113  00048A  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  2114  00048C  EC92  F00D         	call	_printf	;wreg free
  2115  000490                     l2901:
  2116  000490  0ED0               	movlw	208
  2117  000492  ECDB  F00D         	call	_lcdInst
  2118                           
  2119                           ;main.c: 206:                     printf("* to exit");
  2120  000496  0EC2               	movlw	low STR_25
  2121  000498  0100               	movlb	0	; () banked
  2122  00049A  6FDC               	movwf	printf@fmt& (0+255),b
  2123  00049C  0EFF               	movlw	high STR_25
  2124  00049E  6FDD               	movwf	(printf@fmt+1)& (0+255),b
  2125  0004A0  EC92  F00D         	call	_printf	;wreg free
  2126  0004A4  D75D               	goto	l2857
  2127  0004A6                     l2907:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;main.c: 212:                 if (miniTick == 3000) {
  2131  0004A6  0EB8               	movlw	184
  2132  0004A8  19E8               	xorwf	main@miniTick& (0+255),w,b
  2133  0004AA  E11D               	bnz	l2917
  2134  0004AC  0E0B               	movlw	11
  2135  0004AE  19E9               	xorwf	(main@miniTick+1)& (0+255),w,b
  2136  0004B0  A4D8               	btfss	status,2,c
  2137  0004B2  D019               	goto	l2917
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;main.c: 213:                     miniClear = 1;
  2141  0004B4  0E00               	movlw	0
  2142  0004B6  6FED               	movwf	(main@miniClear+1)& (0+255),b
  2143  0004B8  0E01               	movlw	1
  2144  0004BA  6FEC               	movwf	main@miniClear& (0+255),b
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;main.c: 214:                     miniState++;
  2148  0004BC  4BEF               	infsnz	main@miniState& (0+255),f,b
  2149  0004BE  2BF0               	incf	(main@miniState+1)& (0+255),f,b
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;main.c: 215:                     miniState = miniState % 3;
  2153  0004C0  C0EF  F080         	movff	main@miniState,___awmod@dividend
  2154  0004C4  C0F0  F081         	movff	main@miniState+1,___awmod@dividend+1
  2155  0004C8  0E00               	movlw	0
  2156  0004CA  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  2157  0004CC  0E03               	movlw	3
  2158  0004CE  6F82               	movwf	___awmod@divisor& (0+255),b
  2159  0004D0  EC15  F00B         	call	___awmod	;wreg free
  2160  0004D4  C080  F0EF         	movff	?___awmod,main@miniState
  2161  0004D8  C081  F0F0         	movff	?___awmod+1,main@miniState+1
  2162                           
  2163                           ;main.c: 216:                     miniTick = 0;
  2164  0004DC  0E00               	movlw	0
  2165  0004DE  0100               	movlb	0	; () banked
  2166  0004E0  6FE9               	movwf	(main@miniTick+1)& (0+255),b
  2167  0004E2  0E00               	movlw	0
  2168  0004E4  6FE8               	movwf	main@miniTick& (0+255),b
  2169  0004E6                     l2917:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;main.c: 219:                 miniTick++;
  2173  0004E6  4BE8               	infsnz	main@miniTick& (0+255),f,b
  2174  0004E8  2BE9               	incf	(main@miniTick+1)& (0+255),f,b
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;main.c: 220:                 _delay((unsigned long)((1)*(10000000/4000.0)));
  2178  0004EA  0E04               	movlw	4
  2179  0004EC  0100               	movlb	0	; () banked
  2180  0004EE  6FE4               	movwf	??_main& (0+255),b
  2181  0004F0  0E3D               	movlw	61
  2182  0004F2                     u2647:
  2183  0004F2  2EE8               	decfsz	wreg,f,c
  2184  0004F4  D7FE               	bra	u2647
  2185  0004F6  2FE4               	decfsz	??_main& (0+255),f,b
  2186  0004F8  D7FC               	bra	u2647
  2187  0004FA  D000               	nop2	
  2188  0004FC                     l2921:
  2189                           
  2190                           ;main.c: 169:             while(!exit_key) {
  2191  0004FC  0100               	movlb	0	; () banked
  2192  0004FE  51FC               	movf	_exit_key& (0+255),w,b	;volatile
  2193  000500  B4D8               	btfsc	status,2,c
  2194  000502  D6E8               	goto	l2839
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 225:             key_was_pressed = 0;
  2198  000504  0E00               	movlw	0
  2199  000506  6FFD               	movwf	_key_was_pressed& (0+255),b	;volatile
  2200                           
  2201                           ;main.c: 226:             exit_key = 0;
  2202  000508  0E00               	movlw	0
  2203  00050A  6FFC               	movwf	_exit_key& (0+255),b	;volatile
  2204  00050C                     l2925:
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;main.c: 230:         if (tick == 2000) {
  2208  00050C  0ED0               	movlw	208
  2209  00050E  19E6               	xorwf	main@tick& (0+255),w,b
  2210  000510  E10E               	bnz	l2935
  2211  000512  0E07               	movlw	7
  2212  000514  19E7               	xorwf	(main@tick+1)& (0+255),w,b
  2213  000516  A4D8               	btfss	status,2,c
  2214  000518  D00A               	goto	l2935
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;main.c: 232:             state++;
  2218                           
  2219                           ; BSR set to: 0
  2220  00051A  4BF3               	infsnz	main@state& (0+255),f,b
  2221  00051C  2BF4               	incf	(main@state+1)& (0+255),f,b
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;main.c: 233:             state = state % 4;
  2225  00051E  0E03               	movlw	3
  2226  000520  15F3               	andwf	main@state& (0+255),w,b
  2227  000522  6FF3               	movwf	main@state& (0+255),b
  2228  000524  6BF4               	clrf	(main@state+1)& (0+255),b
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;main.c: 234:             tick = 0;
  2232  000526  0E00               	movlw	0
  2233  000528  6FE7               	movwf	(main@tick+1)& (0+255),b
  2234  00052A  0E00               	movlw	0
  2235  00052C  6FE6               	movwf	main@tick& (0+255),b
  2236  00052E                     l2935:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;main.c: 237:         tick++;
  2240  00052E  4BE6               	infsnz	main@tick& (0+255),f,b
  2241  000530  2BE7               	incf	(main@tick+1)& (0+255),f,b
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;main.c: 238:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2245  000532  0E04               	movlw	4
  2246  000534  0100               	movlb	0	; () banked
  2247  000536  6FE4               	movwf	??_main& (0+255),b
  2248  000538  0E3D               	movlw	61
  2249  00053A                     u2657:
  2250  00053A  2EE8               	decfsz	wreg,f,c
  2251  00053C  D7FE               	bra	u2657
  2252  00053E  2FE4               	decfsz	??_main& (0+255),f,b
  2253  000540  D7FC               	bra	u2657
  2254  000542  D675               	goto	L1
  2255  000544                     __end_of_main:
  2256                           	opt callstack 0
  2257                           
  2258 ;; *************** function _printf *****************
  2259 ;; Defined at:
  2260 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  fmt             2   92[BANK0 ] PTR const unsigned char 
  2263 ;;		 -> STR_39(7), STR_38(13), STR_37(7), STR_36(13), 
  2264 ;;		 -> STR_35(13), STR_34(13), STR_33(10), STR_32(14), 
  2265 ;;		 -> STR_31(11), STR_30(12), STR_29(10), STR_28(15), 
  2266 ;;		 -> STR_27(14), STR_26(12), STR_25(10), STR_24(15), 
  2267 ;;		 -> STR_23(12), STR_22(15), STR_21(12), STR_20(16), 
  2268 ;;		 -> STR_19(9), STR_18(9), STR_17(11), STR_16(13), 
  2269 ;;		 -> STR_15(15), STR_14(11), STR_13(15), STR_12(12), 
  2270 ;;		 -> STR_11(15), STR_10(13), STR_9(11), STR_8(9), 
  2271 ;;		 -> STR_7(12), STR_6(10), STR_5(15), STR_4(17), 
  2272 ;;		 -> STR_3(13), STR_2(9), STR_1(8), 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  ap              2   98[BANK0 ] PTR void [1]
  2275 ;;		 -> ?_printf(2), 
  2276 ;;  ret             2    0        int 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2   92[BANK0 ] int 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;Total ram usage:        8 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:   22
  2293 ;; This function calls:
  2294 ;;		_vfprintf
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text1
  2301  001B24                     __ptext1:
  2302                           	opt callstack 0
  2303  001B24                     _printf:
  2304                           	opt callstack 8
  2305                           
  2306                           ;incstack = 0
  2307  001B24  0EDE               	movlw	low (?_printf+2)
  2308  001B26  0100               	movlb	0	; () banked
  2309  001B28  6FE2               	movwf	printf@ap& (0+255),b
  2310  001B2A  0E00               	movlw	high (?_printf+2)
  2311  001B2C  6FE3               	movwf	(printf@ap+1)& (0+255),b
  2312                           
  2313                           ; BSR set to: 0
  2314  001B2E  0E00               	movlw	0
  2315  001B30  6FD4               	movwf	vfprintf@fp& (0+255),b
  2316  001B32  0E00               	movlw	0
  2317  001B34  6FD5               	movwf	(vfprintf@fp+1)& (0+255),b
  2318  001B36  C0DC  F0D6         	movff	printf@fmt,vfprintf@fmt
  2319  001B3A  C0DD  F0D7         	movff	printf@fmt+1,vfprintf@fmt+1
  2320  001B3E  0EE2               	movlw	low printf@ap
  2321  001B40  6FD8               	movwf	vfprintf@ap& (0+255),b
  2322  001B42  0E00               	movlw	high printf@ap
  2323  001B44  6FD9               	movwf	(vfprintf@ap+1)& (0+255),b
  2324  001B46  ECF3  F00B         	call	_vfprintf	;wreg free
  2325  001B4A  0012               	return		;funcret
  2326  001B4C                     __end_of_printf:
  2327                           	opt callstack 0
  2328                           
  2329 ;; *************** function _vfprintf *****************
  2330 ;; Defined at:
  2331 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  2334 ;;		 -> NULL(0), 
  2335 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  2336 ;;		 -> STR_39(7), STR_38(13), STR_37(7), STR_36(13), 
  2337 ;;		 -> STR_35(13), STR_34(13), STR_33(10), STR_32(14), 
  2338 ;;		 -> STR_31(11), STR_30(12), STR_29(10), STR_28(15), 
  2339 ;;		 -> STR_27(14), STR_26(12), STR_25(10), STR_24(15), 
  2340 ;;		 -> STR_23(12), STR_22(15), STR_21(12), STR_20(16), 
  2341 ;;		 -> STR_19(9), STR_18(9), STR_17(11), STR_16(13), 
  2342 ;;		 -> STR_15(15), STR_14(11), STR_13(15), STR_12(12), 
  2343 ;;		 -> STR_11(15), STR_10(13), STR_9(11), STR_8(9), 
  2344 ;;		 -> STR_7(12), STR_6(10), STR_5(15), STR_4(17), 
  2345 ;;		 -> STR_3(13), STR_2(9), STR_1(8), 
  2346 ;;  ap              2   88[BANK0 ] PTR PTR void 
  2347 ;;		 -> printf@ap(2), 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  cfmt            2   90[BANK0 ] PTR unsigned char 
  2350 ;;		 -> STR_39(7), STR_38(13), STR_37(7), STR_36(13), 
  2351 ;;		 -> STR_35(13), STR_34(13), STR_33(10), STR_32(14), 
  2352 ;;		 -> STR_31(11), STR_30(12), STR_29(10), STR_28(15), 
  2353 ;;		 -> STR_27(14), STR_26(12), STR_25(10), STR_24(15), 
  2354 ;;		 -> STR_23(12), STR_22(15), STR_21(12), STR_20(16), 
  2355 ;;		 -> STR_19(9), STR_18(9), STR_17(11), STR_16(13), 
  2356 ;;		 -> STR_15(15), STR_14(11), STR_13(15), STR_12(12), 
  2357 ;;		 -> STR_11(15), STR_10(13), STR_9(11), STR_8(9), 
  2358 ;;		 -> STR_7(12), STR_6(10), STR_5(15), STR_4(17), 
  2359 ;;		 -> STR_3(13), STR_2(9), STR_1(8), 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2   84[BANK0 ] int 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2369 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;Total ram usage:        8 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:   21
  2376 ;; This function calls:
  2377 ;;		_vfpfcnvrt
  2378 ;; This function is called by:
  2379 ;;		_printf
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text2
  2384  0017E6                     __ptext2:
  2385                           	opt callstack 0
  2386  0017E6                     _vfprintf:
  2387                           	opt callstack 8
  2388                           
  2389                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  2390                           
  2391                           ;incstack = 0
  2392  0017E6  C0D6  F0DA         	movff	vfprintf@fmt,vfprintf@cfmt
  2393  0017EA  C0D7  F0DB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2394                           
  2395                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2396  0017EE  0E00               	movlw	0
  2397  0017F0  6E73               	movwf	_nout+1,c
  2398  0017F2  0E00               	movlw	0
  2399  0017F4  6E72               	movwf	_nout,c
  2400                           
  2401                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2402  0017F6  D014               	goto	l2561
  2403  0017F8                     l2559:
  2404                           
  2405                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2406  0017F8  C0D4  F0C3         	movff	vfprintf@fp,vfpfcnvrt@fp
  2407  0017FC  C0D5  F0C4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2408  001800  0EDA               	movlw	low vfprintf@cfmt
  2409  001802  0100               	movlb	0	; () banked
  2410  001804  6FC5               	movwf	vfpfcnvrt@fmt& (0+255),b
  2411  001806  0E00               	movlw	high vfprintf@cfmt
  2412  001808  6FC6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2413  00180A  C0D8  F0C7         	movff	vfprintf@ap,vfpfcnvrt@ap
  2414  00180E  C0D9  F0C8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2415  001812  ECEA  F004         	call	_vfpfcnvrt	;wreg free
  2416  001816  0100               	movlb	0	; () banked
  2417  001818  51C3               	movf	?_vfpfcnvrt& (0+255),w,b
  2418  00181A  2672               	addwf	_nout,f,c
  2419  00181C  51C4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2420  00181E  2273               	addwfc	_nout+1,f,c
  2421  001820                     l2561:
  2422                           
  2423                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2424  001820  C0DA  FFF6         	movff	vfprintf@cfmt,tblptrl
  2425  001824  C0DB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2426  001828                     	if	0	;tblptru may be non-zero
  2427  001828                     	endif
  2428  001828                     	if	0	;tblptru may be non-zero
  2429  001828                     	endif
  2430  001828  0008               	tblrd		*
  2431  00182A  50F5               	movf	tablat,w,c
  2432  00182C  0900               	iorlw	0
  2433  00182E  A4D8               	btfss	status,2,c
  2434  001830  D7E3               	goto	l2559
  2435                           
  2436                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  2437  001832  C072  F0D4         	movff	_nout,?_vfprintf
  2438  001836  C073  F0D5         	movff	_nout+1,?_vfprintf+1
  2439  00183A  0012               	return		;funcret
  2440  00183C                     __end_of_vfprintf:
  2441                           	opt callstack 0
  2442                           
  2443 ;; *************** function _vfpfcnvrt *****************
  2444 ;; Defined at:
  2445 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  2448 ;;		 -> NULL(0), 
  2449 ;;  fmt             2   69[BANK0 ] PTR PTR unsigned char 
  2450 ;;		 -> vfprintf@cfmt(2), 
  2451 ;;  ap              2   71[BANK0 ] PTR PTR void 
  2452 ;;		 -> printf@ap(2), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  ll              8   75[BANK0 ] long long 
  2455 ;;  llu             8    0        unsigned long long 
  2456 ;;  f               4    0        unsigned long long 
  2457 ;;  vp              3    0        PTR void 
  2458 ;;  ct              3    0        unsigned char [3]
  2459 ;;  cp              3    0        PTR unsigned char 
  2460 ;;  i               2    0        int 
  2461 ;;  done            2    0        int 
  2462 ;;  c               1   83[BANK0 ] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  2   67[BANK0 ] int 
  2465 ;; Registers used:
  2466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2472 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;Total ram usage:       17 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:   20
  2479 ;; This function calls:
  2480 ;;		_ctoa
  2481 ;;		_dtoa
  2482 ;;		_fputc
  2483 ;; This function is called by:
  2484 ;;		_vfprintf
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text3
  2489  0009D4                     __ptext3:
  2490                           	opt callstack 0
  2491  0009D4                     _vfpfcnvrt:
  2492                           	opt callstack 8
  2493                           
  2494                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  2495                           
  2496                           ;incstack = 0
  2497  0009D4  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2498  0009D8  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2499  0009DC  CFDE FFF6          	movff	postinc2,tblptrl
  2500  0009E0  CFDD FFF7          	movff	postdec2,tblptrh
  2501  0009E4                     	if	0	;tblptru may be non-zero
  2502  0009E4                     	endif
  2503  0009E4                     	if	0	;tblptru may be non-zero
  2504  0009E4                     	endif
  2505  0009E4  0008               	tblrd		*
  2506  0009E6  50F5               	movf	tablat,w,c
  2507  0009E8  0A25               	xorlw	37
  2508  0009EA  A4D8               	btfss	status,2,c
  2509  0009EC  D0CE               	goto	l2493
  2510                           
  2511                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2512  0009EE  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2513  0009F2  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2514  0009F6  2ADE               	incf	postinc2,f,c
  2515  0009F8  0E00               	movlw	0
  2516  0009FA  22DD               	addwfc	postdec2,f,c
  2517                           
  2518                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  2519  0009FC  0E00               	movlw	0
  2520  0009FE  0100               	movlb	0	; () banked
  2521  000A00  6FF6               	movwf	(_width+1)& (0+255),b
  2522  000A02  0E00               	movlw	0
  2523  000A04  6FF5               	movwf	_width& (0+255),b
  2524  000A06  C0F5  F0F9         	movff	_width,_flags
  2525  000A0A  C0F6  F0FA         	movff	_width+1,_flags+1
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  2529  000A0E  69F7               	setf	_prec& (0+255),b
  2530  000A10  69F8               	setf	(_prec+1)& (0+255),b
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
  2534  000A12  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2535  000A16  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2536  000A1A  CFDE FFF6          	movff	postinc2,tblptrl
  2537  000A1E  CFDD FFF7          	movff	postdec2,tblptrh
  2538  000A22                     	if	0	;tblptru may be non-zero
  2539  000A22                     	endif
  2540  000A22                     	if	0	;tblptru may be non-zero
  2541  000A22                     	endif
  2542  000A22  0008               	tblrd		*
  2543  000A24  50F5               	movf	tablat,w,c
  2544  000A26  0A63               	xorlw	99
  2545  000A28  A4D8               	btfss	status,2,c
  2546  000A2A  D026               	goto	l2467
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
  2550  000A2C  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2551  000A30  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2552  000A34  2ADE               	incf	postinc2,f,c
  2553  000A36  0E00               	movlw	0
  2554  000A38  22DD               	addwfc	postdec2,f,c
  2555                           
  2556                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2557  000A3A  C0C7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2558  000A3E  C0C8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2559  000A42  CFDF F0C9          	movff	indf2,??_vfpfcnvrt
  2560  000A46  0E02               	movlw	2
  2561  000A48  26DE               	addwf	postinc2,f,c
  2562  000A4A  CFDF F0CA          	movff	indf2,??_vfpfcnvrt+1
  2563  000A4E  0E00               	movlw	0
  2564  000A50  22DD               	addwfc	postdec2,f,c
  2565  000A52  C0C9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2566  000A56  C0CA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2567  000A5A  50DF               	movf	indf2,w,c
  2568  000A5C  6FD3               	movwf	vfpfcnvrt@c& (0+255),b
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
  2572  000A5E  C0C3  F09F         	movff	vfpfcnvrt@fp,ctoa@fp
  2573  000A62  C0C4  F0A0         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2574  000A66  C0D3  F0A1         	movff	vfpfcnvrt@c,ctoa@c
  2575  000A6A  EC1E  F00C         	call	_ctoa	;wreg free
  2576  000A6E  C09F  F0C3         	movff	?_ctoa,?_vfpfcnvrt
  2577  000A72  C0A0  F0C4         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2578  000A76  0012               	return	
  2579  000A78                     l2467:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  2583  000A78  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2584  000A7C  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2585  000A80  CFDE FFF6          	movff	postinc2,tblptrl
  2586  000A84  CFDD FFF7          	movff	postdec2,tblptrh
  2587  000A88                     	if	0	;tblptru may be non-zero
  2588  000A88                     	endif
  2589  000A88                     	if	0	;tblptru may be non-zero
  2590  000A88                     	endif
  2591  000A88  0008               	tblrd		*
  2592  000A8A  50F5               	movf	tablat,w,c
  2593  000A8C  0A64               	xorlw	100
  2594  000A8E  B4D8               	btfsc	status,2,c
  2595  000A90  D00D               	goto	u2100
  2596                           
  2597                           ; BSR set to: 0
  2598  000A92  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2599  000A96  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2600  000A9A  CFDE FFF6          	movff	postinc2,tblptrl
  2601  000A9E  CFDD FFF7          	movff	postdec2,tblptrh
  2602  000AA2                     	if	0	;tblptru may be non-zero
  2603  000AA2                     	endif
  2604  000AA2                     	if	0	;tblptru may be non-zero
  2605  000AA2                     	endif
  2606  000AA2  0008               	tblrd		*
  2607  000AA4  50F5               	movf	tablat,w,c
  2608  000AA6  0A69               	xorlw	105
  2609  000AA8  A4D8               	btfss	status,2,c
  2610  000AAA  D03F               	goto	l2477
  2611  000AAC                     u2100:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  2615  000AAC  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2616  000AB0  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2617  000AB4  2ADE               	incf	postinc2,f,c
  2618  000AB6  0E00               	movlw	0
  2619  000AB8  22DD               	addwfc	postdec2,f,c
  2620                           
  2621                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2622  000ABA  C0C7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2623  000ABE  C0C8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2624  000AC2  CFDF F0C9          	movff	indf2,??_vfpfcnvrt
  2625  000AC6  0E02               	movlw	2
  2626  000AC8  26DE               	addwf	postinc2,f,c
  2627  000ACA  CFDF F0CA          	movff	indf2,??_vfpfcnvrt+1
  2628  000ACE  0E00               	movlw	0
  2629  000AD0  22DD               	addwfc	postdec2,f,c
  2630  000AD2  C0C9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2631  000AD6  C0CA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2632  000ADA  CFDE F0CB          	movff	postinc2,vfpfcnvrt@ll
  2633  000ADE  CFDD F0CC          	movff	postdec2,vfpfcnvrt@ll+1
  2634  000AE2  0E00               	movlw	0
  2635  000AE4  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2636  000AE6  0EFF               	movlw	-1
  2637  000AE8  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2638  000AEA  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2639  000AEC  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2640  000AEE  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2641  000AF0  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2642  000AF2  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  2646  000AF4  C0C3  F09F         	movff	vfpfcnvrt@fp,dtoa@fp
  2647  000AF8  C0C4  F0A0         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2648  000AFC  C0CB  F0A1         	movff	vfpfcnvrt@ll,dtoa@d
  2649  000B00  C0CC  F0A2         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2650  000B04  C0CD  F0A3         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2651  000B08  C0CE  F0A4         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2652  000B0C  C0CF  F0A5         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2653  000B10  C0D0  F0A6         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2654  000B14  C0D1  F0A7         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2655  000B18  C0D2  F0A8         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2656  000B1C  ECA2  F002         	call	_dtoa	;wreg free
  2657  000B20  C09F  F0C3         	movff	?_dtoa,?_vfpfcnvrt
  2658  000B24  C0A0  F0C4         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2659  000B28  0012               	return	
  2660  000B2A                     l2477:
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  2664  000B2A  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2665  000B2E  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2666  000B32  CFDE FFF6          	movff	postinc2,tblptrl
  2667  000B36  CFDD FFF7          	movff	postdec2,tblptrh
  2668  000B3A                     	if	0	;tblptru may be non-zero
  2669  000B3A                     	endif
  2670  000B3A                     	if	0	;tblptru may be non-zero
  2671  000B3A                     	endif
  2672  000B3A  0008               	tblrd		*
  2673  000B3C  50F5               	movf	tablat,w,c
  2674  000B3E  0A25               	xorlw	37
  2675  000B40  A4D8               	btfss	status,2,c
  2676  000B42  D017               	goto	l2487
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  2680  000B44  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2681  000B48  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2682  000B4C  2ADE               	incf	postinc2,f,c
  2683  000B4E  0E00               	movlw	0
  2684  000B50  22DD               	addwfc	postdec2,f,c
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  2688  000B52  0E00               	movlw	0
  2689  000B54  6F85               	movwf	(fputc@c+1)& (0+255),b
  2690  000B56  0E25               	movlw	37
  2691  000B58  6F84               	movwf	fputc@c& (0+255),b
  2692  000B5A  C0C3  F086         	movff	vfpfcnvrt@fp,fputc@fp
  2693  000B5E  C0C4  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2694  000B62  EC86  F00B         	call	_fputc	;wreg free
  2695  000B66                     l2483:
  2696                           
  2697                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  2698  000B66  0E00               	movlw	0
  2699  000B68  0100               	movlb	0	; () banked
  2700  000B6A  6FC4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2701  000B6C  0E01               	movlw	1
  2702  000B6E  6FC3               	movwf	?_vfpfcnvrt& (0+255),b
  2703  000B70  0012               	return	
  2704  000B72                     l2487:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  2708  000B72  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2709  000B76  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2710  000B7A  2ADE               	incf	postinc2,f,c
  2711  000B7C  0E00               	movlw	0
  2712  000B7E  22DD               	addwfc	postdec2,f,c
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  2716  000B80  0E00               	movlw	0
  2717  000B82  6FC4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2718  000B84  0E00               	movlw	0
  2719  000B86  6FC3               	movwf	?_vfpfcnvrt& (0+255),b
  2720  000B88  0012               	return	
  2721  000B8A                     l2493:
  2722                           
  2723                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  2724  000B8A  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2725  000B8E  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2726  000B92  CFDE FFF6          	movff	postinc2,tblptrl
  2727  000B96  CFDD FFF7          	movff	postdec2,tblptrh
  2728  000B9A                     	if	0	;tblptru may be non-zero
  2729  000B9A                     	endif
  2730  000B9A                     	if	0	;tblptru may be non-zero
  2731  000B9A                     	endif
  2732  000B9A  0008               	tblrd		*
  2733  000B9C  50F5               	movf	tablat,w,c
  2734  000B9E  0100               	movlb	0	; () banked
  2735  000BA0  6F84               	movwf	fputc@c& (0+255),b
  2736  000BA2  6B85               	clrf	(fputc@c+1)& (0+255),b
  2737  000BA4  C0C3  F086         	movff	vfpfcnvrt@fp,fputc@fp
  2738  000BA8  C0C4  F087         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2739  000BAC  EC86  F00B         	call	_fputc	;wreg free
  2740                           
  2741                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2742  000BB0  C0C5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2743  000BB4  C0C6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2744  000BB8  2ADE               	incf	postinc2,f,c
  2745  000BBA  0E00               	movlw	0
  2746  000BBC  22DD               	addwfc	postdec2,f,c
  2747  000BBE  D7D3               	goto	l2483
  2748  000BC0                     __end_of_vfpfcnvrt:
  2749                           	opt callstack 0
  2750                           
  2751 ;; *************** function _dtoa *****************
  2752 ;; Defined at:
  2753 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  2756 ;;		 -> NULL(0), 
  2757 ;;  d               8   33[BANK0 ] long long 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  n               8   57[BANK0 ] long long 
  2760 ;;  i               2   65[BANK0 ] int 
  2761 ;;  s               2   55[BANK0 ] int 
  2762 ;;  w               2   53[BANK0 ] int 
  2763 ;;  p               2   51[BANK0 ] int 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  2   31[BANK0 ] int 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2773 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;Total ram usage:       36 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:   19
  2780 ;; This function calls:
  2781 ;;		___aodiv
  2782 ;;		___aomod
  2783 ;;		_abs
  2784 ;;		_pad
  2785 ;; This function is called by:
  2786 ;;		_vfpfcnvrt
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text4
  2791  000544                     __ptext4:
  2792                           	opt callstack 0
  2793  000544                     _dtoa:
  2794                           	opt callstack 8
  2795                           
  2796                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  2797                           
  2798                           ;incstack = 0
  2799  000544  C0A1  F0B9         	movff	dtoa@d,dtoa@n
  2800  000548  C0A2  F0BA         	movff	dtoa@d+1,dtoa@n+1
  2801  00054C  C0A3  F0BB         	movff	dtoa@d+2,dtoa@n+2
  2802  000550  C0A4  F0BC         	movff	dtoa@d+3,dtoa@n+3
  2803  000554  C0A5  F0BD         	movff	dtoa@d+4,dtoa@n+4
  2804  000558  C0A6  F0BE         	movff	dtoa@d+5,dtoa@n+5
  2805  00055C  C0A7  F0BF         	movff	dtoa@d+6,dtoa@n+6
  2806  000560  C0A8  F0C0         	movff	dtoa@d+7,dtoa@n+7
  2807                           
  2808                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  2809  000564  0100               	movlb	0	; () banked
  2810  000566  AFC0               	btfss	(dtoa@n+7)& (0+255),7,b
  2811  000568  D002               	goto	u1760
  2812  00056A  0E01               	movlw	1
  2813  00056C  D001               	goto	u1770
  2814  00056E                     u1760:
  2815  00056E  0E00               	movlw	0
  2816  000570                     u1770:
  2817  000570  6FB7               	movwf	dtoa@s& (0+255),b
  2818  000572  6BB8               	clrf	(dtoa@s+1)& (0+255),b
  2819                           
  2820                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  2821  000574  51B7               	movf	dtoa@s& (0+255),w,b
  2822  000576  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2823  000578  B4D8               	btfsc	status,2,c
  2824  00057A  D010               	goto	l2319
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  2828  00057C  1FC0               	comf	(dtoa@n+7)& (0+255),f,b
  2829  00057E  1FBF               	comf	(dtoa@n+6)& (0+255),f,b
  2830  000580  1FBE               	comf	(dtoa@n+5)& (0+255),f,b
  2831  000582  1FBD               	comf	(dtoa@n+4)& (0+255),f,b
  2832  000584  1FBC               	comf	(dtoa@n+3)& (0+255),f,b
  2833  000586  1FBB               	comf	(dtoa@n+2)& (0+255),f,b
  2834  000588  1FBA               	comf	(dtoa@n+1)& (0+255),f,b
  2835  00058A  6DB9               	negf	dtoa@n& (0+255),b
  2836  00058C  0E00               	movlw	0
  2837  00058E  23BA               	addwfc	(dtoa@n+1)& (0+255),f,b
  2838  000590  23BB               	addwfc	(dtoa@n+2)& (0+255),f,b
  2839  000592  23BC               	addwfc	(dtoa@n+3)& (0+255),f,b
  2840  000594  23BD               	addwfc	(dtoa@n+4)& (0+255),f,b
  2841  000596  23BE               	addwfc	(dtoa@n+5)& (0+255),f,b
  2842  000598  23BF               	addwfc	(dtoa@n+6)& (0+255),f,b
  2843  00059A  23C0               	addwfc	(dtoa@n+7)& (0+255),f,b
  2844  00059C                     l2319:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  2848  00059C  AFF8               	btfss	(_prec+1)& (0+255),7,b
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  2852  00059E  93F9               	bcf	_flags& (0+255),1,b
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  2856  0005A0  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2857  0005A2  D005               	goto	u1800
  2858  0005A4  51F8               	movf	(_prec+1)& (0+255),w,b
  2859  0005A6  E108               	bnz	l198
  2860  0005A8  05F7               	decf	_prec& (0+255),w,b
  2861  0005AA  B0D8               	btfsc	status,0,c
  2862  0005AC  D005               	goto	l198
  2863  0005AE                     u1800:
  2864                           
  2865                           ; BSR set to: 0
  2866  0005AE  0E00               	movlw	0
  2867  0005B0  6FB4               	movwf	(dtoa@p+1)& (0+255),b
  2868  0005B2  0E01               	movlw	1
  2869  0005B4  6FB3               	movwf	dtoa@p& (0+255),b
  2870  0005B6  D004               	goto	l200
  2871  0005B8                     l198:
  2872                           
  2873                           ; BSR set to: 0
  2874  0005B8  C0F7  F0B3         	movff	_prec,dtoa@p
  2875  0005BC  C0F8  F0B4         	movff	_prec+1,dtoa@p+1
  2876  0005C0                     l200:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  2880  0005C0  C0F5  F0B5         	movff	_width,dtoa@w
  2881  0005C4  C0F6  F0B6         	movff	_width+1,dtoa@w+1
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  2885  0005C8  51B7               	movf	dtoa@s& (0+255),w,b
  2886  0005CA  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  2887  0005CC  A4D8               	btfss	status,2,c
  2888  0005CE  D002               	goto	u1820
  2889                           
  2890                           ; BSR set to: 0
  2891  0005D0  A5F9               	btfss	_flags& (0+255),2,b
  2892  0005D2  D003               	goto	l2333
  2893  0005D4                     u1820:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  2897  0005D4  07B5               	decf	dtoa@w& (0+255),f,b
  2898  0005D6  A0D8               	btfss	status,0,c
  2899  0005D8  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  2900  0005DA                     l2333:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  2904  0005DA  0E00               	movlw	0
  2905  0005DC  6FC2               	movwf	(dtoa@i+1)& (0+255),b
  2906  0005DE  0E1F               	movlw	31
  2907  0005E0  6FC1               	movwf	dtoa@i& (0+255),b
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  2911  0005E2  0E00               	movlw	0
  2912  0005E4  0101               	movlb	1	; () banked
  2913  0005E6  6F5B               	movwf	(_dbuf+31)& (0+255),b
  2914                           
  2915                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2916  0005E8  D07D               	goto	l2347
  2917  0005EA                     l2337:
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  2921  0005EA  07C1               	decf	dtoa@i& (0+255),f,b
  2922  0005EC  A0D8               	btfss	status,0,c
  2923  0005EE  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  2927  0005F0  0E3C               	movlw	low _dbuf
  2928  0005F2  25C1               	addwf	dtoa@i& (0+255),w,b
  2929  0005F4  6ED9               	movwf	fsr2l,c
  2930  0005F6  0E01               	movlw	high _dbuf
  2931  0005F8  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  2932  0005FA  6EDA               	movwf	fsr2h,c
  2933  0005FC  C0B9  F080         	movff	dtoa@n,___aomod@dividend
  2934  000600  C0BA  F081         	movff	dtoa@n+1,___aomod@dividend+1
  2935  000604  C0BB  F082         	movff	dtoa@n+2,___aomod@dividend+2
  2936  000608  C0BC  F083         	movff	dtoa@n+3,___aomod@dividend+3
  2937  00060C  C0BD  F084         	movff	dtoa@n+4,___aomod@dividend+4
  2938  000610  C0BE  F085         	movff	dtoa@n+5,___aomod@dividend+5
  2939  000614  C0BF  F086         	movff	dtoa@n+6,___aomod@dividend+6
  2940  000618  C0C0  F087         	movff	dtoa@n+7,___aomod@dividend+7
  2941  00061C  0E0A               	movlw	10
  2942  00061E  6F88               	movwf	___aomod@divisor& (0+255),b
  2943  000620  0E00               	movlw	0
  2944  000622  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  2945  000624  0E00               	movlw	0
  2946  000626  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  2947  000628  0E00               	movlw	0
  2948  00062A  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  2949  00062C  0E00               	movlw	0
  2950  00062E  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  2951  000630  0E00               	movlw	0
  2952  000632  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  2953  000634  0E00               	movlw	0
  2954  000636  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  2955  000638  0E00               	movlw	0
  2956  00063A  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  2957  00063C  EC11  F009         	call	___aomod	;wreg free
  2958  000640  C080  F0A9         	movff	?___aomod,??_dtoa
  2959  000644  C081  F0AA         	movff	?___aomod+1,??_dtoa+1
  2960  000648  C082  F0AB         	movff	?___aomod+2,??_dtoa+2
  2961  00064C  C083  F0AC         	movff	?___aomod+3,??_dtoa+3
  2962  000650  C084  F0AD         	movff	?___aomod+4,??_dtoa+4
  2963  000654  C085  F0AE         	movff	?___aomod+5,??_dtoa+5
  2964  000658  C086  F0AF         	movff	?___aomod+6,??_dtoa+6
  2965  00065C  C087  F0B0         	movff	?___aomod+7,??_dtoa+7
  2966  000660  C0A9  F092         	movff	??_dtoa,abs@a
  2967  000664  C0AB  F093         	movff	??_dtoa+2,abs@a+1
  2968  000668  ECF0  F00C         	call	_abs	;wreg free
  2969  00066C  0100               	movlb	0	; () banked
  2970  00066E  5192               	movf	?_abs& (0+255),w,b
  2971  000670  0F30               	addlw	48
  2972  000672  6EDF               	movwf	indf2,c
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  2976  000674  07B3               	decf	dtoa@p& (0+255),f,b
  2977  000676  A0D8               	btfss	status,0,c
  2978  000678  07B4               	decf	(dtoa@p+1)& (0+255),f,b
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  2982  00067A  07B5               	decf	dtoa@w& (0+255),f,b
  2983  00067C  A0D8               	btfss	status,0,c
  2984  00067E  07B6               	decf	(dtoa@w+1)& (0+255),f,b
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  2988  000680  C0B9  F080         	movff	dtoa@n,___aodiv@dividend
  2989  000684  C0BA  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  2990  000688  C0BB  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  2991  00068C  C0BC  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  2992  000690  C0BD  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  2993  000694  C0BE  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  2994  000698  C0BF  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  2995  00069C  C0C0  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  2996  0006A0  0E0A               	movlw	10
  2997  0006A2  6F88               	movwf	___aodiv@divisor& (0+255),b
  2998  0006A4  0E00               	movlw	0
  2999  0006A6  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  3000  0006A8  0E00               	movlw	0
  3001  0006AA  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3002  0006AC  0E00               	movlw	0
  3003  0006AE  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3004  0006B0  0E00               	movlw	0
  3005  0006B2  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3006  0006B4  0E00               	movlw	0
  3007  0006B6  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3008  0006B8  0E00               	movlw	0
  3009  0006BA  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3010  0006BC  0E00               	movlw	0
  3011  0006BE  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3012  0006C0  ECC8  F007         	call	___aodiv	;wreg free
  3013  0006C4  C080  F0B9         	movff	?___aodiv,dtoa@n
  3014  0006C8  C081  F0BA         	movff	?___aodiv+1,dtoa@n+1
  3015  0006CC  C082  F0BB         	movff	?___aodiv+2,dtoa@n+2
  3016  0006D0  C083  F0BC         	movff	?___aodiv+3,dtoa@n+3
  3017  0006D4  C084  F0BD         	movff	?___aodiv+4,dtoa@n+4
  3018  0006D8  C085  F0BE         	movff	?___aodiv+5,dtoa@n+5
  3019  0006DC  C086  F0BF         	movff	?___aodiv+6,dtoa@n+6
  3020  0006E0  C087  F0C0         	movff	?___aodiv+7,dtoa@n+7
  3021  0006E4                     l2347:
  3022                           
  3023                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3024  0006E4  0100               	movlb	0	; () banked
  3025  0006E6  BFC2               	btfsc	(dtoa@i+1)& (0+255),7,b
  3026  0006E8  D01F               	goto	u1870
  3027  0006EA  51C2               	movf	(dtoa@i+1)& (0+255),w,b
  3028  0006EC  E103               	bnz	u1830
  3029  0006EE  05C1               	decf	dtoa@i& (0+255),w,b
  3030  0006F0  A0D8               	btfss	status,0,c
  3031  0006F2  D01A               	goto	u1870
  3032  0006F4                     u1830:
  3033                           
  3034                           ; BSR set to: 0
  3035  0006F4  51B9               	movf	dtoa@n& (0+255),w,b
  3036  0006F6  11BA               	iorwf	(dtoa@n+1)& (0+255),w,b
  3037  0006F8  11BB               	iorwf	(dtoa@n+2)& (0+255),w,b
  3038  0006FA  11BC               	iorwf	(dtoa@n+3)& (0+255),w,b
  3039  0006FC  11BD               	iorwf	(dtoa@n+4)& (0+255),w,b
  3040  0006FE  11BE               	iorwf	(dtoa@n+5)& (0+255),w,b
  3041  000700  11BF               	iorwf	(dtoa@n+6)& (0+255),w,b
  3042  000702  11C0               	iorwf	(dtoa@n+7)& (0+255),w,b
  3043  000704  A4D8               	btfss	status,2,c
  3044  000706  D771               	goto	l2337
  3045                           
  3046                           ; BSR set to: 0
  3047  000708  BFB4               	btfsc	(dtoa@p+1)& (0+255),7,b
  3048  00070A  D005               	goto	u1850
  3049  00070C  51B4               	movf	(dtoa@p+1)& (0+255),w,b
  3050  00070E  E102               	bnz	u1851
  3051  000710  05B3               	decf	dtoa@p& (0+255),w,b
  3052  000712  B0D8               	btfsc	status,0,c
  3053  000714                     u1851:
  3054  000714  D76A               	goto	l2337
  3055  000716                     u1850:
  3056                           
  3057                           ; BSR set to: 0
  3058  000716  BFB6               	btfsc	(dtoa@w+1)& (0+255),7,b
  3059  000718  D007               	goto	u1870
  3060  00071A  51B6               	movf	(dtoa@w+1)& (0+255),w,b
  3061  00071C  E103               	bnz	u1860
  3062  00071E  05B5               	decf	dtoa@w& (0+255),w,b
  3063  000720  A0D8               	btfss	status,0,c
  3064  000722  D002               	goto	u1870
  3065  000724                     u1860:
  3066                           
  3067                           ; BSR set to: 0
  3068  000724  B3F9               	btfsc	_flags& (0+255),1,b
  3069  000726  D761               	goto	l2337
  3070  000728                     u1870:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  3074  000728  51B7               	movf	dtoa@s& (0+255),w,b
  3075  00072A  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  3076  00072C  A4D8               	btfss	status,2,c
  3077  00072E  D002               	goto	u1890
  3078                           
  3079                           ; BSR set to: 0
  3080  000730  A5F9               	btfss	_flags& (0+255),2,b
  3081  000732  D017               	goto	l2371
  3082  000734                     u1890:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  3086  000734  07C1               	decf	dtoa@i& (0+255),f,b
  3087  000736  A0D8               	btfss	status,0,c
  3088  000738  07C2               	decf	(dtoa@i+1)& (0+255),f,b
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  3092  00073A  51B7               	movf	dtoa@s& (0+255),w,b
  3093  00073C  11B8               	iorwf	(dtoa@s+1)& (0+255),w,b
  3094  00073E  A4D8               	btfss	status,2,c
  3095  000740  D004               	goto	l2367
  3096                           
  3097                           ; BSR set to: 0
  3098  000742  0E00               	movlw	0
  3099  000744  6FB2               	movwf	(_dtoa$339+1)& (0+255),b
  3100  000746  0E2B               	movlw	43
  3101  000748  D003               	goto	L2
  3102  00074A                     l2367:
  3103                           
  3104                           ; BSR set to: 0
  3105  00074A  0E00               	movlw	0
  3106  00074C  6FB2               	movwf	(_dtoa$339+1)& (0+255),b
  3107  00074E  0E2D               	movlw	45
  3108  000750                     L2:
  3109  000750  6FB1               	movwf	_dtoa$339& (0+255),b
  3110                           
  3111                           ; BSR set to: 0
  3112  000752  0E3C               	movlw	low _dbuf
  3113  000754  25C1               	addwf	dtoa@i& (0+255),w,b
  3114  000756  6ED9               	movwf	fsr2l,c
  3115  000758  0E01               	movlw	high _dbuf
  3116  00075A  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  3117  00075C  6EDA               	movwf	fsr2h,c
  3118  00075E  C0B1  FFDF         	movff	_dtoa$339,indf2
  3119  000762                     l2371:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  3123  000762  C09F  F094         	movff	dtoa@fp,pad@fp
  3124  000766  C0A0  F095         	movff	dtoa@fp+1,pad@fp+1
  3125  00076A  0E3C               	movlw	low _dbuf
  3126  00076C  25C1               	addwf	dtoa@i& (0+255),w,b
  3127  00076E  6F96               	movwf	pad@buf& (0+255),b
  3128  000770  0E01               	movlw	high _dbuf
  3129  000772  21C2               	addwfc	(dtoa@i+1)& (0+255),w,b
  3130  000774  6F97               	movwf	(pad@buf+1)& (0+255),b
  3131  000776  C0B5  F098         	movff	dtoa@w,pad@p
  3132  00077A  C0B6  F099         	movff	dtoa@w+1,pad@p+1
  3133  00077E  EC36  F00A         	call	_pad	;wreg free
  3134  000782  C094  F09F         	movff	?_pad,?_dtoa
  3135  000786  C095  F0A0         	movff	?_pad+1,?_dtoa+1
  3136  00078A  0012               	return		;funcret
  3137  00078C                     __end_of_dtoa:
  3138                           	opt callstack 0
  3139                           
  3140 ;; *************** function _abs *****************
  3141 ;; Defined at:
  3142 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  a               2   18[BANK0 ] int 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2   18[BANK0 ] int 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:        4 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:   12
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_dtoa
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text5
  3171  0019E0                     __ptext5:
  3172                           	opt callstack 0
  3173  0019E0                     _abs:
  3174                           	opt callstack 14
  3175                           
  3176                           ;incstack = 0
  3177  0019E0  0100               	movlb	0	; () banked
  3178  0019E2  BF93               	btfsc	(abs@a+1)& (0+255),7,b
  3179  0019E4  D005               	goto	u1430
  3180  0019E6  5193               	movf	(abs@a+1)& (0+255),w,b
  3181  0019E8  E110               	bnz	l911
  3182  0019EA  0592               	decf	abs@a& (0+255),w,b
  3183  0019EC  B0D8               	btfsc	status,0,c
  3184  0019EE  D00D               	goto	l911
  3185  0019F0                     u1430:
  3186                           
  3187                           ; BSR set to: 0
  3188  0019F0  C092  F094         	movff	abs@a,??_abs
  3189  0019F4  C093  F095         	movff	abs@a+1,??_abs+1
  3190  0019F8  1F94               	comf	??_abs& (0+255),f,b
  3191  0019FA  1F95               	comf	(??_abs+1)& (0+255),f,b
  3192  0019FC  4B94               	infsnz	??_abs& (0+255),f,b
  3193  0019FE  2B95               	incf	(??_abs+1)& (0+255),f,b
  3194  001A00  C094  F092         	movff	??_abs,?_abs
  3195  001A04  C095  F093         	movff	??_abs+1,?_abs+1
  3196  001A08  0012               	return	
  3197  001A0A                     l911:
  3198                           
  3199                           ; BSR set to: 0
  3200  001A0A  C092  F092         	movff	abs@a,?_abs
  3201  001A0E  C093  F093         	movff	abs@a+1,?_abs+1
  3202                           
  3203                           ; BSR set to: 0
  3204  001A12  0012               	return		;funcret
  3205  001A14                     __end_of_abs:
  3206                           	opt callstack 0
  3207                           
  3208 ;; *************** function ___aomod *****************
  3209 ;; Defined at:
  3210 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  dividend        8    0[BANK0 ] long long 
  3213 ;;  divisor         8    8[BANK0 ] long long 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  sign            1   17[BANK0 ] unsigned char 
  3216 ;;  counter         1   16[BANK0 ] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  8    0[BANK0 ] long long 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3226 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;Total ram usage:       18 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:   12
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_dtoa
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text6
  3241  001222                     __ptext6:
  3242                           	opt callstack 0
  3243  001222                     ___aomod:
  3244                           	opt callstack 14
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;incstack = 0
  3248  001222  0E00               	movlw	0
  3249  001224  0100               	movlb	0	; () banked
  3250  001226  6F91               	movwf	___aomod@sign& (0+255),b
  3251                           
  3252                           ; BSR set to: 0
  3253  001228  AF87               	btfss	(___aomod@dividend+7)& (0+255),7,b
  3254  00122A  D012               	goto	l2165
  3255                           
  3256                           ; BSR set to: 0
  3257  00122C  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3258  00122E  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3259  001230  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3260  001232  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3261  001234  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3262  001236  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3263  001238  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3264  00123A  6D80               	negf	___aomod@dividend& (0+255),b
  3265  00123C  0E00               	movlw	0
  3266  00123E  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3267  001240  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3268  001242  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3269  001244  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3270  001246  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3271  001248  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3272  00124A  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3273                           
  3274                           ; BSR set to: 0
  3275  00124C  0E01               	movlw	1
  3276  00124E  6F91               	movwf	___aomod@sign& (0+255),b
  3277  001250                     l2165:
  3278                           
  3279                           ; BSR set to: 0
  3280  001250  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3281  001252  D010               	goto	l2169
  3282                           
  3283                           ; BSR set to: 0
  3284  001254  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3285  001256  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3286  001258  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3287  00125A  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3288  00125C  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3289  00125E  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3290  001260  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  3291  001262  6D88               	negf	___aomod@divisor& (0+255),b
  3292  001264  0E00               	movlw	0
  3293  001266  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3294  001268  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3295  00126A  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3296  00126C  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3297  00126E  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3298  001270  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3299  001272  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3300  001274                     l2169:
  3301                           
  3302                           ; BSR set to: 0
  3303  001274  5188               	movf	___aomod@divisor& (0+255),w,b
  3304  001276  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3305  001278  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3306  00127A  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3307  00127C  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3308  00127E  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3309  001280  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3310  001282  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3311  001284  B4D8               	btfsc	status,2,c
  3312  001286  D03C               	goto	l2185
  3313                           
  3314                           ; BSR set to: 0
  3315  001288  0E01               	movlw	1
  3316  00128A  6F90               	movwf	___aomod@counter& (0+255),b
  3317  00128C  D00A               	goto	l2175
  3318  00128E                     l2173:
  3319                           
  3320                           ; BSR set to: 0
  3321  00128E  90D8               	bcf	status,0,c
  3322  001290  3788               	rlcf	___aomod@divisor& (0+255),f,b
  3323  001292  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3324  001294  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3325  001296  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3326  001298  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3327  00129A  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3328  00129C  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3329  00129E  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3330  0012A0  2B90               	incf	___aomod@counter& (0+255),f,b
  3331  0012A2                     l2175:
  3332                           
  3333                           ; BSR set to: 0
  3334  0012A2  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3335  0012A4  D7F4               	goto	l2173
  3336  0012A6                     u1540:
  3337                           
  3338                           ; BSR set to: 0
  3339  0012A6  5188               	movf	___aomod@divisor& (0+255),w,b
  3340  0012A8  5D80               	subwf	___aomod@dividend& (0+255),w,b
  3341  0012AA  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3342  0012AC  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3343  0012AE  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3344  0012B0  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3345  0012B2  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3346  0012B4  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3347  0012B6  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3348  0012B8  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3349  0012BA  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3350  0012BC  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3351  0012BE  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3352  0012C0  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3353  0012C2  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3354  0012C4  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3355  0012C6  A0D8               	btfss	status,0,c
  3356  0012C8  D010               	goto	l2181
  3357                           
  3358                           ; BSR set to: 0
  3359  0012CA  5188               	movf	___aomod@divisor& (0+255),w,b
  3360  0012CC  5F80               	subwf	___aomod@dividend& (0+255),f,b
  3361  0012CE  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  3362  0012D0  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3363  0012D2  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3364  0012D4  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3365  0012D6  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3366  0012D8  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3367  0012DA  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3368  0012DC  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3369  0012DE  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3370  0012E0  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3371  0012E2  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3372  0012E4  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3373  0012E6  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3374  0012E8  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3375  0012EA                     l2181:
  3376                           
  3377                           ; BSR set to: 0
  3378  0012EA  90D8               	bcf	status,0,c
  3379  0012EC  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3380  0012EE  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3381  0012F0  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3382  0012F2  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3383  0012F4  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3384  0012F6  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3385  0012F8  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3386  0012FA  3388               	rrcf	___aomod@divisor& (0+255),f,b
  3387                           
  3388                           ; BSR set to: 0
  3389  0012FC  2F90               	decfsz	___aomod@counter& (0+255),f,b
  3390  0012FE  D7D3               	goto	u1540
  3391  001300                     l2185:
  3392                           
  3393                           ; BSR set to: 0
  3394  001300  5191               	movf	___aomod@sign& (0+255),w,b
  3395  001302  B4D8               	btfsc	status,2,c
  3396  001304  D010               	goto	l2189
  3397                           
  3398                           ; BSR set to: 0
  3399  001306  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  3400  001308  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  3401  00130A  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  3402  00130C  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  3403  00130E  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  3404  001310  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  3405  001312  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  3406  001314  6D80               	negf	___aomod@dividend& (0+255),b
  3407  001316  0E00               	movlw	0
  3408  001318  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3409  00131A  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3410  00131C  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3411  00131E  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3412  001320  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3413  001322  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3414  001324  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3415  001326                     l2189:
  3416                           
  3417                           ; BSR set to: 0
  3418  001326  C080  F080         	movff	___aomod@dividend,?___aomod
  3419  00132A  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  3420  00132E  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  3421  001332  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  3422  001336  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  3423  00133A  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  3424  00133E  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  3425  001342  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  3426                           
  3427                           ; BSR set to: 0
  3428  001346  0012               	return		;funcret
  3429  001348                     __end_of___aomod:
  3430                           	opt callstack 0
  3431                           
  3432 ;; *************** function ___aodiv *****************
  3433 ;; Defined at:
  3434 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  dividend        8    0[BANK0 ] long long 
  3437 ;;  divisor         8    8[BANK0 ] long long 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  quotient        8   18[BANK0 ] long long 
  3440 ;;  sign            1   17[BANK0 ] unsigned char 
  3441 ;;  counter         1   16[BANK0 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  8    0[BANK0 ] long long 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3451 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;Total ram usage:       26 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:   12
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_dtoa
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text7
  3466  000F90                     __ptext7:
  3467                           	opt callstack 0
  3468  000F90                     ___aodiv:
  3469                           	opt callstack 14
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;incstack = 0
  3473  000F90  0E00               	movlw	0
  3474  000F92  0100               	movlb	0	; () banked
  3475  000F94  6F91               	movwf	___aodiv@sign& (0+255),b
  3476                           
  3477                           ; BSR set to: 0
  3478  000F96  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3479  000F98  D012               	goto	l2121
  3480                           
  3481                           ; BSR set to: 0
  3482  000F9A  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3483  000F9C  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3484  000F9E  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3485  000FA0  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3486  000FA2  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3487  000FA4  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3488  000FA6  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3489  000FA8  6D88               	negf	___aodiv@divisor& (0+255),b
  3490  000FAA  0E00               	movlw	0
  3491  000FAC  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3492  000FAE  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3493  000FB0  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3494  000FB2  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3495  000FB4  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3496  000FB6  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3497  000FB8  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3498                           
  3499                           ; BSR set to: 0
  3500  000FBA  0E01               	movlw	1
  3501  000FBC  6F91               	movwf	___aodiv@sign& (0+255),b
  3502  000FBE                     l2121:
  3503                           
  3504                           ; BSR set to: 0
  3505  000FBE  AF87               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  3506  000FC0  D012               	goto	l2127
  3507                           
  3508                           ; BSR set to: 0
  3509  000FC2  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3510  000FC4  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3511  000FC6  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3512  000FC8  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3513  000FCA  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3514  000FCC  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3515  000FCE  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3516  000FD0  6D80               	negf	___aodiv@dividend& (0+255),b
  3517  000FD2  0E00               	movlw	0
  3518  000FD4  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3519  000FD6  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3520  000FD8  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3521  000FDA  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3522  000FDC  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3523  000FDE  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3524  000FE0  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3525                           
  3526                           ; BSR set to: 0
  3527  000FE2  0E01               	movlw	1
  3528  000FE4  1B91               	xorwf	___aodiv@sign& (0+255),f,b
  3529  000FE6                     l2127:
  3530                           
  3531                           ; BSR set to: 0
  3532  000FE6  EE20  F092         	lfsr	2,___aodiv@quotient
  3533  000FEA  0E07               	movlw	7
  3534  000FEC                     u1461:
  3535  000FEC  6ADE               	clrf	postinc2,c
  3536  000FEE  06E8               	decf	wreg,f,c
  3537  000FF0  E2FD               	bc	u1461
  3538                           
  3539                           ; BSR set to: 0
  3540  000FF2  5188               	movf	___aodiv@divisor& (0+255),w,b
  3541  000FF4  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3542  000FF6  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3543  000FF8  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  3544  000FFA  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  3545  000FFC  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  3546  000FFE  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  3547  001000  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  3548  001002  B4D8               	btfsc	status,2,c
  3549  001004  D046               	goto	l2149
  3550                           
  3551                           ; BSR set to: 0
  3552  001006  0E01               	movlw	1
  3553  001008  6F90               	movwf	___aodiv@counter& (0+255),b
  3554  00100A  D00A               	goto	l2135
  3555  00100C                     l2133:
  3556                           
  3557                           ; BSR set to: 0
  3558  00100C  90D8               	bcf	status,0,c
  3559  00100E  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  3560  001010  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  3561  001012  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  3562  001014  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  3563  001016  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  3564  001018  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  3565  00101A  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  3566  00101C  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  3567  00101E  2B90               	incf	___aodiv@counter& (0+255),f,b
  3568  001020                     l2135:
  3569                           
  3570                           ; BSR set to: 0
  3571  001020  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3572  001022  D7F4               	goto	l2133
  3573  001024                     u1480:
  3574                           
  3575                           ; BSR set to: 0
  3576  001024  90D8               	bcf	status,0,c
  3577  001026  3792               	rlcf	___aodiv@quotient& (0+255),f,b
  3578  001028  3793               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3579  00102A  3794               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3580  00102C  3795               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3581  00102E  3796               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3582  001030  3797               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3583  001032  3798               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3584  001034  3799               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3585                           
  3586                           ; BSR set to: 0
  3587  001036  5188               	movf	___aodiv@divisor& (0+255),w,b
  3588  001038  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  3589  00103A  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3590  00103C  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3591  00103E  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3592  001040  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3593  001042  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3594  001044  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3595  001046  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3596  001048  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3597  00104A  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3598  00104C  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3599  00104E  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3600  001050  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3601  001052  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3602  001054  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3603  001056  A0D8               	btfss	status,0,c
  3604  001058  D011               	goto	l2145
  3605                           
  3606                           ; BSR set to: 0
  3607  00105A  5188               	movf	___aodiv@divisor& (0+255),w,b
  3608  00105C  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  3609  00105E  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3610  001060  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3611  001062  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3612  001064  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3613  001066  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3614  001068  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3615  00106A  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3616  00106C  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3617  00106E  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3618  001070  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3619  001072  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3620  001074  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3621  001076  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3622  001078  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3623                           
  3624                           ; BSR set to: 0
  3625  00107A  8192               	bsf	___aodiv@quotient& (0+255),0,b
  3626  00107C                     l2145:
  3627                           
  3628                           ; BSR set to: 0
  3629  00107C  90D8               	bcf	status,0,c
  3630  00107E  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3631  001080  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3632  001082  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3633  001084  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3634  001086  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3635  001088  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3636  00108A  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3637  00108C  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  3638                           
  3639                           ; BSR set to: 0
  3640  00108E  2F90               	decfsz	___aodiv@counter& (0+255),f,b
  3641  001090  D7C9               	goto	u1480
  3642  001092                     l2149:
  3643                           
  3644                           ; BSR set to: 0
  3645  001092  5191               	movf	___aodiv@sign& (0+255),w,b
  3646  001094  B4D8               	btfsc	status,2,c
  3647  001096  D010               	goto	l2153
  3648                           
  3649                           ; BSR set to: 0
  3650  001098  1F99               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3651  00109A  1F98               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3652  00109C  1F97               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3653  00109E  1F96               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3654  0010A0  1F95               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3655  0010A2  1F94               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3656  0010A4  1F93               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3657  0010A6  6D92               	negf	___aodiv@quotient& (0+255),b
  3658  0010A8  0E00               	movlw	0
  3659  0010AA  2393               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3660  0010AC  2394               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3661  0010AE  2395               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3662  0010B0  2396               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3663  0010B2  2397               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3664  0010B4  2398               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3665  0010B6  2399               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3666  0010B8                     l2153:
  3667                           
  3668                           ; BSR set to: 0
  3669  0010B8  C092  F080         	movff	___aodiv@quotient,?___aodiv
  3670  0010BC  C093  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  3671  0010C0  C094  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  3672  0010C4  C095  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  3673  0010C8  C096  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  3674  0010CC  C097  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  3675  0010D0  C098  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  3676  0010D4  C099  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  3677                           
  3678                           ; BSR set to: 0
  3679  0010D8  0012               	return		;funcret
  3680  0010DA                     __end_of___aodiv:
  3681                           	opt callstack 0
  3682                           
  3683 ;; *************** function _ctoa *****************
  3684 ;; Defined at:
  3685 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  3688 ;;		 -> NULL(0), 
  3689 ;;  c               1   33[BANK0 ] unsigned char 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  w               2   34[BANK0 ] int 
  3692 ;;  l               2    0        int 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  2   31[BANK0 ] int 
  3695 ;; Registers used:
  3696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3702 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;Total ram usage:        5 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:   19
  3709 ;; This function calls:
  3710 ;;		_pad
  3711 ;; This function is called by:
  3712 ;;		_vfpfcnvrt
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text8
  3717  00183C                     __ptext8:
  3718                           	opt callstack 0
  3719  00183C                     _ctoa:
  3720                           	opt callstack 8
  3721                           
  3722                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;incstack = 0
  3726  00183C  0100               	movlb	0	; () banked
  3727  00183E  51F5               	movf	_width& (0+255),w,b
  3728  001840  11F6               	iorwf	(_width+1)& (0+255),w,b
  3729  001842  A4D8               	btfss	status,2,c
  3730  001844  D005               	goto	l2303
  3731                           
  3732                           ; BSR set to: 0
  3733  001846  C0F5  F0A2         	movff	_width,ctoa@w
  3734  00184A  C0F6  F0A3         	movff	_width+1,ctoa@w+1
  3735  00184E  D006               	goto	l2305
  3736  001850                     l2303:
  3737                           
  3738                           ; BSR set to: 0
  3739  001850  0EFF               	movlw	255
  3740  001852  25F5               	addwf	_width& (0+255),w,b
  3741  001854  6FA2               	movwf	ctoa@w& (0+255),b
  3742  001856  0EFF               	movlw	255
  3743  001858  21F6               	addwfc	(_width+1)& (0+255),w,b
  3744  00185A  6FA3               	movwf	(ctoa@w+1)& (0+255),b
  3745  00185C                     l2305:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
  3749  00185C  C0A1  F13C         	movff	ctoa@c,_dbuf
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
  3753  001860  0E00               	movlw	0
  3754  001862  0101               	movlb	1	; () banked
  3755  001864  6F3D               	movwf	(_dbuf+1)& (0+255),b
  3756                           
  3757                           ; BSR set to: 1
  3758                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
  3759  001866  C09F  F094         	movff	ctoa@fp,pad@fp
  3760  00186A  C0A0  F095         	movff	ctoa@fp+1,pad@fp+1
  3761  00186E  0E3C               	movlw	low _dbuf
  3762  001870  0100               	movlb	0	; () banked
  3763  001872  6F96               	movwf	pad@buf& (0+255),b
  3764  001874  0E01               	movlw	high _dbuf
  3765  001876  6F97               	movwf	(pad@buf+1)& (0+255),b
  3766  001878  C0A2  F098         	movff	ctoa@w,pad@p
  3767  00187C  C0A3  F099         	movff	ctoa@w+1,pad@p+1
  3768  001880  EC36  F00A         	call	_pad	;wreg free
  3769  001884  C094  F09F         	movff	?_pad,?_ctoa
  3770  001888  C095  F0A0         	movff	?_pad+1,?_ctoa+1
  3771  00188C  0012               	return		;funcret
  3772  00188E                     __end_of_ctoa:
  3773                           	opt callstack 0
  3774                           
  3775 ;; *************** function _pad *****************
  3776 ;; Defined at:
  3777 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  3780 ;;		 -> NULL(0), 
  3781 ;;  buf             2   22[BANK0 ] PTR unsigned char 
  3782 ;;		 -> dbuf(32), 
  3783 ;;  p               2   24[BANK0 ] int 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  w               2   29[BANK0 ] int 
  3786 ;;  i               2   27[BANK0 ] int 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2   20[BANK0 ] int 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3796 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;Total ram usage:       11 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:   18
  3803 ;; This function calls:
  3804 ;;		_fputc
  3805 ;;		_fputs
  3806 ;;		_strlen
  3807 ;; This function is called by:
  3808 ;;		_ctoa
  3809 ;;		_dtoa
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text9
  3814  00146C                     __ptext9:
  3815                           	opt callstack 0
  3816  00146C                     _pad:
  3817                           	opt callstack 8
  3818                           
  3819                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  3820                           
  3821                           ;incstack = 0
  3822  00146C  0100               	movlb	0	; () banked
  3823  00146E  A1F9               	btfss	_flags& (0+255),0,b
  3824  001470  D00A               	goto	l2091
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  3828  001472  C096  F08D         	movff	pad@buf,fputs@s
  3829  001476  C097  F08E         	movff	pad@buf+1,fputs@s+1
  3830  00147A  C094  F08F         	movff	pad@fp,fputs@fp
  3831  00147E  C095  F090         	movff	pad@fp+1,fputs@fp+1
  3832  001482  ECB6  F00C         	call	_fputs	;wreg free
  3833  001486                     l2091:
  3834                           
  3835                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  3836  001486  0100               	movlb	0	; () banked
  3837  001488  BF99               	btfsc	(pad@p+1)& (0+255),7,b
  3838  00148A  D005               	goto	l2095
  3839                           
  3840                           ; BSR set to: 0
  3841  00148C  C098  F09D         	movff	pad@p,pad@w
  3842  001490  C099  F09E         	movff	pad@p+1,pad@w+1
  3843  001494  D004               	goto	l180
  3844  001496                     l2095:
  3845                           
  3846                           ; BSR set to: 0
  3847  001496  0E00               	movlw	0
  3848  001498  6F9E               	movwf	(pad@w+1)& (0+255),b
  3849  00149A  0E00               	movlw	0
  3850  00149C  6F9D               	movwf	pad@w& (0+255),b
  3851  00149E                     l180:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3855  00149E  0E00               	movlw	0
  3856  0014A0  6F9C               	movwf	(pad@i+1)& (0+255),b
  3857  0014A2  0E00               	movlw	0
  3858  0014A4  6F9B               	movwf	pad@i& (0+255),b
  3859                           
  3860                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3861  0014A6  D00D               	goto	l2101
  3862  0014A8                     l2097:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  3866  0014A8  0E00               	movlw	0
  3867  0014AA  6F85               	movwf	(fputc@c+1)& (0+255),b
  3868  0014AC  0E20               	movlw	32
  3869  0014AE  6F84               	movwf	fputc@c& (0+255),b
  3870  0014B0  C094  F086         	movff	pad@fp,fputc@fp
  3871  0014B4  C095  F087         	movff	pad@fp+1,fputc@fp+1
  3872  0014B8  EC86  F00B         	call	_fputc	;wreg free
  3873                           
  3874                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3875  0014BC  0100               	movlb	0	; () banked
  3876  0014BE  4B9B               	infsnz	pad@i& (0+255),f,b
  3877  0014C0  2B9C               	incf	(pad@i+1)& (0+255),f,b
  3878  0014C2                     l2101:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3882  0014C2  519D               	movf	pad@w& (0+255),w,b
  3883  0014C4  5D9B               	subwf	pad@i& (0+255),w,b
  3884  0014C6  519C               	movf	(pad@i+1)& (0+255),w,b
  3885  0014C8  0A80               	xorlw	128
  3886  0014CA  6F9A               	movwf	??_pad& (0+255),b
  3887  0014CC  519E               	movf	(pad@w+1)& (0+255),w,b
  3888  0014CE  0A80               	xorlw	128
  3889  0014D0  599A               	subwfb	??_pad& (0+255),w,b
  3890  0014D2  A0D8               	btfss	status,0,c
  3891  0014D4  D7E9               	goto	l2097
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  3895  0014D6  B1F9               	btfsc	_flags& (0+255),0,b
  3896  0014D8  D00A               	goto	l2105
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  3900  0014DA  C096  F08D         	movff	pad@buf,fputs@s
  3901  0014DE  C097  F08E         	movff	pad@buf+1,fputs@s+1
  3902  0014E2  C094  F08F         	movff	pad@fp,fputs@fp
  3903  0014E6  C095  F090         	movff	pad@fp+1,fputs@fp+1
  3904  0014EA  ECB6  F00C         	call	_fputs	;wreg free
  3905  0014EE                     l2105:
  3906                           
  3907                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  3908  0014EE  C096  F080         	movff	pad@buf,strlen@s
  3909  0014F2  C097  F081         	movff	pad@buf+1,strlen@s+1
  3910  0014F6  EC23  F00D         	call	_strlen	;wreg free
  3911  0014FA  0100               	movlb	0	; () banked
  3912  0014FC  519D               	movf	pad@w& (0+255),w,b
  3913  0014FE  2580               	addwf	?_strlen& (0+255),w,b
  3914  001500  6F94               	movwf	?_pad& (0+255),b
  3915  001502  519E               	movf	(pad@w+1)& (0+255),w,b
  3916  001504  2181               	addwfc	(?_strlen+1)& (0+255),w,b
  3917  001506  6F95               	movwf	(?_pad+1)& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920  001508  0012               	return		;funcret
  3921  00150A                     __end_of_pad:
  3922                           	opt callstack 0
  3923                           
  3924 ;; *************** function _strlen *****************
  3925 ;; Defined at:
  3926 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3929 ;;		 -> dbuf(32), 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  3932 ;;		 -> dbuf(32), 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2    0[BANK0 ] unsigned int 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:        4 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:   12
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_pad
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text10
  3957  001A46                     __ptext10:
  3958                           	opt callstack 0
  3959  001A46                     _strlen:
  3960                           	opt callstack 13
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;incstack = 0
  3964  001A46  C080  F082         	movff	strlen@s,strlen@a
  3965  001A4A  C081  F083         	movff	strlen@s+1,strlen@a+1
  3966  001A4E  D003               	goto	l2063
  3967  001A50                     l2061:
  3968  001A50  0100               	movlb	0	; () banked
  3969  001A52  4B80               	infsnz	strlen@s& (0+255),f,b
  3970  001A54  2B81               	incf	(strlen@s+1)& (0+255),f,b
  3971  001A56                     l2063:
  3972  001A56  C080  FFD9         	movff	strlen@s,fsr2l
  3973  001A5A  C081  FFDA         	movff	strlen@s+1,fsr2h
  3974  001A5E  50DF               	movf	indf2,w,c
  3975  001A60  A4D8               	btfss	status,2,c
  3976  001A62  D7F6               	goto	l2061
  3977  001A64  0100               	movlb	0	; () banked
  3978  001A66  5182               	movf	strlen@a& (0+255),w,b
  3979  001A68  5D80               	subwf	strlen@s& (0+255),w,b
  3980  001A6A  6F80               	movwf	?_strlen& (0+255),b
  3981  001A6C  5183               	movf	(strlen@a+1)& (0+255),w,b
  3982  001A6E  5981               	subwfb	(strlen@s+1)& (0+255),w,b
  3983  001A70  6F81               	movwf	(?_strlen+1)& (0+255),b
  3984                           
  3985                           ; BSR set to: 0
  3986  001A72  0012               	return		;funcret
  3987  001A74                     __end_of_strlen:
  3988                           	opt callstack 0
  3989                           
  3990 ;; *************** function _fputs *****************
  3991 ;; Defined at:
  3992 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  s               2   13[BANK0 ] PTR const unsigned char 
  3995 ;;		 -> dbuf(32), 
  3996 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  3997 ;;		 -> NULL(0), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  i               2   18[BANK0 ] int 
  4000 ;;  c               1   17[BANK0 ] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2   13[BANK0 ] int 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:        7 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:   17
  4017 ;; This function calls:
  4018 ;;		_fputc
  4019 ;; This function is called by:
  4020 ;;		_pad
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text11
  4025  00196C                     __ptext11:
  4026                           	opt callstack 0
  4027  00196C                     _fputs:
  4028                           	opt callstack 8
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;incstack = 0
  4032  00196C  0E00               	movlw	0
  4033  00196E  0100               	movlb	0	; () banked
  4034  001970  6F93               	movwf	(fputs@i+1)& (0+255),b
  4035  001972  0E00               	movlw	0
  4036  001974  6F92               	movwf	fputs@i& (0+255),b
  4037  001976  D00C               	goto	l2057
  4038  001978                     l2053:
  4039                           
  4040                           ; BSR set to: 0
  4041  001978  C091  F084         	movff	fputs@c,fputc@c
  4042  00197C  6B85               	clrf	(fputc@c+1)& (0+255),b
  4043  00197E  C08F  F086         	movff	fputs@fp,fputc@fp
  4044  001982  C090  F087         	movff	fputs@fp+1,fputc@fp+1
  4045  001986  EC86  F00B         	call	_fputc	;wreg free
  4046  00198A  0100               	movlb	0	; () banked
  4047  00198C  4B92               	infsnz	fputs@i& (0+255),f,b
  4048  00198E  2B93               	incf	(fputs@i+1)& (0+255),f,b
  4049  001990                     l2057:
  4050                           
  4051                           ; BSR set to: 0
  4052  001990  5192               	movf	fputs@i& (0+255),w,b
  4053  001992  258D               	addwf	fputs@s& (0+255),w,b
  4054  001994  6ED9               	movwf	fsr2l,c
  4055  001996  5193               	movf	(fputs@i+1)& (0+255),w,b
  4056  001998  218E               	addwfc	(fputs@s+1)& (0+255),w,b
  4057  00199A  6EDA               	movwf	fsr2h,c
  4058  00199C  50DF               	movf	indf2,w,c
  4059  00199E  6F91               	movwf	fputs@c& (0+255),b
  4060  0019A0  5191               	movf	fputs@c& (0+255),w,b
  4061  0019A2  B4D8               	btfsc	status,2,c
  4062  0019A4  0012               	return	
  4063  0019A6  D7E8               	goto	l2053
  4064  0019A8                     __end_of_fputs:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _fputc *****************
  4068 ;; Defined at:
  4069 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  c               2    4[BANK0 ] int 
  4072 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  4073 ;;		 -> NULL(0), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2    4[BANK0 ] int 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        9 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:   16
  4092 ;; This function calls:
  4093 ;;		_putch
  4094 ;; This function is called by:
  4095 ;;		_pad
  4096 ;;		_vfpfcnvrt
  4097 ;;		_fputs
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text12
  4102  00170C                     __ptext12:
  4103                           	opt callstack 0
  4104  00170C                     _fputc:
  4105                           	opt callstack 11
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;incstack = 0
  4109  00170C  0100               	movlb	0	; () banked
  4110  00170E  5186               	movf	fputc@fp& (0+255),w,b
  4111  001710  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  4112  001712  B4D8               	btfsc	status,2,c
  4113  001714  D004               	goto	u1280
  4114                           
  4115                           ; BSR set to: 0
  4116  001716  5186               	movf	fputc@fp& (0+255),w,b
  4117  001718  1187               	iorwf	(fputc@fp+1)& (0+255),w,b
  4118  00171A  A4D8               	btfss	status,2,c
  4119  00171C  D004               	goto	l2029
  4120  00171E                     u1280:
  4121                           
  4122                           ; BSR set to: 0
  4123  00171E  5184               	movf	fputc@c& (0+255),w,b
  4124  001720  ECD3  F00D         	call	_putch
  4125  001724  0012               	return	
  4126  001726                     l2029:
  4127                           
  4128                           ; BSR set to: 0
  4129  001726  EE20 F004          	lfsr	2,4
  4130  00172A  5186               	movf	fputc@fp& (0+255),w,b
  4131  00172C  26D9               	addwf	fsr2l,f,c
  4132  00172E  5187               	movf	(fputc@fp+1)& (0+255),w,b
  4133  001730  22DA               	addwfc	fsr2h,f,c
  4134  001732  50DE               	movf	postinc2,w,c
  4135  001734  10DE               	iorwf	postinc2,w,c
  4136  001736  B4D8               	btfsc	status,2,c
  4137  001738  D016               	goto	u1300
  4138                           
  4139                           ; BSR set to: 0
  4140  00173A  EE20 F004          	lfsr	2,4
  4141  00173E  5186               	movf	fputc@fp& (0+255),w,b
  4142  001740  26D9               	addwf	fsr2l,f,c
  4143  001742  5187               	movf	(fputc@fp+1)& (0+255),w,b
  4144  001744  22DA               	addwfc	fsr2h,f,c
  4145  001746  EE10 F002          	lfsr	1,2
  4146  00174A  5186               	movf	fputc@fp& (0+255),w,b
  4147  00174C  26E1               	addwf	fsr1l,f,c
  4148  00174E  5187               	movf	(fputc@fp+1)& (0+255),w,b
  4149  001750  22E2               	addwfc	fsr1h,f,c
  4150  001752  50DE               	movf	postinc2,w,c
  4151  001754  5CE6               	subwf	postinc1,w,c
  4152  001756  50E6               	movf	postinc1,w,c
  4153  001758  0A80               	xorlw	128
  4154  00175A  6F8C               	movwf	(??_fputc+4)& (0+255),b
  4155  00175C  50DE               	movf	postinc2,w,c
  4156  00175E  0A80               	xorlw	128
  4157  001760  598C               	subwfb	(??_fputc+4)& (0+255),w,b
  4158  001762  B0D8               	btfsc	status,0,c
  4159  001764  0012               	return	
  4160  001766                     u1300:
  4161                           
  4162                           ; BSR set to: 0
  4163  001766  EE20 F002          	lfsr	2,2
  4164  00176A  5186               	movf	fputc@fp& (0+255),w,b
  4165  00176C  26D9               	addwf	fsr2l,f,c
  4166  00176E  5187               	movf	(fputc@fp+1)& (0+255),w,b
  4167  001770  22DA               	addwfc	fsr2h,f,c
  4168  001772  2ADE               	incf	postinc2,f,c
  4169  001774  0E00               	movlw	0
  4170  001776  22DD               	addwfc	postdec2,f,c
  4171  001778  0012               	return		;funcret
  4172  00177A                     __end_of_fputc:
  4173                           	opt callstack 0
  4174                           
  4175 ;; *************** function _putch *****************
  4176 ;; Defined at:
  4177 ;;		line 102 in file "lcd.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  data            1    wreg     unsigned char 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  data            1    3[BANK0 ] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;Total ram usage:        1 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:   15
  4198 ;; This function calls:
  4199 ;;		_send_byte
  4200 ;; This function is called by:
  4201 ;;		_fputc
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text13
  4206  001BA6                     __ptext13:
  4207                           	opt callstack 0
  4208  001BA6                     _putch:
  4209                           	opt callstack 11
  4210                           
  4211                           ;incstack = 0
  4212                           ;putch@data stored from wreg
  4213  001BA6  0100               	movlb	0	; () banked
  4214  001BA8  6F83               	movwf	putch@data& (0+255),b
  4215                           
  4216                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  4217  001BAA  848C               	bsf	3980,2,c	;volatile
  4218                           
  4219                           ;lcd.c: 104:     send_byte((unsigned char)data);
  4220  001BAC  0100               	movlb	0	; () banked
  4221  001BAE  5183               	movf	putch@data& (0+255),w,b
  4222  001BB0  ECB3  F00D         	call	_send_byte
  4223  001BB4  0012               	return		;funcret
  4224  001BB6                     __end_of_putch:
  4225                           	opt callstack 0
  4226                           
  4227 ;; *************** function _initLCD *****************
  4228 ;; Defined at:
  4229 ;;		line 69 in file "lcd.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;		None
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;Total ram usage:        1 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:   16
  4250 ;; This function calls:
  4251 ;;		_lcdInst
  4252 ;;		_send_byte
  4253 ;;		_send_nibble
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text14
  4260  00169C                     __ptext14:
  4261                           	opt callstack 0
  4262  00169C                     _initLCD:
  4263                           	opt callstack 14
  4264                           
  4265                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  4266                           
  4267                           ;incstack = 0
  4268  00169C  0E31               	movlw	49
  4269  00169E  0100               	movlb	0	; () banked
  4270  0016A0  6F84               	movwf	??_initLCD& (0+255),b
  4271  0016A2  0EB2               	movlw	178
  4272  0016A4                     u2667:
  4273  0016A4  2EE8               	decfsz	wreg,f,c
  4274  0016A6  D7FE               	bra	u2667
  4275  0016A8  2F84               	decfsz	??_initLCD& (0+255),f,b
  4276  0016AA  D7FC               	bra	u2667
  4277  0016AC  F000               	nop	
  4278                           
  4279                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  4280  0016AE  948C               	bcf	3980,2,c	;volatile
  4281                           
  4282                           ;lcd.c: 74:     send_nibble(0b0011);
  4283  0016B0  0E03               	movlw	3
  4284  0016B2  ECA6  F00D         	call	_send_nibble
  4285                           
  4286                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  4287  0016B6  0E11               	movlw	17
  4288  0016B8  0100               	movlb	0	; () banked
  4289  0016BA  6F84               	movwf	??_initLCD& (0+255),b
  4290  0016BC  0E3A               	movlw	58
  4291  0016BE                     u2677:
  4292  0016BE  2EE8               	decfsz	wreg,f,c
  4293  0016C0  D7FE               	bra	u2677
  4294  0016C2  2F84               	decfsz	??_initLCD& (0+255),f,b
  4295  0016C4  D7FC               	bra	u2677
  4296  0016C6  F000               	nop	
  4297                           
  4298                           ;lcd.c: 76:     send_nibble(0b0011);
  4299  0016C8  0E03               	movlw	3
  4300  0016CA  ECA6  F00D         	call	_send_nibble
  4301                           
  4302                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  4303  0016CE  0E7D               	movlw	125
  4304  0016D0                     u2687:
  4305  0016D0  2EE8               	decfsz	wreg,f,c
  4306  0016D2  D7FE               	bra	u2687
  4307                           
  4308                           ;lcd.c: 78:     send_byte(0b00110010);
  4309  0016D4  0E32               	movlw	50
  4310  0016D6  ECB3  F00D         	call	_send_byte
  4311                           
  4312                           ;lcd.c: 80:     send_byte(0b00101000);
  4313  0016DA  0E28               	movlw	40
  4314  0016DC  ECB3  F00D         	call	_send_byte
  4315                           
  4316                           ;lcd.c: 81:     send_byte(0b00001000);
  4317  0016E0  0E08               	movlw	8
  4318  0016E2  ECB3  F00D         	call	_send_byte
  4319                           
  4320                           ;lcd.c: 82:     send_byte(0b00000001);
  4321  0016E6  0E01               	movlw	1
  4322  0016E8  ECB3  F00D         	call	_send_byte
  4323                           
  4324                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  4325  0016EC  0E11               	movlw	17
  4326  0016EE  0100               	movlb	0	; () banked
  4327  0016F0  6F84               	movwf	??_initLCD& (0+255),b
  4328  0016F2  0E3A               	movlw	58
  4329  0016F4                     u2697:
  4330  0016F4  2EE8               	decfsz	wreg,f,c
  4331  0016F6  D7FE               	bra	u2697
  4332  0016F8  2F84               	decfsz	??_initLCD& (0+255),f,b
  4333  0016FA  D7FC               	bra	u2697
  4334  0016FC  F000               	nop	
  4335                           
  4336                           ;lcd.c: 84:     send_byte(0b00000110);
  4337  0016FE  0E06               	movlw	6
  4338  001700  ECB3  F00D         	call	_send_byte
  4339                           
  4340                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  4341  001704  0E0F               	movlw	15
  4342  001706  ECDB  F00D         	call	_lcdInst
  4343  00170A  0012               	return		;funcret
  4344  00170C                     __end_of_initLCD:
  4345                           	opt callstack 0
  4346                           
  4347 ;; *************** function _lcdInst *****************
  4348 ;; Defined at:
  4349 ;;		line 64 in file "lcd.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  data            1    wreg     unsigned char 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  data            1    3[BANK0 ] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;Total ram usage:        1 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:   15
  4370 ;; This function calls:
  4371 ;;		_send_byte
  4372 ;; This function is called by:
  4373 ;;		_initLCD
  4374 ;;		_main
  4375 ;;		_lcd_shift_cursor
  4376 ;;		_lcd_shift_display
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text15
  4381  001BB6                     __ptext15:
  4382                           	opt callstack 0
  4383  001BB6                     _lcdInst:
  4384                           	opt callstack 15
  4385                           
  4386                           ;incstack = 0
  4387                           ;lcdInst@data stored from wreg
  4388  001BB6  0100               	movlb	0	; () banked
  4389  001BB8  6F83               	movwf	lcdInst@data& (0+255),b
  4390                           
  4391                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  4392  001BBA  948C               	bcf	3980,2,c	;volatile
  4393                           
  4394                           ;lcd.c: 66:     send_byte(data);
  4395  001BBC  0100               	movlb	0	; () banked
  4396  001BBE  5183               	movf	lcdInst@data& (0+255),w,b
  4397  001BC0  ECB3  F00D         	call	_send_byte
  4398  001BC4  0012               	return		;funcret
  4399  001BC6                     __end_of_lcdInst:
  4400                           	opt callstack 0
  4401                           
  4402 ;; *************** function _send_byte *****************
  4403 ;; Defined at:
  4404 ;;		line 55 in file "lcd.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  data            1    wreg     unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  data            1    2[BANK0 ] unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;Total ram usage:        1 bytes
  4423 ;; Hardware stack levels used:    1
  4424 ;; Hardware stack levels required when called:   14
  4425 ;; This function calls:
  4426 ;;		_send_nibble
  4427 ;; This function is called by:
  4428 ;;		_lcdInst
  4429 ;;		_initLCD
  4430 ;;		_putch
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text16
  4435  001B66                     __ptext16:
  4436                           	opt callstack 0
  4437  001B66                     _send_byte:
  4438                           	opt callstack 11
  4439                           
  4440                           ;incstack = 0
  4441                           ;send_byte@data stored from wreg
  4442  001B66  0100               	movlb	0	; () banked
  4443  001B68  6F82               	movwf	send_byte@data& (0+255),b
  4444                           
  4445                           ;lcd.c: 57:     send_nibble(data >> 4);
  4446  001B6A  0100               	movlb	0	; () banked
  4447  001B6C  3982               	swapf	send_byte@data& (0+255),w,b
  4448  001B6E  0B0F               	andlw	15
  4449  001B70  ECA6  F00D         	call	_send_nibble
  4450                           
  4451                           ;lcd.c: 60:     send_nibble(data);
  4452  001B74  0100               	movlb	0	; () banked
  4453  001B76  5182               	movf	send_byte@data& (0+255),w,b
  4454  001B78  ECA6  F00D         	call	_send_nibble
  4455  001B7C  0012               	return		;funcret
  4456  001B7E                     __end_of_send_byte:
  4457                           	opt callstack 0
  4458                           
  4459 ;; *************** function _send_nibble *****************
  4460 ;; Defined at:
  4461 ;;		line 44 in file "lcd.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  data            1    wreg     unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  data            1    1[BANK0 ] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;Total ram usage:        1 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   13
  4482 ;; This function calls:
  4483 ;;		_pulse_e
  4484 ;; This function is called by:
  4485 ;;		_send_byte
  4486 ;;		_initLCD
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text17
  4491  001B4C                     __ptext17:
  4492                           	opt callstack 0
  4493  001B4C                     _send_nibble:
  4494                           	opt callstack 11
  4495                           
  4496                           ;incstack = 0
  4497                           ;send_nibble@data stored from wreg
  4498  001B4C  0100               	movlb	0	; () banked
  4499  001B4E  6F81               	movwf	send_nibble@data& (0+255),b
  4500                           
  4501                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  4502  001B50  508C               	movf	3980,w,c	;volatile
  4503  001B52  0B0F               	andlw	15
  4504  001B54  6E8C               	movwf	3980,c	;volatile
  4505                           
  4506                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  4507  001B56  0100               	movlb	0	; () banked
  4508  001B58  3981               	swapf	send_nibble@data& (0+255),w,b
  4509  001B5A  0BF0               	andlw	240
  4510  001B5C  108C               	iorwf	3980,w,c	;volatile
  4511  001B5E  6E8C               	movwf	3980,c	;volatile
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;lcd.c: 48:     pulse_e();
  4515  001B60  EC3A  F00D         	call	_pulse_e	;wreg free
  4516  001B64  0012               	return		;funcret
  4517  001B66                     __end_of_send_nibble:
  4518                           	opt callstack 0
  4519                           
  4520 ;; *************** function _pulse_e *****************
  4521 ;; Defined at:
  4522 ;;		line 28 in file "lcd.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;		None
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  interruptSta    1    0[BANK0 ] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		wreg
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;Total ram usage:        1 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; Hardware stack levels required when called:   12
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		_send_nibble
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text18
  4551  001A74                     __ptext18:
  4552                           	opt callstack 0
  4553  001A74                     _pulse_e:
  4554                           	opt callstack 11
  4555                           
  4556                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  4557                           
  4558                           ;incstack = 0
  4559  001A74  0E00               	movlw	0
  4560  001A76  BEF2               	btfsc	4082,7,c	;volatile
  4561  001A78  0E01               	movlw	1
  4562  001A7A  0100               	movlb	0	; () banked
  4563  001A7C  6F80               	movwf	pulse_e@interruptState& (0+255),b
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  4567  001A7E  9EF2               	bcf	4082,7,c	;volatile
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  4571  001A80  868C               	bsf	3980,3,c	;volatile
  4572                           
  4573                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  4574  001A82  0E14               	movlw	20
  4575  001A84                     u2707:
  4576  001A84  2EE8               	decfsz	wreg,f,c
  4577  001A86  D7FE               	bra	u2707
  4578  001A88  D000               	nop2	
  4579                           
  4580                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  4581  001A8A  968C               	bcf	3980,3,c	;volatile
  4582                           
  4583                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  4584  001A8C  0E53               	movlw	83
  4585  001A8E                     u2717:
  4586  001A8E  2EE8               	decfsz	wreg,f,c
  4587  001A90  D7FE               	bra	u2717
  4588  001A92  F000               	nop	
  4589                           
  4590                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  4591  001A94  0100               	movlb	0	; () banked
  4592  001A96  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
  4593  001A98  D002               	bra	u1255
  4594  001A9A  9EF2               	bcf	4082,7,c	;volatile
  4595  001A9C  D001               	bra	u1256
  4596  001A9E                     u1255:
  4597  001A9E  8EF2               	bsf	4082,7,c	;volatile
  4598  001AA0                     u1256:
  4599  001AA0  0012               	return		;funcret
  4600  001AA2                     __end_of_pulse_e:
  4601                           	opt callstack 0
  4602                           
  4603 ;; *************** function ___awmod *****************
  4604 ;; Defined at:
  4605 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;  dividend        2    0[BANK0 ] int 
  4608 ;;  divisor         2    2[BANK0 ] int 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  sign            1    5[BANK0 ] unsigned char 
  4611 ;;  counter         1    4[BANK0 ] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  2    0[BANK0 ] int 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4621 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;Total ram usage:        6 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:   12
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_main
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text19
  4636  00162A                     __ptext19:
  4637                           	opt callstack 0
  4638  00162A                     ___awmod:
  4639                           	opt callstack 18
  4640                           
  4641                           ;incstack = 0
  4642  00162A  0E00               	movlw	0
  4643  00162C  0100               	movlb	0	; () banked
  4644  00162E  6F85               	movwf	___awmod@sign& (0+255),b
  4645                           
  4646                           ; BSR set to: 0
  4647  001630  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  4648  001632  D006               	goto	l2605
  4649                           
  4650                           ; BSR set to: 0
  4651  001634  6D80               	negf	___awmod@dividend& (0+255),b
  4652  001636  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  4653  001638  B0D8               	btfsc	status,0,c
  4654  00163A  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  4655                           
  4656                           ; BSR set to: 0
  4657  00163C  0E01               	movlw	1
  4658  00163E  6F85               	movwf	___awmod@sign& (0+255),b
  4659  001640                     l2605:
  4660                           
  4661                           ; BSR set to: 0
  4662  001640  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4663  001642  D004               	goto	l2609
  4664                           
  4665                           ; BSR set to: 0
  4666  001644  6D82               	negf	___awmod@divisor& (0+255),b
  4667  001646  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  4668  001648  B0D8               	btfsc	status,0,c
  4669  00164A  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  4670  00164C                     l2609:
  4671                           
  4672                           ; BSR set to: 0
  4673  00164C  5182               	movf	___awmod@divisor& (0+255),w,b
  4674  00164E  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4675  001650  B4D8               	btfsc	status,2,c
  4676  001652  D018               	goto	l2625
  4677                           
  4678                           ; BSR set to: 0
  4679  001654  0E01               	movlw	1
  4680  001656  6F84               	movwf	___awmod@counter& (0+255),b
  4681  001658  D004               	goto	l2615
  4682  00165A                     l2613:
  4683                           
  4684                           ; BSR set to: 0
  4685  00165A  90D8               	bcf	status,0,c
  4686  00165C  3782               	rlcf	___awmod@divisor& (0+255),f,b
  4687  00165E  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4688  001660  2B84               	incf	___awmod@counter& (0+255),f,b
  4689  001662                     l2615:
  4690                           
  4691                           ; BSR set to: 0
  4692  001662  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4693  001664  D7FA               	goto	l2613
  4694  001666                     u2220:
  4695                           
  4696                           ; BSR set to: 0
  4697  001666  5182               	movf	___awmod@divisor& (0+255),w,b
  4698  001668  5D80               	subwf	___awmod@dividend& (0+255),w,b
  4699  00166A  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  4700  00166C  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4701  00166E  A0D8               	btfss	status,0,c
  4702  001670  D004               	goto	l2621
  4703                           
  4704                           ; BSR set to: 0
  4705  001672  5182               	movf	___awmod@divisor& (0+255),w,b
  4706  001674  5F80               	subwf	___awmod@dividend& (0+255),f,b
  4707  001676  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  4708  001678  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4709  00167A                     l2621:
  4710                           
  4711                           ; BSR set to: 0
  4712  00167A  90D8               	bcf	status,0,c
  4713  00167C  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4714  00167E  3382               	rrcf	___awmod@divisor& (0+255),f,b
  4715                           
  4716                           ; BSR set to: 0
  4717  001680  2F84               	decfsz	___awmod@counter& (0+255),f,b
  4718  001682  D7F1               	goto	u2220
  4719  001684                     l2625:
  4720                           
  4721                           ; BSR set to: 0
  4722  001684  5185               	movf	___awmod@sign& (0+255),w,b
  4723  001686  B4D8               	btfsc	status,2,c
  4724  001688  D004               	goto	l2629
  4725                           
  4726                           ; BSR set to: 0
  4727  00168A  6D80               	negf	___awmod@dividend& (0+255),b
  4728  00168C  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  4729  00168E  B0D8               	btfsc	status,0,c
  4730  001690  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  4731  001692                     l2629:
  4732                           
  4733                           ; BSR set to: 0
  4734  001692  C080  F080         	movff	___awmod@dividend,?___awmod
  4735  001696  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  4736                           
  4737                           ; BSR set to: 0
  4738  00169A  0012               	return		;funcret
  4739  00169C                     __end_of___awmod:
  4740                           	opt callstack 0
  4741                           
  4742 ;; *************** function _interruptHandler *****************
  4743 ;; Defined at:
  4744 ;;		line 246 in file "main.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  i               2  110[COMRAM] int 
  4749 ;;  keypress        1  112[COMRAM] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;Total ram usage:       15 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:   11
  4766 ;; This function calls:
  4767 ;;		i2_lcdInst
  4768 ;;		i2_printf
  4769 ;; This function is called by:
  4770 ;;		Interrupt level 2
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	intcode
  4775  000008                     __pintcode:
  4776                           	opt callstack 0
  4777  000008                     _interruptHandler:
  4778                           	opt callstack 8
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;incstack = 0
  4782  000008  827A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4783  00000A  EDE0  F005         	call	int_func,f	;refresh shadow registers
  4784                           
  4785                           	psect	intcode_body
  4786  000BC0                     __pintcode_body:
  4787                           	opt callstack 8
  4788  000BC0                     int_func:
  4789                           	opt callstack 8
  4790  000BC0  0006               	pop		; remove dummy address from shadow register refresh
  4791  000BC2  CFE1 F067          	movff	fsr1l,??_interruptHandler+4
  4792  000BC6  CFE2 F068          	movff	fsr1h,??_interruptHandler+5
  4793  000BCA  CFD9 F069          	movff	fsr2l,??_interruptHandler+6
  4794  000BCE  CFDA F06A          	movff	fsr2h,??_interruptHandler+7
  4795  000BD2  CFF6 F06B          	movff	tblptrl,??_interruptHandler+8
  4796  000BD6  CFF7 F06C          	movff	tblptrh,??_interruptHandler+9
  4797  000BDA  CFF8 F06D          	movff	tblptru,??_interruptHandler+10
  4798  000BDE  CFF5 F06E          	movff	tablat,??_interruptHandler+11
  4799                           
  4800                           ;main.c: 248:     if(INT1IF){
  4801  000BE2  A0F0               	btfss	4080,0,c	;volatile
  4802  000BE4  D0CF               	goto	i2u248_40
  4803                           
  4804                           ;main.c: 252:         INT1IF = 0;
  4805  000BE6  90F0               	bcf	4080,0,c	;volatile
  4806                           
  4807                           ;main.c: 254:         unsigned char keypress = (PORTB & 0xF0) >> 4;
  4808  000BE8  3881               	swapf	3969,w,c	;volatile
  4809  000BEA  0B0F               	andlw	15
  4810  000BEC  0B0F               	andlw	15
  4811  000BEE  6E71               	movwf	interruptHandler@keypress,c
  4812                           
  4813                           ;main.c: 256:         if (keys[keypress] == 'A') {
  4814  000BF0  0E69               	movlw	low _keys
  4815  000BF2  2471               	addwf	interruptHandler@keypress,w,c
  4816  000BF4  6EF6               	movwf	tblptrl,c
  4817  000BF6  6AF7               	clrf	tblptrh,c
  4818  000BF8  0EFE               	movlw	high _keys
  4819  000BFA  22F7               	addwfc	tblptrh,f,c
  4820  000BFC                     	if	0	;There are less than 3 active tblptr bytes
  4821  000BFC                     	endif
  4822  000BFC  0008               	tblrd		*
  4823  000BFE  50F5               	movf	tablat,w,c
  4824  000C00  0A41               	xorlw	65
  4825  000C02  A4D8               	btfss	status,2,c
  4826  000C04  D02E               	goto	i2l2967
  4827                           
  4828                           ;main.c: 258:             if (error == 1) {
  4829  000C06  0474               	decf	_error,w,c
  4830  000C08  1075               	iorwf	_error+1,w,c
  4831  000C0A  A4D8               	btfss	status,2,c
  4832  000C0C  D026               	goto	i2l2963
  4833                           
  4834                           ;main.c: 260:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  4835  000C0E  0E01               	movlw	1
  4836  000C10  ECE9  F00D         	call	i2_lcdInst
  4837  000C14  0E11               	movlw	17
  4838  000C16  6E63               	movwf	??_interruptHandler& (0+255),c
  4839  000C18  0E3A               	movlw	58
  4840  000C1A                     i2u272_47:
  4841  000C1A  2EE8               	decfsz	wreg,f,c
  4842  000C1C  D7FE               	bra	i2u272_47
  4843  000C1E  2E63               	decfsz	??_interruptHandler& (0+255),f,c
  4844  000C20  D7FC               	bra	i2u272_47
  4845  000C22  D000               	nop2	
  4846                           
  4847                           ;main.c: 261:                 printf("Error: Press");
  4848  000C24  0E40               	movlw	low STR_34
  4849  000C26  6E5D               	movwf	i2printf@fmt,c
  4850  000C28  0EFF               	movlw	high STR_34
  4851  000C2A  6E5E               	movwf	i2printf@fmt+1,c
  4852  000C2C  EC51  F00D         	call	i2_printf	;wreg free
  4853  000C30  0E90               	movlw	144
  4854  000C32  ECE9  F00D         	call	i2_lcdInst
  4855                           
  4856                           ;main.c: 263:                 printf("Correct  Key");
  4857  000C36  0E5A               	movlw	low STR_35
  4858  000C38  6E5D               	movwf	i2printf@fmt,c
  4859  000C3A  0EFF               	movlw	high STR_35
  4860  000C3C  6E5E               	movwf	i2printf@fmt+1,c
  4861  000C3E  EC51  F00D         	call	i2_printf	;wreg free
  4862                           
  4863                           ;main.c: 264:                 _delay((unsigned long)((2000)*(10000000/4000.0)));
  4864  000C42  0E1A               	movlw	26
  4865  000C44  6E64               	movwf	(??_interruptHandler+1)& (0+255),c
  4866  000C46  0E5E               	movlw	94
  4867  000C48  6E63               	movwf	??_interruptHandler& (0+255),c
  4868  000C4A  0E6E               	movlw	110
  4869  000C4C                     i2u273_47:
  4870  000C4C  2EE8               	decfsz	wreg,f,c
  4871  000C4E  D7FE               	bra	i2u273_47
  4872  000C50  2E63               	decfsz	??_interruptHandler& (0+255),f,c
  4873  000C52  D7FC               	bra	i2u273_47
  4874  000C54  2E64               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  4875  000C56  D7FA               	bra	i2u273_47
  4876  000C58  D083               	goto	L4
  4877  000C5A                     i2l2963:
  4878                           
  4879                           ;main.c: 270:                 start = 1;
  4880  000C5A  0E01               	movlw	1
  4881  000C5C  0100               	movlb	0	; () banked
  4882  000C5E  6FFB               	movwf	_start& (0+255),b	;volatile
  4883  000C60  D091               	goto	i2u248_40
  4884  000C62                     i2l2967:
  4885                           
  4886                           ;main.c: 276:         if (keys[keypress] == '*') {
  4887  000C62  0E69               	movlw	low _keys
  4888  000C64  2471               	addwf	interruptHandler@keypress,w,c
  4889  000C66  6EF6               	movwf	tblptrl,c
  4890  000C68  6AF7               	clrf	tblptrh,c
  4891  000C6A  0EFE               	movlw	high _keys
  4892  000C6C  22F7               	addwfc	tblptrh,f,c
  4893  000C6E                     	if	0	;There are less than 3 active tblptr bytes
  4894  000C6E                     	endif
  4895  000C6E  0008               	tblrd		*
  4896  000C70  50F5               	movf	tablat,w,c
  4897  000C72  0A2A               	xorlw	42
  4898  000C74  A4D8               	btfss	status,2,c
  4899  000C76  D02E               	goto	i2l2989
  4900                           
  4901                           ;main.c: 278:             if (error == 0) {
  4902  000C78  5074               	movf	_error,w,c
  4903  000C7A  1075               	iorwf	_error+1,w,c
  4904  000C7C  A4D8               	btfss	status,2,c
  4905  000C7E  D026               	goto	i2l2985
  4906                           
  4907                           ;main.c: 280:                 { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000
      +                          .0)));};
  4908  000C80  0E01               	movlw	1
  4909  000C82  ECE9  F00D         	call	i2_lcdInst
  4910  000C86  0E11               	movlw	17
  4911  000C88  6E63               	movwf	??_interruptHandler& (0+255),c
  4912  000C8A  0E3A               	movlw	58
  4913  000C8C                     i2u274_47:
  4914  000C8C  2EE8               	decfsz	wreg,f,c
  4915  000C8E  D7FE               	bra	i2u274_47
  4916  000C90  2E63               	decfsz	??_interruptHandler& (0+255),f,c
  4917  000C92  D7FC               	bra	i2u274_47
  4918  000C94  D000               	nop2	
  4919                           
  4920                           ;main.c: 281:                 printf("Error: Press");
  4921  000C96  0E40               	movlw	low STR_34
  4922  000C98  6E5D               	movwf	i2printf@fmt,c
  4923  000C9A  0EFF               	movlw	high STR_34
  4924  000C9C  6E5E               	movwf	i2printf@fmt+1,c
  4925  000C9E  EC51  F00D         	call	i2_printf	;wreg free
  4926  000CA2  0E90               	movlw	144
  4927  000CA4  ECE9  F00D         	call	i2_lcdInst
  4928                           
  4929                           ;main.c: 283:                 printf("A  Key");
  4930  000CA8  0EF8               	movlw	low STR_37
  4931  000CAA  6E5D               	movwf	i2printf@fmt,c
  4932  000CAC  0EFF               	movlw	high STR_37
  4933  000CAE  6E5E               	movwf	i2printf@fmt+1,c
  4934  000CB0  EC51  F00D         	call	i2_printf	;wreg free
  4935                           
  4936                           ;main.c: 284:                 _delay((unsigned long)((2000)*(10000000/4000.0)));
  4937  000CB4  0E1A               	movlw	26
  4938  000CB6  6E64               	movwf	(??_interruptHandler+1)& (0+255),c
  4939  000CB8  0E5E               	movlw	94
  4940  000CBA  6E63               	movwf	??_interruptHandler& (0+255),c
  4941  000CBC  0E6E               	movlw	110
  4942  000CBE                     i2u275_47:
  4943  000CBE  2EE8               	decfsz	wreg,f,c
  4944  000CC0  D7FE               	bra	i2u275_47
  4945  000CC2  2E63               	decfsz	??_interruptHandler& (0+255),f,c
  4946  000CC4  D7FC               	bra	i2u275_47
  4947  000CC6  2E64               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  4948  000CC8  D7FA               	bra	i2u275_47
  4949  000CCA  D04A               	goto	L4
  4950  000CCC                     i2l2985:
  4951                           
  4952                           ;main.c: 289:                 exit_key = 1;
  4953  000CCC  0E01               	movlw	1
  4954  000CCE  0100               	movlb	0	; () banked
  4955  000CD0  6FFC               	movwf	_exit_key& (0+255),b	;volatile
  4956  000CD2  D058               	goto	i2u248_40
  4957  000CD4                     i2l2989:
  4958                           
  4959                           ;main.c: 294:         for ( int i = 0; i < Canister; i++ ) {
  4960  000CD4  0E00               	movlw	0
  4961  000CD6  6E70               	movwf	interruptHandler@i+1,c
  4962  000CD8  0E00               	movlw	0
  4963  000CDA  6E6F               	movwf	interruptHandler@i,c
  4964  000CDC  D048               	goto	i2l3015
  4965  000CDE                     i2l2991:
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;main.c: 296:             if ((char)i + '0' == keys[keypress]) {
  4969  000CDE  0E69               	movlw	low _keys
  4970  000CE0  2471               	addwf	interruptHandler@keypress,w,c
  4971  000CE2  6EF6               	movwf	tblptrl,c
  4972  000CE4  6AF7               	clrf	tblptrh,c
  4973  000CE6  0EFE               	movlw	high _keys
  4974  000CE8  22F7               	addwfc	tblptrh,f,c
  4975  000CEA                     	if	0	;There are less than 3 active tblptr bytes
  4976  000CEA                     	endif
  4977  000CEA  0008               	tblrd		*
  4978  000CEC  50F5               	movf	tablat,w,c
  4979  000CEE  6E63               	movwf	??_interruptHandler& (0+255),c
  4980  000CF0  6A64               	clrf	(??_interruptHandler+1)& (0+255),c
  4981  000CF2  506F               	movf	interruptHandler@i,w,c
  4982  000CF4  6E65               	movwf	(??_interruptHandler+2)& (0+255),c
  4983  000CF6  6A66               	clrf	(??_interruptHandler+3)& (0+255),c
  4984  000CF8  0E30               	movlw	48
  4985  000CFA  2665               	addwf	??_interruptHandler+2,f,c
  4986  000CFC  0E00               	movlw	0
  4987  000CFE  2266               	addwfc	??_interruptHandler+3,f,c
  4988  000D00  5063               	movf	??_interruptHandler,w,c
  4989  000D02  1865               	xorwf	??_interruptHandler+2,w,c
  4990  000D04  E132               	bnz	i2l3013
  4991  000D06  5064               	movf	??_interruptHandler+1,w,c
  4992  000D08  1866               	xorwf	??_interruptHandler+3,w,c
  4993  000D0A  A4D8               	btfss	status,2,c
  4994  000D0C  D02E               	goto	i2l3013
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;main.c: 298:                 if (error == 0) {
  4998  000D0E  5074               	movf	_error,w,c
  4999  000D10  1075               	iorwf	_error+1,w,c
  5000  000D12  A4D8               	btfss	status,2,c
  5001  000D14  D027               	goto	i2l3009
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;main.c: 300:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  5005  000D16  0E01               	movlw	1
  5006  000D18  ECE9  F00D         	call	i2_lcdInst
  5007  000D1C  0E11               	movlw	17
  5008  000D1E  6E63               	movwf	??_interruptHandler& (0+255),c
  5009  000D20  0E3A               	movlw	58
  5010  000D22                     i2u276_47:
  5011  000D22  2EE8               	decfsz	wreg,f,c
  5012  000D24  D7FE               	bra	i2u276_47
  5013  000D26  2E63               	decfsz	??_interruptHandler& (0+255),f,c
  5014  000D28  D7FC               	bra	i2u276_47
  5015  000D2A  D000               	nop2	
  5016                           
  5017                           ;main.c: 301:                     printf("Error: Press");
  5018  000D2C  0E40               	movlw	low STR_34
  5019  000D2E  6E5D               	movwf	i2printf@fmt,c
  5020  000D30  0EFF               	movlw	high STR_34
  5021  000D32  6E5E               	movwf	i2printf@fmt+1,c
  5022  000D34  EC51  F00D         	call	i2_printf	;wreg free
  5023  000D38  0E90               	movlw	144
  5024  000D3A  ECE9  F00D         	call	i2_lcdInst
  5025                           
  5026                           ;main.c: 303:                     printf("A  Key");
  5027  000D3E  0EF8               	movlw	low STR_37
  5028  000D40  6E5D               	movwf	i2printf@fmt,c
  5029  000D42  0EFF               	movlw	high STR_37
  5030  000D44  6E5E               	movwf	i2printf@fmt+1,c
  5031  000D46  EC51  F00D         	call	i2_printf	;wreg free
  5032                           
  5033                           ;main.c: 304:                     _delay((unsigned long)((2000)*(10000000/4000.0)));
  5034  000D4A  0E1A               	movlw	26
  5035  000D4C  6E64               	movwf	(??_interruptHandler+1)& (0+255),c
  5036  000D4E  0E5E               	movlw	94
  5037  000D50  6E63               	movwf	??_interruptHandler& (0+255),c
  5038  000D52  0E6E               	movlw	110
  5039  000D54                     i2u277_47:
  5040  000D54  2EE8               	decfsz	wreg,f,c
  5041  000D56  D7FE               	bra	i2u277_47
  5042  000D58  2E63               	decfsz	??_interruptHandler& (0+255),f,c
  5043  000D5A  D7FC               	bra	i2u277_47
  5044  000D5C  2E64               	decfsz	(??_interruptHandler+1)& (0+255),f,c
  5045  000D5E  D7FA               	bra	i2u277_47
  5046  000D60                     L4:
  5047  000D60  D000               	nop2	
  5048  000D62  D010               	goto	i2u248_40
  5049  000D64                     i2l3009:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;main.c: 309:                 key_was_pressed = 1;
  5053  000D64  0E01               	movlw	1
  5054  000D66  6FFD               	movwf	_key_was_pressed& (0+255),b	;volatile
  5055  000D68  D00D               	goto	i2u248_40
  5056  000D6A                     i2l3013:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;main.c: 314:         }
  5060  000D6A  4A6F               	infsnz	interruptHandler@i,f,c
  5061  000D6C  2A70               	incf	interruptHandler@i+1,f,c
  5062  000D6E                     i2l3015:
  5063  000D6E  0100               	movlb	0	; () banked
  5064  000D70  51FE               	movf	_Canister& (0+255),w,b
  5065  000D72  5C6F               	subwf	interruptHandler@i,w,c
  5066  000D74  5070               	movf	interruptHandler@i+1,w,c
  5067  000D76  0A80               	xorlw	128
  5068  000D78  6E63               	movwf	??_interruptHandler& (0+255),c
  5069  000D7A  51FF               	movf	(_Canister+1)& (0+255),w,b
  5070  000D7C  0A80               	xorlw	128
  5071  000D7E  5863               	subwfb	??_interruptHandler& (0+255),w,c
  5072  000D80  A0D8               	btfss	status,0,c
  5073  000D82  D7AD               	goto	i2l2991
  5074  000D84                     i2u248_40:
  5075  000D84  C06E  FFF5         	movff	??_interruptHandler+11,tablat
  5076  000D88  C06D  FFF8         	movff	??_interruptHandler+10,tblptru
  5077  000D8C  C06C  FFF7         	movff	??_interruptHandler+9,tblptrh
  5078  000D90  C06B  FFF6         	movff	??_interruptHandler+8,tblptrl
  5079  000D94  C06A  FFDA         	movff	??_interruptHandler+7,fsr2h
  5080  000D98  C069  FFD9         	movff	??_interruptHandler+6,fsr2l
  5081  000D9C  C068  FFE2         	movff	??_interruptHandler+5,fsr1h
  5082  000DA0  C067  FFE1         	movff	??_interruptHandler+4,fsr1l
  5083  000DA4  927A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5084  000DA6  0011               	retfie		f
  5085  000DA8                     __end_of_interruptHandler:
  5086                           	opt callstack 0
  5087                           
  5088 ;; *************** function i2_printf *****************
  5089 ;; Defined at:
  5090 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  fmt             2   92[COMRAM] PTR const unsigned char 
  5093 ;;		 -> STR_39(7), STR_38(13), STR_37(7), STR_36(13), 
  5094 ;;		 -> STR_35(13), STR_34(13), STR_33(10), STR_32(14), 
  5095 ;;		 -> STR_31(11), STR_30(12), STR_29(10), STR_28(15), 
  5096 ;;		 -> STR_27(14), STR_26(12), STR_25(10), STR_24(15), 
  5097 ;;		 -> STR_23(12), STR_22(15), STR_21(12), STR_20(16), 
  5098 ;;		 -> STR_19(9), STR_18(9), STR_17(11), STR_16(13), 
  5099 ;;		 -> STR_15(15), STR_14(11), STR_13(15), STR_12(12), 
  5100 ;;		 -> STR_11(15), STR_10(13), STR_9(11), STR_8(9), 
  5101 ;;		 -> STR_7(12), STR_6(10), STR_5(15), STR_4(17), 
  5102 ;;		 -> STR_3(13), STR_2(9), STR_1(8), 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  printf          2   96[COMRAM] PTR void [1]
  5105 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5106 ;;  printf          2   94[COMRAM] int 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2   92[COMRAM] int 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;Total ram usage:        6 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:   10
  5123 ;; This function calls:
  5124 ;;		i2_vfprintf
  5125 ;; This function is called by:
  5126 ;;		_interruptHandler
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text21
  5131  001AA2                     __ptext21:
  5132                           	opt callstack 0
  5133  001AA2                     i2_printf:
  5134                           	opt callstack 8
  5135                           
  5136                           ;incstack = 0
  5137  001AA2  0E5F               	movlw	low (?i2_printf+2)
  5138  001AA4  6E61               	movwf	i2printf@ap,c
  5139  001AA6  0E00               	movlw	high (?i2_printf+2)
  5140  001AA8  6E62               	movwf	i2printf@ap+1,c
  5141  001AAA  0E00               	movlw	0
  5142  001AAC  6E55               	movwf	i2vfprintf@fp,c
  5143  001AAE  0E00               	movlw	0
  5144  001AB0  6E56               	movwf	i2vfprintf@fp+1,c
  5145  001AB2  C05D  F057         	movff	i2printf@fmt,i2vfprintf@fmt
  5146  001AB6  C05E  F058         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  5147  001ABA  0E61               	movlw	low i2printf@ap
  5148  001ABC  6E59               	movwf	i2vfprintf@ap,c
  5149  001ABE  0E00               	movlw	high i2printf@ap
  5150  001AC0  6E5A               	movwf	i2vfprintf@ap+1,c
  5151  001AC2  EC47  F00C         	call	i2_vfprintf	;wreg free
  5152  001AC6  C055  F05F         	movff	?i2_vfprintf,i2printf@ret
  5153  001ACA  C056  F060         	movff	?i2_vfprintf+1,i2printf@ret+1
  5154  001ACE  0012               	return		;funcret
  5155  001AD0                     __end_ofi2_printf:
  5156                           	opt callstack 0
  5157                           
  5158 ;; *************** function i2_vfprintf *****************
  5159 ;; Defined at:
  5160 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  5163 ;;		 -> NULL(0), 
  5164 ;;  fmt             2   86[COMRAM] PTR const unsigned char 
  5165 ;;		 -> STR_39(7), STR_38(13), STR_37(7), STR_36(13), 
  5166 ;;		 -> STR_35(13), STR_34(13), STR_33(10), STR_32(14), 
  5167 ;;		 -> STR_31(11), STR_30(12), STR_29(10), STR_28(15), 
  5168 ;;		 -> STR_27(14), STR_26(12), STR_25(10), STR_24(15), 
  5169 ;;		 -> STR_23(12), STR_22(15), STR_21(12), STR_20(16), 
  5170 ;;		 -> STR_19(9), STR_18(9), STR_17(11), STR_16(13), 
  5171 ;;		 -> STR_15(15), STR_14(11), STR_13(15), STR_12(12), 
  5172 ;;		 -> STR_11(15), STR_10(13), STR_9(11), STR_8(9), 
  5173 ;;		 -> STR_7(12), STR_6(10), STR_5(15), STR_4(17), 
  5174 ;;		 -> STR_3(13), STR_2(9), STR_1(8), 
  5175 ;;  ap              2   88[COMRAM] PTR PTR void 
  5176 ;;		 -> i2printf@ap(2), printf@ap(2), 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  vfprintf        2   90[COMRAM] PTR unsigned char 
  5179 ;;		 -> STR_39(7), STR_38(13), STR_37(7), STR_36(13), 
  5180 ;;		 -> STR_35(13), STR_34(13), STR_33(10), STR_32(14), 
  5181 ;;		 -> STR_31(11), STR_30(12), STR_29(10), STR_28(15), 
  5182 ;;		 -> STR_27(14), STR_26(12), STR_25(10), STR_24(15), 
  5183 ;;		 -> STR_23(12), STR_22(15), STR_21(12), STR_20(16), 
  5184 ;;		 -> STR_19(9), STR_18(9), STR_17(11), STR_16(13), 
  5185 ;;		 -> STR_15(15), STR_14(11), STR_13(15), STR_12(12), 
  5186 ;;		 -> STR_11(15), STR_10(13), STR_9(11), STR_8(9), 
  5187 ;;		 -> STR_7(12), STR_6(10), STR_5(15), STR_4(17), 
  5188 ;;		 -> STR_3(13), STR_2(9), STR_1(8), 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  2   84[COMRAM] int 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5198 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5202 ;;Total ram usage:        8 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    9
  5205 ;; This function calls:
  5206 ;;		i2_vfpfcnvrt
  5207 ;; This function is called by:
  5208 ;;		i2_printf
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text22
  5213  00188E                     __ptext22:
  5214                           	opt callstack 0
  5215  00188E                     i2_vfprintf:
  5216                           	opt callstack 8
  5217                           
  5218                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  5219                           
  5220                           ;incstack = 0
  5221  00188E  C057  F05B         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  5222  001892  C058  F05C         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  5223                           
  5224                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5225  001896  0E00               	movlw	0
  5226  001898  6E73               	movwf	_nout+1,c
  5227  00189A  0E00               	movlw	0
  5228  00189C  6E72               	movwf	_nout,c
  5229                           
  5230                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  5231  00189E  D012               	goto	i2l2569
  5232  0018A0                     i2l2567:
  5233                           
  5234                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  5235  0018A0  C055  F044         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  5236  0018A4  C056  F045         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  5237  0018A8  0E5B               	movlw	low i2vfprintf@cfmt
  5238  0018AA  6E46               	movwf	i2vfpfcnvrt@fmt,c
  5239  0018AC  0E00               	movlw	high i2vfprintf@cfmt
  5240  0018AE  6E47               	movwf	i2vfpfcnvrt@fmt+1,c
  5241  0018B0  C059  F048         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  5242  0018B4  C05A  F049         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  5243  0018B8  ECD4  F006         	call	i2_vfpfcnvrt	;wreg free
  5244  0018BC  5044               	movf	?i2_vfpfcnvrt,w,c
  5245  0018BE  2672               	addwf	_nout,f,c
  5246  0018C0  5045               	movf	?i2_vfpfcnvrt+1,w,c
  5247  0018C2  2273               	addwfc	_nout+1,f,c
  5248  0018C4                     i2l2569:
  5249                           
  5250                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  5251  0018C4  C05B  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  5252  0018C8  C05C  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  5253  0018CC                     	if	0	;tblptru may be non-zero
  5254  0018CC                     	endif
  5255  0018CC                     	if	0	;tblptru may be non-zero
  5256  0018CC                     	endif
  5257  0018CC  0008               	tblrd		*
  5258  0018CE  50F5               	movf	tablat,w,c
  5259  0018D0  0900               	iorlw	0
  5260  0018D2  A4D8               	btfss	status,2,c
  5261  0018D4  D7E5               	goto	i2l2567
  5262                           
  5263                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  5264  0018D6  C072  F055         	movff	_nout,?i2_vfprintf
  5265  0018DA  C073  F056         	movff	_nout+1,?i2_vfprintf+1
  5266  0018DE  0012               	return		;funcret
  5267  0018E0                     __end_ofi2_vfprintf:
  5268                           	opt callstack 0
  5269                           
  5270 ;; *************** function i2_vfpfcnvrt *****************
  5271 ;; Defined at:
  5272 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  5275 ;;		 -> NULL(0), 
  5276 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  5277 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  5278 ;;  ap              2   71[COMRAM] PTR PTR void 
  5279 ;;		 -> i2printf@ap(2), printf@ap(2), 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  vfpfcnvrt       8   75[COMRAM] long long 
  5282 ;;  vfpfcnvrt       8    0        unsigned long long 
  5283 ;;  vfpfcnvrt       4    0        unsigned long long 
  5284 ;;  vfpfcnvrt       3    0        PTR void 
  5285 ;;  vfpfcnvrt       3    0        unsigned char [3]
  5286 ;;  vfpfcnvrt       3    0        PTR unsigned char 
  5287 ;;  vfpfcnvrt       2    0        int 
  5288 ;;  vfpfcnvrt       2    0        int 
  5289 ;;  vfpfcnvrt       1   83[COMRAM] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2   67[COMRAM] int 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5299 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;Total ram usage:       17 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    8
  5306 ;; This function calls:
  5307 ;;		i2_ctoa
  5308 ;;		i2_dtoa
  5309 ;;		i2_fputc
  5310 ;; This function is called by:
  5311 ;;		i2_vfprintf
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text23
  5316  000DA8                     __ptext23:
  5317                           	opt callstack 0
  5318  000DA8                     i2_vfpfcnvrt:
  5319                           	opt callstack 8
  5320                           
  5321                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  5322                           
  5323                           ;incstack = 0
  5324  000DA8  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5325  000DAC  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5326  000DB0  CFDE FFF6          	movff	postinc2,tblptrl
  5327  000DB4  CFDD FFF7          	movff	postdec2,tblptrh
  5328  000DB8                     	if	0	;tblptru may be non-zero
  5329  000DB8                     	endif
  5330  000DB8                     	if	0	;tblptru may be non-zero
  5331  000DB8                     	endif
  5332  000DB8  0008               	tblrd		*
  5333  000DBA  50F5               	movf	tablat,w,c
  5334  000DBC  0A25               	xorlw	37
  5335  000DBE  A4D8               	btfss	status,2,c
  5336  000DC0  D0CD               	goto	i2l2543
  5337                           
  5338                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5339  000DC2  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5340  000DC6  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5341  000DCA  2ADE               	incf	postinc2,f,c
  5342  000DCC  0E00               	movlw	0
  5343  000DCE  22DD               	addwfc	postdec2,f,c
  5344                           
  5345                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  5346  000DD0  0E00               	movlw	0
  5347  000DD2  0100               	movlb	0	; () banked
  5348  000DD4  6FF6               	movwf	(_width+1)& (0+255),b
  5349  000DD6  0E00               	movlw	0
  5350  000DD8  6FF5               	movwf	_width& (0+255),b
  5351  000DDA  C0F5  F0F9         	movff	_width,_flags
  5352  000DDE  C0F6  F0FA         	movff	_width+1,_flags+1
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  5356  000DE2  69F7               	setf	_prec& (0+255),b
  5357  000DE4  69F8               	setf	(_prec+1)& (0+255),b
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
  5361  000DE6  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5362  000DEA  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5363  000DEE  CFDE FFF6          	movff	postinc2,tblptrl
  5364  000DF2  CFDD FFF7          	movff	postdec2,tblptrh
  5365  000DF6                     	if	0	;tblptru may be non-zero
  5366  000DF6                     	endif
  5367  000DF6                     	if	0	;tblptru may be non-zero
  5368  000DF6                     	endif
  5369  000DF6  0008               	tblrd		*
  5370  000DF8  50F5               	movf	tablat,w,c
  5371  000DFA  0A63               	xorlw	99
  5372  000DFC  A4D8               	btfss	status,2,c
  5373  000DFE  D026               	goto	i2l2517
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
  5377  000E00  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5378  000E04  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5379  000E08  2ADE               	incf	postinc2,f,c
  5380  000E0A  0E00               	movlw	0
  5381  000E0C  22DD               	addwfc	postdec2,f,c
  5382                           
  5383                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5384  000E0E  C048  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5385  000E12  C049  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5386  000E16  CFDF F04A          	movff	indf2,??i2_vfpfcnvrt
  5387  000E1A  0E02               	movlw	2
  5388  000E1C  26DE               	addwf	postinc2,f,c
  5389  000E1E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt+1
  5390  000E22  0E00               	movlw	0
  5391  000E24  22DD               	addwfc	postdec2,f,c
  5392  000E26  C04A  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5393  000E2A  C04B  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5394  000E2E  50DF               	movf	indf2,w,c
  5395  000E30  6E54               	movwf	i2vfpfcnvrt@c,c
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
  5399  000E32  C044  F020         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
  5400  000E36  C045  F021         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
  5401  000E3A  C054  F022         	movff	i2vfpfcnvrt@c,i2ctoa@c
  5402  000E3E  EC70  F00C         	call	i2_ctoa	;wreg free
  5403  000E42  C020  F044         	movff	?i2_ctoa,?i2_vfpfcnvrt
  5404  000E46  C021  F045         	movff	?i2_ctoa+1,?i2_vfpfcnvrt+1
  5405  000E4A  0012               	return	
  5406  000E4C                     i2l2517:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  5410  000E4C  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5411  000E50  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5412  000E54  CFDE FFF6          	movff	postinc2,tblptrl
  5413  000E58  CFDD FFF7          	movff	postdec2,tblptrh
  5414  000E5C                     	if	0	;tblptru may be non-zero
  5415  000E5C                     	endif
  5416  000E5C                     	if	0	;tblptru may be non-zero
  5417  000E5C                     	endif
  5418  000E5C  0008               	tblrd		*
  5419  000E5E  50F5               	movf	tablat,w,c
  5420  000E60  0A64               	xorlw	100
  5421  000E62  B4D8               	btfsc	status,2,c
  5422  000E64  D00D               	goto	i2u215_40
  5423                           
  5424                           ; BSR set to: 0
  5425  000E66  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5426  000E6A  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5427  000E6E  CFDE FFF6          	movff	postinc2,tblptrl
  5428  000E72  CFDD FFF7          	movff	postdec2,tblptrh
  5429  000E76                     	if	0	;tblptru may be non-zero
  5430  000E76                     	endif
  5431  000E76                     	if	0	;tblptru may be non-zero
  5432  000E76                     	endif
  5433  000E76  0008               	tblrd		*
  5434  000E78  50F5               	movf	tablat,w,c
  5435  000E7A  0A69               	xorlw	105
  5436  000E7C  A4D8               	btfss	status,2,c
  5437  000E7E  D03F               	goto	i2l2527
  5438  000E80                     i2u215_40:
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  5442  000E80  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5443  000E84  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5444  000E88  2ADE               	incf	postinc2,f,c
  5445  000E8A  0E00               	movlw	0
  5446  000E8C  22DD               	addwfc	postdec2,f,c
  5447                           
  5448                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5449  000E8E  C048  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5450  000E92  C049  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5451  000E96  CFDF F04A          	movff	indf2,??i2_vfpfcnvrt
  5452  000E9A  0E02               	movlw	2
  5453  000E9C  26DE               	addwf	postinc2,f,c
  5454  000E9E  CFDF F04B          	movff	indf2,??i2_vfpfcnvrt+1
  5455  000EA2  0E00               	movlw	0
  5456  000EA4  22DD               	addwfc	postdec2,f,c
  5457  000EA6  C04A  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5458  000EAA  C04B  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5459  000EAE  CFDE F04C          	movff	postinc2,i2vfpfcnvrt@ll
  5460  000EB2  CFDD F04D          	movff	postdec2,i2vfpfcnvrt@ll+1
  5461  000EB6  0E00               	movlw	0
  5462  000EB8  BE4D               	btfsc	i2vfpfcnvrt@ll+1,7,c
  5463  000EBA  0EFF               	movlw	-1
  5464  000EBC  6E4E               	movwf	i2vfpfcnvrt@ll+2,c
  5465  000EBE  6E4F               	movwf	i2vfpfcnvrt@ll+3,c
  5466  000EC0  6E50               	movwf	i2vfpfcnvrt@ll+4,c
  5467  000EC2  6E51               	movwf	i2vfpfcnvrt@ll+5,c
  5468  000EC4  6E52               	movwf	i2vfpfcnvrt@ll+6,c
  5469  000EC6  6E53               	movwf	i2vfpfcnvrt@ll+7,c
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  5473  000EC8  C044  F020         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
  5474  000ECC  C045  F021         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
  5475  000ED0  C04C  F022         	movff	i2vfpfcnvrt@ll,i2dtoa@d
  5476  000ED4  C04D  F023         	movff	i2vfpfcnvrt@ll+1,i2dtoa@d+1
  5477  000ED8  C04E  F024         	movff	i2vfpfcnvrt@ll+2,i2dtoa@d+2
  5478  000EDC  C04F  F025         	movff	i2vfpfcnvrt@ll+3,i2dtoa@d+3
  5479  000EE0  C050  F026         	movff	i2vfpfcnvrt@ll+4,i2dtoa@d+4
  5480  000EE4  C051  F027         	movff	i2vfpfcnvrt@ll+5,i2dtoa@d+5
  5481  000EE8  C052  F028         	movff	i2vfpfcnvrt@ll+6,i2dtoa@d+6
  5482  000EEC  C053  F029         	movff	i2vfpfcnvrt@ll+7,i2dtoa@d+7
  5483  000EF0  ECC6  F003         	call	i2_dtoa	;wreg free
  5484  000EF4  C020  F044         	movff	?i2_dtoa,?i2_vfpfcnvrt
  5485  000EF8  C021  F045         	movff	?i2_dtoa+1,?i2_vfpfcnvrt+1
  5486  000EFC  0012               	return	
  5487  000EFE                     i2l2527:
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  5491  000EFE  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5492  000F02  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5493  000F06  CFDE FFF6          	movff	postinc2,tblptrl
  5494  000F0A  CFDD FFF7          	movff	postdec2,tblptrh
  5495  000F0E                     	if	0	;tblptru may be non-zero
  5496  000F0E                     	endif
  5497  000F0E                     	if	0	;tblptru may be non-zero
  5498  000F0E                     	endif
  5499  000F0E  0008               	tblrd		*
  5500  000F10  50F5               	movf	tablat,w,c
  5501  000F12  0A25               	xorlw	37
  5502  000F14  A4D8               	btfss	status,2,c
  5503  000F16  D016               	goto	i2l2537
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  5507  000F18  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5508  000F1C  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5509  000F20  2ADE               	incf	postinc2,f,c
  5510  000F22  0E00               	movlw	0
  5511  000F24  22DD               	addwfc	postdec2,f,c
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  5515  000F26  0E00               	movlw	0
  5516  000F28  6E06               	movwf	i2fputc@c+1,c
  5517  000F2A  0E25               	movlw	37
  5518  000F2C  6E05               	movwf	i2fputc@c,c
  5519  000F2E  C044  F007         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  5520  000F32  C045  F008         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  5521  000F36  ECBD  F00B         	call	i2_fputc	;wreg free
  5522  000F3A                     i2l2533:
  5523                           
  5524                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  5525  000F3A  0E00               	movlw	0
  5526  000F3C  6E45               	movwf	?i2_vfpfcnvrt+1,c
  5527  000F3E  0E01               	movlw	1
  5528  000F40  6E44               	movwf	?i2_vfpfcnvrt,c
  5529  000F42  0012               	return	
  5530  000F44                     i2l2537:
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  5534  000F44  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5535  000F48  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5536  000F4C  2ADE               	incf	postinc2,f,c
  5537  000F4E  0E00               	movlw	0
  5538  000F50  22DD               	addwfc	postdec2,f,c
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  5542  000F52  0E00               	movlw	0
  5543  000F54  6E45               	movwf	?i2_vfpfcnvrt+1,c
  5544  000F56  0E00               	movlw	0
  5545  000F58  6E44               	movwf	?i2_vfpfcnvrt,c
  5546  000F5A  0012               	return	
  5547  000F5C                     i2l2543:
  5548                           
  5549                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  5550  000F5C  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5551  000F60  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5552  000F64  CFDE FFF6          	movff	postinc2,tblptrl
  5553  000F68  CFDD FFF7          	movff	postdec2,tblptrh
  5554  000F6C                     	if	0	;tblptru may be non-zero
  5555  000F6C                     	endif
  5556  000F6C                     	if	0	;tblptru may be non-zero
  5557  000F6C                     	endif
  5558  000F6C  0008               	tblrd		*
  5559  000F6E  50F5               	movf	tablat,w,c
  5560  000F70  6E05               	movwf	i2fputc@c,c
  5561  000F72  6A06               	clrf	i2fputc@c+1,c
  5562  000F74  C044  F007         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  5563  000F78  C045  F008         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  5564  000F7C  ECBD  F00B         	call	i2_fputc	;wreg free
  5565                           
  5566                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  5567  000F80  C046  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5568  000F84  C047  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5569  000F88  2ADE               	incf	postinc2,f,c
  5570  000F8A  0E00               	movlw	0
  5571  000F8C  22DD               	addwfc	postdec2,f,c
  5572  000F8E  D7D5               	goto	i2l2533
  5573  000F90                     __end_ofi2_vfpfcnvrt:
  5574                           	opt callstack 0
  5575                           
  5576 ;; *************** function i2_dtoa *****************
  5577 ;; Defined at:
  5578 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  5581 ;;		 -> NULL(0), 
  5582 ;;  d               8   33[COMRAM] long long 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  dtoa            8   57[COMRAM] long long 
  5585 ;;  dtoa            2   65[COMRAM] int 
  5586 ;;  dtoa            2   55[COMRAM] int 
  5587 ;;  dtoa            2   53[COMRAM] int 
  5588 ;;  dtoa            2   51[COMRAM] int 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2   31[COMRAM] int 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5598 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;Total ram usage:       36 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    7
  5605 ;; This function calls:
  5606 ;;		i2___aodiv
  5607 ;;		i2___aomod
  5608 ;;		i2_abs
  5609 ;;		i2_pad
  5610 ;; This function is called by:
  5611 ;;		i2_vfpfcnvrt
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text24
  5616  00078C                     __ptext24:
  5617                           	opt callstack 0
  5618  00078C                     i2_dtoa:
  5619                           	opt callstack 8
  5620                           
  5621                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  5622                           
  5623                           ;incstack = 0
  5624  00078C  C022  F03A         	movff	i2dtoa@d,i2dtoa@n
  5625  000790  C023  F03B         	movff	i2dtoa@d+1,i2dtoa@n+1
  5626  000794  C024  F03C         	movff	i2dtoa@d+2,i2dtoa@n+2
  5627  000798  C025  F03D         	movff	i2dtoa@d+3,i2dtoa@n+3
  5628  00079C  C026  F03E         	movff	i2dtoa@d+4,i2dtoa@n+4
  5629  0007A0  C027  F03F         	movff	i2dtoa@d+5,i2dtoa@n+5
  5630  0007A4  C028  F040         	movff	i2dtoa@d+6,i2dtoa@n+6
  5631  0007A8  C029  F041         	movff	i2dtoa@d+7,i2dtoa@n+7
  5632                           
  5633                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  5634  0007AC  AE41               	btfss	i2dtoa@n+7,7,c
  5635  0007AE  D002               	goto	i2u192_40
  5636  0007B0  0E01               	movlw	1
  5637  0007B2  D001               	goto	i2u193_40
  5638  0007B4                     i2u192_40:
  5639  0007B4  0E00               	movlw	0
  5640  0007B6                     i2u193_40:
  5641  0007B6  6E38               	movwf	i2dtoa@s,c
  5642  0007B8  6A39               	clrf	i2dtoa@s+1,c
  5643                           
  5644                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  5645  0007BA  5038               	movf	i2dtoa@s,w,c
  5646  0007BC  1039               	iorwf	i2dtoa@s+1,w,c
  5647  0007BE  B4D8               	btfsc	status,2,c
  5648  0007C0  D010               	goto	i2l2395
  5649                           
  5650                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  5651  0007C2  1E41               	comf	i2dtoa@n+7,f,c
  5652  0007C4  1E40               	comf	i2dtoa@n+6,f,c
  5653  0007C6  1E3F               	comf	i2dtoa@n+5,f,c
  5654  0007C8  1E3E               	comf	i2dtoa@n+4,f,c
  5655  0007CA  1E3D               	comf	i2dtoa@n+3,f,c
  5656  0007CC  1E3C               	comf	i2dtoa@n+2,f,c
  5657  0007CE  1E3B               	comf	i2dtoa@n+1,f,c
  5658  0007D0  6C3A               	negf	i2dtoa@n,c
  5659  0007D2  0E00               	movlw	0
  5660  0007D4  223B               	addwfc	i2dtoa@n+1,f,c
  5661  0007D6  223C               	addwfc	i2dtoa@n+2,f,c
  5662  0007D8  223D               	addwfc	i2dtoa@n+3,f,c
  5663  0007DA  223E               	addwfc	i2dtoa@n+4,f,c
  5664  0007DC  223F               	addwfc	i2dtoa@n+5,f,c
  5665  0007DE  2240               	addwfc	i2dtoa@n+6,f,c
  5666  0007E0  2241               	addwfc	i2dtoa@n+7,f,c
  5667  0007E2                     i2l2395:
  5668                           
  5669                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  5670  0007E2  0100               	movlb	0	; () banked
  5671  0007E4  AFF8               	btfss	(_prec+1)& (0+255),7,b
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  5675  0007E6  93F9               	bcf	_flags& (0+255),1,b
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  5679  0007E8  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  5680  0007EA  D005               	goto	i2u196_40
  5681  0007EC  51F8               	movf	(_prec+1)& (0+255),w,b
  5682  0007EE  E108               	bnz	i2l198
  5683  0007F0  05F7               	decf	_prec& (0+255),w,b
  5684  0007F2  B0D8               	btfsc	status,0,c
  5685  0007F4  D005               	goto	i2l198
  5686  0007F6                     i2u196_40:
  5687                           
  5688                           ; BSR set to: 0
  5689  0007F6  0E00               	movlw	0
  5690  0007F8  6E35               	movwf	i2dtoa@p+1,c
  5691  0007FA  0E01               	movlw	1
  5692  0007FC  6E34               	movwf	i2dtoa@p,c
  5693  0007FE  D004               	goto	i2l200
  5694  000800                     i2l198:
  5695                           
  5696                           ; BSR set to: 0
  5697  000800  C0F7  F034         	movff	_prec,i2dtoa@p
  5698  000804  C0F8  F035         	movff	_prec+1,i2dtoa@p+1
  5699  000808                     i2l200:
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  5703  000808  C0F5  F036         	movff	_width,i2dtoa@w
  5704  00080C  C0F6  F037         	movff	_width+1,i2dtoa@w+1
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  5708  000810  5038               	movf	i2dtoa@s,w,c
  5709  000812  1039               	iorwf	i2dtoa@s+1,w,c
  5710  000814  A4D8               	btfss	status,2,c
  5711  000816  D002               	goto	i2u198_40
  5712                           
  5713                           ; BSR set to: 0
  5714  000818  A5F9               	btfss	_flags& (0+255),2,b
  5715  00081A  D003               	goto	i2l2409
  5716  00081C                     i2u198_40:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  5720  00081C  0636               	decf	i2dtoa@w,f,c
  5721  00081E  A0D8               	btfss	status,0,c
  5722  000820  0637               	decf	i2dtoa@w+1,f,c
  5723  000822                     i2l2409:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  5727  000822  0E00               	movlw	0
  5728  000824  6E43               	movwf	i2dtoa@i+1,c
  5729  000826  0E1F               	movlw	31
  5730  000828  6E42               	movwf	i2dtoa@i,c
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  5734  00082A  0E00               	movlw	0
  5735  00082C  0101               	movlb	1	; () banked
  5736  00082E  6F5B               	movwf	(_dbuf+31)& (0+255),b
  5737                           
  5738                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5739  000830  D07C               	goto	i2l2423
  5740  000832                     i2l2413:
  5741                           
  5742                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  5743  000832  0642               	decf	i2dtoa@i,f,c
  5744  000834  A0D8               	btfss	status,0,c
  5745  000836  0643               	decf	i2dtoa@i+1,f,c
  5746                           
  5747                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  5748  000838  0E3C               	movlw	low _dbuf
  5749  00083A  2442               	addwf	i2dtoa@i,w,c
  5750  00083C  6ED9               	movwf	fsr2l,c
  5751  00083E  0E01               	movlw	high _dbuf
  5752  000840  2043               	addwfc	i2dtoa@i+1,w,c
  5753  000842  6EDA               	movwf	fsr2h,c
  5754  000844  C03A  F001         	movff	i2dtoa@n,i2___aomod@dividend
  5755  000848  C03B  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
  5756  00084C  C03C  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
  5757  000850  C03D  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
  5758  000854  C03E  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
  5759  000858  C03F  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
  5760  00085C  C040  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
  5761  000860  C041  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
  5762  000864  0E0A               	movlw	10
  5763  000866  6E09               	movwf	i2___aomod@divisor,c
  5764  000868  0E00               	movlw	0
  5765  00086A  6E0A               	movwf	i2___aomod@divisor+1,c
  5766  00086C  0E00               	movlw	0
  5767  00086E  6E0B               	movwf	i2___aomod@divisor+2,c
  5768  000870  0E00               	movlw	0
  5769  000872  6E0C               	movwf	i2___aomod@divisor+3,c
  5770  000874  0E00               	movlw	0
  5771  000876  6E0D               	movwf	i2___aomod@divisor+4,c
  5772  000878  0E00               	movlw	0
  5773  00087A  6E0E               	movwf	i2___aomod@divisor+5,c
  5774  00087C  0E00               	movlw	0
  5775  00087E  6E0F               	movwf	i2___aomod@divisor+6,c
  5776  000880  0E00               	movlw	0
  5777  000882  6E10               	movwf	i2___aomod@divisor+7,c
  5778  000884  ECA4  F009         	call	i2___aomod	;wreg free
  5779  000888  C001  F02A         	movff	?i2___aomod,??i2_dtoa
  5780  00088C  C002  F02B         	movff	?i2___aomod+1,??i2_dtoa+1
  5781  000890  C003  F02C         	movff	?i2___aomod+2,??i2_dtoa+2
  5782  000894  C004  F02D         	movff	?i2___aomod+3,??i2_dtoa+3
  5783  000898  C005  F02E         	movff	?i2___aomod+4,??i2_dtoa+4
  5784  00089C  C006  F02F         	movff	?i2___aomod+5,??i2_dtoa+5
  5785  0008A0  C007  F030         	movff	?i2___aomod+6,??i2_dtoa+6
  5786  0008A4  C008  F031         	movff	?i2___aomod+7,??i2_dtoa+7
  5787  0008A8  C02A  F013         	movff	??i2_dtoa,i2abs@a
  5788  0008AC  C02C  F014         	movff	??i2_dtoa+2,i2abs@a+1
  5789  0008B0  EC0A  F00D         	call	i2_abs	;wreg free
  5790  0008B4  5013               	movf	?i2_abs,w,c
  5791  0008B6  0F30               	addlw	48
  5792  0008B8  6EDF               	movwf	indf2,c
  5793                           
  5794                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  5795  0008BA  0634               	decf	i2dtoa@p,f,c
  5796  0008BC  A0D8               	btfss	status,0,c
  5797  0008BE  0635               	decf	i2dtoa@p+1,f,c
  5798                           
  5799                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  5800  0008C0  0636               	decf	i2dtoa@w,f,c
  5801  0008C2  A0D8               	btfss	status,0,c
  5802  0008C4  0637               	decf	i2dtoa@w+1,f,c
  5803                           
  5804                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  5805  0008C6  C03A  F001         	movff	i2dtoa@n,i2___aodiv@dividend
  5806  0008CA  C03B  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
  5807  0008CE  C03C  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
  5808  0008D2  C03D  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
  5809  0008D6  C03E  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
  5810  0008DA  C03F  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
  5811  0008DE  C040  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
  5812  0008E2  C041  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
  5813  0008E6  0E0A               	movlw	10
  5814  0008E8  6E09               	movwf	i2___aodiv@divisor,c
  5815  0008EA  0E00               	movlw	0
  5816  0008EC  6E0A               	movwf	i2___aodiv@divisor+1,c
  5817  0008EE  0E00               	movlw	0
  5818  0008F0  6E0B               	movwf	i2___aodiv@divisor+2,c
  5819  0008F2  0E00               	movlw	0
  5820  0008F4  6E0C               	movwf	i2___aodiv@divisor+3,c
  5821  0008F6  0E00               	movlw	0
  5822  0008F8  6E0D               	movwf	i2___aodiv@divisor+4,c
  5823  0008FA  0E00               	movlw	0
  5824  0008FC  6E0E               	movwf	i2___aodiv@divisor+5,c
  5825  0008FE  0E00               	movlw	0
  5826  000900  6E0F               	movwf	i2___aodiv@divisor+6,c
  5827  000902  0E00               	movlw	0
  5828  000904  6E10               	movwf	i2___aodiv@divisor+7,c
  5829  000906  EC6D  F008         	call	i2___aodiv	;wreg free
  5830  00090A  C001  F03A         	movff	?i2___aodiv,i2dtoa@n
  5831  00090E  C002  F03B         	movff	?i2___aodiv+1,i2dtoa@n+1
  5832  000912  C003  F03C         	movff	?i2___aodiv+2,i2dtoa@n+2
  5833  000916  C004  F03D         	movff	?i2___aodiv+3,i2dtoa@n+3
  5834  00091A  C005  F03E         	movff	?i2___aodiv+4,i2dtoa@n+4
  5835  00091E  C006  F03F         	movff	?i2___aodiv+5,i2dtoa@n+5
  5836  000922  C007  F040         	movff	?i2___aodiv+6,i2dtoa@n+6
  5837  000926  C008  F041         	movff	?i2___aodiv+7,i2dtoa@n+7
  5838  00092A                     i2l2423:
  5839                           
  5840                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5841  00092A  BE43               	btfsc	i2dtoa@i+1,7,c
  5842  00092C  D020               	goto	i2u203_40
  5843  00092E  5043               	movf	i2dtoa@i+1,w,c
  5844  000930  E103               	bnz	i2u199_40
  5845  000932  0442               	decf	i2dtoa@i,w,c
  5846  000934  A0D8               	btfss	status,0,c
  5847  000936  D01B               	goto	i2u203_40
  5848  000938                     i2u199_40:
  5849  000938  503A               	movf	i2dtoa@n,w,c
  5850  00093A  103B               	iorwf	i2dtoa@n+1,w,c
  5851  00093C  103C               	iorwf	i2dtoa@n+2,w,c
  5852  00093E  103D               	iorwf	i2dtoa@n+3,w,c
  5853  000940  103E               	iorwf	i2dtoa@n+4,w,c
  5854  000942  103F               	iorwf	i2dtoa@n+5,w,c
  5855  000944  1040               	iorwf	i2dtoa@n+6,w,c
  5856  000946  1041               	iorwf	i2dtoa@n+7,w,c
  5857  000948  A4D8               	btfss	status,2,c
  5858  00094A  D773               	goto	i2l2413
  5859  00094C  BE35               	btfsc	i2dtoa@p+1,7,c
  5860  00094E  D005               	goto	i2u201_40
  5861  000950  5035               	movf	i2dtoa@p+1,w,c
  5862  000952  E102               	bnz	i2u201_41
  5863  000954  0434               	decf	i2dtoa@p,w,c
  5864  000956  B0D8               	btfsc	status,0,c
  5865  000958                     i2u201_41:
  5866  000958  D76C               	goto	i2l2413
  5867  00095A                     i2u201_40:
  5868  00095A  BE37               	btfsc	i2dtoa@w+1,7,c
  5869  00095C  D008               	goto	i2u203_40
  5870  00095E  5037               	movf	i2dtoa@w+1,w,c
  5871  000960  E103               	bnz	i2u202_40
  5872  000962  0436               	decf	i2dtoa@w,w,c
  5873  000964  A0D8               	btfss	status,0,c
  5874  000966  D003               	goto	i2u203_40
  5875  000968                     i2u202_40:
  5876  000968  0100               	movlb	0	; () banked
  5877  00096A  B3F9               	btfsc	_flags& (0+255),1,b
  5878  00096C  D762               	goto	i2l2413
  5879  00096E                     i2u203_40:
  5880                           
  5881                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  5882  00096E  5038               	movf	i2dtoa@s,w,c
  5883  000970  1039               	iorwf	i2dtoa@s+1,w,c
  5884  000972  A4D8               	btfss	status,2,c
  5885  000974  D003               	goto	i2u205_40
  5886  000976  0100               	movlb	0	; () banked
  5887  000978  A5F9               	btfss	_flags& (0+255),2,b
  5888  00097A  D017               	goto	i2l2447
  5889  00097C                     i2u205_40:
  5890                           
  5891                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  5892  00097C  0642               	decf	i2dtoa@i,f,c
  5893  00097E  A0D8               	btfss	status,0,c
  5894  000980  0643               	decf	i2dtoa@i+1,f,c
  5895                           
  5896                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  5897  000982  5038               	movf	i2dtoa@s,w,c
  5898  000984  1039               	iorwf	i2dtoa@s+1,w,c
  5899  000986  A4D8               	btfss	status,2,c
  5900  000988  D004               	goto	i2l2443
  5901  00098A  0E00               	movlw	0
  5902  00098C  6E33               	movwf	i2_dtoa$339+1,c
  5903  00098E  0E2B               	movlw	43
  5904  000990  D003               	goto	L5
  5905  000992                     i2l2443:
  5906  000992  0E00               	movlw	0
  5907  000994  6E33               	movwf	i2_dtoa$339+1,c
  5908  000996  0E2D               	movlw	45
  5909  000998                     L5:
  5910  000998  6E32               	movwf	i2_dtoa$339,c
  5911  00099A  0E3C               	movlw	low _dbuf
  5912  00099C  2442               	addwf	i2dtoa@i,w,c
  5913  00099E  6ED9               	movwf	fsr2l,c
  5914  0009A0  0E01               	movlw	high _dbuf
  5915  0009A2  2043               	addwfc	i2dtoa@i+1,w,c
  5916  0009A4  6EDA               	movwf	fsr2h,c
  5917  0009A6  C032  FFDF         	movff	i2_dtoa$339,indf2
  5918  0009AA                     i2l2447:
  5919                           
  5920                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  5921  0009AA  C020  F015         	movff	i2dtoa@fp,i2pad@fp
  5922  0009AE  C021  F016         	movff	i2dtoa@fp+1,i2pad@fp+1
  5923  0009B2  0E3C               	movlw	low _dbuf
  5924  0009B4  2442               	addwf	i2dtoa@i,w,c
  5925  0009B6  6E17               	movwf	i2pad@buf,c
  5926  0009B8  0E01               	movlw	high _dbuf
  5927  0009BA  2043               	addwfc	i2dtoa@i+1,w,c
  5928  0009BC  6E18               	movwf	i2pad@buf+1,c
  5929  0009BE  C036  F019         	movff	i2dtoa@w,i2pad@p
  5930  0009C2  C037  F01A         	movff	i2dtoa@w+1,i2pad@p+1
  5931  0009C6  EC85  F00A         	call	i2_pad	;wreg free
  5932  0009CA  C015  F020         	movff	?i2_pad,?i2_dtoa
  5933  0009CE  C016  F021         	movff	?i2_pad+1,?i2_dtoa+1
  5934  0009D2  0012               	return		;funcret
  5935  0009D4                     __end_ofi2_dtoa:
  5936                           	opt callstack 0
  5937                           
  5938 ;; *************** function i2_abs *****************
  5939 ;; Defined at:
  5940 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  a               2   18[COMRAM] int 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  2   18[COMRAM] int 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2, status,0
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;Total ram usage:        4 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		i2_dtoa
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text25
  5968  001A14                     __ptext25:
  5969                           	opt callstack 0
  5970  001A14                     i2_abs:
  5971                           	opt callstack 14
  5972                           
  5973                           ;incstack = 0
  5974  001A14  BE14               	btfsc	i2abs@a+1,7,c
  5975  001A16  D005               	goto	i2u174_40
  5976  001A18  5014               	movf	i2abs@a+1,w,c
  5977  001A1A  E110               	bnz	i2l911
  5978  001A1C  0413               	decf	i2abs@a,w,c
  5979  001A1E  B0D8               	btfsc	status,0,c
  5980  001A20  D00D               	goto	i2l911
  5981  001A22                     i2u174_40:
  5982  001A22  C013  F015         	movff	i2abs@a,??i2_abs
  5983  001A26  C014  F016         	movff	i2abs@a+1,??i2_abs+1
  5984  001A2A  1E15               	comf	??i2_abs,f,c
  5985  001A2C  1E16               	comf	??i2_abs+1,f,c
  5986  001A2E  4A15               	infsnz	??i2_abs,f,c
  5987  001A30  2A16               	incf	??i2_abs+1,f,c
  5988  001A32  C015  F013         	movff	??i2_abs,?i2_abs
  5989  001A36  C016  F014         	movff	??i2_abs+1,?i2_abs+1
  5990  001A3A  0012               	return	
  5991  001A3C                     i2l911:
  5992  001A3C  C013  F013         	movff	i2abs@a,?i2_abs
  5993  001A40  C014  F014         	movff	i2abs@a+1,?i2_abs+1
  5994  001A44  0012               	return		;funcret
  5995  001A46                     __end_ofi2_abs:
  5996                           	opt callstack 0
  5997                           
  5998 ;; *************** function i2___aomod *****************
  5999 ;; Defined at:
  6000 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  dividend        8    0[COMRAM] long long 
  6003 ;;  divisor         8    8[COMRAM] long long 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  __aomod         1   17[COMRAM] unsigned char 
  6006 ;;  __aomod         1   16[COMRAM] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  8    0[COMRAM] long long 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6016 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;Total ram usage:       18 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		i2_dtoa
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text26
  6030  001348                     __ptext26:
  6031                           	opt callstack 0
  6032  001348                     i2___aomod:
  6033                           	opt callstack 14
  6034                           
  6035                           ;incstack = 0
  6036  001348  0E00               	movlw	0
  6037  00134A  6E12               	movwf	i2___aomod@sign,c
  6038  00134C  AE08               	btfss	i2___aomod@dividend+7,7,c
  6039  00134E  D012               	goto	i2l2267
  6040  001350  1E08               	comf	i2___aomod@dividend+7,f,c
  6041  001352  1E07               	comf	i2___aomod@dividend+6,f,c
  6042  001354  1E06               	comf	i2___aomod@dividend+5,f,c
  6043  001356  1E05               	comf	i2___aomod@dividend+4,f,c
  6044  001358  1E04               	comf	i2___aomod@dividend+3,f,c
  6045  00135A  1E03               	comf	i2___aomod@dividend+2,f,c
  6046  00135C  1E02               	comf	i2___aomod@dividend+1,f,c
  6047  00135E  6C01               	negf	i2___aomod@dividend,c
  6048  001360  0E00               	movlw	0
  6049  001362  2202               	addwfc	i2___aomod@dividend+1,f,c
  6050  001364  2203               	addwfc	i2___aomod@dividend+2,f,c
  6051  001366  2204               	addwfc	i2___aomod@dividend+3,f,c
  6052  001368  2205               	addwfc	i2___aomod@dividend+4,f,c
  6053  00136A  2206               	addwfc	i2___aomod@dividend+5,f,c
  6054  00136C  2207               	addwfc	i2___aomod@dividend+6,f,c
  6055  00136E  2208               	addwfc	i2___aomod@dividend+7,f,c
  6056  001370  0E01               	movlw	1
  6057  001372  6E12               	movwf	i2___aomod@sign,c
  6058  001374                     i2l2267:
  6059  001374  AE10               	btfss	i2___aomod@divisor+7,7,c
  6060  001376  D010               	goto	i2l2271
  6061  001378  1E10               	comf	i2___aomod@divisor+7,f,c
  6062  00137A  1E0F               	comf	i2___aomod@divisor+6,f,c
  6063  00137C  1E0E               	comf	i2___aomod@divisor+5,f,c
  6064  00137E  1E0D               	comf	i2___aomod@divisor+4,f,c
  6065  001380  1E0C               	comf	i2___aomod@divisor+3,f,c
  6066  001382  1E0B               	comf	i2___aomod@divisor+2,f,c
  6067  001384  1E0A               	comf	i2___aomod@divisor+1,f,c
  6068  001386  6C09               	negf	i2___aomod@divisor,c
  6069  001388  0E00               	movlw	0
  6070  00138A  220A               	addwfc	i2___aomod@divisor+1,f,c
  6071  00138C  220B               	addwfc	i2___aomod@divisor+2,f,c
  6072  00138E  220C               	addwfc	i2___aomod@divisor+3,f,c
  6073  001390  220D               	addwfc	i2___aomod@divisor+4,f,c
  6074  001392  220E               	addwfc	i2___aomod@divisor+5,f,c
  6075  001394  220F               	addwfc	i2___aomod@divisor+6,f,c
  6076  001396  2210               	addwfc	i2___aomod@divisor+7,f,c
  6077  001398                     i2l2271:
  6078  001398  5009               	movf	i2___aomod@divisor,w,c
  6079  00139A  100A               	iorwf	i2___aomod@divisor+1,w,c
  6080  00139C  100B               	iorwf	i2___aomod@divisor+2,w,c
  6081  00139E  100C               	iorwf	i2___aomod@divisor+3,w,c
  6082  0013A0  100D               	iorwf	i2___aomod@divisor+4,w,c
  6083  0013A2  100E               	iorwf	i2___aomod@divisor+5,w,c
  6084  0013A4  100F               	iorwf	i2___aomod@divisor+6,w,c
  6085  0013A6  1010               	iorwf	i2___aomod@divisor+7,w,c
  6086  0013A8  B4D8               	btfsc	status,2,c
  6087  0013AA  D03C               	goto	i2l2287
  6088  0013AC  0E01               	movlw	1
  6089  0013AE  6E11               	movwf	i2___aomod@counter,c
  6090  0013B0  D00A               	goto	i2l2277
  6091  0013B2                     i2l2275:
  6092  0013B2  90D8               	bcf	status,0,c
  6093  0013B4  3609               	rlcf	i2___aomod@divisor,f,c
  6094  0013B6  360A               	rlcf	i2___aomod@divisor+1,f,c
  6095  0013B8  360B               	rlcf	i2___aomod@divisor+2,f,c
  6096  0013BA  360C               	rlcf	i2___aomod@divisor+3,f,c
  6097  0013BC  360D               	rlcf	i2___aomod@divisor+4,f,c
  6098  0013BE  360E               	rlcf	i2___aomod@divisor+5,f,c
  6099  0013C0  360F               	rlcf	i2___aomod@divisor+6,f,c
  6100  0013C2  3610               	rlcf	i2___aomod@divisor+7,f,c
  6101  0013C4  2A11               	incf	i2___aomod@counter,f,c
  6102  0013C6                     i2l2277:
  6103  0013C6  AE10               	btfss	i2___aomod@divisor+7,7,c
  6104  0013C8  D7F4               	goto	i2l2275
  6105  0013CA                     i2u171_40:
  6106  0013CA  5009               	movf	i2___aomod@divisor,w,c
  6107  0013CC  5C01               	subwf	i2___aomod@dividend,w,c
  6108  0013CE  500A               	movf	i2___aomod@divisor+1,w,c
  6109  0013D0  5802               	subwfb	i2___aomod@dividend+1,w,c
  6110  0013D2  500B               	movf	i2___aomod@divisor+2,w,c
  6111  0013D4  5803               	subwfb	i2___aomod@dividend+2,w,c
  6112  0013D6  500C               	movf	i2___aomod@divisor+3,w,c
  6113  0013D8  5804               	subwfb	i2___aomod@dividend+3,w,c
  6114  0013DA  500D               	movf	i2___aomod@divisor+4,w,c
  6115  0013DC  5805               	subwfb	i2___aomod@dividend+4,w,c
  6116  0013DE  500E               	movf	i2___aomod@divisor+5,w,c
  6117  0013E0  5806               	subwfb	i2___aomod@dividend+5,w,c
  6118  0013E2  500F               	movf	i2___aomod@divisor+6,w,c
  6119  0013E4  5807               	subwfb	i2___aomod@dividend+6,w,c
  6120  0013E6  5010               	movf	i2___aomod@divisor+7,w,c
  6121  0013E8  5808               	subwfb	i2___aomod@dividend+7,w,c
  6122  0013EA  A0D8               	btfss	status,0,c
  6123  0013EC  D010               	goto	i2l2283
  6124  0013EE  5009               	movf	i2___aomod@divisor,w,c
  6125  0013F0  5E01               	subwf	i2___aomod@dividend,f,c
  6126  0013F2  500A               	movf	i2___aomod@divisor+1,w,c
  6127  0013F4  5A02               	subwfb	i2___aomod@dividend+1,f,c
  6128  0013F6  500B               	movf	i2___aomod@divisor+2,w,c
  6129  0013F8  5A03               	subwfb	i2___aomod@dividend+2,f,c
  6130  0013FA  500C               	movf	i2___aomod@divisor+3,w,c
  6131  0013FC  5A04               	subwfb	i2___aomod@dividend+3,f,c
  6132  0013FE  500D               	movf	i2___aomod@divisor+4,w,c
  6133  001400  5A05               	subwfb	i2___aomod@dividend+4,f,c
  6134  001402  500E               	movf	i2___aomod@divisor+5,w,c
  6135  001404  5A06               	subwfb	i2___aomod@dividend+5,f,c
  6136  001406  500F               	movf	i2___aomod@divisor+6,w,c
  6137  001408  5A07               	subwfb	i2___aomod@dividend+6,f,c
  6138  00140A  5010               	movf	i2___aomod@divisor+7,w,c
  6139  00140C  5A08               	subwfb	i2___aomod@dividend+7,f,c
  6140  00140E                     i2l2283:
  6141  00140E  90D8               	bcf	status,0,c
  6142  001410  3210               	rrcf	i2___aomod@divisor+7,f,c
  6143  001412  320F               	rrcf	i2___aomod@divisor+6,f,c
  6144  001414  320E               	rrcf	i2___aomod@divisor+5,f,c
  6145  001416  320D               	rrcf	i2___aomod@divisor+4,f,c
  6146  001418  320C               	rrcf	i2___aomod@divisor+3,f,c
  6147  00141A  320B               	rrcf	i2___aomod@divisor+2,f,c
  6148  00141C  320A               	rrcf	i2___aomod@divisor+1,f,c
  6149  00141E  3209               	rrcf	i2___aomod@divisor,f,c
  6150  001420  2E11               	decfsz	i2___aomod@counter,f,c
  6151  001422  D7D3               	goto	i2u171_40
  6152  001424                     i2l2287:
  6153  001424  5012               	movf	i2___aomod@sign,w,c
  6154  001426  B4D8               	btfsc	status,2,c
  6155  001428  D010               	goto	i2l2291
  6156  00142A  1E08               	comf	i2___aomod@dividend+7,f,c
  6157  00142C  1E07               	comf	i2___aomod@dividend+6,f,c
  6158  00142E  1E06               	comf	i2___aomod@dividend+5,f,c
  6159  001430  1E05               	comf	i2___aomod@dividend+4,f,c
  6160  001432  1E04               	comf	i2___aomod@dividend+3,f,c
  6161  001434  1E03               	comf	i2___aomod@dividend+2,f,c
  6162  001436  1E02               	comf	i2___aomod@dividend+1,f,c
  6163  001438  6C01               	negf	i2___aomod@dividend,c
  6164  00143A  0E00               	movlw	0
  6165  00143C  2202               	addwfc	i2___aomod@dividend+1,f,c
  6166  00143E  2203               	addwfc	i2___aomod@dividend+2,f,c
  6167  001440  2204               	addwfc	i2___aomod@dividend+3,f,c
  6168  001442  2205               	addwfc	i2___aomod@dividend+4,f,c
  6169  001444  2206               	addwfc	i2___aomod@dividend+5,f,c
  6170  001446  2207               	addwfc	i2___aomod@dividend+6,f,c
  6171  001448  2208               	addwfc	i2___aomod@dividend+7,f,c
  6172  00144A                     i2l2291:
  6173  00144A  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
  6174  00144E  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
  6175  001452  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
  6176  001456  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
  6177  00145A  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
  6178  00145E  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
  6179  001462  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
  6180  001466  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
  6181  00146A  0012               	return		;funcret
  6182  00146C                     __end_ofi2___aomod:
  6183                           	opt callstack 0
  6184                           
  6185 ;; *************** function i2___aodiv *****************
  6186 ;; Defined at:
  6187 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  dividend        8    0[COMRAM] long long 
  6190 ;;  divisor         8    8[COMRAM] long long 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  __aodiv         8   18[COMRAM] long long 
  6193 ;;  __aodiv         1   17[COMRAM] unsigned char 
  6194 ;;  __aodiv         1   16[COMRAM] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  8    0[COMRAM] long long 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6204 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;Total ram usage:       26 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		i2_dtoa
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text27
  6218  0010DA                     __ptext27:
  6219                           	opt callstack 0
  6220  0010DA                     i2___aodiv:
  6221                           	opt callstack 14
  6222                           
  6223                           ;incstack = 0
  6224  0010DA  0E00               	movlw	0
  6225  0010DC  6E12               	movwf	i2___aodiv@sign,c
  6226  0010DE  AE10               	btfss	i2___aodiv@divisor+7,7,c
  6227  0010E0  D012               	goto	i2l2223
  6228  0010E2  1E10               	comf	i2___aodiv@divisor+7,f,c
  6229  0010E4  1E0F               	comf	i2___aodiv@divisor+6,f,c
  6230  0010E6  1E0E               	comf	i2___aodiv@divisor+5,f,c
  6231  0010E8  1E0D               	comf	i2___aodiv@divisor+4,f,c
  6232  0010EA  1E0C               	comf	i2___aodiv@divisor+3,f,c
  6233  0010EC  1E0B               	comf	i2___aodiv@divisor+2,f,c
  6234  0010EE  1E0A               	comf	i2___aodiv@divisor+1,f,c
  6235  0010F0  6C09               	negf	i2___aodiv@divisor,c
  6236  0010F2  0E00               	movlw	0
  6237  0010F4  220A               	addwfc	i2___aodiv@divisor+1,f,c
  6238  0010F6  220B               	addwfc	i2___aodiv@divisor+2,f,c
  6239  0010F8  220C               	addwfc	i2___aodiv@divisor+3,f,c
  6240  0010FA  220D               	addwfc	i2___aodiv@divisor+4,f,c
  6241  0010FC  220E               	addwfc	i2___aodiv@divisor+5,f,c
  6242  0010FE  220F               	addwfc	i2___aodiv@divisor+6,f,c
  6243  001100  2210               	addwfc	i2___aodiv@divisor+7,f,c
  6244  001102  0E01               	movlw	1
  6245  001104  6E12               	movwf	i2___aodiv@sign,c
  6246  001106                     i2l2223:
  6247  001106  AE08               	btfss	i2___aodiv@dividend+7,7,c
  6248  001108  D012               	goto	i2l2229
  6249  00110A  1E08               	comf	i2___aodiv@dividend+7,f,c
  6250  00110C  1E07               	comf	i2___aodiv@dividend+6,f,c
  6251  00110E  1E06               	comf	i2___aodiv@dividend+5,f,c
  6252  001110  1E05               	comf	i2___aodiv@dividend+4,f,c
  6253  001112  1E04               	comf	i2___aodiv@dividend+3,f,c
  6254  001114  1E03               	comf	i2___aodiv@dividend+2,f,c
  6255  001116  1E02               	comf	i2___aodiv@dividend+1,f,c
  6256  001118  6C01               	negf	i2___aodiv@dividend,c
  6257  00111A  0E00               	movlw	0
  6258  00111C  2202               	addwfc	i2___aodiv@dividend+1,f,c
  6259  00111E  2203               	addwfc	i2___aodiv@dividend+2,f,c
  6260  001120  2204               	addwfc	i2___aodiv@dividend+3,f,c
  6261  001122  2205               	addwfc	i2___aodiv@dividend+4,f,c
  6262  001124  2206               	addwfc	i2___aodiv@dividend+5,f,c
  6263  001126  2207               	addwfc	i2___aodiv@dividend+6,f,c
  6264  001128  2208               	addwfc	i2___aodiv@dividend+7,f,c
  6265  00112A  0E01               	movlw	1
  6266  00112C  1A12               	xorwf	i2___aodiv@sign,f,c
  6267  00112E                     i2l2229:
  6268  00112E  EE20  F013         	lfsr	2,i2___aodiv@quotient
  6269  001132  0E07               	movlw	7
  6270  001134                     i2u163_41:
  6271  001134  6ADE               	clrf	postinc2,c
  6272  001136  06E8               	decf	wreg,f,c
  6273  001138  E2FD               	bc	i2u163_41
  6274  00113A  5009               	movf	i2___aodiv@divisor,w,c
  6275  00113C  100A               	iorwf	i2___aodiv@divisor+1,w,c
  6276  00113E  100B               	iorwf	i2___aodiv@divisor+2,w,c
  6277  001140  100C               	iorwf	i2___aodiv@divisor+3,w,c
  6278  001142  100D               	iorwf	i2___aodiv@divisor+4,w,c
  6279  001144  100E               	iorwf	i2___aodiv@divisor+5,w,c
  6280  001146  100F               	iorwf	i2___aodiv@divisor+6,w,c
  6281  001148  1010               	iorwf	i2___aodiv@divisor+7,w,c
  6282  00114A  B4D8               	btfsc	status,2,c
  6283  00114C  D046               	goto	i2l2251
  6284  00114E  0E01               	movlw	1
  6285  001150  6E11               	movwf	i2___aodiv@counter,c
  6286  001152  D00A               	goto	i2l2237
  6287  001154                     i2l2235:
  6288  001154  90D8               	bcf	status,0,c
  6289  001156  3609               	rlcf	i2___aodiv@divisor,f,c
  6290  001158  360A               	rlcf	i2___aodiv@divisor+1,f,c
  6291  00115A  360B               	rlcf	i2___aodiv@divisor+2,f,c
  6292  00115C  360C               	rlcf	i2___aodiv@divisor+3,f,c
  6293  00115E  360D               	rlcf	i2___aodiv@divisor+4,f,c
  6294  001160  360E               	rlcf	i2___aodiv@divisor+5,f,c
  6295  001162  360F               	rlcf	i2___aodiv@divisor+6,f,c
  6296  001164  3610               	rlcf	i2___aodiv@divisor+7,f,c
  6297  001166  2A11               	incf	i2___aodiv@counter,f,c
  6298  001168                     i2l2237:
  6299  001168  AE10               	btfss	i2___aodiv@divisor+7,7,c
  6300  00116A  D7F4               	goto	i2l2235
  6301  00116C                     i2u165_40:
  6302  00116C  90D8               	bcf	status,0,c
  6303  00116E  3613               	rlcf	i2___aodiv@quotient,f,c
  6304  001170  3614               	rlcf	i2___aodiv@quotient+1,f,c
  6305  001172  3615               	rlcf	i2___aodiv@quotient+2,f,c
  6306  001174  3616               	rlcf	i2___aodiv@quotient+3,f,c
  6307  001176  3617               	rlcf	i2___aodiv@quotient+4,f,c
  6308  001178  3618               	rlcf	i2___aodiv@quotient+5,f,c
  6309  00117A  3619               	rlcf	i2___aodiv@quotient+6,f,c
  6310  00117C  361A               	rlcf	i2___aodiv@quotient+7,f,c
  6311  00117E  5009               	movf	i2___aodiv@divisor,w,c
  6312  001180  5C01               	subwf	i2___aodiv@dividend,w,c
  6313  001182  500A               	movf	i2___aodiv@divisor+1,w,c
  6314  001184  5802               	subwfb	i2___aodiv@dividend+1,w,c
  6315  001186  500B               	movf	i2___aodiv@divisor+2,w,c
  6316  001188  5803               	subwfb	i2___aodiv@dividend+2,w,c
  6317  00118A  500C               	movf	i2___aodiv@divisor+3,w,c
  6318  00118C  5804               	subwfb	i2___aodiv@dividend+3,w,c
  6319  00118E  500D               	movf	i2___aodiv@divisor+4,w,c
  6320  001190  5805               	subwfb	i2___aodiv@dividend+4,w,c
  6321  001192  500E               	movf	i2___aodiv@divisor+5,w,c
  6322  001194  5806               	subwfb	i2___aodiv@dividend+5,w,c
  6323  001196  500F               	movf	i2___aodiv@divisor+6,w,c
  6324  001198  5807               	subwfb	i2___aodiv@dividend+6,w,c
  6325  00119A  5010               	movf	i2___aodiv@divisor+7,w,c
  6326  00119C  5808               	subwfb	i2___aodiv@dividend+7,w,c
  6327  00119E  A0D8               	btfss	status,0,c
  6328  0011A0  D011               	goto	i2l2247
  6329  0011A2  5009               	movf	i2___aodiv@divisor,w,c
  6330  0011A4  5E01               	subwf	i2___aodiv@dividend,f,c
  6331  0011A6  500A               	movf	i2___aodiv@divisor+1,w,c
  6332  0011A8  5A02               	subwfb	i2___aodiv@dividend+1,f,c
  6333  0011AA  500B               	movf	i2___aodiv@divisor+2,w,c
  6334  0011AC  5A03               	subwfb	i2___aodiv@dividend+2,f,c
  6335  0011AE  500C               	movf	i2___aodiv@divisor+3,w,c
  6336  0011B0  5A04               	subwfb	i2___aodiv@dividend+3,f,c
  6337  0011B2  500D               	movf	i2___aodiv@divisor+4,w,c
  6338  0011B4  5A05               	subwfb	i2___aodiv@dividend+4,f,c
  6339  0011B6  500E               	movf	i2___aodiv@divisor+5,w,c
  6340  0011B8  5A06               	subwfb	i2___aodiv@dividend+5,f,c
  6341  0011BA  500F               	movf	i2___aodiv@divisor+6,w,c
  6342  0011BC  5A07               	subwfb	i2___aodiv@dividend+6,f,c
  6343  0011BE  5010               	movf	i2___aodiv@divisor+7,w,c
  6344  0011C0  5A08               	subwfb	i2___aodiv@dividend+7,f,c
  6345  0011C2  8013               	bsf	i2___aodiv@quotient,0,c
  6346  0011C4                     i2l2247:
  6347  0011C4  90D8               	bcf	status,0,c
  6348  0011C6  3210               	rrcf	i2___aodiv@divisor+7,f,c
  6349  0011C8  320F               	rrcf	i2___aodiv@divisor+6,f,c
  6350  0011CA  320E               	rrcf	i2___aodiv@divisor+5,f,c
  6351  0011CC  320D               	rrcf	i2___aodiv@divisor+4,f,c
  6352  0011CE  320C               	rrcf	i2___aodiv@divisor+3,f,c
  6353  0011D0  320B               	rrcf	i2___aodiv@divisor+2,f,c
  6354  0011D2  320A               	rrcf	i2___aodiv@divisor+1,f,c
  6355  0011D4  3209               	rrcf	i2___aodiv@divisor,f,c
  6356  0011D6  2E11               	decfsz	i2___aodiv@counter,f,c
  6357  0011D8  D7C9               	goto	i2u165_40
  6358  0011DA                     i2l2251:
  6359  0011DA  5012               	movf	i2___aodiv@sign,w,c
  6360  0011DC  B4D8               	btfsc	status,2,c
  6361  0011DE  D010               	goto	i2l2255
  6362  0011E0  1E1A               	comf	i2___aodiv@quotient+7,f,c
  6363  0011E2  1E19               	comf	i2___aodiv@quotient+6,f,c
  6364  0011E4  1E18               	comf	i2___aodiv@quotient+5,f,c
  6365  0011E6  1E17               	comf	i2___aodiv@quotient+4,f,c
  6366  0011E8  1E16               	comf	i2___aodiv@quotient+3,f,c
  6367  0011EA  1E15               	comf	i2___aodiv@quotient+2,f,c
  6368  0011EC  1E14               	comf	i2___aodiv@quotient+1,f,c
  6369  0011EE  6C13               	negf	i2___aodiv@quotient,c
  6370  0011F0  0E00               	movlw	0
  6371  0011F2  2214               	addwfc	i2___aodiv@quotient+1,f,c
  6372  0011F4  2215               	addwfc	i2___aodiv@quotient+2,f,c
  6373  0011F6  2216               	addwfc	i2___aodiv@quotient+3,f,c
  6374  0011F8  2217               	addwfc	i2___aodiv@quotient+4,f,c
  6375  0011FA  2218               	addwfc	i2___aodiv@quotient+5,f,c
  6376  0011FC  2219               	addwfc	i2___aodiv@quotient+6,f,c
  6377  0011FE  221A               	addwfc	i2___aodiv@quotient+7,f,c
  6378  001200                     i2l2255:
  6379  001200  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
  6380  001204  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
  6381  001208  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
  6382  00120C  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
  6383  001210  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
  6384  001214  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
  6385  001218  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
  6386  00121C  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
  6387  001220  0012               	return		;funcret
  6388  001222                     __end_ofi2___aodiv:
  6389                           	opt callstack 0
  6390                           
  6391 ;; *************** function i2_ctoa *****************
  6392 ;; Defined at:
  6393 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  6396 ;;		 -> NULL(0), 
  6397 ;;  c               1   33[COMRAM] unsigned char 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  ctoa            2   34[COMRAM] int 
  6400 ;;  ctoa            2    0        int 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  2   31[COMRAM] int 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6410 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;Total ram usage:        5 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    7
  6417 ;; This function calls:
  6418 ;;		i2_pad
  6419 ;; This function is called by:
  6420 ;;		i2_vfpfcnvrt
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text28
  6425  0018E0                     __ptext28:
  6426                           	opt callstack 0
  6427  0018E0                     i2_ctoa:
  6428                           	opt callstack 8
  6429                           
  6430                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  6431                           
  6432                           ;incstack = 0
  6433  0018E0  0100               	movlb	0	; () banked
  6434  0018E2  51F5               	movf	_width& (0+255),w,b
  6435  0018E4  11F6               	iorwf	(_width+1)& (0+255),w,b
  6436  0018E6  A4D8               	btfss	status,2,c
  6437  0018E8  D005               	goto	i2l2379
  6438                           
  6439                           ; BSR set to: 0
  6440  0018EA  C0F5  F023         	movff	_width,i2ctoa@w
  6441  0018EE  C0F6  F024         	movff	_width+1,i2ctoa@w+1
  6442  0018F2  D006               	goto	i2l2381
  6443  0018F4                     i2l2379:
  6444                           
  6445                           ; BSR set to: 0
  6446  0018F4  0EFF               	movlw	255
  6447  0018F6  25F5               	addwf	_width& (0+255),w,b
  6448  0018F8  6E23               	movwf	i2ctoa@w,c
  6449  0018FA  0EFF               	movlw	255
  6450  0018FC  21F6               	addwfc	(_width+1)& (0+255),w,b
  6451  0018FE  6E24               	movwf	i2ctoa@w+1,c
  6452  001900                     i2l2381:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
  6456  001900  C022  F13C         	movff	i2ctoa@c,_dbuf
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
  6460  001904  0E00               	movlw	0
  6461  001906  0101               	movlb	1	; () banked
  6462  001908  6F3D               	movwf	(_dbuf+1)& (0+255),b
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
  6466  00190A  C020  F015         	movff	i2ctoa@fp,i2pad@fp
  6467  00190E  C021  F016         	movff	i2ctoa@fp+1,i2pad@fp+1
  6468  001912  0E3C               	movlw	low _dbuf
  6469  001914  6E17               	movwf	i2pad@buf,c
  6470  001916  0E01               	movlw	high _dbuf
  6471  001918  6E18               	movwf	i2pad@buf+1,c
  6472  00191A  C023  F019         	movff	i2ctoa@w,i2pad@p
  6473  00191E  C024  F01A         	movff	i2ctoa@w+1,i2pad@p+1
  6474  001922  EC85  F00A         	call	i2_pad	;wreg free
  6475  001926  C015  F020         	movff	?i2_pad,?i2_ctoa
  6476  00192A  C016  F021         	movff	?i2_pad+1,?i2_ctoa+1
  6477  00192E  0012               	return		;funcret
  6478  001930                     __end_ofi2_ctoa:
  6479                           	opt callstack 0
  6480                           
  6481 ;; *************** function i2_pad *****************
  6482 ;; Defined at:
  6483 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  6486 ;;		 -> NULL(0), 
  6487 ;;  buf             2   22[COMRAM] PTR unsigned char 
  6488 ;;		 -> dbuf(32), 
  6489 ;;  p               2   24[COMRAM] int 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  pad             2   29[COMRAM] int 
  6492 ;;  pad             2   27[COMRAM] int 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  2   20[COMRAM] int 
  6495 ;; Registers used:
  6496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6502 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;Total ram usage:       11 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    6
  6509 ;; This function calls:
  6510 ;;		i2_fputc
  6511 ;;		i2_fputs
  6512 ;;		i2_strlen
  6513 ;; This function is called by:
  6514 ;;		i2_ctoa
  6515 ;;		i2_dtoa
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text29
  6520  00150A                     __ptext29:
  6521                           	opt callstack 0
  6522  00150A                     i2_pad:
  6523                           	opt callstack 8
  6524                           
  6525                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  6526                           
  6527                           ;incstack = 0
  6528  00150A  0100               	movlb	0	; () banked
  6529  00150C  A1F9               	btfss	_flags& (0+255),0,b
  6530  00150E  D00A               	goto	i2l2197
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  6534  001510  C017  F00E         	movff	i2pad@buf,i2fputs@s
  6535  001514  C018  F00F         	movff	i2pad@buf+1,i2fputs@s+1
  6536  001518  C015  F010         	movff	i2pad@fp,i2fputs@fp
  6537  00151C  C016  F011         	movff	i2pad@fp+1,i2fputs@fp+1
  6538  001520  ECD4  F00C         	call	i2_fputs	;wreg free
  6539  001524                     i2l2197:
  6540                           
  6541                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  6542  001524  BE1A               	btfsc	i2pad@p+1,7,c
  6543  001526  D005               	goto	i2l2201
  6544  001528  C019  F01E         	movff	i2pad@p,i2pad@w
  6545  00152C  C01A  F01F         	movff	i2pad@p+1,i2pad@w+1
  6546  001530  D004               	goto	i2l180
  6547  001532                     i2l2201:
  6548  001532  0E00               	movlw	0
  6549  001534  6E1F               	movwf	i2pad@w+1,c
  6550  001536  0E00               	movlw	0
  6551  001538  6E1E               	movwf	i2pad@w,c
  6552  00153A                     i2l180:
  6553                           
  6554                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6555  00153A  0E00               	movlw	0
  6556  00153C  6E1D               	movwf	i2pad@i+1,c
  6557  00153E  0E00               	movlw	0
  6558  001540  6E1C               	movwf	i2pad@i,c
  6559                           
  6560                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  6561  001542  D00C               	goto	i2l2207
  6562  001544                     i2l2203:
  6563                           
  6564                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  6565  001544  0E00               	movlw	0
  6566  001546  6E06               	movwf	i2fputc@c+1,c
  6567  001548  0E20               	movlw	32
  6568  00154A  6E05               	movwf	i2fputc@c,c
  6569  00154C  C015  F007         	movff	i2pad@fp,i2fputc@fp
  6570  001550  C016  F008         	movff	i2pad@fp+1,i2fputc@fp+1
  6571  001554  ECBD  F00B         	call	i2_fputc	;wreg free
  6572                           
  6573                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  6574  001558  4A1C               	infsnz	i2pad@i,f,c
  6575  00155A  2A1D               	incf	i2pad@i+1,f,c
  6576  00155C                     i2l2207:
  6577                           
  6578                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  6579  00155C  501E               	movf	i2pad@w,w,c
  6580  00155E  5C1C               	subwf	i2pad@i,w,c
  6581  001560  501D               	movf	i2pad@i+1,w,c
  6582  001562  0A80               	xorlw	128
  6583  001564  6E1B               	movwf	??i2_pad& (0+255),c
  6584  001566  501F               	movf	i2pad@w+1,w,c
  6585  001568  0A80               	xorlw	128
  6586  00156A  581B               	subwfb	??i2_pad& (0+255),w,c
  6587  00156C  A0D8               	btfss	status,0,c
  6588  00156E  D7EA               	goto	i2l2203
  6589                           
  6590                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  6591  001570  0100               	movlb	0	; () banked
  6592  001572  B1F9               	btfsc	_flags& (0+255),0,b
  6593  001574  D00A               	goto	i2l2211
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  6597  001576  C017  F00E         	movff	i2pad@buf,i2fputs@s
  6598  00157A  C018  F00F         	movff	i2pad@buf+1,i2fputs@s+1
  6599  00157E  C015  F010         	movff	i2pad@fp,i2fputs@fp
  6600  001582  C016  F011         	movff	i2pad@fp+1,i2fputs@fp+1
  6601  001586  ECD4  F00C         	call	i2_fputs	;wreg free
  6602  00158A                     i2l2211:
  6603                           
  6604                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  6605  00158A  C017  F001         	movff	i2pad@buf,i2strlen@s
  6606  00158E  C018  F002         	movff	i2pad@buf+1,i2strlen@s+1
  6607  001592  EC68  F00D         	call	i2_strlen	;wreg free
  6608  001596  501E               	movf	i2pad@w,w,c
  6609  001598  2401               	addwf	?i2_strlen,w,c
  6610  00159A  6E15               	movwf	?i2_pad,c
  6611  00159C  501F               	movf	i2pad@w+1,w,c
  6612  00159E  2002               	addwfc	?i2_strlen+1,w,c
  6613  0015A0  6E16               	movwf	?i2_pad+1,c
  6614  0015A2  0012               	return		;funcret
  6615  0015A4                     __end_ofi2_pad:
  6616                           	opt callstack 0
  6617                           
  6618 ;; *************** function i2_strlen *****************
  6619 ;; Defined at:
  6620 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6623 ;;		 -> dbuf(32), 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  strlen          2    2[COMRAM] PTR const unsigned char 
  6626 ;;		 -> dbuf(32), 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  2    0[COMRAM] unsigned int 
  6629 ;; Registers used:
  6630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;Total ram usage:        4 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		i2_pad
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text30
  6650  001AD0                     __ptext30:
  6651                           	opt callstack 0
  6652  001AD0                     i2_strlen:
  6653                           	opt callstack 13
  6654                           
  6655                           ;incstack = 0
  6656  001AD0  C001  F003         	movff	i2strlen@s,i2strlen@a
  6657  001AD4  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  6658  001AD8  D002               	goto	i2l2081
  6659  001ADA                     i2l2079:
  6660  001ADA  4A01               	infsnz	i2strlen@s,f,c
  6661  001ADC  2A02               	incf	i2strlen@s+1,f,c
  6662  001ADE                     i2l2081:
  6663  001ADE  C001  FFD9         	movff	i2strlen@s,fsr2l
  6664  001AE2  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  6665  001AE6  50DF               	movf	indf2,w,c
  6666  001AE8  A4D8               	btfss	status,2,c
  6667  001AEA  D7F7               	goto	i2l2079
  6668  001AEC  5003               	movf	i2strlen@a,w,c
  6669  001AEE  5C01               	subwf	i2strlen@s,w,c
  6670  001AF0  6E01               	movwf	?i2_strlen,c
  6671  001AF2  5004               	movf	i2strlen@a+1,w,c
  6672  001AF4  5802               	subwfb	i2strlen@s+1,w,c
  6673  001AF6  6E02               	movwf	?i2_strlen+1,c
  6674  001AF8  0012               	return		;funcret
  6675  001AFA                     __end_ofi2_strlen:
  6676                           	opt callstack 0
  6677                           
  6678 ;; *************** function i2_fputs *****************
  6679 ;; Defined at:
  6680 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  s               2   13[COMRAM] PTR const unsigned char 
  6683 ;;		 -> dbuf(32), 
  6684 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  6685 ;;		 -> NULL(0), 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  fputs           2   18[COMRAM] int 
  6688 ;;  fputs           1   17[COMRAM] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  2   13[COMRAM] int 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;Total ram usage:        7 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; Hardware stack levels required when called:    5
  6705 ;; This function calls:
  6706 ;;		i2_fputc
  6707 ;; This function is called by:
  6708 ;;		i2_pad
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text31
  6713  0019A8                     __ptext31:
  6714                           	opt callstack 0
  6715  0019A8                     i2_fputs:
  6716                           	opt callstack 8
  6717                           
  6718                           ;incstack = 0
  6719  0019A8  0E00               	movlw	0
  6720  0019AA  6E14               	movwf	i2fputs@i+1,c
  6721  0019AC  0E00               	movlw	0
  6722  0019AE  6E13               	movwf	i2fputs@i,c
  6723  0019B0  D00B               	goto	i2l2075
  6724  0019B2                     i2l2071:
  6725  0019B2  C012  F005         	movff	i2fputs@c,i2fputc@c
  6726  0019B6  6A06               	clrf	i2fputc@c+1,c
  6727  0019B8  C010  F007         	movff	i2fputs@fp,i2fputc@fp
  6728  0019BC  C011  F008         	movff	i2fputs@fp+1,i2fputc@fp+1
  6729  0019C0  ECBD  F00B         	call	i2_fputc	;wreg free
  6730  0019C4  4A13               	infsnz	i2fputs@i,f,c
  6731  0019C6  2A14               	incf	i2fputs@i+1,f,c
  6732  0019C8                     i2l2075:
  6733  0019C8  5013               	movf	i2fputs@i,w,c
  6734  0019CA  240E               	addwf	i2fputs@s,w,c
  6735  0019CC  6ED9               	movwf	fsr2l,c
  6736  0019CE  5014               	movf	i2fputs@i+1,w,c
  6737  0019D0  200F               	addwfc	i2fputs@s+1,w,c
  6738  0019D2  6EDA               	movwf	fsr2h,c
  6739  0019D4  50DF               	movf	indf2,w,c
  6740  0019D6  6E12               	movwf	i2fputs@c,c
  6741  0019D8  5012               	movf	i2fputs@c,w,c
  6742  0019DA  B4D8               	btfsc	status,2,c
  6743  0019DC  0012               	return	
  6744  0019DE  D7E9               	goto	i2l2071
  6745  0019E0                     __end_ofi2_fputs:
  6746                           	opt callstack 0
  6747                           
  6748 ;; *************** function i2_fputc *****************
  6749 ;; Defined at:
  6750 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  c               2    4[COMRAM] int 
  6753 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  6754 ;;		 -> NULL(0), 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  2    4[COMRAM] int 
  6759 ;; Registers used:
  6760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;Total ram usage:        9 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    4
  6773 ;; This function calls:
  6774 ;;		i2_putch
  6775 ;; This function is called by:
  6776 ;;		i2_pad
  6777 ;;		i2_vfpfcnvrt
  6778 ;;		i2_fputs
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text32
  6783  00177A                     __ptext32:
  6784                           	opt callstack 0
  6785  00177A                     i2_fputc:
  6786                           	opt callstack 11
  6787                           
  6788                           ;incstack = 0
  6789  00177A  5007               	movf	i2fputc@fp,w,c
  6790  00177C  1008               	iorwf	i2fputc@fp+1,w,c
  6791  00177E  B4D8               	btfsc	status,2,c
  6792  001780  D004               	goto	i2u132_40
  6793  001782  5007               	movf	i2fputc@fp,w,c
  6794  001784  1008               	iorwf	i2fputc@fp+1,w,c
  6795  001786  A4D8               	btfss	status,2,c
  6796  001788  D004               	goto	i2l2043
  6797  00178A                     i2u132_40:
  6798  00178A  5005               	movf	i2fputc@c,w,c
  6799  00178C  ECE3  F00D         	call	i2_putch
  6800  001790  0012               	return	
  6801  001792                     i2l2043:
  6802  001792  EE20 F004          	lfsr	2,4
  6803  001796  5007               	movf	i2fputc@fp,w,c
  6804  001798  26D9               	addwf	fsr2l,f,c
  6805  00179A  5008               	movf	i2fputc@fp+1,w,c
  6806  00179C  22DA               	addwfc	fsr2h,f,c
  6807  00179E  50DE               	movf	postinc2,w,c
  6808  0017A0  10DE               	iorwf	postinc2,w,c
  6809  0017A2  B4D8               	btfsc	status,2,c
  6810  0017A4  D016               	goto	i2u134_40
  6811  0017A6  EE20 F004          	lfsr	2,4
  6812  0017AA  5007               	movf	i2fputc@fp,w,c
  6813  0017AC  26D9               	addwf	fsr2l,f,c
  6814  0017AE  5008               	movf	i2fputc@fp+1,w,c
  6815  0017B0  22DA               	addwfc	fsr2h,f,c
  6816  0017B2  EE10 F002          	lfsr	1,2
  6817  0017B6  5007               	movf	i2fputc@fp,w,c
  6818  0017B8  26E1               	addwf	fsr1l,f,c
  6819  0017BA  5008               	movf	i2fputc@fp+1,w,c
  6820  0017BC  22E2               	addwfc	fsr1h,f,c
  6821  0017BE  50DE               	movf	postinc2,w,c
  6822  0017C0  5CE6               	subwf	postinc1,w,c
  6823  0017C2  50E6               	movf	postinc1,w,c
  6824  0017C4  0A80               	xorlw	128
  6825  0017C6  6E0D               	movwf	(??i2_fputc+4)& (0+255),c
  6826  0017C8  50DE               	movf	postinc2,w,c
  6827  0017CA  0A80               	xorlw	128
  6828  0017CC  580D               	subwfb	(??i2_fputc+4)& (0+255),w,c
  6829  0017CE  B0D8               	btfsc	status,0,c
  6830  0017D0  0012               	return	
  6831  0017D2                     i2u134_40:
  6832  0017D2  EE20 F002          	lfsr	2,2
  6833  0017D6  5007               	movf	i2fputc@fp,w,c
  6834  0017D8  26D9               	addwf	fsr2l,f,c
  6835  0017DA  5008               	movf	i2fputc@fp+1,w,c
  6836  0017DC  22DA               	addwfc	fsr2h,f,c
  6837  0017DE  2ADE               	incf	postinc2,f,c
  6838  0017E0  0E00               	movlw	0
  6839  0017E2  22DD               	addwfc	postdec2,f,c
  6840  0017E4  0012               	return		;funcret
  6841  0017E6                     __end_ofi2_fputc:
  6842                           	opt callstack 0
  6843                           
  6844 ;; *************** function i2_putch *****************
  6845 ;; Defined at:
  6846 ;;		line 102 in file "lcd.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  data            1    wreg     unsigned char 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  data            1    3[COMRAM] unsigned char 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, status,2, status,0, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;Total ram usage:        1 bytes
  6865 ;; Hardware stack levels used:    1
  6866 ;; Hardware stack levels required when called:    3
  6867 ;; This function calls:
  6868 ;;		i2_send_byte
  6869 ;; This function is called by:
  6870 ;;		i2_fputc
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text33
  6875  001BC6                     __ptext33:
  6876                           	opt callstack 0
  6877  001BC6                     i2_putch:
  6878                           	opt callstack 11
  6879                           
  6880                           ;incstack = 0
  6881                           ;i2putch@data stored from wreg
  6882  001BC6  6E04               	movwf	i2putch@data,c
  6883                           
  6884                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  6885  001BC8  848C               	bsf	3980,2,c	;volatile
  6886                           
  6887                           ;lcd.c: 104:     send_byte((unsigned char)data);
  6888  001BCA  5004               	movf	i2putch@data,w,c
  6889  001BCC  ECCA  F00D         	call	i2_send_byte
  6890  001BD0  0012               	return		;funcret
  6891  001BD2                     __end_ofi2_putch:
  6892                           	opt callstack 0
  6893                           
  6894 ;; *************** function i2_lcdInst *****************
  6895 ;; Defined at:
  6896 ;;		line 64 in file "lcd.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  data            1    wreg     unsigned char 
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;  data            1    3[COMRAM] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;Total ram usage:        1 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    3
  6917 ;; This function calls:
  6918 ;;		i2_send_byte
  6919 ;; This function is called by:
  6920 ;;		_interruptHandler
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text34
  6925  001BD2                     __ptext34:
  6926                           	opt callstack 0
  6927  001BD2                     i2_lcdInst:
  6928                           	opt callstack 15
  6929                           
  6930                           ;incstack = 0
  6931                           ;i2lcdInst@data stored from wreg
  6932  001BD2  6E04               	movwf	i2lcdInst@data,c
  6933                           
  6934                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  6935  001BD4  948C               	bcf	3980,2,c	;volatile
  6936                           
  6937                           ;lcd.c: 66:     send_byte(data);
  6938  001BD6  5004               	movf	i2lcdInst@data,w,c
  6939  001BD8  ECCA  F00D         	call	i2_send_byte
  6940  001BDC  0012               	return		;funcret
  6941  001BDE                     __end_ofi2_lcdInst:
  6942                           	opt callstack 0
  6943                           
  6944 ;; *************** function i2_send_byte *****************
  6945 ;; Defined at:
  6946 ;;		line 55 in file "lcd.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  data            1    wreg     unsigned char 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  data            1    2[COMRAM] unsigned char 
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  1    wreg      void 
  6953 ;; Registers used:
  6954 ;;		wreg, status,2, status,0, cstack
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;Total ram usage:        1 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:    2
  6967 ;; This function calls:
  6968 ;;		i2_send_nibble
  6969 ;; This function is called by:
  6970 ;;		i2_lcdInst
  6971 ;;		i2_putch
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text35
  6976  001B94                     __ptext35:
  6977                           	opt callstack 0
  6978  001B94                     i2_send_byte:
  6979                           	opt callstack 11
  6980                           
  6981                           ;incstack = 0
  6982                           ;i2send_byte@data stored from wreg
  6983  001B94  6E03               	movwf	i2send_byte@data,c
  6984                           
  6985                           ;lcd.c: 57:     send_nibble(data >> 4);
  6986  001B96  3803               	swapf	i2send_byte@data,w,c
  6987  001B98  0B0F               	andlw	15
  6988  001B9A  ECBF  F00D         	call	i2_send_nibble
  6989                           
  6990                           ;lcd.c: 60:     send_nibble(data);
  6991  001B9E  5003               	movf	i2send_byte@data,w,c
  6992  001BA0  ECBF  F00D         	call	i2_send_nibble
  6993  001BA4  0012               	return		;funcret
  6994  001BA6                     __end_ofi2_send_byte:
  6995                           	opt callstack 0
  6996                           
  6997 ;; *************** function i2_send_nibble *****************
  6998 ;; Defined at:
  6999 ;;		line 44 in file "lcd.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  data            1    wreg     unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  data            1    1[COMRAM] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, status,0, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;Total ram usage:        1 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    1
  7020 ;; This function calls:
  7021 ;;		i2_pulse_e
  7022 ;; This function is called by:
  7023 ;;		i2_send_byte
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text36
  7028  001B7E                     __ptext36:
  7029                           	opt callstack 0
  7030  001B7E                     i2_send_nibble:
  7031                           	opt callstack 11
  7032                           
  7033                           ;incstack = 0
  7034                           ;i2send_nibble@data stored from wreg
  7035  001B7E  6E02               	movwf	i2send_nibble@data,c
  7036                           
  7037                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  7038  001B80  508C               	movf	3980,w,c	;volatile
  7039  001B82  0B0F               	andlw	15
  7040  001B84  6E8C               	movwf	3980,c	;volatile
  7041                           
  7042                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  7043  001B86  3802               	swapf	i2send_nibble@data,w,c
  7044  001B88  0BF0               	andlw	240
  7045  001B8A  108C               	iorwf	3980,w,c	;volatile
  7046  001B8C  6E8C               	movwf	3980,c	;volatile
  7047                           
  7048                           ;lcd.c: 48:     pulse_e();
  7049  001B8E  EC7D  F00D         	call	i2_pulse_e	;wreg free
  7050  001B92  0012               	return		;funcret
  7051  001B94                     __end_ofi2_send_nibble:
  7052                           	opt callstack 0
  7053                           
  7054 ;; *************** function i2_pulse_e *****************
  7055 ;; Defined at:
  7056 ;;		line 28 in file "lcd.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;		None
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;  pulse_e         1    0[COMRAM] unsigned char 
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;Total ram usage:        1 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		i2_send_nibble
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text37
  7084  001AFA                     __ptext37:
  7085                           	opt callstack 0
  7086  001AFA                     i2_pulse_e:
  7087                           	opt callstack 11
  7088                           
  7089                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  7090                           
  7091                           ;incstack = 0
  7092  001AFA  0E00               	movlw	0
  7093  001AFC  BEF2               	btfsc	4082,7,c	;volatile
  7094  001AFE  0E01               	movlw	1
  7095  001B00  6E01               	movwf	i2pulse_e@interruptState,c
  7096                           
  7097                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  7098  001B02  9EF2               	bcf	4082,7,c	;volatile
  7099                           
  7100                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  7101  001B04  868C               	bsf	3980,3,c	;volatile
  7102                           
  7103                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  7104  001B06  0E14               	movlw	20
  7105  001B08                     i2u278_47:
  7106  001B08  2EE8               	decfsz	wreg,f,c
  7107  001B0A  D7FE               	bra	i2u278_47
  7108  001B0C  D000               	nop2	
  7109                           
  7110                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  7111  001B0E  968C               	bcf	3980,3,c	;volatile
  7112                           
  7113                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  7114  001B10  0E53               	movlw	83
  7115  001B12                     i2u279_47:
  7116  001B12  2EE8               	decfsz	wreg,f,c
  7117  001B14  D7FE               	bra	i2u279_47
  7118  001B16  F000               	nop	
  7119                           
  7120                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  7121  001B18  B001               	btfsc	i2pulse_e@interruptState,0,c
  7122  001B1A  D002               	bra	i2u126_45
  7123  001B1C  9EF2               	bcf	4082,7,c	;volatile
  7124  001B1E  D001               	bra	i2u126_46
  7125  001B20                     i2u126_45:
  7126  001B20  8EF2               	bsf	4082,7,c	;volatile
  7127  001B22                     i2u126_46:
  7128  001B22  0012               	return		;funcret
  7129  001B24                     __end_ofi2_pulse_e:
  7130                           	opt callstack 0
  7131                           
  7132                           	psect	rparam
  7133  0000                     
  7134                           	psect	temp
  7135  00007A                     btemp:
  7136                           	opt callstack 0
  7137  00007A                     	ds	1
  7138  0000                     int$flags	set	btemp
  7139  0000                     wtemp8	set	btemp+1
  7140  0000                     ttemp5	set	btemp+1
  7141  0000                     ttemp6	set	btemp+4
  7142  0000                     ttemp7	set	btemp+8
  7143                           tosu	equ	0xFFF
  7144                           tosh	equ	0xFFE
  7145                           tosl	equ	0xFFD
  7146                           stkptr	equ	0xFFC
  7147                           pclatu	equ	0xFFB
  7148                           pclath	equ	0xFFA
  7149                           pcl	equ	0xFF9
  7150                           tblptru	equ	0xFF8
  7151                           tblptrh	equ	0xFF7
  7152                           tblptrl	equ	0xFF6
  7153                           tablat	equ	0xFF5
  7154                           prodh	equ	0xFF4
  7155                           prodl	equ	0xFF3
  7156                           indf0	equ	0xFEF
  7157                           postinc0	equ	0xFEE
  7158                           postdec0	equ	0xFED
  7159                           preinc0	equ	0xFEC
  7160                           plusw0	equ	0xFEB
  7161                           fsr0h	equ	0xFEA
  7162                           fsr0l	equ	0xFE9
  7163                           wreg	equ	0xFE8
  7164                           indf1	equ	0xFE7
  7165                           postinc1	equ	0xFE6
  7166                           postdec1	equ	0xFE5
  7167                           preinc1	equ	0xFE4
  7168                           plusw1	equ	0xFE3
  7169                           fsr1h	equ	0xFE2
  7170                           fsr1l	equ	0xFE1
  7171                           bsr	equ	0xFE0
  7172                           indf2	equ	0xFDF
  7173                           postinc2	equ	0xFDE
  7174                           postdec2	equ	0xFDD
  7175                           preinc2	equ	0xFDC
  7176                           plusw2	equ	0xFDB
  7177                           fsr2h	equ	0xFDA
  7178                           fsr2l	equ	0xFD9
  7179                           status	equ	0xFD8


Data Sizes:
    Strings     383
    Constant    23
    Data        66
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    113     121
    BANK0           128    117     128
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_39(CODE[7]), STR_38(CODE[13]), STR_37(CODE[7]), STR_36(CODE[13]), 
		 -> STR_35(CODE[13]), STR_34(CODE[13]), STR_33(CODE[10]), STR_32(CODE[14]), 
		 -> STR_31(CODE[11]), STR_30(CODE[12]), STR_29(CODE[10]), STR_28(CODE[15]), 
		 -> STR_27(CODE[14]), STR_26(CODE[12]), STR_25(CODE[10]), STR_24(CODE[15]), 
		 -> STR_23(CODE[12]), STR_22(CODE[15]), STR_21(CODE[12]), STR_20(CODE[16]), 
		 -> STR_19(CODE[9]), STR_18(CODE[9]), STR_17(CODE[11]), STR_16(CODE[13]), 
		 -> STR_15(CODE[15]), STR_14(CODE[11]), STR_13(CODE[15]), STR_12(CODE[12]), 
		 -> STR_11(CODE[15]), STR_10(CODE[13]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[12]), STR_6(CODE[10]), STR_5(CODE[15]), STR_4(CODE[17]), 
		 -> STR_3(CODE[13]), STR_2(CODE[9]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S800_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_39(CODE[7]), STR_38(CODE[13]), STR_37(CODE[7]), STR_36(CODE[13]), 
		 -> STR_35(CODE[13]), STR_34(CODE[13]), STR_33(CODE[10]), STR_32(CODE[14]), 
		 -> STR_31(CODE[11]), STR_30(CODE[12]), STR_29(CODE[10]), STR_28(CODE[15]), 
		 -> STR_27(CODE[14]), STR_26(CODE[12]), STR_25(CODE[10]), STR_24(CODE[15]), 
		 -> STR_23(CODE[12]), STR_22(CODE[15]), STR_21(CODE[12]), STR_20(CODE[16]), 
		 -> STR_19(CODE[9]), STR_18(CODE[9]), STR_17(CODE[11]), STR_16(CODE[13]), 
		 -> STR_15(CODE[15]), STR_14(CODE[11]), STR_13(CODE[15]), STR_12(CODE[12]), 
		 -> STR_11(CODE[15]), STR_10(CODE[13]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[12]), STR_6(CODE[10]), STR_5(CODE[15]), STR_4(CODE[17]), 
		 -> STR_3(CODE[13]), STR_2(CODE[9]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_39(CODE[7]), STR_38(CODE[13]), STR_37(CODE[7]), STR_36(CODE[13]), 
		 -> STR_35(CODE[13]), STR_34(CODE[13]), STR_33(CODE[10]), STR_32(CODE[14]), 
		 -> STR_31(CODE[11]), STR_30(CODE[12]), STR_29(CODE[10]), STR_28(CODE[15]), 
		 -> STR_27(CODE[14]), STR_26(CODE[12]), STR_25(CODE[10]), STR_24(CODE[15]), 
		 -> STR_23(CODE[12]), STR_22(CODE[15]), STR_21(CODE[12]), STR_20(CODE[16]), 
		 -> STR_19(CODE[9]), STR_18(CODE[9]), STR_17(CODE[11]), STR_16(CODE[13]), 
		 -> STR_15(CODE[15]), STR_14(CODE[11]), STR_13(CODE[15]), STR_12(CODE[12]), 
		 -> STR_11(CODE[15]), STR_10(CODE[13]), STR_9(CODE[11]), STR_8(CODE[9]), 
		 -> STR_7(CODE[12]), STR_6(CODE[10]), STR_5(CODE[15]), STR_4(CODE[17]), 
		 -> STR_3(CODE[13]), STR_2(CODE[9]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_dtoa->i2_pad
    i2_abs->i2___aomod
    i2_ctoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_send_byte
    i2_lcdInst->i2_send_byte
    i2_send_byte->i2_send_nibble
    i2_send_nibble->i2_pulse_e

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   14094
                                            100 BANK0     17    17      0
                            ___awmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   12715
                                             92 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9847
                                             84 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    9472
                                             67 BANK0     17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4676
                                             31 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3247
                                             31 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3027
                                             20 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1280
                                             13 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     879
                                              4 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     111
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     111
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0      89
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      45
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _interruptHandler                                   15    15      0    6415
                                             98 COMRAM    15    15      0
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (13) i2_printf                                            6     4      2    6191
                                             92 COMRAM     6     4      2
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6    5979
                                             84 COMRAM     8     2      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        42    36      6    5772
                                             67 COMRAM    17    11      6
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_dtoa                                             36    26     10    2976
                                             31 COMRAM    36    26     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (17) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (16) i2_ctoa                                              7     4      3    1797
                                             31 COMRAM     5     2      3
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    1677
                                             20 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
                           i2_strlen
 ---------------------------------------------------------------------------------
 (18) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4     680
                                             13 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_fputc                                             9     5      4     479
                                              4 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (17) i2_putch                                             1     1      0     111
                                              3 COMRAM     1     1      0
                        i2_send_byte
 ---------------------------------------------------------------------------------
 (13) i2_lcdInst                                           1     1      0     111
                                              3 COMRAM     1     1      0
                        i2_send_byte
 ---------------------------------------------------------------------------------
 (18) i2_send_byte                                         1     1      0      89
                                              2 COMRAM     1     1      0
                      i2_send_nibble
 ---------------------------------------------------------------------------------
 (19) i2_send_nibble                                       1     1      0      45
                                              1 COMRAM     1     1      0
                          i2_pulse_e
 ---------------------------------------------------------------------------------
 (20) i2_pulse_e                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e

 _interruptHandler (ROOT)
   i2_lcdInst
     i2_send_byte
       i2_send_nibble
         i2_pulse_e
   i2_printf
     i2_vfprintf
       i2_vfpfcnvrt
         i2_ctoa
           i2_pad
             i2_fputc
               i2_putch
                 i2_send_byte
                   i2_send_nibble
                     i2_pulse_e
             i2_fputs
               i2_fputc
                 i2_putch
                   i2_send_byte
                     i2_send_nibble
                       i2_pulse_e
             i2_strlen
         i2_dtoa
           i2___aodiv
           i2___aomod
           i2_abs
             i2___aomod (ARG)
           i2_pad
             i2_fputc
               i2_putch
                 i2_send_byte
                   i2_send_nibble
                     i2_pulse_e
             i2_fputs
               i2_fputc
                 i2_putch
                   i2_send_byte
                     i2_send_nibble
                       i2_pulse_e
             i2_strlen
         i2_fputc
           i2_putch
             i2_send_byte
               i2_send_nibble
                 i2_pulse_e

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     75      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     71      79       1       96.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     155      34        0.0%
DATA                 0      0     155       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb  2 21:55:30 2019

      __end_ofi2_send_byte 1BA6                __CFG_CPD$ON 000000                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000                        l200 05C0  
                      l180 149E                        l198 05B8                        l911 1A0A  
             __CFG_CPB$OFF 000000         i2___aodiv@quotient 0013                        _abs 19E0  
                      _pad 146C               ___awmod@sign 0085                        wreg 000FE8  
      __end_ofi2_vfpfcnvrt 0F90                 i2_dtoa$339 0032               __CFG_LVP$OFF 000000  
    __end_ofi2_send_nibble 1B94               __CFG_WDT$OFF 000000                       ?_abs 0092  
                     l2101 14C2                       l2105 14EE                       l2121 0FBE  
                     l2029 1726                       l2053 1978                       l2061 1A50  
                     l2133 100C                       l2063 1A56                       l2303 1850  
                     l2135 1020                       l2127 0FE6                       l2057 1990  
                     l2305 185C                       l2153 10B8                       l2145 107C  
                     l2091 1486                       l2149 1092                       l2181 12EA  
                     l2173 128E                       l2165 1250                       l2333 05DA  
                     l2095 1496                       l2175 12A2                       l2319 059C  
                     l2097 14A8                       l2185 1300                       l2169 1274  
                     l2337 05EA                       l2371 0762                       l2347 06E4  
                     l2621 167A                       l2613 165A                       l2605 1640  
                     l2189 1326                       l2615 1662                       l2367 074A  
                     l2625 1684                       l2609 164C                       l2561 1820  
                     l2483 0B66                       l2467 0A78                       l2629 1692  
                     l2477 0B2A                       l2493 0B8A                       l2901 0490  
                     l2487 0B72                       l2559 17F8                       l2921 04FC  
                     l2737 01CC                       l2907 04A6                       l2691 007A  
                     l2917 04E6                       l2925 050C                       ?_pad 0094  
                     l2935 052E                       l2839 02D4                       l2857 0360  
                     l2875 03E6                       l2883 0408                       l2859 036C  
                     l2877 03F2                       l2899 0484                       STR_1 FFF0  
                     STR_2 FFE7                       STR_3 FF26                       STR_4 FE80  
                     STR_5 FEB0                       STR_6 FFB8                       STR_7 FF7F  
                     STR_8 FFCC                       STR_9 FF97                       u1300 1766  
                     u2100 0AAC                       u2220 1666                       u1430 19F0  
                     u1255 1A9E                       u1256 1AA0                       u1280 171E  
                     _LATD 000F8C                       u1540 12A6                       u1461 0FEC  
                     u1480 1024                       u1800 05AE                       u2507 0090  
                     u1820 05D4                       u2517 00B4                       u1830 06F4  
                     u2607 0258                       u2527 00E2                       u1760 056E  
                     u2617 02F2                       u2537 00FE                       u1850 0716  
                     u1770 0570                       u2707 1A84                       u1851 0714  
                     u2627 038A                       u2547 0122                       u1860 0724  
                     u2717 1A8E                       u2637 0428                       u2557 0156  
                     u1870 0728                       u2647 04F2                       u2567 017E  
                     u2657 053A                       u2577 01A0                       u2497 003A  
                     u1890 0734                       u2667 16A4                       u2587 01EA  
                     u2677 16BE                       u2597 0222                       u2687 16D0  
                     u2697 16F4                       abs@a 0092                       _dbuf 013C  
                     _ctoa 183C                       _main 0012                       _dtoa 0544  
 __end_of_interruptHandler 0DA8                       _keys FE69                       _prec 00F7  
                     _time 0078                       _nout 0072                       pad@i 009B  
                     pad@p 0098                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 009D  
                     fsr2l 000FD9                       btemp 007A                       start 000E  
            __CFG_IESO$OFF 000000            __end_ofi2_fputc 17E6            __end_ofi2_fputs 19E0  
          __end_ofi2_putch 1BD2              __CFG_MCLRE$ON 000000               ___param_bank 000000  
                    ??_abs 0094                      ??_pad 009A                 i2_vfprintf 188E  
          __end_of___aodiv 10DA                      ?_ctoa 009F                      ?_main 0001  
                    ?_dtoa 009F            __end_of___aomod 1348                      STR_10 FF4D  
                    STR_11 FEEC                      STR_12 FF67                      STR_20 FE91  
                    STR_21 FF8B                      STR_13 FEBF                      STR_30 FF73  
                    STR_14 FFA2                      STR_22 FEA1                      STR_31 FF0D  
                    STR_23 FF73                      STR_15 FEDD                      STR_16 FF33  
                    STR_32 FF0A                      STR_24 FECE                      STR_33 FFC2  
                    STR_25 FFC2                      STR_17 FFAD                      STR_26 FF73  
                    STR_18 FFD5                      STR_34 FF40                      STR_19 FFDE  
                    STR_35 FF5A                      STR_27 FF18                      STR_36 FF40  
                    STR_28 FEFB            __end_of___awmod 169C                      STR_29 FFC2  
                    STR_37 FFF8                      STR_38 FF40                      STR_39 FFF8  
                    i2l200 0808                      i2l180 153A                      i2l198 0800  
                    i2l911 1A3C               vfpfcnvrt@fmt 00C5                      _PORTB 000F81  
                    _TRISD 000F95                      i2_abs 1A14                      i2_pad 150A  
            __CFG_PWRT$OFF 000000               main@miniTick 00E8              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
          __end_of_lcdInst 1BC6             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000               main@keypress 00EE  
           __CFG_EBTR3$OFF 000000                      _State 0128              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000                      _balls 0076  
          __end_of_initLCD 170C             __CFG_EBTRB$OFF 000000                      _flags 00F9  
            _BallDispensed 0100                      _error 0074                      _fputc 170C  
                    _fputs 196C                      pad@fp 0094                      _width 00F5  
                    ctoa@c 00A1                      _putch 1BA6                      _start 00FB  
                    ctoa@w 00A2                      dtoa@d 00A1                      dtoa@i 00C1  
                    dtoa@n 00B9                      dtoa@p 00B3                      dtoa@s 00B7  
                    dtoa@w 00B5                      tablat 000FF5            send_nibble@data 0081  
          __end_of_pulse_e 1AA2                      ttemp5 007B                      ttemp6 007E  
                    ttemp7 0082                      status 000FD8                      wtemp8 007B  
       __size_ofi2___aodiv 0148         __size_ofi2___aomod 0124             __CFG_PBADEN$ON 000000  
              i2_send_byte 1B94           __end_ofi2_printf 1AD0           __end_ofi2_strlen 1AFA  
       main@number_pressed 00EA            __initialization 15A4         __size_ofi2_lcdInst 000C  
             __end_of_ctoa 188E               __end_of_main 0544               __end_of_dtoa 078C  
             __end_of_keys FE7A                 i2printf@ap 0061                i2_vfpfcnvrt 0DA8  
            i2vfpfcnvrt@ap 0048              i2vfpfcnvrt@fp 0044              i2vfpfcnvrt@ll 004C  
                   ??_ctoa 00A2                     ??_main 00E4                     ??_dtoa 00A9  
            __activetblptr 000002         __size_ofi2_pulse_e 002A                     ?i2_abs 0013  
                   ?i2_pad 0015                     _ADCON1 000FC1               ?_send_nibble 0001  
                   ?_fputc 0084                     ?_fputs 008D                     ?_putch 0001  
                   _INT1IE 007F83                     _INT1IF 007F80                     i2l2201 1532  
                   i2l2043 1792                     i2l2211 158A                     i2l2203 1544  
                   i2l3013 0D6A                     i2l2071 19B2                     i2l2207 155C  
                   i2l2223 1106                     i2l3015 0D6E                     i2l2081 1ADE  
                   i2l3009 0D64                     i2l2075 19C8                     i2l2235 1154  
                   i2l2251 11DA                     i2l2237 1168                     i2l2229 112E  
                   i2l2413 0832                     i2l2079 1ADA                     i2l2255 1200  
                   i2l2247 11C4                     i2l2271 1398                     i2l2423 092A  
                   i2l2409 0822                     i2l2291 144A                     i2l2283 140E  
                   i2l2275 13B2                     i2l2267 1374                     i2l2443 0992  
                   i2l2197 1524                     i2l2381 1900                     i2l2277 13C6  
                   i2l2533 0F3A                     i2l2517 0E4C                     i2l2287 1424  
                   i2l2447 09AA                     i2l2527 0EFE                     i2l2543 0F5C  
                   i2l2537 0F44                     i2l2379 18F4                     i2l2395 07E2  
                   i2l2567 18A0                     i2l2569 18C4                     i2l2963 0C5A  
                   i2l2991 0CDE                     i2l2967 0C62                     i2l2985 0CCC  
                   i2l2989 0CD4                  ??i2_fputc 0009                  ??i2_fputs 0012  
                ??i2_putch 0004             i2___aodiv@sign 0012              main@miniClear 00EC  
                   i2abs@a 0013                     i2_ctoa 18E0                     i2_dtoa 078C  
                   i2pad@i 001C                     i2pad@p 0019                     i2pad@w 001E  
            main@miniState 00EF             __CFG_XINST$OFF 000000               vfprintf@cfmt 00DA  
           i2___aomod@sign 0012                  ??___aodiv 0090              i2vfprintf@fmt 0057  
                ??___aomod 0090             __CFG_STVREN$ON 000000                  ??___awmod 0084  
              ?i2_vfprintf 0055                     clear_0 1602                     clear_1 160E  
          ___awmod@divisor 0082            ___awmod@counter 0084                  ??_lcdInst 0083  
                   _printf 1B24                     pad@buf 0096                     ctoa@fp 009F  
                   dtoa@fp 009F                     _strlen 1A46                  ??_initLCD 0084  
                   fputc@c 0084                     fputs@c 0091                     fputs@i 0092  
             __pdataCOMRAM 0076          __end_ofi2___aodiv 1222                     fputs@s 008D  
        __end_ofi2___aomod 146C               __mediumconst FE68                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8         i2___aomod@dividend 0001  
         __end_of_vfprintf 183C                  ??_pulse_e 0080          __end_ofi2_lcdInst 1BDE  
    pulse_e@interruptState 0080                 __accesstop 0080    __end_of__initialization 161C  
            ___rparam_used 000001          __end_ofi2_pulse_e 1B24              __end_ofi2_abs 1A46  
            __end_ofi2_pad 15A4             __pcstackCOMRAM 0001               __pidataBANK0 1BE2  
             __pidataBANK1 1930              __end_of_fputc 177A              __end_of_fputs 19A8  
            __end_of_putch 1BB6                i2printf@fmt 005D                i2printf@ret 005F  
          _key_was_pressed 00FD                i2putch@data 0004                    ??i2_abs 0015  
                  ??i2_pad 001B             i2vfpfcnvrt@fmt 0046                  ?i2_printf 005D  
                ?i2_strlen 0001                    ??_fputc 0088                    ??_fputs 0091  
                  ??_putch 0083                 __pbssBANK0 00F5                 __pbssBANK1 013C  
      __size_ofi2_vfprintf 0052          ?_interruptHandler 0001                    ?i2_ctoa 0020  
                  ?i2_dtoa 0020         ??_interruptHandler 0063         __size_of_send_byte 0018  
                  ?_printf 00DC                    ?_strlen 0080         __size_of_vfpfcnvrt 01EC  
               ??i2_printf 005F                 ??i2_strlen 0003                    i2_fputc 177A  
                  i2_fputs 19A8       __size_of_send_nibble 001A                    i2pad@fp 0015  
                  i2ctoa@c 0022                    i2_putch 1BC6                    i2ctoa@w 0023  
                  i2dtoa@d 0022                    i2dtoa@i 0042                    i2dtoa@n 003A  
                  i2dtoa@p 0034                    i2dtoa@s 0038                    i2dtoa@w 0036  
         _DistanceCanister 0114            __size_ofi2_ctoa 0050            __size_ofi2_dtoa 0248  
             ?i2_send_byte 0001                    __Hparam 0000                    __Lparam 0000  
                  ___aodiv 0F90                    ___aomod 1222                    ___awmod 162A  
                ?_vfprintf 00D4             i2vfprintf@cfmt 005B   interruptHandler@keypress 0071  
   __size_ofi2_send_nibble 0016               ?i2_vfpfcnvrt 0044                    __pcinit 15A4  
                  __ramtop 1000                    _lcdInst 1BB6                    __ptext0 0012  
                  __ptext1 1B24                    __ptext2 17E6                    __ptext3 09D4  
                  __ptext4 0544                    __ptext5 19E0                    __ptext6 1222  
                  __ptext7 0F90                    __ptext8 183C                    __ptext9 146C  
          __size_of_printf 0028            __size_of_strlen 002E                    _initLCD 169C  
             __size_of_abs 0034               __size_of_pad 009E           ___awmod@dividend 0080  
                  _pulse_e 1A74    i2pulse_e@interruptState 0001             __pintcode_body 0BC0  
     end_of_initialization 161C      __end_of_LCD_SIZE_HORZ FE80          __end_of_send_byte 1B7E  
    __end_of_LCD_SIZE_VERT FE7F                    fputc@fp 0086              __Lmediumconst FE68  
                  int_func 0BC0                    fputs@fp 008F          __end_of_vfpfcnvrt 0BC0  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE               ??i2_vfprintf 005B  
               ??_vfprintf 00DA                    strlen@a 0082                    strlen@s 0080  
        i2___aodiv@divisor 0009          i2___aodiv@counter 0011                  i2___aodiv 10DA  
                i2___aomod 1348              i2_send_nibble 1B7E                  i2_lcdInst 1BD2  
       __end_ofi2_vfprintf 18E0              send_byte@data 0082             __end_ofi2_ctoa 1930  
           __end_ofi2_dtoa 09D4                  i2_pulse_e 1AFA                vfpfcnvrt@ap 00C7  
              vfpfcnvrt@fp 00C3                vfpfcnvrt@ll 00CB              __pidataCOMRAM 1BDE  
                i2fputc@fp 0007              i2lcdInst@data 0004                  i2fputs@fp 0010  
           __end_of_printf 1B4C             __end_of_strlen 1A74        start_initialization 15A4  
              __end_of_abs 1A14                __end_of_pad 150A                 ?i2___aodiv 0001  
               ?i2___aomod 0001               i2vfpfcnvrt@c 0054             ?i2_send_nibble 0001  
        __size_ofi2_printf 002E          __size_ofi2_strlen 002A                  i2strlen@a 0003  
                i2strlen@s 0001                 ?i2_lcdInst 0001                   ??i2_ctoa 0023  
                 ??i2_dtoa 002A          interruptHandler@i 006F                vfprintf@fmt 00D6  
             i2vfprintf@ap 0059               i2vfprintf@fp 0055       __size_ofi2_send_byte 0012  
               ?i2_pulse_e 0001                __pdataBANK0 00FE                __pdataBANK1 0100  
         __CFG_LPT1OSC$OFF 000000                   ??_printf 00E0  __size_of_interruptHandler 0DA0  
        i2___aomod@divisor 0009                   ??_strlen 0082          i2___aomod@counter 0011  
     __size_ofi2_vfpfcnvrt 01E8                __pbssCOMRAM 0072              __pcstackBANK0 0080  
         ___aodiv@dividend 0080                   ?i2_fputc 0005                   ?i2_fputs 000E  
                 ?i2_putch 0001          __CFG_CCP2MX$PORTC 000000                  __pintcode 0008  
            __pmediumconst FE68                   ?___aodiv 0080                   ?___aomod 0080  
         ___aodiv@quotient 0092                   ?___awmod 0080                   ?_lcdInst 0001  
        __size_of_vfprintf 0056                   ?_initLCD 0001             __size_ofi2_abs 0032  
           __size_ofi2_pad 009A            ??i2_send_nibble 0002              ??_send_nibble 0081  
                 ?_pulse_e 0001                ??i2___aodiv 0011                ??i2___aomod 0011  
           __size_of_fputc 006E             __size_of_fputs 003C             __size_of_putch 0010  
              ??i2_lcdInst 0004                   _LATDbits 000F8C                  _send_byte 1B66  
           _LCD_LINE1_ADDR FE7D             _LCD_LINE2_ADDR FE7C             _LCD_LINE3_ADDR FE7B  
           _LCD_LINE4_ADDR FE7A                   i2u201_40 095A                   i2u201_41 0958  
                 i2u202_40 0968                   i2u203_40 096E                   i2u132_40 178A  
                 i2u205_40 097C                   i2u134_40 17D2                   i2u126_45 1B20  
                 i2u126_46 1B22                   i2u215_40 0E80                   i2u171_40 13CA  
                 i2u163_41 1134                   i2u165_40 116C                   i2u174_40 1A22  
                 i2u192_40 07B4                   i2u248_40 0D84                   i2u272_47 0C1A  
                 i2u193_40 07B6                   i2u273_47 0C4C                   i2u274_47 0C8C  
                 i2u275_47 0CBE                   i2u196_40 07F6                   i2u276_47 0D22  
                 i2u277_47 0D54                   i2u198_40 081C                   i2u278_47 1B08  
                 i2u199_40 0938                   i2u279_47 1B12           __CFG_WDTPS$32768 000000  
              ??i2_pulse_e 0001                  _vfpfcnvrt 09D4                   _Canister 00FE  
                main@state 00F3                   i2_printf 1AA2                   i2pad@buf 0017  
                 i2ctoa@fp 0020                   i2dtoa@fp 0020                   i2_strlen 1AD0  
               vfpfcnvrt@c 00D3                  copy_data0 15B8                  copy_data1 15F0  
                 i2fputc@c 0005                   i2fputs@c 0012                   i2fputs@i 0013  
                 i2fputs@s 000E           __size_ofi2_fputc 006C     __end_of_LCD_LINE1_ADDR FE7E  
         __size_ofi2_fputs 0038     __end_of_LCD_LINE2_ADDR FE7D     __end_of_LCD_LINE3_ADDR FE7C  
   __end_of_LCD_LINE4_ADDR FE7B           __size_ofi2_putch 000C        __end_of_send_nibble 1B66  
        i2send_nibble@data 0002                 ?_send_byte 0001                   __Hrparam 0000  
               vfprintf@ap 00D8                   __Lrparam 0000                 vfprintf@fp 00D4  
       __CFG_BOREN$SBORDIS 000000           __size_of___aodiv 014A           __size_of___aomod 0126  
         __size_of___awmod 0072                 ?_vfpfcnvrt 00C3            ___aodiv@divisor 0088  
         _interruptHandler 0008            ___aodiv@counter 0090           __size_of_lcdInst 0010  
         __size_of_initLCD 0070                   _dtoa$339 00B1                   __ptext10 1A46  
                 __ptext11 196C                   __ptext12 170C                   __ptext21 1AA2  
                 __ptext13 1BA6                   __ptext30 1AD0                   __ptext22 188E  
                 __ptext14 169C                   __ptext31 19A8                   __ptext23 0DA8  
                 __ptext15 1BB6                   __ptext32 177A                   __ptext24 078C  
                 __ptext16 1B66                   __ptext33 1BC6                   __ptext25 1A14  
                 __ptext17 1B4C                   __ptext34 1BD2                   __ptext26 1348  
                 __ptext18 1A74                   __ptext35 1B94                   __ptext27 10DA  
                 __ptext19 162A                   __ptext36 1B7E                   __ptext28 18E0  
                 __ptext37 1AFA                   __ptext29 150A           __size_of_pulse_e 002E  
            __size_of_ctoa 0052              __size_of_main 0532              __size_of_dtoa 0248  
                 _exit_key 00FC                   int$flags 007A                   _vfprintf 17E6  
                printf@fmt 00DC                   main@tick 00E6           ___aomod@dividend 0080  
                putch@data 0083                 _INTCONbits 000FF2                _send_nibble 1B4C  
                 intlevel2 0000              _LCD_SIZE_HORZ FE7F              _LCD_SIZE_VERT FE7E  
            ??i2_send_byte 0003                ??_send_byte 0082                   printf@ap 00E2  
          i2send_byte@data 0003            ___aomod@divisor 0088              ??i2_vfpfcnvrt 004A  
              ??_vfpfcnvrt 00C9                lcdInst@data 0083            ___aomod@counter 0090  
             ___aodiv@sign 0091         i2___aodiv@dividend 0001               ___aomod@sign 0091  
