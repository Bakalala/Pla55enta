

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb  6 13:58:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4620 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataCOMRAM
    96  001B58                     __pidataCOMRAM:
    97                           	opt callstack 0
    98                           
    99                           ;initializer for _time
   100  001B58  001E               	dw	30
   101                           
   102                           	psect	idataBANK0
   103  0019E6                     __pidataBANK0:
   104                           	opt callstack 0
   105                           
   106                           ;initializer for _DistanceCanister
   107  0019E6  0014               	dw	20
   108  0019E8  001E               	dw	30
   109  0019EA  0028               	dw	40
   110  0019EC  003B               	dw	59
   111  0019EE  007B               	dw	123
   112  0019F0  00D4               	dw	212
   113  0019F2  014C               	dw	332
   114  0019F4  0190               	dw	400
   115  0019F6  FFFF               	dw	65535
   116  0019F8  FFFF               	dw	65535
   117                           
   118                           ;initializer for _State
   119  0019FA  0001               	dw	1
   120  0019FC  0001               	dw	1
   121  0019FE  0001               	dw	1
   122  001A00  0000               	dw	0
   123  001A02  0000               	dw	0
   124  001A04  0001               	dw	1
   125  001A06  0001               	dw	1
   126  001A08  0000               	dw	0
   127  001A0A  FFFF               	dw	65535
   128  001A0C  FFFF               	dw	65535
   129                           
   130                           ;initializer for _balls
   131  001A0E  0005               	dw	5
   132                           
   133                           ;initializer for _Canister
   134  001A10  0008               	dw	8
   135                           
   136                           	psect	idataBANK1
   137  001AEE                     __pidataBANK1:
   138                           	opt callstack 0
   139                           
   140                           ;initializer for _BallDispensed
   141  001AEE  0001               	dw	1
   142  001AF0  0001               	dw	1
   143  001AF2  0001               	dw	1
   144  001AF4  0000               	dw	0
   145  001AF6  0000               	dw	0
   146  001AF8  0001               	dw	1
   147  001AFA  0001               	dw	1
   148  001AFC  0000               	dw	0
   149  001AFE  FFFF               	dw	65535
   150  001B00  FFFF               	dw	65535
   151                           
   152                           	psect	mediumconst
   153  00FE70                     __pmediumconst:
   154                           	opt callstack 0
   155  00FE70  00                 	db	0
   156  00FE71                     _keys:
   157                           	opt callstack 0
   158  00FE71  31                 	db	49
   159  00FE72  32                 	db	50
   160  00FE73  33                 	db	51
   161  00FE74  41                 	db	65
   162  00FE75  34                 	db	52
   163  00FE76  35                 	db	53
   164  00FE77  36                 	db	54
   165  00FE78  42                 	db	66
   166  00FE79  37                 	db	55
   167  00FE7A  38                 	db	56
   168  00FE7B  39                 	db	57
   169  00FE7C  43                 	db	67
   170  00FE7D  2A                 	db	42
   171  00FE7E  30                 	db	48
   172  00FE7F  23                 	db	35
   173  00FE80  44                 	db	68
   174  00FE81  00                 	db	0
   175  00FE82                     __end_of_keys:
   176                           	opt callstack 0
   177  00FE82                     _happynewyear:
   178                           	opt callstack 0
   179  00FE82  40                 	db	64
   180  00FE83  57                 	db	87
   181  00FE84  13                 	db	19
   182  00FE85  03                 	db	3
   183  00FE86  06                 	db	6
   184  00FE87  02                 	db	2
   185  00FE88  19                 	db	25
   186  00FE89                     __end_of_happynewyear:
   187                           	opt callstack 0
   188  00FE89  50                 	db	80
   189  00FE8A                     __end_of_LCD_LINE4_ADDR:
   190                           	opt callstack 0
   191  00FE8A  10                 	db	16
   192  00FE8B                     __end_of_LCD_LINE3_ADDR:
   193                           	opt callstack 0
   194  00FE8B  40                 	db	64
   195  00FE8C                     __end_of_LCD_LINE2_ADDR:
   196                           	opt callstack 0
   197  00FE8C  00                 	db	0
   198  00FE8D                     __end_of_LCD_LINE1_ADDR:
   199                           	opt callstack 0
   200  00FE8D                     _LCD_SIZE_VERT:
   201                           	opt callstack 0
   202  00FE8D  04                 	db	4
   203  00FE8E                     __end_of_LCD_SIZE_VERT:
   204                           	opt callstack 0
   205  00FE8E                     _LCD_SIZE_HORZ:
   206                           	opt callstack 0
   207  00FE8E  10                 	db	16
   208  00FE8F                     __end_of_LCD_SIZE_HORZ:
   209                           	opt callstack 0
   210  0000                     _SSPBUF	set	4041
   211  0000                     _SSPCON2bits	set	4037
   212  0000                     _SSPCON1	set	4038
   213  0000                     _SSPADD	set	4040
   214  0000                     _TRISCbits	set	3988
   215  0000                     _SSPCON1bits	set	4038
   216  0000                     _SSPCON2	set	4037
   217  0000                     _SSPSTAT	set	4039
   218  0000                     _PORTB	set	3969
   219  0000                     _ADCON1	set	4033
   220  0000                     _TRISD	set	3989
   221  0000                     _LATD	set	3980
   222  0000                     _LATDbits	set	3980
   223  0000                     _INTCONbits	set	4082
   224  0000                     _INT1IF	set	32640
   225  0000                     _INT1IE	set	32643
   226  00FE8F                     STR_5:
   227  00FE8F  49                 	db	73	;'I'
   228  00FE90  74                 	db	116	;'t'
   229  00FE91  27                 	db	39
   230  00FE92  73                 	db	115	;'s'
   231  00FE93  20                 	db	32
   232  00FE94  79                 	db	121	;'y'
   233  00FE95  61                 	db	97	;'a'
   234  00FE96  20                 	db	32
   235  00FE97  62                 	db	98	;'b'
   236  00FE98  6F                 	db	111	;'o'
   237  00FE99  79                 	db	121	;'y'
   238  00FE9A  20                 	db	32
   239  00FE9B  41                 	db	65	;'A'
   240  00FE9C  6C                 	db	108	;'l'
   241  00FE9D  69                 	db	105	;'i'
   242  00FE9E  21                 	db	33
   243  00FE9F  00                 	db	0
   244  00FEA0                     STR_21:
   245  00FEA0  49                 	db	73	;'I'
   246  00FEA1  6E                 	db	110	;'n'
   247  00FEA2  64                 	db	100	;'d'
   248  00FEA3  69                 	db	105	;'i'
   249  00FEA4  76                 	db	118	;'v'
   250  00FEA5  69                 	db	105	;'i'
   251  00FEA6  64                 	db	100	;'d'
   252  00FEA7  75                 	db	117	;'u'
   253  00FEA8  61                 	db	97	;'a'
   254  00FEA9  6C                 	db	108	;'l'
   255  00FEAA  20                 	db	32
   256  00FEAB  49                 	db	73	;'I'
   257  00FEAC  6E                 	db	110	;'n'
   258  00FEAD  66                 	db	102	;'f'
   259  00FEAE  6F                 	db	111	;'o'
   260  00FEAF  00                 	db	0
   261  00FEB0                     STR_23:
   262  00FEB0  50                 	db	80	;'P'
   263  00FEB1  72                 	db	114	;'r'
   264  00FEB2  65                 	db	101	;'e'
   265  00FEB3  73                 	db	115	;'s'
   266  00FEB4  73                 	db	115	;'s'
   267  00FEB5  20                 	db	32
   268  00FEB6  30                 	db	48	;'0'
   269  00FEB7  20                 	db	32
   270  00FEB8  74                 	db	116	;'t'
   271  00FEB9  6F                 	db	111	;'o'
   272  00FEBA  20                 	db	32
   273  00FEBB  25                 	db	37
   274  00FEBC  64                 	db	100	;'d'
   275  00FEBD  20                 	db	32
   276  00FEBE  00                 	db	0
   277  00FEBF                     STR_6:
   278  00FEBF  48                 	db	72	;'H'
   279  00FEC0  65                 	db	101	;'e'
   280  00FEC1  20                 	db	32
   281  00FEC2  67                 	db	103	;'g'
   282  00FEC3  65                 	db	101	;'e'
   283  00FEC4  74                 	db	116	;'t'
   284  00FEC5  74                 	db	116	;'t'
   285  00FEC6  69                 	db	105	;'i'
   286  00FEC7  6E                 	db	110	;'n'
   287  00FEC8  20                 	db	32
   288  00FEC9  68                 	db	104	;'h'
   289  00FECA  6F                 	db	111	;'o'
   290  00FECB  74                 	db	116	;'t'
   291  00FECC  20                 	db	32
   292  00FECD  00                 	db	0
   293  00FECE                     STR_14:
   294  00FECE  4F                 	db	79	;'O'
   295  00FECF  70                 	db	112	;'p'
   296  00FED0  65                 	db	101	;'e'
   297  00FED1  72                 	db	114	;'r'
   298  00FED2  61                 	db	97	;'a'
   299  00FED3  74                 	db	116	;'t'
   300  00FED4  69                 	db	105	;'i'
   301  00FED5  6F                 	db	111	;'o'
   302  00FED6  6E                 	db	110	;'n'
   303  00FED7  20                 	db	32
   304  00FED8  54                 	db	84	;'T'
   305  00FED9  69                 	db	105	;'i'
   306  00FEDA  6D                 	db	109	;'m'
   307  00FEDB  65                 	db	101	;'e'
   308  00FEDC  00                 	db	0
   309  00FEDD                     STR_25:
   310  00FEDD  44                 	db	68	;'D'
   311  00FEDE  69                 	db	105	;'i'
   312  00FEDF  73                 	db	115	;'s'
   313  00FEE0  74                 	db	116	;'t'
   314  00FEE1  61                 	db	97	;'a'
   315  00FEE2  6E                 	db	110	;'n'
   316  00FEE3  63                 	db	99	;'c'
   317  00FEE4  65                 	db	101	;'e'
   318  00FEE5  20                 	db	32
   319  00FEE6  25                 	db	37
   320  00FEE7  64                 	db	100	;'d'
   321  00FEE8  20                 	db	32
   322  00FEE9  63                 	db	99	;'c'
   323  00FEEA  6D                 	db	109	;'m'
   324  00FEEB  00                 	db	0
   325  00FEEC                     STR_16:
   326  00FEEC  23                 	db	35
   327  00FEED  20                 	db	32
   328  00FEEE  6F                 	db	111	;'o'
   329  00FEEF  66                 	db	102	;'f'
   330  00FEF0  20                 	db	32
   331  00FEF1  43                 	db	67	;'C'
   332  00FEF2  61                 	db	97	;'a'
   333  00FEF3  6E                 	db	110	;'n'
   334  00FEF4  69                 	db	105	;'i'
   335  00FEF5  73                 	db	115	;'s'
   336  00FEF6  74                 	db	116	;'t'
   337  00FEF7  65                 	db	101	;'e'
   338  00FEF8  72                 	db	114	;'r'
   339  00FEF9  73                 	db	115	;'s'
   340  00FEFA  00                 	db	0
   341  00FEFB                     STR_3:
   342  00FEFB  25                 	db	37
   343  00FEFC  30                 	db	48	;'0'
   344  00FEFD  32                 	db	50	;'2'
   345  00FEFE  78                 	db	120	;'x'
   346  00FEFF  2F                 	db	47
   347  00FF00  25                 	db	37
   348  00FF01  30                 	db	48	;'0'
   349  00FF02  32                 	db	50	;'2'
   350  00FF03  78                 	db	120	;'x'
   351  00FF04  2F                 	db	47
   352  00FF05  25                 	db	37
   353  00FF06  30                 	db	48	;'0'
   354  00FF07  32                 	db	50	;'2'
   355  00FF08  78                 	db	120	;'x'
   356  00FF09  00                 	db	0
   357  00FF0A                     STR_4:
   358  00FF0A  25                 	db	37
   359  00FF0B  30                 	db	48	;'0'
   360  00FF0C  32                 	db	50	;'2'
   361  00FF0D  78                 	db	120	;'x'
   362  00FF0E  3A                 	db	58	;':'
   363  00FF0F  25                 	db	37
   364  00FF10  30                 	db	48	;'0'
   365  00FF11  32                 	db	50	;'2'
   366  00FF12  78                 	db	120	;'x'
   367  00FF13  3A                 	db	58	;':'
   368  00FF14  25                 	db	37
   369  00FF15  30                 	db	48	;'0'
   370  00FF16  32                 	db	50	;'2'
   371  00FF17  78                 	db	120	;'x'
   372  00FF18  00                 	db	0
   373  00FF19                     STR_12:
   374  00FF19  43                 	db	67	;'C'
   375  00FF1A  61                 	db	97	;'a'
   376  00FF1B  6E                 	db	110	;'n'
   377  00FF1C  69                 	db	105	;'i'
   378  00FF1D  73                 	db	115	;'s'
   379  00FF1E  74                 	db	116	;'t'
   380  00FF1F  65                 	db	101	;'e'
   381  00FF20  72                 	db	114	;'r'
   382  00FF21  20                 	db	32
   383  00FF22  49                 	db	73	;'I'
   384  00FF23  6E                 	db	110	;'n'
   385  00FF24  64                 	db	100	;'d'
   386  00FF25  65                 	db	101	;'e'
   387  00FF26  78                 	db	120	;'x'
   388  00FF27  00                 	db	0
   389  00FF28                     STR_29:
   390  00FF28  43                 	db	67	;'C'
   391  00FF29  61                 	db	97	;'a'
   392  00FF2A  6E                 	db	110	;'n'
   393  00FF2B  69                 	db	105	;'i'
   394  00FF2C  73                 	db	115	;'s'
   395  00FF2D  74                 	db	116	;'t'
   396  00FF2E  65                 	db	101	;'e'
   397  00FF2F  72                 	db	114	;'r'
   398  00FF30  20                 	db	32
   399  00FF31  45                 	db	69	;'E'
   400  00FF32  6D                 	db	109	;'m'
   401  00FF33  70                 	db	112	;'p'
   402  00FF34  74                 	db	116	;'t'
   403  00FF35  79                 	db	121	;'y'
   404  00FF36  00                 	db	0
   405  00FF37                     STR_33:
   406  00FF37  4E                 	db	78	;'N'
   407  00FF38  6F                 	db	111	;'o'
   408  00FF39  20                 	db	32
   409  00FF3A  42                 	db	66	;'B'
   410  00FF3B  61                 	db	97	;'a'
   411  00FF3C  6C                 	db	108	;'l'
   412  00FF3D  6C                 	db	108	;'l'
   413  00FF3E  20                 	db	32
   414  00FF3F  41                 	db	65	;'A'
   415  00FF40  64                 	db	100	;'d'
   416  00FF41  64                 	db	100	;'d'
   417  00FF42  65                 	db	101	;'e'
   418  00FF43  64                 	db	100	;'d'
   419  00FF44  00                 	db	0
   420  00FF45                     STR_28:
   421  00FF45  43                 	db	67	;'C'
   422  00FF46  61                 	db	97	;'a'
   423  00FF47  6E                 	db	110	;'n'
   424  00FF48  69                 	db	105	;'i'
   425  00FF49  73                 	db	115	;'s'
   426  00FF4A  74                 	db	116	;'t'
   427  00FF4B  65                 	db	101	;'e'
   428  00FF4C  72                 	db	114	;'r'
   429  00FF4D  20                 	db	32
   430  00FF4E  46                 	db	70	;'F'
   431  00FF4F  75                 	db	117	;'u'
   432  00FF50  6C                 	db	108	;'l'
   433  00FF51  6C                 	db	108	;'l'
   434  00FF52  00                 	db	0
   435  00FF53                     STR_17:
   436  00FF53  25                 	db	37
   437  00FF54  64                 	db	100	;'d'
   438  00FF55  20                 	db	32
   439  00FF56  43                 	db	67	;'C'
   440  00FF57  61                 	db	97	;'a'
   441  00FF58  6E                 	db	110	;'n'
   442  00FF59  69                 	db	105	;'i'
   443  00FF5A  73                 	db	115	;'s'
   444  00FF5B  74                 	db	116	;'t'
   445  00FF5C  65                 	db	101	;'e'
   446  00FF5D  72                 	db	114	;'r'
   447  00FF5E  73                 	db	115	;'s'
   448  00FF5F  00                 	db	0
   449  00FF60                     STR_11:
   450  00FF60  76                 	db	118	;'v'
   451  00FF61  69                 	db	105	;'i'
   452  00FF62  65                 	db	101	;'e'
   453  00FF63  77                 	db	119	;'w'
   454  00FF64  20                 	db	32
   455  00FF65  72                 	db	114	;'r'
   456  00FF66  65                 	db	101	;'e'
   457  00FF67  73                 	db	115	;'s'
   458  00FF68  75                 	db	117	;'u'
   459  00FF69  6C                 	db	108	;'l'
   460  00FF6A  74                 	db	116	;'t'
   461  00FF6B  73                 	db	115	;'s'
   462  00FF6C  00                 	db	0
   463  00FF6D                     STR_13:
   464  00FF6D  73                 	db	115	;'s'
   465  00FF6E  74                 	db	116	;'t'
   466  00FF6F  61                 	db	97	;'a'
   467  00FF70  72                 	db	114	;'r'
   468  00FF71  74                 	db	116	;'t'
   469  00FF72  73                 	db	115	;'s'
   470  00FF73  20                 	db	32
   471  00FF74  61                 	db	97	;'a'
   472  00FF75  74                 	db	116	;'t'
   473  00FF76  20                 	db	32
   474  00FF77  30                 	db	48	;'0'
   475  00FF78  00                 	db	0
   476  00FF79                     STR_24:
   477  00FF79  43                 	db	67	;'C'
   478  00FF7A  61                 	db	97	;'a'
   479  00FF7B  6E                 	db	110	;'n'
   480  00FF7C  73                 	db	115	;'s'
   481  00FF7D  69                 	db	105	;'i'
   482  00FF7E  74                 	db	116	;'t'
   483  00FF7F  65                 	db	101	;'e'
   484  00FF80  72                 	db	114	;'r'
   485  00FF81  20                 	db	32
   486  00FF82  25                 	db	37
   487  00FF83  63                 	db	99	;'c'
   488  00FF84  00                 	db	0
   489  00FF85                     STR_8:
   490  00FF85  41                 	db	65	;'A'
   491  00FF86  6C                 	db	108	;'l'
   492  00FF87  6D                 	db	109	;'m'
   493  00FF88  6F                 	db	111	;'o'
   494  00FF89  73                 	db	115	;'s'
   495  00FF8A  74                 	db	116	;'t'
   496  00FF8B  20                 	db	32
   497  00FF8C  64                 	db	100	;'d'
   498  00FF8D  6F                 	db	111	;'o'
   499  00FF8E  6E                 	db	110	;'n'
   500  00FF8F  65                 	db	101	;'e'
   501  00FF90  00                 	db	0
   502  00FF91                     STR_22:
   503  00FF91  6F                 	db	111	;'o'
   504  00FF92  66                 	db	102	;'f'
   505  00FF93  20                 	db	32
   506  00FF94  43                 	db	67	;'C'
   507  00FF95  61                 	db	97	;'a'
   508  00FF96  6E                 	db	110	;'n'
   509  00FF97  69                 	db	105	;'i'
   510  00FF98  73                 	db	115	;'s'
   511  00FF99  74                 	db	116	;'t'
   512  00FF9A  65                 	db	101	;'e'
   513  00FF9B  72                 	db	114	;'r'
   514  00FF9C  00                 	db	0
   515  00FF9D                     STR_10:
   516  00FF9D  50                 	db	80	;'P'
   517  00FF9E  72                 	db	114	;'r'
   518  00FF9F  65                 	db	101	;'e'
   519  00FFA0  73                 	db	115	;'s'
   520  00FFA1  73                 	db	115	;'s'
   521  00FFA2  20                 	db	32
   522  00FFA3  41                 	db	65	;'A'
   523  00FFA4  20                 	db	32
   524  00FFA5  74                 	db	116	;'t'
   525  00FFA6  6F                 	db	111	;'o'
   526  00FFA7  00                 	db	0
   527  00FFA8                     STR_15:
   528  00FFA8  25                 	db	37
   529  00FFA9  64                 	db	100	;'d'
   530  00FFAA  20                 	db	32
   531  00FFAB  73                 	db	115	;'s'
   532  00FFAC  65                 	db	101	;'e'
   533  00FFAD  63                 	db	99	;'c'
   534  00FFAE  6F                 	db	111	;'o'
   535  00FFAF  6E                 	db	110	;'n'
   536  00FFB0  64                 	db	100	;'d'
   537  00FFB1  73                 	db	115	;'s'
   538  00FFB2  00                 	db	0
   539  00FFB3                     STR_18:
   540  00FFB3  23                 	db	35
   541  00FFB4  20                 	db	32
   542  00FFB5  6F                 	db	111	;'o'
   543  00FFB6  66                 	db	102	;'f'
   544  00FFB7  20                 	db	32
   545  00FFB8  42                 	db	66	;'B'
   546  00FFB9  61                 	db	97	;'a'
   547  00FFBA  6C                 	db	108	;'l'
   548  00FFBB  6C                 	db	108	;'l'
   549  00FFBC  73                 	db	115	;'s'
   550  00FFBD  00                 	db	0
   551  00FFBE                     STR_7:
   552  00FFBE  48                 	db	72	;'H'
   553  00FFBF  69                 	db	105	;'i'
   554  00FFC0  20                 	db	32
   555  00FFC1  43                 	db	67	;'C'
   556  00FFC2  75                 	db	117	;'u'
   557  00FFC3  6C                 	db	108	;'l'
   558  00FFC4  6C                 	db	108	;'l'
   559  00FFC5  20                 	db	32
   560  00FFC6  21                 	db	33
   561  00FFC7  00                 	db	0
   562  00FFC8                     STR_26:
   563  00FFC8  2A                 	db	42
   564  00FFC9  20                 	db	32
   565  00FFCA  74                 	db	116	;'t'
   566  00FFCB  6F                 	db	111	;'o'
   567  00FFCC  20                 	db	32
   568  00FFCD  65                 	db	101	;'e'
   569  00FFCE  78                 	db	120	;'x'
   570  00FFCF  69                 	db	105	;'i'
   571  00FFD0  74                 	db	116	;'t'
   572  00FFD1  00                 	db	0
   573  00FFD2                     STR_9:
   574  00FFD2  41                 	db	65	;'A'
   575  00FFD3  4E                 	db	78	;'N'
   576  00FFD4  44                 	db	68	;'D'
   577  00FFD5  20                 	db	32
   578  00FFD6  44                 	db	68	;'D'
   579  00FFD7  4F                 	db	79	;'O'
   580  00FFD8  4E                 	db	78	;'N'
   581  00FFD9  45                 	db	69	;'E'
   582  00FFDA  00                 	db	0
   583  00FFDB                     STR_19:
   584  00FFDB  73                 	db	115	;'s'
   585  00FFDC  75                 	db	117	;'u'
   586  00FFDD  70                 	db	112	;'p'
   587  00FFDE  70                 	db	112	;'p'
   588  00FFDF  6C                 	db	108	;'l'
   589  00FFE0  69                 	db	105	;'i'
   590  00FFE1  65                 	db	101	;'e'
   591  00FFE2  64                 	db	100	;'d'
   592  00FFE3  00                 	db	0
   593  00FFE4                     STR_20:
   594  00FFE4  25                 	db	37
   595  00FFE5  64                 	db	100	;'d'
   596  00FFE6  20                 	db	32
   597  00FFE7  62                 	db	98	;'b'
   598  00FFE8  61                 	db	97	;'a'
   599  00FFE9  6C                 	db	108	;'l'
   600  00FFEA  6C                 	db	108	;'l'
   601  00FFEB  73                 	db	115	;'s'
   602  00FFEC  00                 	db	0
   603  00FFED                     STR_2:
   604  00FFED  74                 	db	116	;'t'
   605  00FFEE  6F                 	db	111	;'o'
   606  00FFEF  20                 	db	32
   607  00FFF0  73                 	db	115	;'s'
   608  00FFF1  74                 	db	116	;'t'
   609  00FFF2  61                 	db	97	;'a'
   610  00FFF3  72                 	db	114	;'r'
   611  00FFF4  74                 	db	116	;'t'
   612  00FFF5  00                 	db	0
   613  00FFF6                     STR_1:
   614  00FFF6  50                 	db	80	;'P'
   615  00FFF7  72                 	db	114	;'r'
   616  00FFF8  65                 	db	101	;'e'
   617  00FFF9  73                 	db	115	;'s'
   618  00FFFA  73                 	db	115	;'s'
   619  00FFFB  20                 	db	32
   620  00FFFC  41                 	db	65	;'A'
   621  00FFFD  00                 	db	0
   622  0000                     
   623                           ; #config settings
   624  00FFFE  00                 	db	0	; dummy byte at the end
   625  0000                     
   626                           	psect	cinit
   627  00156C                     __pcinit:
   628                           	opt callstack 0
   629  00156C                     start_initialization:
   630                           	opt callstack 0
   631  00156C                     __initialization:
   632                           	opt callstack 0
   633                           
   634                           ; Initialize objects allocated to BANK1 (20 bytes)
   635                           ; load TBLPTR registers with __pidataBANK1
   636  00156C  0EEE               	movlw	low __pidataBANK1
   637  00156E  6EF6               	movwf	tblptrl,c
   638  001570  0E1A               	movlw	high __pidataBANK1
   639  001572  6EF7               	movwf	tblptrh,c
   640  001574  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   641  001576  6EF8               	movwf	tblptru,c
   642  001578  EE01  F017         	lfsr	0,__pdataBANK1
   643  00157C  EE10 F014          	lfsr	1,20
   644  001580                     copy_data0:
   645  001580  0009               	tblrd		*+
   646  001582  CFF5 FFEE          	movff	tablat,postinc0
   647  001586  50E5               	movf	postdec1,w,c
   648  001588  50E1               	movf	fsr1l,w,c
   649  00158A  E1FA               	bnz	copy_data0
   650                           
   651                           ; Initialize objects allocated to BANK0 (44 bytes)
   652                           ; load TBLPTR registers with __pidataBANK0
   653  00158C  0EE6               	movlw	low __pidataBANK0
   654  00158E  6EF6               	movwf	tblptrl,c
   655  001590  0E19               	movlw	high __pidataBANK0
   656  001592  6EF7               	movwf	tblptrh,c
   657  001594  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   658  001596  6EF8               	movwf	tblptru,c
   659  001598  EE00  F080         	lfsr	0,__pdataBANK0
   660  00159C  EE10 F02C          	lfsr	1,44
   661  0015A0                     copy_data1:
   662  0015A0  0009               	tblrd		*+
   663  0015A2  CFF5 FFEE          	movff	tablat,postinc0
   664  0015A6  50E5               	movf	postdec1,w,c
   665  0015A8  50E1               	movf	fsr1l,w,c
   666  0015AA  E1FA               	bnz	copy_data1
   667                           
   668                           ; Initialize objects allocated to COMRAM (2 bytes)
   669                           ; load TBLPTR registers with __pidataCOMRAM
   670  0015AC  0E58               	movlw	low __pidataCOMRAM
   671  0015AE  6EF6               	movwf	tblptrl,c
   672  0015B0  0E1B               	movlw	high __pidataCOMRAM
   673  0015B2  6EF7               	movwf	tblptrh,c
   674  0015B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   675  0015B6  6EF8               	movwf	tblptru,c
   676  0015B8  0009               	tblrd		*+	;fetch initializer
   677  0015BA  CFF5 F06A          	movff	tablat,__pdataCOMRAM
   678  0015BE  0009               	tblrd		*+	;fetch initializer
   679  0015C0  CFF5 F06B          	movff	tablat,__pdataCOMRAM+1
   680                           
   681                           ; Clear objects allocated to BANK0 (37 bytes)
   682  0015C4  EE00  F0AC         	lfsr	0,__pbssBANK0
   683  0015C8  0E25               	movlw	37
   684  0015CA                     clear_0:
   685  0015CA  6AEE               	clrf	postinc0,c
   686  0015CC  06E8               	decf	wreg,f,c
   687  0015CE  E1FD               	bnz	clear_0
   688                           
   689                           ; Clear objects allocated to COMRAM (6 bytes)
   690  0015D0  6A69               	clrf	(__pbssCOMRAM+5)& (0+255),c
   691  0015D2  6A68               	clrf	(__pbssCOMRAM+4)& (0+255),c
   692  0015D4  6A67               	clrf	(__pbssCOMRAM+3)& (0+255),c
   693  0015D6  6A66               	clrf	(__pbssCOMRAM+2)& (0+255),c
   694  0015D8  6A65               	clrf	(__pbssCOMRAM+1)& (0+255),c
   695  0015DA  6A64               	clrf	__pbssCOMRAM& (0+255),c
   696  0015DC                     end_of_initialization:
   697                           	opt callstack 0
   698  0015DC                     __end_of__initialization:
   699                           	opt callstack 0
   700  0015DC  906C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   701  0015DE  926C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   702  0015E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   703  0015E2  6EF8               	movwf	tblptru,c
   704  0015E4  0100               	movlb	0
   705  0015E6  EF09  F000         	goto	_main	;jump to C main() function
   706                           
   707                           	psect	bssCOMRAM
   708  000064                     __pbssCOMRAM:
   709                           	opt callstack 0
   710  000064                     _width:
   711                           	opt callstack 0
   712  000064                     	ds	2
   713  000066                     _prec:
   714                           	opt callstack 0
   715  000066                     	ds	2
   716  000068                     _flags:
   717                           	opt callstack 0
   718  000068                     	ds	2
   719                           
   720                           	psect	dataCOMRAM
   721  00006A                     __pdataCOMRAM:
   722                           	opt callstack 0
   723  00006A                     _time:
   724                           	opt callstack 0
   725  00006A                     	ds	2
   726                           
   727                           	psect	bssBANK0
   728  0000AC                     __pbssBANK0:
   729                           	opt callstack 0
   730  0000AC                     _nout:
   731                           	opt callstack 0
   732  0000AC                     	ds	2
   733  0000AE                     _start:
   734                           	opt callstack 0
   735  0000AE                     	ds	1
   736  0000AF                     _exit_key:
   737                           	opt callstack 0
   738  0000AF                     	ds	1
   739  0000B0                     _key_was_pressed:
   740                           	opt callstack 0
   741  0000B0                     	ds	1
   742  0000B1                     _dbuf:
   743                           	opt callstack 0
   744  0000B1                     	ds	32
   745                           
   746                           	psect	dataBANK0
   747  000080                     __pdataBANK0:
   748                           	opt callstack 0
   749  000080                     _DistanceCanister:
   750                           	opt callstack 0
   751  000080                     	ds	20
   752  000094                     _State:
   753                           	opt callstack 0
   754  000094                     	ds	20
   755  0000A8                     _balls:
   756                           	opt callstack 0
   757  0000A8                     	ds	2
   758  0000AA                     _Canister:
   759                           	opt callstack 0
   760  0000AA                     	ds	2
   761                           
   762                           	psect	dataBANK1
   763  000117                     __pdataBANK1:
   764                           	opt callstack 0
   765  000117                     _BallDispensed:
   766                           	opt callstack 0
   767  000117                     	ds	20
   768                           
   769                           	psect	cstackBANK1
   770  000100                     __pcstackBANK1:
   771                           	opt callstack 0
   772  000100                     main@time:
   773                           	opt callstack 0
   774                           
   775                           ; 7 bytes @ 0x0
   776  000100                     	ds	7
   777  000107                     main@tick:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x7
   781  000107                     	ds	2
   782  000109                     main@miniTick:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x9
   786  000109                     	ds	2
   787  00010B                     main@number_pressed:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0xB
   791  00010B                     	ds	2
   792  00010D                     main@i:
   793                           	opt callstack 0
   794                           
   795                           ; 1 bytes @ 0xD
   796  00010D                     	ds	1
   797  00010E                     main@miniClear:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0xE
   801  00010E                     	ds	2
   802  000110                     main@keypress:
   803                           	opt callstack 0
   804                           
   805                           ; 1 bytes @ 0x10
   806  000110                     	ds	1
   807  000111                     main@miniState:
   808                           	opt callstack 0
   809                           
   810                           ; 2 bytes @ 0x11
   811  000111                     	ds	2
   812  000113                     main@clear:
   813                           	opt callstack 0
   814                           
   815                           ; 2 bytes @ 0x13
   816  000113                     	ds	2
   817  000115                     main@state:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x15
   821  000115                     	ds	2
   822                           
   823                           	psect	cstackBANK0
   824  0000D1                     __pcstackBANK0:
   825                           	opt callstack 0
   826  0000D1                     vfpfcnvrt@ll:
   827                           	opt callstack 0
   828                           
   829                           ; 8 bytes @ 0x0
   830  0000D1                     	ds	8
   831  0000D9                     vfpfcnvrt@llu:
   832                           	opt callstack 0
   833                           
   834                           ; 8 bytes @ 0x8
   835  0000D9                     	ds	8
   836  0000E1                     vfpfcnvrt@done:
   837                           	opt callstack 0
   838                           
   839                           ; 2 bytes @ 0x10
   840  0000E1                     	ds	2
   841  0000E3                     _vfpfcnvrt$537:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x12
   845  0000E3                     	ds	2
   846  0000E5                     vfpfcnvrt@c:
   847                           	opt callstack 0
   848                           
   849                           ; 1 bytes @ 0x14
   850  0000E5                     	ds	1
   851  0000E6                     ?_vfprintf:
   852                           	opt callstack 0
   853  0000E6                     vfprintf@fp:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x15
   857  0000E6                     	ds	2
   858  0000E8                     vfprintf@fmt:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x17
   862  0000E8                     	ds	2
   863  0000EA                     vfprintf@ap:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x19
   867  0000EA                     	ds	2
   868  0000EC                     ?_printf:
   869                           	opt callstack 0
   870  0000EC                     printf@fmt:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x1B
   874  0000EC                     	ds	8
   875                           
   876                           	psect	cstackCOMRAM
   877  000001                     __pcstackCOMRAM:
   878                           	opt callstack 0
   879  000001                     ??_interruptHandler:
   880  000001                     
   881                           ; 1 bytes @ 0x0
   882  000001                     	ds	8
   883  000009                     interruptHandler@i:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x8
   887  000009                     	ds	2
   888  00000B                     interruptHandler@keypress:
   889                           	opt callstack 0
   890                           
   891                           ; 1 bytes @ 0xA
   892  00000B                     	ds	1
   893  00000C                     ??_I2C_Master_Wait:
   894  00000C                     ?_strlen:
   895                           	opt callstack 0
   896  00000C                     ?_isupper:
   897                           	opt callstack 0
   898  00000C                     ?_isalpha:
   899                           	opt callstack 0
   900  00000C                     ?_isdigit:
   901                           	opt callstack 0
   902  00000C                     ?_isspace:
   903                           	opt callstack 0
   904  00000C                     ?_islower:
   905                           	opt callstack 0
   906  00000C                     ?___wmul:
   907                           	opt callstack 0
   908  00000C                     ?___awmod:
   909                           	opt callstack 0
   910  00000C                     ?___lldiv:
   911                           	opt callstack 0
   912  00000C                     ?___aodiv:
   913                           	opt callstack 0
   914  00000C                     ?___aomod:
   915                           	opt callstack 0
   916  00000C                     pulse_e@interruptState:
   917                           	opt callstack 0
   918  00000C                     ___wmul@multiplier:
   919                           	opt callstack 0
   920  00000C                     ___awmod@dividend:
   921                           	opt callstack 0
   922  00000C                     isalpha@c:
   923                           	opt callstack 0
   924  00000C                     isdigit@c:
   925                           	opt callstack 0
   926  00000C                     isspace@c:
   927                           	opt callstack 0
   928  00000C                     isupper@c:
   929                           	opt callstack 0
   930  00000C                     strlen@s:
   931                           	opt callstack 0
   932  00000C                     islower@c:
   933                           	opt callstack 0
   934  00000C                     ___lldiv@dividend:
   935                           	opt callstack 0
   936  00000C                     ___aodiv@dividend:
   937                           	opt callstack 0
   938  00000C                     ___aomod@dividend:
   939                           	opt callstack 0
   940                           
   941                           ; 8 bytes @ 0xB
   942  00000C                     	ds	1
   943  00000D                     send_nibble@data:
   944                           	opt callstack 0
   945  00000D                     I2C_Master_Read@ackBit:
   946                           	opt callstack 0
   947  00000D                     I2C_Master_Write@byteToWrite:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0xC
   951  00000D                     	ds	1
   952  00000E                     ??_isupper:
   953  00000E                     ??_isalpha:
   954  00000E                     ??_isdigit:
   955  00000E                     ??_isspace:
   956  00000E                     ??_islower:
   957  00000E                     send_byte@data:
   958                           	opt callstack 0
   959  00000E                     I2C_Master_Read@receivedByte:
   960                           	opt callstack 0
   961  00000E                     ___wmul@multiplicand:
   962                           	opt callstack 0
   963  00000E                     ___awmod@divisor:
   964                           	opt callstack 0
   965  00000E                     strlen@a:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0xD
   969  00000E                     	ds	1
   970  00000F                     lcdInst@data:
   971                           	opt callstack 0
   972  00000F                     putch@data:
   973                           	opt callstack 0
   974                           
   975                           ; 1 bytes @ 0xE
   976  00000F                     	ds	1
   977  000010                     ??_initLCD:
   978  000010                     ___awmod@counter:
   979                           	opt callstack 0
   980  000010                     ___wmul@product:
   981                           	opt callstack 0
   982  000010                     fputc@c:
   983                           	opt callstack 0
   984  000010                     ___lldiv@divisor:
   985                           	opt callstack 0
   986                           
   987                           ; 4 bytes @ 0xF
   988  000010                     	ds	1
   989  000011                     ___awmod@sign:
   990                           	opt callstack 0
   991                           
   992                           ; 1 bytes @ 0x10
   993  000011                     	ds	1
   994  000012                     ?_toupper:
   995                           	opt callstack 0
   996  000012                     _isspace$1023:
   997                           	opt callstack 0
   998  000012                     fputc@fp:
   999                           	opt callstack 0
  1000  000012                     toupper@c:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x11
  1004  000012                     	ds	1
  1005  000013                     ?_atoi:
  1006                           	opt callstack 0
  1007  000013                     atoi@s:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x12
  1011  000013                     	ds	1
  1012  000014                     ??_fputc:
  1013  000014                     ??_toupper:
  1014  000014                     ___lldiv@quotient:
  1015                           	opt callstack 0
  1016  000014                     ___aodiv@divisor:
  1017                           	opt callstack 0
  1018  000014                     ___aomod@divisor:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 8 bytes @ 0x13
  1022  000014                     	ds	1
  1023  000015                     ??_atoi:
  1024                           
  1025                           ; 1 bytes @ 0x14
  1026  000015                     	ds	3
  1027  000018                     ___lldiv@counter:
  1028                           	opt callstack 0
  1029  000018                     _toupper$1088:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x17
  1033  000018                     	ds	1
  1034  000019                     atoi@neg:
  1035                           	opt callstack 0
  1036  000019                     fputs@s:
  1037                           	opt callstack 0
  1038  000019                     I2C_Master_Init@clockFreq:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x18
  1042  000019                     	ds	2
  1043  00001B                     _atoi$996:
  1044                           	opt callstack 0
  1045  00001B                     fputs@fp:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x1A
  1049  00001B                     	ds	1
  1050  00001C                     ___aodiv@counter:
  1051                           	opt callstack 0
  1052  00001C                     ___aomod@counter:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x1B
  1056  00001C                     	ds	1
  1057  00001D                     ??_I2C_Master_Init:
  1058  00001D                     ___aodiv@sign:
  1059                           	opt callstack 0
  1060  00001D                     ___aomod@sign:
  1061                           	opt callstack 0
  1062  00001D                     fputs@c:
  1063                           	opt callstack 0
  1064  00001D                     _atoi$998:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x1C
  1068  00001D                     	ds	1
  1069  00001E                     ?_abs:
  1070                           	opt callstack 0
  1071  00001E                     abs@a:
  1072                           	opt callstack 0
  1073  00001E                     fputs@i:
  1074                           	opt callstack 0
  1075  00001E                     ___aodiv@quotient:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 8 bytes @ 0x1D
  1079  00001E                     	ds	1
  1080  00001F                     _atoi$997:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x1E
  1084  00001F                     	ds	1
  1085  000020                     ??_abs:
  1086  000020                     ?_pad:
  1087                           	opt callstack 0
  1088  000020                     pad@fp:
  1089                           	opt callstack 0
  1090  000020                     atoi@n:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x1F
  1094  000020                     	ds	2
  1095  000022                     pad@buf:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x21
  1099  000022                     	ds	2
  1100  000024                     pad@p:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x23
  1104  000024                     	ds	2
  1105  000026                     ??_pad:
  1106                           
  1107                           ; 1 bytes @ 0x25
  1108  000026                     	ds	1
  1109  000027                     pad@i:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x26
  1113  000027                     	ds	2
  1114  000029                     pad@w:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x28
  1118  000029                     	ds	2
  1119  00002B                     ?_ctoa:
  1120                           	opt callstack 0
  1121  00002B                     ?_dtoa:
  1122                           	opt callstack 0
  1123  00002B                     ?_xtoa:
  1124                           	opt callstack 0
  1125  00002B                     ctoa@fp:
  1126                           	opt callstack 0
  1127  00002B                     dtoa@fp:
  1128                           	opt callstack 0
  1129  00002B                     xtoa@fp:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x2A
  1133  00002B                     	ds	2
  1134  00002D                     ctoa@c:
  1135                           	opt callstack 0
  1136  00002D                     dtoa@d:
  1137                           	opt callstack 0
  1138  00002D                     xtoa@d:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 8 bytes @ 0x2C
  1142  00002D                     	ds	1
  1143  00002E                     ctoa@w:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x2D
  1147  00002E                     	ds	7
  1148  000035                     ??_dtoa:
  1149  000035                     xtoa@x:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x34
  1153  000035                     	ds	1
  1154  000036                     ??_xtoa:
  1155                           
  1156                           ; 1 bytes @ 0x35
  1157  000036                     	ds	7
  1158  00003D                     _dtoa$512:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x3C
  1162  00003D                     	ds	1
  1163  00003E                     _xtoa$522:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x3D
  1167  00003E                     	ds	1
  1168  00003F                     dtoa@p:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x3E
  1172  00003F                     	ds	1
  1173  000040                     _xtoa$523:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x3F
  1177  000040                     	ds	1
  1178  000041                     dtoa@w:
  1179                           	opt callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x40
  1182  000041                     	ds	1
  1183  000042                     xtoa@p:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x41
  1187  000042                     	ds	1
  1188  000043                     dtoa@s:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x42
  1192  000043                     	ds	1
  1193  000044                     xtoa@w:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x43
  1197  000044                     	ds	1
  1198  000045                     dtoa@n:
  1199                           	opt callstack 0
  1200                           
  1201                           ; 8 bytes @ 0x44
  1202  000045                     	ds	1
  1203  000046                     xtoa@n:
  1204                           	opt callstack 0
  1205                           
  1206                           ; 8 bytes @ 0x45
  1207  000046                     	ds	7
  1208  00004D                     dtoa@i:
  1209                           	opt callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x4C
  1212  00004D                     	ds	1
  1213  00004E                     xtoa@i:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x4D
  1217  00004E                     	ds	2
  1218  000050                     xtoa@c:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x4F
  1222  000050                     	ds	2
  1223  000052                     ?_vfpfcnvrt:
  1224                           	opt callstack 0
  1225  000052                     vfpfcnvrt@fp:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x51
  1229  000052                     	ds	2
  1230  000054                     vfpfcnvrt@fmt:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x53
  1234  000054                     	ds	2
  1235  000056                     vfpfcnvrt@ap:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x55
  1239  000056                     	ds	2
  1240  000058                     ??_vfpfcnvrt:
  1241                           
  1242                           ; 1 bytes @ 0x57
  1243  000058                     	ds	4
  1244  00005C                     vfprintf@cfmt:
  1245                           	opt callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x5B
  1248  00005C                     	ds	2
  1249  00005E                     
  1250                           ; 1 bytes @ 0x5D
  1251  00005E                     	ds	2
  1252  000060                     printf@ap:
  1253                           	opt callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x5F
  1256  000060                     	ds	2
  1257  000062                     ??_main:
  1258                           
  1259                           ; 1 bytes @ 0x61
  1260  000062                     	ds	2
  1261                           
  1262 ;;
  1263 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1264 ;;
  1265 ;; *************** function _main *****************
  1266 ;; Defined at:
  1267 ;;		line 48 in file "main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  miniState       2   17[BANK1 ] int 
  1272 ;;  miniClear       2   14[BANK1 ] int 
  1273 ;;  number_press    2   11[BANK1 ] int 
  1274 ;;  miniTick        2    9[BANK1 ] int 
  1275 ;;  keypress        1   16[BANK1 ] unsigned char 
  1276 ;;  i               1   13[BANK1 ] unsigned char 
  1277 ;;  time            7    0[BANK1 ] unsigned char [7]
  1278 ;;  state           2   21[BANK1 ] int 
  1279 ;;  clear           2   19[BANK1 ] int 
  1280 ;;  tick            2    7[BANK1 ] int 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Totals:         2       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;Total ram usage:       25 bytes
  1295 ;; Hardware stack levels required when called:   12
  1296 ;; This function calls:
  1297 ;;		_I2C_Master_Init
  1298 ;;		_I2C_Master_Read
  1299 ;;		_I2C_Master_Start
  1300 ;;		_I2C_Master_Stop
  1301 ;;		_I2C_Master_Write
  1302 ;;		___awmod
  1303 ;;		_initLCD
  1304 ;;		_lcdInst
  1305 ;;		_printf
  1306 ;; This function is called by:
  1307 ;;		Startup code after reset
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text0
  1312  000012                     __ptext0:
  1313                           	opt callstack 0
  1314  000012                     _main:
  1315                           	opt callstack 19
  1316                           
  1317                           ;main.c: 52:     LATD = 0x00;
  1318                           
  1319                           ;incstack = 0
  1320  000012  0E00               	movlw	0
  1321  000014  6E8C               	movwf	3980,c	;volatile
  1322                           
  1323                           ;main.c: 53:     TRISD = 0x00;
  1324  000016  0E00               	movlw	0
  1325  000018  6E95               	movwf	3989,c	;volatile
  1326                           
  1327                           ;main.c: 56:     ADCON1 = 0b00001111;
  1328  00001A  0E0F               	movlw	15
  1329  00001C  6EC1               	movwf	4033,c	;volatile
  1330                           
  1331                           ;main.c: 59:     INT1IE = 1;
  1332  00001E  86F0               	bsf	4080,3,c	;volatile
  1333                           
  1334                           ;main.c: 62:     initLCD();
  1335  000020  EC63  F00B         	call	_initLCD	;wreg free
  1336                           
  1337                           ;main.c: 65:     (INTCONbits.GIE = 1);
  1338  000024  8EF2               	bsf	4082,7,c	;volatile
  1339                           
  1340                           ;main.c: 68:     I2C_Master_Init(100000);
  1341  000026  0EA0               	movlw	160
  1342  000028  6E19               	movwf	I2C_Master_Init@clockFreq,c
  1343  00002A  0E86               	movlw	134
  1344  00002C  6E1A               	movwf	I2C_Master_Init@clockFreq+1,c
  1345  00002E  0E01               	movlw	1
  1346  000030  6E1B               	movwf	I2C_Master_Init@clockFreq+2,c
  1347  000032  0E00               	movlw	0
  1348  000034  6E1C               	movwf	I2C_Master_Init@clockFreq+3,c
  1349  000036  EC98  F00B         	call	_I2C_Master_Init	;wreg free
  1350                           
  1351                           ;main.c: 70:     unsigned char time[7];;main.c: 74:     int state = 0;
  1352  00003A  0E00               	movlw	0
  1353  00003C  0101               	movlb	1	; () banked
  1354  00003E  6F16               	movwf	(main@state+1)& (0+255),b
  1355  000040  0E00               	movlw	0
  1356  000042  6F15               	movwf	main@state& (0+255),b
  1357                           
  1358                           ;main.c: 75:     int tick = 0;
  1359  000044  0E00               	movlw	0
  1360  000046  6F08               	movwf	(main@tick+1)& (0+255),b
  1361  000048  0E00               	movlw	0
  1362  00004A  6F07               	movwf	main@tick& (0+255),b
  1363                           
  1364                           ;main.c: 76:     int clear = 1;
  1365  00004C  0E00               	movlw	0
  1366  00004E  6F14               	movwf	(main@clear+1)& (0+255),b
  1367  000050  0E01               	movlw	1
  1368  000052  6F13               	movwf	main@clear& (0+255),b
  1369                           
  1370                           ; BSR set to: 1
  1371                           ;main.c: 81:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  1372  000054  0E0C               	movlw	12
  1373  000056  EC99  F00D         	call	_lcdInst
  1374                           
  1375                           ;main.c: 82:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1376  00005A  0E01               	movlw	1
  1377  00005C  EC99  F00D         	call	_lcdInst
  1378  000060  0E11               	movlw	17
  1379  000062  6E62               	movwf	??_main& (0+255),c
  1380  000064  0E3A               	movlw	58
  1381  000066                     u4077:
  1382  000066  2EE8               	decfsz	wreg,f,c
  1383  000068  D7FE               	bra	u4077
  1384  00006A  2E62               	decfsz	??_main& (0+255),f,c
  1385  00006C  D7FC               	bra	u4077
  1386  00006E  D000               	nop2	
  1387                           
  1388                           ;main.c: 83:     printf("Press A");
  1389  000070  0EF6               	movlw	low STR_1
  1390  000072  0100               	movlb	0	; () banked
  1391  000074  6FEC               	movwf	printf@fmt& (0+255),b
  1392  000076  0EFF               	movlw	high STR_1
  1393  000078  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1394  00007A  EC33  F00D         	call	_printf	;wreg free
  1395  00007E  0EC0               	movlw	192
  1396  000080  EC99  F00D         	call	_lcdInst
  1397                           
  1398                           ;main.c: 85:     printf("to start");
  1399  000084  0EED               	movlw	low STR_2
  1400  000086  0100               	movlb	0	; () banked
  1401  000088  6FEC               	movwf	printf@fmt& (0+255),b
  1402  00008A  0EFF               	movlw	high STR_2
  1403  00008C  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1404  00008E  EC33  F00D         	call	_printf	;wreg free
  1405                           
  1406                           ;main.c: 93:     while (!start) {
  1407  000092  D063               	goto	l3945
  1408  000094                     l3923:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;main.c: 94:         I2C_Master_Start();
  1412  000094  ECA8  F00D         	call	_I2C_Master_Start	;wreg free
  1413                           
  1414                           ;main.c: 95:         I2C_Master_Write(0b11010000);
  1415  000098  0E00               	movlw	0
  1416  00009A  6E0E               	movwf	I2C_Master_Write@byteToWrite+1,c
  1417  00009C  0ED0               	movlw	208
  1418  00009E  6E0D               	movwf	I2C_Master_Write@byteToWrite,c
  1419  0000A0  EC9F  F00D         	call	_I2C_Master_Write	;wreg free
  1420                           
  1421                           ;main.c: 96:         I2C_Master_Write(0x00);
  1422  0000A4  0E00               	movlw	0
  1423  0000A6  6E0E               	movwf	I2C_Master_Write@byteToWrite+1,c
  1424  0000A8  0E00               	movlw	0
  1425  0000AA  6E0D               	movwf	I2C_Master_Write@byteToWrite,c
  1426  0000AC  EC9F  F00D         	call	_I2C_Master_Write	;wreg free
  1427                           
  1428                           ;main.c: 97:         I2C_Master_Stop();
  1429  0000B0  ECA4  F00D         	call	_I2C_Master_Stop	;wreg free
  1430                           
  1431                           ;main.c: 100:         I2C_Master_Start();
  1432  0000B4  ECA8  F00D         	call	_I2C_Master_Start	;wreg free
  1433                           
  1434                           ;main.c: 101:         I2C_Master_Write(0b11010001);
  1435  0000B8  0E00               	movlw	0
  1436  0000BA  6E0E               	movwf	I2C_Master_Write@byteToWrite+1,c
  1437  0000BC  0ED1               	movlw	209
  1438  0000BE  6E0D               	movwf	I2C_Master_Write@byteToWrite,c
  1439  0000C0  EC9F  F00D         	call	_I2C_Master_Write	;wreg free
  1440                           
  1441                           ;main.c: 102:         for(unsigned char i = 0; i < 6; i++){
  1442  0000C4  0E00               	movlw	0
  1443  0000C6  0101               	movlb	1	; () banked
  1444  0000C8  6F0D               	movwf	main@i& (0+255),b
  1445  0000CA                     l3931:
  1446                           
  1447                           ; BSR set to: 1
  1448                           ;main.c: 103:             time[i] = I2C_Master_Read(0);
  1449  0000CA  0E00               	movlw	low main@time
  1450  0000CC  250D               	addwf	main@i& (0+255),w,b
  1451  0000CE  6ED9               	movwf	fsr2l,c
  1452  0000D0  6ADA               	clrf	fsr2h,c
  1453  0000D2  0E01               	movlw	high main@time
  1454  0000D4  22DA               	addwfc	fsr2h,f,c
  1455  0000D6  0E00               	movlw	0
  1456  0000D8  EC5A  F00D         	call	_I2C_Master_Read
  1457  0000DC  6EDF               	movwf	indf2,c
  1458                           
  1459                           ;main.c: 104:         }
  1460  0000DE  0101               	movlb	1	; () banked
  1461  0000E0  2B0D               	incf	main@i& (0+255),f,b
  1462                           
  1463                           ; BSR set to: 1
  1464  0000E2  0E05               	movlw	5
  1465  0000E4  650D               	cpfsgt	main@i& (0+255),b
  1466  0000E6  D7F1               	goto	l3931
  1467                           
  1468                           ; BSR set to: 1
  1469                           ;main.c: 105:         time[6] = I2C_Master_Read(1);
  1470  0000E8  0E01               	movlw	1
  1471  0000EA  EC5A  F00D         	call	_I2C_Master_Read
  1472  0000EE  0101               	movlb	1	; () banked
  1473  0000F0  6F06               	movwf	(main@time+6)& (0+255),b
  1474                           
  1475                           ;main.c: 106:         I2C_Master_Stop();
  1476  0000F2  ECA4  F00D         	call	_I2C_Master_Stop	;wreg free
  1477  0000F6  0E90               	movlw	144
  1478  0000F8  EC99  F00D         	call	_lcdInst
  1479                           
  1480                           ;main.c: 110:         printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  1481  0000FC  0EFB               	movlw	low STR_3
  1482  0000FE  0100               	movlb	0	; () banked
  1483  000100  6FEC               	movwf	printf@fmt& (0+255),b
  1484  000102  0EFE               	movlw	high STR_3
  1485  000104  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1486  000106  C106  F0EE         	movff	main@time+6,?_printf+2
  1487  00010A  6BEF               	clrf	(?_printf+3)& (0+255),b
  1488  00010C  C105  F0F0         	movff	main@time+5,?_printf+4
  1489  000110  6BF1               	clrf	(?_printf+5)& (0+255),b
  1490  000112  C104  F0F2         	movff	main@time+4,?_printf+6
  1491  000116  6BF3               	clrf	(?_printf+7)& (0+255),b
  1492  000118  EC33  F00D         	call	_printf	;wreg free
  1493  00011C  0ED0               	movlw	208
  1494  00011E  EC99  F00D         	call	_lcdInst
  1495                           
  1496                           ;main.c: 112:         printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1497  000122  0E0A               	movlw	low STR_4
  1498  000124  0100               	movlb	0	; () banked
  1499  000126  6FEC               	movwf	printf@fmt& (0+255),b
  1500  000128  0EFF               	movlw	high STR_4
  1501  00012A  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1502  00012C  C102  F0EE         	movff	main@time+2,?_printf+2
  1503  000130  6BEF               	clrf	(?_printf+3)& (0+255),b
  1504  000132  C101  F0F0         	movff	main@time+1,?_printf+4
  1505  000136  6BF1               	clrf	(?_printf+5)& (0+255),b
  1506  000138  C100  F0F2         	movff	main@time,?_printf+6
  1507  00013C  6BF3               	clrf	(?_printf+7)& (0+255),b
  1508  00013E  EC33  F00D         	call	_printf	;wreg free
  1509                           
  1510                           ;main.c: 113:         _delay((unsigned long)((1000)*(10000000/4000.0)));
  1511  000142  0E0D               	movlw	13
  1512  000144  6E63               	movwf	(??_main+1)& (0+255),c
  1513  000146  0EAF               	movlw	175
  1514  000148  6E62               	movwf	??_main& (0+255),c
  1515  00014A  0EB6               	movlw	182
  1516  00014C                     u4087:
  1517  00014C  2EE8               	decfsz	wreg,f,c
  1518  00014E  D7FE               	bra	u4087
  1519  000150  2E62               	decfsz	??_main& (0+255),f,c
  1520  000152  D7FC               	bra	u4087
  1521  000154  2E63               	decfsz	(??_main+1)& (0+255),f,c
  1522  000156  D7FA               	bra	u4087
  1523  000158  D000               	nop2	
  1524  00015A                     l3945:
  1525                           
  1526                           ;main.c: 93:     while (!start) {
  1527  00015A  0100               	movlb	0	; () banked
  1528  00015C  51AE               	movf	_start& (0+255),w,b	;volatile
  1529  00015E  B4D8               	btfsc	status,2,c
  1530  000160  D799               	goto	l3923
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 118:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1534  000162  0E01               	movlw	1
  1535  000164  EC99  F00D         	call	_lcdInst
  1536  000168  0E11               	movlw	17
  1537  00016A  6E62               	movwf	??_main& (0+255),c
  1538  00016C  0E3A               	movlw	58
  1539  00016E                     u4097:
  1540  00016E  2EE8               	decfsz	wreg,f,c
  1541  000170  D7FE               	bra	u4097
  1542  000172  2E62               	decfsz	??_main& (0+255),f,c
  1543  000174  D7FC               	bra	u4097
  1544  000176  D000               	nop2	
  1545                           
  1546                           ;main.c: 119:     printf("It's ya boy Ali!");
  1547  000178  0E8F               	movlw	low STR_5
  1548  00017A  0100               	movlb	0	; () banked
  1549  00017C  6FEC               	movwf	printf@fmt& (0+255),b
  1550  00017E  0EFE               	movlw	high STR_5
  1551  000180  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1552  000182  EC33  F00D         	call	_printf	;wreg free
  1553                           
  1554                           ;main.c: 120:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1555  000186  0E33               	movlw	51
  1556  000188  6E63               	movwf	(??_main+1)& (0+255),c
  1557  00018A  0EBB               	movlw	187
  1558  00018C  6E62               	movwf	??_main& (0+255),c
  1559  00018E  0EE0               	movlw	224
  1560  000190                     u4107:
  1561  000190  2EE8               	decfsz	wreg,f,c
  1562  000192  D7FE               	bra	u4107
  1563  000194  2E62               	decfsz	??_main& (0+255),f,c
  1564  000196  D7FC               	bra	u4107
  1565  000198  2E63               	decfsz	(??_main+1)& (0+255),f,c
  1566  00019A  D7FA               	bra	u4107
  1567  00019C  0E90               	movlw	144
  1568  00019E  EC99  F00D         	call	_lcdInst
  1569                           
  1570                           ;main.c: 122:     printf("He gettin hot ");
  1571  0001A2  0EBF               	movlw	low STR_6
  1572  0001A4  0100               	movlb	0	; () banked
  1573  0001A6  6FEC               	movwf	printf@fmt& (0+255),b
  1574  0001A8  0EFE               	movlw	high STR_6
  1575  0001AA  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1576  0001AC  EC33  F00D         	call	_printf	;wreg free
  1577                           
  1578                           ;main.c: 123:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1579  0001B0  0E33               	movlw	51
  1580  0001B2  6E63               	movwf	(??_main+1)& (0+255),c
  1581  0001B4  0EBB               	movlw	187
  1582  0001B6  6E62               	movwf	??_main& (0+255),c
  1583  0001B8  0EE0               	movlw	224
  1584  0001BA                     u4117:
  1585  0001BA  2EE8               	decfsz	wreg,f,c
  1586  0001BC  D7FE               	bra	u4117
  1587  0001BE  2E62               	decfsz	??_main& (0+255),f,c
  1588  0001C0  D7FC               	bra	u4117
  1589  0001C2  2E63               	decfsz	(??_main+1)& (0+255),f,c
  1590  0001C4  D7FA               	bra	u4117
  1591                           
  1592                           ;main.c: 125:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1593  0001C6  0E01               	movlw	1
  1594  0001C8  EC99  F00D         	call	_lcdInst
  1595  0001CC  0E11               	movlw	17
  1596  0001CE  6E62               	movwf	??_main& (0+255),c
  1597  0001D0  0E3A               	movlw	58
  1598  0001D2                     u4127:
  1599  0001D2  2EE8               	decfsz	wreg,f,c
  1600  0001D4  D7FE               	bra	u4127
  1601  0001D6  2E62               	decfsz	??_main& (0+255),f,c
  1602  0001D8  D7FC               	bra	u4127
  1603  0001DA  D000               	nop2	
  1604                           
  1605                           ;main.c: 126:     printf("Hi Cull !");
  1606  0001DC  0EBE               	movlw	low STR_7
  1607  0001DE  0100               	movlb	0	; () banked
  1608  0001E0  6FEC               	movwf	printf@fmt& (0+255),b
  1609  0001E2  0EFF               	movlw	high STR_7
  1610  0001E4  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1611  0001E6  EC33  F00D         	call	_printf	;wreg free
  1612                           
  1613                           ;main.c: 127:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1614  0001EA  0E33               	movlw	51
  1615  0001EC  6E63               	movwf	(??_main+1)& (0+255),c
  1616  0001EE  0EBB               	movlw	187
  1617  0001F0  6E62               	movwf	??_main& (0+255),c
  1618  0001F2  0EE0               	movlw	224
  1619  0001F4                     u4137:
  1620  0001F4  2EE8               	decfsz	wreg,f,c
  1621  0001F6  D7FE               	bra	u4137
  1622  0001F8  2E62               	decfsz	??_main& (0+255),f,c
  1623  0001FA  D7FC               	bra	u4137
  1624  0001FC  2E63               	decfsz	(??_main+1)& (0+255),f,c
  1625  0001FE  D7FA               	bra	u4137
  1626  000200  0E90               	movlw	144
  1627  000202  EC99  F00D         	call	_lcdInst
  1628                           
  1629                           ;main.c: 129:     printf("Almost done");
  1630  000206  0E85               	movlw	low STR_8
  1631  000208  0100               	movlb	0	; () banked
  1632  00020A  6FEC               	movwf	printf@fmt& (0+255),b
  1633  00020C  0EFF               	movlw	high STR_8
  1634  00020E  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1635  000210  EC33  F00D         	call	_printf	;wreg free
  1636  000214  0ED0               	movlw	208
  1637  000216  EC99  F00D         	call	_lcdInst
  1638                           
  1639                           ;main.c: 131:     _delay((unsigned long)((2000)*(10000000/4000.0)));
  1640  00021A  0E1A               	movlw	26
  1641  00021C  6E63               	movwf	(??_main+1)& (0+255),c
  1642  00021E  0E5E               	movlw	94
  1643  000220  6E62               	movwf	??_main& (0+255),c
  1644  000222  0E6E               	movlw	110
  1645  000224                     u4147:
  1646  000224  2EE8               	decfsz	wreg,f,c
  1647  000226  D7FE               	bra	u4147
  1648  000228  2E62               	decfsz	??_main& (0+255),f,c
  1649  00022A  D7FC               	bra	u4147
  1650  00022C  2E63               	decfsz	(??_main+1)& (0+255),f,c
  1651  00022E  D7FA               	bra	u4147
  1652  000230  D000               	nop2	
  1653                           
  1654                           ;main.c: 132:     printf("AND DONE");
  1655  000232  0ED2               	movlw	low STR_9
  1656  000234  0100               	movlb	0	; () banked
  1657  000236  6FEC               	movwf	printf@fmt& (0+255),b
  1658  000238  0EFF               	movlw	high STR_9
  1659  00023A  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1660  00023C  EC33  F00D         	call	_printf	;wreg free
  1661                           
  1662                           ;main.c: 133:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1663  000240  0E33               	movlw	51
  1664  000242  6E63               	movwf	(??_main+1)& (0+255),c
  1665  000244  0EBB               	movlw	187
  1666  000246  6E62               	movwf	??_main& (0+255),c
  1667  000248  0EE0               	movlw	224
  1668  00024A                     u4157:
  1669  00024A  2EE8               	decfsz	wreg,f,c
  1670  00024C  D7FE               	bra	u4157
  1671  00024E  2E62               	decfsz	??_main& (0+255),f,c
  1672  000250  D7FC               	bra	u4157
  1673  000252  2E63               	decfsz	(??_main+1)& (0+255),f,c
  1674  000254  D7FA               	bra	u4157
  1675                           
  1676                           ;main.c: 135:     start = 0;
  1677  000256  0E00               	movlw	0
  1678  000258  0100               	movlb	0	; () banked
  1679  00025A  6FAE               	movwf	_start& (0+255),b	;volatile
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;main.c: 137:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1683  00025C  0E01               	movlw	1
  1684  00025E  EC99  F00D         	call	_lcdInst
  1685  000262  0E11               	movlw	17
  1686  000264  6E62               	movwf	??_main& (0+255),c
  1687  000266  0E3A               	movlw	58
  1688  000268                     u4167:
  1689  000268  2EE8               	decfsz	wreg,f,c
  1690  00026A  D7FE               	bra	u4167
  1691  00026C  2E62               	decfsz	??_main& (0+255),f,c
  1692  00026E  D7FC               	bra	u4167
  1693  000270  D000               	nop2	
  1694                           
  1695                           ;main.c: 138:     printf("Press A to");
  1696  000272  0E9D               	movlw	low STR_10
  1697  000274  0100               	movlb	0	; () banked
  1698  000276  6FEC               	movwf	printf@fmt& (0+255),b
  1699  000278  0EFF               	movlw	high STR_10
  1700  00027A  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1701  00027C  EC33  F00D         	call	_printf	;wreg free
  1702  000280  0E90               	movlw	144
  1703  000282  EC99  F00D         	call	_lcdInst
  1704                           
  1705                           ;main.c: 140:     printf("view results");
  1706  000286  0E60               	movlw	low STR_11
  1707  000288  0100               	movlb	0	; () banked
  1708  00028A  6FEC               	movwf	printf@fmt& (0+255),b
  1709  00028C  0EFF               	movlw	high STR_11
  1710  00028E  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1711  000290  EC33  F00D         	call	_printf	;wreg free
  1712  000294                     l3991:
  1713  000294  0100               	movlb	0	; () banked
  1714  000296  51AE               	movf	_start& (0+255),w,b	;volatile
  1715  000298  B4D8               	btfsc	status,2,c
  1716  00029A  D7FC               	goto	l3991
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;main.c: 145:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1720  00029C  0E01               	movlw	1
  1721  00029E  EC99  F00D         	call	_lcdInst
  1722  0002A2  0E11               	movlw	17
  1723  0002A4  6E62               	movwf	??_main& (0+255),c
  1724  0002A6  0E3A               	movlw	58
  1725  0002A8                     u4177:
  1726  0002A8  2EE8               	decfsz	wreg,f,c
  1727  0002AA  D7FE               	bra	u4177
  1728  0002AC  2E62               	decfsz	??_main& (0+255),f,c
  1729  0002AE  D7FC               	bra	u4177
  1730  0002B0  D000               	nop2	
  1731                           
  1732                           ;main.c: 146:     printf("Canister Index");
  1733  0002B2  0E19               	movlw	low STR_12
  1734  0002B4  0100               	movlb	0	; () banked
  1735  0002B6  6FEC               	movwf	printf@fmt& (0+255),b
  1736  0002B8  0EFF               	movlw	high STR_12
  1737  0002BA  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1738  0002BC  EC33  F00D         	call	_printf	;wreg free
  1739  0002C0  0E90               	movlw	144
  1740  0002C2  EC99  F00D         	call	_lcdInst
  1741                           
  1742                           ;main.c: 148:     printf("starts at 0");
  1743  0002C6  0E6D               	movlw	low STR_13
  1744  0002C8  0100               	movlb	0	; () banked
  1745  0002CA  6FEC               	movwf	printf@fmt& (0+255),b
  1746  0002CC  0EFF               	movlw	high STR_13
  1747  0002CE  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1748  0002D0  EC33  F00D         	call	_printf	;wreg free
  1749                           
  1750                           ;main.c: 149:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1751  0002D4  0E33               	movlw	51
  1752  0002D6  6E63               	movwf	(??_main+1)& (0+255),c
  1753  0002D8  0EBB               	movlw	187
  1754  0002DA  6E62               	movwf	??_main& (0+255),c
  1755  0002DC  0EE0               	movlw	224
  1756  0002DE                     u4187:
  1757  0002DE  2EE8               	decfsz	wreg,f,c
  1758  0002E0  D7FE               	bra	u4187
  1759  0002E2  2E62               	decfsz	??_main& (0+255),f,c
  1760  0002E4  D7FC               	bra	u4187
  1761  0002E6  2E63               	decfsz	(??_main+1)& (0+255),f,c
  1762  0002E8  D7FA               	bra	u4187
  1763                           
  1764                           ;main.c: 151:     key_was_pressed = 1;
  1765  0002EA  0E01               	movlw	1
  1766  0002EC  0100               	movlb	0	; () banked
  1767  0002EE  6FB0               	movwf	_key_was_pressed& (0+255),b	;volatile
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;main.c: 152:     exit_key = 1;
  1771  0002F0  0E01               	movlw	1
  1772  0002F2  6FAF               	movwf	_exit_key& (0+255),b	;volatile
  1773  0002F4                     l4007:
  1774                           
  1775                           ;main.c: 157:         if (state == 0 & clear == 1) {
  1776  0002F4  0101               	movlb	1	; () banked
  1777  0002F6  5115               	movf	main@state& (0+255),w,b
  1778  0002F8  1116               	iorwf	(main@state+1)& (0+255),w,b
  1779  0002FA  A4D8               	btfss	status,2,c
  1780  0002FC  D029               	goto	l4023
  1781                           
  1782                           ; BSR set to: 1
  1783  0002FE  0513               	decf	main@clear& (0+255),w,b
  1784  000300  1114               	iorwf	(main@clear+1)& (0+255),w,b
  1785  000302  A4D8               	btfss	status,2,c
  1786  000304  D025               	goto	l4023
  1787                           
  1788                           ; BSR set to: 1
  1789                           ;main.c: 158:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1790  000306  0E01               	movlw	1
  1791  000308  EC99  F00D         	call	_lcdInst
  1792  00030C  0E11               	movlw	17
  1793  00030E  6E62               	movwf	??_main& (0+255),c
  1794  000310  0E3A               	movlw	58
  1795  000312                     u4197:
  1796  000312  2EE8               	decfsz	wreg,f,c
  1797  000314  D7FE               	bra	u4197
  1798  000316  2E62               	decfsz	??_main& (0+255),f,c
  1799  000318  D7FC               	bra	u4197
  1800  00031A  D000               	nop2	
  1801                           
  1802                           ;main.c: 159:         printf("Operation Time");
  1803  00031C  0ECE               	movlw	low STR_14
  1804  00031E  0100               	movlb	0	; () banked
  1805  000320  6FEC               	movwf	printf@fmt& (0+255),b
  1806  000322  0EFE               	movlw	high STR_14
  1807  000324  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1808  000326  EC33  F00D         	call	_printf	;wreg free
  1809  00032A  0E90               	movlw	144
  1810  00032C  EC99  F00D         	call	_lcdInst
  1811                           
  1812                           ;main.c: 161:         printf("%d seconds", time);
  1813  000330  0EA8               	movlw	low STR_15
  1814  000332  0100               	movlb	0	; () banked
  1815  000334  6FEC               	movwf	printf@fmt& (0+255),b
  1816  000336  0EFF               	movlw	high STR_15
  1817  000338  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1818  00033A  0E00               	movlw	low main@time
  1819  00033C  6FEE               	movwf	(?_printf+2)& (0+255),b
  1820  00033E  0E01               	movlw	high main@time
  1821  000340  6FEF               	movwf	(?_printf+3)& (0+255),b
  1822  000342  EC33  F00D         	call	_printf	;wreg free
  1823                           
  1824                           ;main.c: 162:         clear = 0;
  1825  000346  0E00               	movlw	0
  1826  000348  0101               	movlb	1	; () banked
  1827  00034A  6F14               	movwf	(main@clear+1)& (0+255),b
  1828  00034C  0E00               	movlw	0
  1829  00034E  6F13               	movwf	main@clear& (0+255),b
  1830  000350                     l4023:
  1831                           
  1832                           ; BSR set to: 1
  1833                           ;main.c: 166:         if (state == 1 & clear == 1) {
  1834  000350  0515               	decf	main@state& (0+255),w,b
  1835  000352  1116               	iorwf	(main@state+1)& (0+255),w,b
  1836  000354  A4D8               	btfss	status,2,c
  1837  000356  D02D               	goto	l4041
  1838                           
  1839                           ; BSR set to: 1
  1840  000358  0513               	decf	main@clear& (0+255),w,b
  1841  00035A  1114               	iorwf	(main@clear+1)& (0+255),w,b
  1842  00035C  A4D8               	btfss	status,2,c
  1843  00035E  D029               	goto	l4041
  1844                           
  1845                           ; BSR set to: 1
  1846                           ;main.c: 168:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1847  000360  0E01               	movlw	1
  1848  000362  EC99  F00D         	call	_lcdInst
  1849  000366  0E11               	movlw	17
  1850  000368  6E62               	movwf	??_main& (0+255),c
  1851  00036A  0E3A               	movlw	58
  1852  00036C                     u4207:
  1853  00036C  2EE8               	decfsz	wreg,f,c
  1854  00036E  D7FE               	bra	u4207
  1855  000370  2E62               	decfsz	??_main& (0+255),f,c
  1856  000372  D7FC               	bra	u4207
  1857  000374  D000               	nop2	
  1858                           
  1859                           ;main.c: 169:             { lcdInst(0x80 | LCD_LINE1_ADDR);};
  1860  000376  0E80               	movlw	128
  1861  000378  EC99  F00D         	call	_lcdInst
  1862                           
  1863                           ;main.c: 170:             printf("# of Canisters");
  1864  00037C  0EEC               	movlw	low STR_16
  1865  00037E  0100               	movlb	0	; () banked
  1866  000380  6FEC               	movwf	printf@fmt& (0+255),b
  1867  000382  0EFE               	movlw	high STR_16
  1868  000384  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1869  000386  EC33  F00D         	call	_printf	;wreg free
  1870  00038A  0E90               	movlw	144
  1871  00038C  EC99  F00D         	call	_lcdInst
  1872                           
  1873                           ;main.c: 172:             printf("%d Canisters", Canister);
  1874  000390  0E53               	movlw	low STR_17
  1875  000392  0100               	movlb	0	; () banked
  1876  000394  6FEC               	movwf	printf@fmt& (0+255),b
  1877  000396  0EFF               	movlw	high STR_17
  1878  000398  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1879  00039A  C0AA  F0EE         	movff	_Canister,?_printf+2
  1880  00039E  C0AB  F0EF         	movff	_Canister+1,?_printf+3
  1881  0003A2  EC33  F00D         	call	_printf	;wreg free
  1882  0003A6                     l4039:
  1883                           
  1884                           ;main.c: 173:             clear = 0;
  1885  0003A6  0E00               	movlw	0
  1886  0003A8  0101               	movlb	1	; () banked
  1887  0003AA  6F14               	movwf	(main@clear+1)& (0+255),b
  1888  0003AC  0E00               	movlw	0
  1889  0003AE  6F13               	movwf	main@clear& (0+255),b
  1890                           
  1891                           ;main.c: 175:         }
  1892  0003B0  D06A               	goto	l4081
  1893  0003B2                     l4041:
  1894                           
  1895                           ; BSR set to: 1
  1896  0003B2  0E02               	movlw	2
  1897  0003B4  1915               	xorwf	main@state& (0+255),w,b
  1898  0003B6  1116               	iorwf	(main@state+1)& (0+255),w,b
  1899  0003B8  A4D8               	btfss	status,2,c
  1900  0003BA  D02F               	goto	l4061
  1901                           
  1902                           ; BSR set to: 1
  1903  0003BC  0513               	decf	main@clear& (0+255),w,b
  1904  0003BE  1114               	iorwf	(main@clear+1)& (0+255),w,b
  1905  0003C0  A4D8               	btfss	status,2,c
  1906  0003C2  D02B               	goto	l4061
  1907                           
  1908                           ; BSR set to: 1
  1909                           ;main.c: 179:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1910  0003C4  0E01               	movlw	1
  1911  0003C6  EC99  F00D         	call	_lcdInst
  1912  0003CA  0E11               	movlw	17
  1913  0003CC  6E62               	movwf	??_main& (0+255),c
  1914  0003CE  0E3A               	movlw	58
  1915  0003D0                     u4217:
  1916  0003D0  2EE8               	decfsz	wreg,f,c
  1917  0003D2  D7FE               	bra	u4217
  1918  0003D4  2E62               	decfsz	??_main& (0+255),f,c
  1919  0003D6  D7FC               	bra	u4217
  1920  0003D8  D000               	nop2	
  1921                           
  1922                           ;main.c: 180:             printf("# of Balls");
  1923  0003DA  0EB3               	movlw	low STR_18
  1924  0003DC  0100               	movlb	0	; () banked
  1925  0003DE  6FEC               	movwf	printf@fmt& (0+255),b
  1926  0003E0  0EFF               	movlw	high STR_18
  1927  0003E2  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1928  0003E4  EC33  F00D         	call	_printf	;wreg free
  1929  0003E8  0EC0               	movlw	192
  1930  0003EA  EC99  F00D         	call	_lcdInst
  1931                           
  1932                           ;main.c: 182:             printf("supplied");
  1933  0003EE  0EDB               	movlw	low STR_19
  1934  0003F0  0100               	movlb	0	; () banked
  1935  0003F2  6FEC               	movwf	printf@fmt& (0+255),b
  1936  0003F4  0EFF               	movlw	high STR_19
  1937  0003F6  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1938  0003F8  EC33  F00D         	call	_printf	;wreg free
  1939  0003FC  0ED0               	movlw	208
  1940  0003FE  EC99  F00D         	call	_lcdInst
  1941                           
  1942                           ;main.c: 184:             printf("%d balls", balls);
  1943  000402  0EE4               	movlw	low STR_20
  1944  000404  0100               	movlb	0	; () banked
  1945  000406  6FEC               	movwf	printf@fmt& (0+255),b
  1946  000408  0EFF               	movlw	high STR_20
  1947  00040A  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1948  00040C  0E00               	movlw	0
  1949  00040E  6FEF               	movwf	(?_printf+3)& (0+255),b
  1950  000410  0E05               	movlw	5
  1951  000412  6FEE               	movwf	(?_printf+2)& (0+255),b
  1952  000414  EC33  F00D         	call	_printf	;wreg free
  1953  000418  D7C6               	goto	l4039
  1954  00041A                     l4061:
  1955                           
  1956                           ; BSR set to: 1
  1957  00041A  0E03               	movlw	3
  1958  00041C  1915               	xorwf	main@state& (0+255),w,b
  1959  00041E  1116               	iorwf	(main@state+1)& (0+255),w,b
  1960  000420  A4D8               	btfss	status,2,c
  1961  000422  D031               	goto	l4081
  1962                           
  1963                           ; BSR set to: 1
  1964  000424  0513               	decf	main@clear& (0+255),w,b
  1965  000426  1114               	iorwf	(main@clear+1)& (0+255),w,b
  1966  000428  A4D8               	btfss	status,2,c
  1967  00042A  D02D               	goto	l4081
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;main.c: 191:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1971  00042C  0E01               	movlw	1
  1972  00042E  EC99  F00D         	call	_lcdInst
  1973  000432  0E11               	movlw	17
  1974  000434  6E62               	movwf	??_main& (0+255),c
  1975  000436  0E3A               	movlw	58
  1976  000438                     u4227:
  1977  000438  2EE8               	decfsz	wreg,f,c
  1978  00043A  D7FE               	bra	u4227
  1979  00043C  2E62               	decfsz	??_main& (0+255),f,c
  1980  00043E  D7FC               	bra	u4227
  1981  000440  D000               	nop2	
  1982                           
  1983                           ;main.c: 192:             printf("Individual Info");
  1984  000442  0EA0               	movlw	low STR_21
  1985  000444  0100               	movlb	0	; () banked
  1986  000446  6FEC               	movwf	printf@fmt& (0+255),b
  1987  000448  0EFE               	movlw	high STR_21
  1988  00044A  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1989  00044C  EC33  F00D         	call	_printf	;wreg free
  1990  000450  0EC0               	movlw	192
  1991  000452  EC99  F00D         	call	_lcdInst
  1992                           
  1993                           ;main.c: 194:             printf("of Canister");
  1994  000456  0E91               	movlw	low STR_22
  1995  000458  0100               	movlb	0	; () banked
  1996  00045A  6FEC               	movwf	printf@fmt& (0+255),b
  1997  00045C  0EFF               	movlw	high STR_22
  1998  00045E  6FED               	movwf	(printf@fmt+1)& (0+255),b
  1999  000460  EC33  F00D         	call	_printf	;wreg free
  2000  000464  0ED0               	movlw	208
  2001  000466  EC99  F00D         	call	_lcdInst
  2002                           
  2003                           ;main.c: 196:             printf("Press 0 to %d ", Canister-1);
  2004  00046A  0EB0               	movlw	low STR_23
  2005  00046C  0100               	movlb	0	; () banked
  2006  00046E  6FEC               	movwf	printf@fmt& (0+255),b
  2007  000470  0EFE               	movlw	high STR_23
  2008  000472  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2009  000474  0EFF               	movlw	255
  2010  000476  25AA               	addwf	_Canister& (0+255),w,b
  2011  000478  6FEE               	movwf	(?_printf+2)& (0+255),b
  2012  00047A  0EFF               	movlw	255
  2013  00047C  21AB               	addwfc	(_Canister+1)& (0+255),w,b
  2014  00047E  6FEF               	movwf	(?_printf+3)& (0+255),b
  2015  000480  EC33  F00D         	call	_printf	;wreg free
  2016  000484  D790               	goto	l4039
  2017  000486                     l4081:
  2018                           
  2019                           ; BSR set to: 1
  2020                           ;main.c: 201:         if(key_was_pressed){
  2021  000486  0100               	movlb	0	; () banked
  2022  000488  51B0               	movf	_key_was_pressed& (0+255),w,b	;volatile
  2023  00048A  B4D8               	btfsc	status,2,c
  2024  00048C  D14B               	goto	l4179
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;main.c: 203:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2028  00048E  3881               	swapf	3969,w,c	;volatile
  2029  000490  0B0F               	andlw	15
  2030  000492  0B0F               	andlw	15
  2031  000494  0101               	movlb	1	; () banked
  2032  000496  6F10               	movwf	main@keypress& (0+255),b
  2033                           
  2034                           ; BSR set to: 1
  2035                           ;main.c: 204:             int miniTick = 0;
  2036  000498  0E00               	movlw	0
  2037  00049A  6F0A               	movwf	(main@miniTick+1)& (0+255),b
  2038  00049C  0E00               	movlw	0
  2039  00049E  6F09               	movwf	main@miniTick& (0+255),b
  2040                           
  2041                           ; BSR set to: 1
  2042                           ;main.c: 205:             int miniState = 0;
  2043  0004A0  0E00               	movlw	0
  2044  0004A2  6F12               	movwf	(main@miniState+1)& (0+255),b
  2045  0004A4  0E00               	movlw	0
  2046  0004A6  6F11               	movwf	main@miniState& (0+255),b
  2047                           
  2048                           ; BSR set to: 1
  2049                           ;main.c: 206:             int miniClear = 1;
  2050  0004A8  0E00               	movlw	0
  2051  0004AA  6F0F               	movwf	(main@miniClear+1)& (0+255),b
  2052  0004AC  0E01               	movlw	1
  2053  0004AE  6F0E               	movwf	main@miniClear& (0+255),b
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;main.c: 208:             int number_pressed = (int) (keys[keypress] - '0');
  2057  0004B0  0E71               	movlw	low _keys
  2058  0004B2  2510               	addwf	main@keypress& (0+255),w,b
  2059  0004B4  6EF6               	movwf	tblptrl,c
  2060  0004B6  6AF7               	clrf	tblptrh,c
  2061  0004B8  0EFE               	movlw	high _keys
  2062  0004BA  22F7               	addwfc	tblptrh,f,c
  2063  0004BC                     	if	0	;There are less than 3 active tblptr bytes
  2064  0004BC                     	endif
  2065  0004BC  0008               	tblrd		*
  2066  0004BE  CFF5 F062          	movff	tablat,??_main
  2067  0004C2  0ED0               	movlw	208
  2068  0004C4  2462               	addwf	??_main,w,c
  2069  0004C6  6F0B               	movwf	main@number_pressed& (0+255),b
  2070  0004C8  6B0C               	clrf	(main@number_pressed+1)& (0+255),b
  2071  0004CA  0EFF               	movlw	255
  2072  0004CC  230C               	addwfc	(main@number_pressed+1)& (0+255),f,b
  2073                           
  2074                           ;main.c: 210:             while(!exit_key) {
  2075  0004CE  D122               	goto	l4175
  2076  0004D0                     l4093:
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;main.c: 212:                 if (miniState == 0 & miniClear == 1) {
  2080  0004D0  0101               	movlb	1	; () banked
  2081  0004D2  5111               	movf	main@miniState& (0+255),w,b
  2082  0004D4  1112               	iorwf	(main@miniState+1)& (0+255),w,b
  2083  0004D6  A4D8               	btfss	status,2,c
  2084  0004D8  D049               	goto	l4113
  2085                           
  2086                           ; BSR set to: 1
  2087  0004DA  050E               	decf	main@miniClear& (0+255),w,b
  2088  0004DC  110F               	iorwf	(main@miniClear+1)& (0+255),w,b
  2089  0004DE  A4D8               	btfss	status,2,c
  2090  0004E0  D045               	goto	l4113
  2091                           
  2092                           ; BSR set to: 1
  2093                           ;main.c: 214:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2094  0004E2  0E01               	movlw	1
  2095  0004E4  EC99  F00D         	call	_lcdInst
  2096  0004E8  0E11               	movlw	17
  2097  0004EA  6E62               	movwf	??_main& (0+255),c
  2098  0004EC  0E3A               	movlw	58
  2099  0004EE                     u4237:
  2100  0004EE  2EE8               	decfsz	wreg,f,c
  2101  0004F0  D7FE               	bra	u4237
  2102  0004F2  2E62               	decfsz	??_main& (0+255),f,c
  2103  0004F4  D7FC               	bra	u4237
  2104  0004F6  D000               	nop2	
  2105                           
  2106                           ;main.c: 215:                     printf("Cansiter %c", keys[keypress]);
  2107  0004F8  0E79               	movlw	low STR_24
  2108  0004FA  0100               	movlb	0	; () banked
  2109  0004FC  6FEC               	movwf	printf@fmt& (0+255),b
  2110  0004FE  0EFF               	movlw	high STR_24
  2111  000500  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2112  000502  0E71               	movlw	low _keys
  2113  000504  0101               	movlb	1	; () banked
  2114  000506  2510               	addwf	main@keypress& (0+255),w,b
  2115  000508  6EF6               	movwf	tblptrl,c
  2116  00050A  6AF7               	clrf	tblptrh,c
  2117  00050C  0EFE               	movlw	high _keys
  2118  00050E  22F7               	addwfc	tblptrh,f,c
  2119  000510                     	if	0	;There are less than 3 active tblptr bytes
  2120  000510                     	endif
  2121  000510  0008               	tblrd		*
  2122  000512  50F5               	movf	tablat,w,c
  2123  000514  0100               	movlb	0	; () banked
  2124  000516  6FEE               	movwf	(?_printf+2)& (0+255),b
  2125  000518  6BEF               	clrf	(?_printf+3)& (0+255),b
  2126  00051A  EC33  F00D         	call	_printf	;wreg free
  2127  00051E  0E90               	movlw	144
  2128  000520  EC99  F00D         	call	_lcdInst
  2129                           
  2130                           ;main.c: 217:                     printf("Distance %d cm", DistanceCanister[number_press
      +                          ed] );
  2131  000524  0EDD               	movlw	low STR_25
  2132  000526  0100               	movlb	0	; () banked
  2133  000528  6FEC               	movwf	printf@fmt& (0+255),b
  2134  00052A  0EFE               	movlw	high STR_25
  2135  00052C  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2136  00052E  90D8               	bcf	status,0,c
  2137  000530  0101               	movlb	1	; () banked
  2138  000532  350B               	rlcf	main@number_pressed& (0+255),w,b
  2139  000534  6ED9               	movwf	fsr2l,c
  2140  000536  350C               	rlcf	(main@number_pressed+1)& (0+255),w,b
  2141  000538  6EDA               	movwf	fsr2h,c
  2142  00053A  0E80               	movlw	low _DistanceCanister
  2143  00053C  26D9               	addwf	fsr2l,f,c
  2144  00053E  0E00               	movlw	high _DistanceCanister
  2145  000540  22DA               	addwfc	fsr2h,f,c
  2146  000542  CFDE F0EE          	movff	postinc2,?_printf+2
  2147  000546  CFDD F0EF          	movff	postdec2,?_printf+3
  2148  00054A  EC33  F00D         	call	_printf	;wreg free
  2149  00054E  0ED0               	movlw	208
  2150  000550  EC99  F00D         	call	_lcdInst
  2151                           
  2152                           ;main.c: 219:                     printf("* to exit");
  2153  000554  0EC8               	movlw	low STR_26
  2154  000556  0100               	movlb	0	; () banked
  2155  000558  6FEC               	movwf	printf@fmt& (0+255),b
  2156  00055A  0EFF               	movlw	high STR_26
  2157  00055C  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2158  00055E  EC33  F00D         	call	_printf	;wreg free
  2159                           
  2160                           ;main.c: 220:                     miniClear = 0;
  2161  000562  0E00               	movlw	0
  2162  000564  0101               	movlb	1	; () banked
  2163  000566  6F0F               	movwf	(main@miniClear+1)& (0+255),b
  2164  000568  0E00               	movlw	0
  2165  00056A  6F0E               	movwf	main@miniClear& (0+255),b
  2166  00056C                     l4113:
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;main.c: 223:                 if (miniState == 1 & miniClear == 1) {
  2170  00056C  0511               	decf	main@miniState& (0+255),w,b
  2171  00056E  1112               	iorwf	(main@miniState+1)& (0+255),w,b
  2172  000570  A4D8               	btfss	status,2,c
  2173  000572  D051               	goto	l4137
  2174                           
  2175                           ; BSR set to: 1
  2176  000574  050E               	decf	main@miniClear& (0+255),w,b
  2177  000576  110F               	iorwf	(main@miniClear+1)& (0+255),w,b
  2178  000578  A4D8               	btfss	status,2,c
  2179  00057A  D04D               	goto	l4137
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;main.c: 225:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2183  00057C  0E01               	movlw	1
  2184  00057E  EC99  F00D         	call	_lcdInst
  2185  000582  0E11               	movlw	17
  2186  000584  6E62               	movwf	??_main& (0+255),c
  2187  000586  0E3A               	movlw	58
  2188  000588                     u4247:
  2189  000588  2EE8               	decfsz	wreg,f,c
  2190  00058A  D7FE               	bra	u4247
  2191  00058C  2E62               	decfsz	??_main& (0+255),f,c
  2192  00058E  D7FC               	bra	u4247
  2193  000590  D000               	nop2	
  2194                           
  2195                           ;main.c: 226:                     printf("Cansiter %c", keys[keypress]);
  2196  000592  0E79               	movlw	low STR_24
  2197  000594  0100               	movlb	0	; () banked
  2198  000596  6FEC               	movwf	printf@fmt& (0+255),b
  2199  000598  0EFF               	movlw	high STR_24
  2200  00059A  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2201  00059C  0E71               	movlw	low _keys
  2202  00059E  0101               	movlb	1	; () banked
  2203  0005A0  2510               	addwf	main@keypress& (0+255),w,b
  2204  0005A2  6EF6               	movwf	tblptrl,c
  2205  0005A4  6AF7               	clrf	tblptrh,c
  2206  0005A6  0EFE               	movlw	high _keys
  2207  0005A8  22F7               	addwfc	tblptrh,f,c
  2208  0005AA                     	if	0	;There are less than 3 active tblptr bytes
  2209  0005AA                     	endif
  2210  0005AA  0008               	tblrd		*
  2211  0005AC  50F5               	movf	tablat,w,c
  2212  0005AE  0100               	movlb	0	; () banked
  2213  0005B0  6FEE               	movwf	(?_printf+2)& (0+255),b
  2214  0005B2  6BEF               	clrf	(?_printf+3)& (0+255),b
  2215  0005B4  EC33  F00D         	call	_printf	;wreg free
  2216  0005B8  0E90               	movlw	144
  2217  0005BA  EC99  F00D         	call	_lcdInst
  2218                           
  2219                           ;main.c: 228:                     if (State[number_pressed] == 1)
  2220  0005BE  90D8               	bcf	status,0,c
  2221  0005C0  0101               	movlb	1	; () banked
  2222  0005C2  350B               	rlcf	main@number_pressed& (0+255),w,b
  2223  0005C4  6ED9               	movwf	fsr2l,c
  2224  0005C6  350C               	rlcf	(main@number_pressed+1)& (0+255),w,b
  2225  0005C8  6EDA               	movwf	fsr2h,c
  2226  0005CA  0E94               	movlw	low _State
  2227  0005CC  26D9               	addwf	fsr2l,f,c
  2228  0005CE  0E00               	movlw	high _State
  2229  0005D0  22DA               	addwfc	fsr2h,f,c
  2230  0005D2  04DE               	decf	postinc2,w,c
  2231  0005D4  10DE               	iorwf	postinc2,w,c
  2232  0005D6  A4D8               	btfss	status,2,c
  2233  0005D8  D008               	goto	l4129
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;main.c: 229:                         printf("Canister Full");
  2237  0005DA  0E45               	movlw	low STR_28
  2238  0005DC  0100               	movlb	0	; () banked
  2239  0005DE  6FEC               	movwf	printf@fmt& (0+255),b
  2240  0005E0  0EFF               	movlw	high STR_28
  2241  0005E2  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2242  0005E4  EC33  F00D         	call	_printf	;wreg free
  2243  0005E8  D007               	goto	l4131
  2244  0005EA                     l4129:
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;main.c: 231:                         printf("Canister Empty");
  2248  0005EA  0E28               	movlw	low STR_29
  2249  0005EC  0100               	movlb	0	; () banked
  2250  0005EE  6FEC               	movwf	printf@fmt& (0+255),b
  2251  0005F0  0EFF               	movlw	high STR_29
  2252  0005F2  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2253  0005F4  EC33  F00D         	call	_printf	;wreg free
  2254  0005F8                     l4131:
  2255  0005F8  0ED0               	movlw	208
  2256  0005FA  EC99  F00D         	call	_lcdInst
  2257                           
  2258                           ;main.c: 233:                     printf("* to exit");
  2259  0005FE  0EC8               	movlw	low STR_26
  2260  000600  0100               	movlb	0	; () banked
  2261  000602  6FEC               	movwf	printf@fmt& (0+255),b
  2262  000604  0EFF               	movlw	high STR_26
  2263  000606  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2264  000608  EC33  F00D         	call	_printf	;wreg free
  2265                           
  2266                           ;main.c: 234:                     miniClear = 0;
  2267  00060C  0E00               	movlw	0
  2268  00060E  0101               	movlb	1	; () banked
  2269  000610  6F0F               	movwf	(main@miniClear+1)& (0+255),b
  2270  000612  0E00               	movlw	0
  2271  000614  6F0E               	movwf	main@miniClear& (0+255),b
  2272  000616                     l4137:
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;main.c: 237:                 if (miniState == 2 & miniClear == 1) {
  2276  000616  0E02               	movlw	2
  2277  000618  1911               	xorwf	main@miniState& (0+255),w,b
  2278  00061A  1112               	iorwf	(main@miniState+1)& (0+255),w,b
  2279  00061C  A4D8               	btfss	status,2,c
  2280  00061E  D051               	goto	l4161
  2281                           
  2282                           ; BSR set to: 1
  2283  000620  050E               	decf	main@miniClear& (0+255),w,b
  2284  000622  110F               	iorwf	(main@miniClear+1)& (0+255),w,b
  2285  000624  A4D8               	btfss	status,2,c
  2286  000626  D04D               	goto	l4161
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;main.c: 239:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  2290  000628  0E01               	movlw	1
  2291  00062A  EC99  F00D         	call	_lcdInst
  2292  00062E  0E11               	movlw	17
  2293  000630  6E62               	movwf	??_main& (0+255),c
  2294  000632  0E3A               	movlw	58
  2295  000634                     u4257:
  2296  000634  2EE8               	decfsz	wreg,f,c
  2297  000636  D7FE               	bra	u4257
  2298  000638  2E62               	decfsz	??_main& (0+255),f,c
  2299  00063A  D7FC               	bra	u4257
  2300  00063C  D000               	nop2	
  2301                           
  2302                           ;main.c: 240:                     printf("Cansiter %c", keys[keypress]);
  2303  00063E  0E79               	movlw	low STR_24
  2304  000640  0100               	movlb	0	; () banked
  2305  000642  6FEC               	movwf	printf@fmt& (0+255),b
  2306  000644  0EFF               	movlw	high STR_24
  2307  000646  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2308  000648  0E71               	movlw	low _keys
  2309  00064A  0101               	movlb	1	; () banked
  2310  00064C  2510               	addwf	main@keypress& (0+255),w,b
  2311  00064E  6EF6               	movwf	tblptrl,c
  2312  000650  6AF7               	clrf	tblptrh,c
  2313  000652  0EFE               	movlw	high _keys
  2314  000654  22F7               	addwfc	tblptrh,f,c
  2315  000656                     	if	0	;There are less than 3 active tblptr bytes
  2316  000656                     	endif
  2317  000656  0008               	tblrd		*
  2318  000658  50F5               	movf	tablat,w,c
  2319  00065A  0100               	movlb	0	; () banked
  2320  00065C  6FEE               	movwf	(?_printf+2)& (0+255),b
  2321  00065E  6BEF               	clrf	(?_printf+3)& (0+255),b
  2322  000660  EC33  F00D         	call	_printf	;wreg free
  2323  000664  0E90               	movlw	144
  2324  000666  EC99  F00D         	call	_lcdInst
  2325                           
  2326                           ;main.c: 242:                     if (BallDispensed[number_pressed] == 1)
  2327  00066A  90D8               	bcf	status,0,c
  2328  00066C  0101               	movlb	1	; () banked
  2329  00066E  350B               	rlcf	main@number_pressed& (0+255),w,b
  2330  000670  6ED9               	movwf	fsr2l,c
  2331  000672  350C               	rlcf	(main@number_pressed+1)& (0+255),w,b
  2332  000674  6EDA               	movwf	fsr2h,c
  2333  000676  0E17               	movlw	low _BallDispensed
  2334  000678  26D9               	addwf	fsr2l,f,c
  2335  00067A  0E01               	movlw	high _BallDispensed
  2336  00067C  22DA               	addwfc	fsr2h,f,c
  2337  00067E  04DE               	decf	postinc2,w,c
  2338  000680  10DE               	iorwf	postinc2,w,c
  2339  000682  A4D8               	btfss	status,2,c
  2340  000684  D008               	goto	l4153
  2341                           
  2342                           ; BSR set to: 1
  2343                           ;main.c: 243:                         printf("Ball Added");
  2344  000686  0E3A               	movlw	low (STR_33+3)
  2345  000688  0100               	movlb	0	; () banked
  2346  00068A  6FEC               	movwf	printf@fmt& (0+255),b
  2347  00068C  0EFF               	movlw	high (STR_33+3)
  2348  00068E  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2349  000690  EC33  F00D         	call	_printf	;wreg free
  2350  000694  D007               	goto	l4155
  2351  000696                     l4153:
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;main.c: 245:                         printf("No Ball Added");
  2355  000696  0E37               	movlw	low STR_33
  2356  000698  0100               	movlb	0	; () banked
  2357  00069A  6FEC               	movwf	printf@fmt& (0+255),b
  2358  00069C  0EFF               	movlw	high STR_33
  2359  00069E  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2360  0006A0  EC33  F00D         	call	_printf	;wreg free
  2361  0006A4                     l4155:
  2362  0006A4  0ED0               	movlw	208
  2363  0006A6  EC99  F00D         	call	_lcdInst
  2364                           
  2365                           ;main.c: 247:                     printf("* to exit");
  2366  0006AA  0EC8               	movlw	low STR_26
  2367  0006AC  0100               	movlb	0	; () banked
  2368  0006AE  6FEC               	movwf	printf@fmt& (0+255),b
  2369  0006B0  0EFF               	movlw	high STR_26
  2370  0006B2  6FED               	movwf	(printf@fmt+1)& (0+255),b
  2371  0006B4  EC33  F00D         	call	_printf	;wreg free
  2372                           
  2373                           ;main.c: 250:                     miniClear = 0;
  2374  0006B8  0E00               	movlw	0
  2375  0006BA  0101               	movlb	1	; () banked
  2376  0006BC  6F0F               	movwf	(main@miniClear+1)& (0+255),b
  2377  0006BE  0E00               	movlw	0
  2378  0006C0  6F0E               	movwf	main@miniClear& (0+255),b
  2379  0006C2                     l4161:
  2380                           
  2381                           ; BSR set to: 1
  2382                           ;main.c: 253:                 if (miniTick == 3000) {
  2383  0006C2  0EB8               	movlw	184
  2384  0006C4  1909               	xorwf	main@miniTick& (0+255),w,b
  2385  0006C6  E11D               	bnz	l4171
  2386  0006C8  0E0B               	movlw	11
  2387  0006CA  190A               	xorwf	(main@miniTick+1)& (0+255),w,b
  2388  0006CC  A4D8               	btfss	status,2,c
  2389  0006CE  D019               	goto	l4171
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;main.c: 254:                     miniClear = 1;
  2393  0006D0  0E00               	movlw	0
  2394  0006D2  6F0F               	movwf	(main@miniClear+1)& (0+255),b
  2395  0006D4  0E01               	movlw	1
  2396  0006D6  6F0E               	movwf	main@miniClear& (0+255),b
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;main.c: 255:                     miniState++;
  2400  0006D8  4B11               	infsnz	main@miniState& (0+255),f,b
  2401  0006DA  2B12               	incf	(main@miniState+1)& (0+255),f,b
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;main.c: 256:                     miniState = miniState % 3;
  2405  0006DC  C111  F00C         	movff	main@miniState,___awmod@dividend
  2406  0006E0  C112  F00D         	movff	main@miniState+1,___awmod@dividend+1
  2407  0006E4  0E00               	movlw	0
  2408  0006E6  6E0F               	movwf	___awmod@divisor+1,c
  2409  0006E8  0E03               	movlw	3
  2410  0006EA  6E0E               	movwf	___awmod@divisor,c
  2411  0006EC  ECF5  F00A         	call	___awmod	;wreg free
  2412  0006F0  C00C  F111         	movff	?___awmod,main@miniState
  2413  0006F4  C00D  F112         	movff	?___awmod+1,main@miniState+1
  2414                           
  2415                           ;main.c: 257:                     miniTick = 0;
  2416  0006F8  0E00               	movlw	0
  2417  0006FA  0101               	movlb	1	; () banked
  2418  0006FC  6F0A               	movwf	(main@miniTick+1)& (0+255),b
  2419  0006FE  0E00               	movlw	0
  2420  000700  6F09               	movwf	main@miniTick& (0+255),b
  2421  000702                     l4171:
  2422                           
  2423                           ; BSR set to: 1
  2424                           ;main.c: 260:                 miniTick++;
  2425  000702  4B09               	infsnz	main@miniTick& (0+255),f,b
  2426  000704  2B0A               	incf	(main@miniTick+1)& (0+255),f,b
  2427                           
  2428                           ; BSR set to: 1
  2429                           ;main.c: 261:                 _delay((unsigned long)((1)*(10000000/4000.0)));
  2430  000706  0E04               	movlw	4
  2431  000708  6E62               	movwf	??_main& (0+255),c
  2432  00070A  0E3E               	movlw	62
  2433  00070C                     u4267:
  2434  00070C  2EE8               	decfsz	wreg,f,c
  2435  00070E  D7FE               	bra	u4267
  2436  000710  2E62               	decfsz	??_main& (0+255),f,c
  2437  000712  D7FC               	bra	u4267
  2438  000714                     l4175:
  2439                           
  2440                           ;main.c: 210:             while(!exit_key) {
  2441  000714  0100               	movlb	0	; () banked
  2442  000716  51AF               	movf	_exit_key& (0+255),w,b	;volatile
  2443  000718  B4D8               	btfsc	status,2,c
  2444  00071A  D6DA               	goto	l4093
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;main.c: 266:             key_was_pressed = 0;
  2448  00071C  0E00               	movlw	0
  2449  00071E  6FB0               	movwf	_key_was_pressed& (0+255),b	;volatile
  2450                           
  2451                           ;main.c: 267:             exit_key = 0;
  2452  000720  0E00               	movlw	0
  2453  000722  6FAF               	movwf	_exit_key& (0+255),b	;volatile
  2454  000724                     l4179:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;main.c: 271:         if (tick == 2000) {
  2458  000724  0ED0               	movlw	208
  2459  000726  0101               	movlb	1	; () banked
  2460  000728  1907               	xorwf	main@tick& (0+255),w,b
  2461  00072A  E112               	bnz	l4189
  2462  00072C  0E07               	movlw	7
  2463  00072E  1908               	xorwf	(main@tick+1)& (0+255),w,b
  2464  000730  A4D8               	btfss	status,2,c
  2465  000732  D00E               	goto	l4189
  2466                           
  2467                           ; BSR set to: 1
  2468                           ;main.c: 272:             clear = 1;
  2469  000734  0E00               	movlw	0
  2470  000736  6F14               	movwf	(main@clear+1)& (0+255),b
  2471  000738  0E01               	movlw	1
  2472  00073A  6F13               	movwf	main@clear& (0+255),b
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;main.c: 273:             state++;
  2476  00073C  4B15               	infsnz	main@state& (0+255),f,b
  2477  00073E  2B16               	incf	(main@state+1)& (0+255),f,b
  2478                           
  2479                           ; BSR set to: 1
  2480                           ;main.c: 274:             state = state % 4;
  2481  000740  0E03               	movlw	3
  2482  000742  1515               	andwf	main@state& (0+255),w,b
  2483  000744  6F15               	movwf	main@state& (0+255),b
  2484  000746  6B16               	clrf	(main@state+1)& (0+255),b
  2485                           
  2486                           ; BSR set to: 1
  2487                           ;main.c: 275:             tick = 0;
  2488  000748  0E00               	movlw	0
  2489  00074A  6F08               	movwf	(main@tick+1)& (0+255),b
  2490  00074C  0E00               	movlw	0
  2491  00074E  6F07               	movwf	main@tick& (0+255),b
  2492  000750                     l4189:
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;main.c: 278:         tick++;
  2496  000750  4B07               	infsnz	main@tick& (0+255),f,b
  2497  000752  2B08               	incf	(main@tick+1)& (0+255),f,b
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;main.c: 279:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2501  000754  0E04               	movlw	4
  2502  000756  6E62               	movwf	??_main& (0+255),c
  2503  000758  0E3E               	movlw	62
  2504  00075A                     u4277:
  2505  00075A  2EE8               	decfsz	wreg,f,c
  2506  00075C  D7FE               	bra	u4277
  2507  00075E  2E62               	decfsz	??_main& (0+255),f,c
  2508  000760  D7FC               	bra	u4277
  2509  000762  D5C8               	goto	l4007
  2510  000764                     __end_of_main:
  2511                           	opt callstack 0
  2512                           
  2513 ;; *************** function _printf *****************
  2514 ;; Defined at:
  2515 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  2518 ;;		 -> STR_34(10), STR_33(14), STR_32(11), STR_31(12), 
  2519 ;;		 -> STR_30(10), STR_29(15), STR_28(14), STR_27(12), 
  2520 ;;		 -> STR_26(10), STR_25(15), STR_24(12), STR_23(15), 
  2521 ;;		 -> STR_22(12), STR_21(16), STR_20(9), STR_19(9), 
  2522 ;;		 -> STR_18(11), STR_17(13), STR_16(15), STR_15(11), 
  2523 ;;		 -> STR_14(15), STR_13(12), STR_12(15), STR_11(13), 
  2524 ;;		 -> STR_10(11), STR_9(9), STR_8(12), STR_7(10), 
  2525 ;;		 -> STR_6(15), STR_5(17), STR_4(15), STR_3(15), 
  2526 ;;		 -> STR_2(9), STR_1(8), 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  ap              2   95[COMRAM] PTR void [1]
  2529 ;;		 -> ?_printf(2), 
  2530 ;;  ret             2    0        int 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  2   27[BANK0 ] int 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2540 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;Total ram usage:       12 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:   11
  2547 ;; This function calls:
  2548 ;;		_vfprintf
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text1
  2555  001A66                     __ptext1:
  2556                           	opt callstack 0
  2557  001A66                     _printf:
  2558                           	opt callstack 19
  2559                           
  2560                           ;incstack = 0
  2561  001A66  0EEE               	movlw	low (?_printf+2)
  2562  001A68  6E60               	movwf	printf@ap,c
  2563  001A6A  0E00               	movlw	high (?_printf+2)
  2564  001A6C  6E61               	movwf	printf@ap+1,c
  2565  001A6E  0E00               	movlw	0
  2566  001A70  0100               	movlb	0	; () banked
  2567  001A72  6FE6               	movwf	vfprintf@fp& (0+255),b
  2568  001A74  0E00               	movlw	0
  2569  001A76  6FE7               	movwf	(vfprintf@fp+1)& (0+255),b
  2570  001A78  C0EC  F0E8         	movff	printf@fmt,vfprintf@fmt
  2571  001A7C  C0ED  F0E9         	movff	printf@fmt+1,vfprintf@fmt+1
  2572  001A80  0E60               	movlw	low printf@ap
  2573  001A82  6FEA               	movwf	vfprintf@ap& (0+255),b
  2574  001A84  0E00               	movlw	high printf@ap
  2575  001A86  6FEB               	movwf	(vfprintf@ap+1)& (0+255),b
  2576  001A88  ECC6  F00B         	call	_vfprintf	;wreg free
  2577  001A8C  0012               	return		;funcret
  2578  001A8E                     __end_of_printf:
  2579                           	opt callstack 0
  2580                           
  2581 ;; *************** function _vfprintf *****************
  2582 ;; Defined at:
  2583 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  2586 ;;		 -> NULL(0), 
  2587 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  2588 ;;		 -> STR_34(10), STR_33(14), STR_32(11), STR_31(12), 
  2589 ;;		 -> STR_30(10), STR_29(15), STR_28(14), STR_27(12), 
  2590 ;;		 -> STR_26(10), STR_25(15), STR_24(12), STR_23(15), 
  2591 ;;		 -> STR_22(12), STR_21(16), STR_20(9), STR_19(9), 
  2592 ;;		 -> STR_18(11), STR_17(13), STR_16(15), STR_15(11), 
  2593 ;;		 -> STR_14(15), STR_13(12), STR_12(15), STR_11(13), 
  2594 ;;		 -> STR_10(11), STR_9(9), STR_8(12), STR_7(10), 
  2595 ;;		 -> STR_6(15), STR_5(17), STR_4(15), STR_3(15), 
  2596 ;;		 -> STR_2(9), STR_1(8), 
  2597 ;;  ap              2   25[BANK0 ] PTR PTR void 
  2598 ;;		 -> printf@ap(2), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  2601 ;;		 -> STR_34(10), STR_33(14), STR_32(11), STR_31(12), 
  2602 ;;		 -> STR_30(10), STR_29(15), STR_28(14), STR_27(12), 
  2603 ;;		 -> STR_26(10), STR_25(15), STR_24(12), STR_23(15), 
  2604 ;;		 -> STR_22(12), STR_21(16), STR_20(9), STR_19(9), 
  2605 ;;		 -> STR_18(11), STR_17(13), STR_16(15), STR_15(11), 
  2606 ;;		 -> STR_14(15), STR_13(12), STR_12(15), STR_11(13), 
  2607 ;;		 -> STR_10(11), STR_9(9), STR_8(12), STR_7(10), 
  2608 ;;		 -> STR_6(15), STR_5(17), STR_4(15), STR_3(15), 
  2609 ;;		 -> STR_2(9), STR_1(8), 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2   21[BANK0 ] int 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2619 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;Total ram usage:        8 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:   10
  2626 ;; This function calls:
  2627 ;;		_vfpfcnvrt
  2628 ;; This function is called by:
  2629 ;;		_printf
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text2
  2634  00178C                     __ptext2:
  2635                           	opt callstack 0
  2636  00178C                     _vfprintf:
  2637                           	opt callstack 19
  2638                           
  2639                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  2640                           
  2641                           ;incstack = 0
  2642  00178C  C0E8  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  2643  001790  C0E9  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2644                           
  2645                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2646  001794  0E00               	movlw	0
  2647  001796  0100               	movlb	0	; () banked
  2648  001798  6FAD               	movwf	(_nout+1)& (0+255),b
  2649  00179A  0E00               	movlw	0
  2650  00179C  6FAC               	movwf	_nout& (0+255),b
  2651                           
  2652                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2653  00179E  D013               	goto	l3755
  2654  0017A0                     l3753:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2658  0017A0  C0E6  F052         	movff	vfprintf@fp,vfpfcnvrt@fp
  2659  0017A4  C0E7  F053         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2660  0017A8  0E5C               	movlw	low vfprintf@cfmt
  2661  0017AA  6E54               	movwf	vfpfcnvrt@fmt,c
  2662  0017AC  0E00               	movlw	high vfprintf@cfmt
  2663  0017AE  6E55               	movwf	vfpfcnvrt@fmt+1,c
  2664  0017B0  C0EA  F056         	movff	vfprintf@ap,vfpfcnvrt@ap
  2665  0017B4  C0EB  F057         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2666  0017B8  ECB2  F003         	call	_vfpfcnvrt	;wreg free
  2667  0017BC  5052               	movf	?_vfpfcnvrt,w,c
  2668  0017BE  0100               	movlb	0	; () banked
  2669  0017C0  27AC               	addwf	_nout& (0+255),f,b
  2670  0017C2  5053               	movf	?_vfpfcnvrt+1,w,c
  2671  0017C4  23AD               	addwfc	(_nout+1)& (0+255),f,b
  2672  0017C6                     l3755:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2676  0017C6  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2677  0017CA  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2678  0017CE                     	if	0	;tblptru may be non-zero
  2679  0017CE                     	endif
  2680  0017CE                     	if	0	;tblptru may be non-zero
  2681  0017CE                     	endif
  2682  0017CE  0008               	tblrd		*
  2683  0017D0  50F5               	movf	tablat,w,c
  2684  0017D2  0900               	iorlw	0
  2685  0017D4  A4D8               	btfss	status,2,c
  2686  0017D6  D7E4               	goto	l3753
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  2690  0017D8  C0AC  F0E6         	movff	_nout,?_vfprintf
  2691  0017DC  C0AD  F0E7         	movff	_nout+1,?_vfprintf+1
  2692                           
  2693                           ; BSR set to: 0
  2694  0017E0  0012               	return		;funcret
  2695  0017E2                     __end_of_vfprintf:
  2696                           	opt callstack 0
  2697                           
  2698 ;; *************** function _vfpfcnvrt *****************
  2699 ;; Defined at:
  2700 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  2703 ;;		 -> NULL(0), 
  2704 ;;  fmt             2   83[COMRAM] PTR PTR unsigned char 
  2705 ;;		 -> vfprintf@cfmt(2), 
  2706 ;;  ap              2   85[COMRAM] PTR PTR void 
  2707 ;;		 -> printf@ap(2), 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  llu             8    8[BANK0 ] unsigned long long 
  2710 ;;  ll              8    0[BANK0 ] long long 
  2711 ;;  f               4    0        long long 
  2712 ;;  vp              3    0        PTR void 
  2713 ;;  ct              3    0        unsigned char [3]
  2714 ;;  cp              3    0        PTR unsigned char 
  2715 ;;  done            2   16[BANK0 ] int 
  2716 ;;  i               2    0        int 
  2717 ;;  c               1   20[BANK0 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2   81[COMRAM] int 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2727 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Totals:        10      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;Total ram usage:       31 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    9
  2734 ;; This function calls:
  2735 ;;		_atoi
  2736 ;;		_ctoa
  2737 ;;		_dtoa
  2738 ;;		_fputc
  2739 ;;		_isdigit
  2740 ;;		_xtoa
  2741 ;; This function is called by:
  2742 ;;		_vfprintf
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text3
  2747  000764                     __ptext3:
  2748                           	opt callstack 0
  2749  000764                     _vfpfcnvrt:
  2750                           	opt callstack 19
  2751                           
  2752                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;incstack = 0
  2756  000764  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2757  000768  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2758  00076C  CFDE FFF6          	movff	postinc2,tblptrl
  2759  000770  CFDD FFF7          	movff	postdec2,tblptrh
  2760  000774                     	if	0	;tblptru may be non-zero
  2761  000774                     	endif
  2762  000774                     	if	0	;tblptru may be non-zero
  2763  000774                     	endif
  2764  000774  0008               	tblrd		*
  2765  000776  50F5               	movf	tablat,w,c
  2766  000778  0A25               	xorlw	37
  2767  00077A  A4D8               	btfss	status,2,c
  2768  00077C  D1DF               	goto	l3723
  2769                           
  2770                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2771  00077E  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2772  000782  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2773  000786  2ADE               	incf	postinc2,f,c
  2774  000788  0E00               	movlw	0
  2775  00078A  22DD               	addwfc	postdec2,f,c
  2776                           
  2777                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  2778  00078C  0E00               	movlw	0
  2779  00078E  6E65               	movwf	_width+1,c
  2780  000790  0E00               	movlw	0
  2781  000792  6E64               	movwf	_width,c
  2782  000794  C064  F068         	movff	_width,_flags
  2783  000798  C065  F069         	movff	_width+1,_flags+1
  2784                           
  2785                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  2786  00079C  6866               	setf	_prec,c
  2787  00079E  6867               	setf	_prec+1,c
  2788                           
  2789                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
  2790  0007A0  0E00               	movlw	0
  2791  0007A2  0100               	movlb	0	; () banked
  2792  0007A4  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2793  0007A6  0E00               	movlw	0
  2794  0007A8  D014               	goto	L1
  2795  0007AA                     l3627:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
  2799  0007AA  8068               	bsf	_flags,0,c
  2800  0007AC                     l3629:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                
      +                               ++*fmt;
  2804  0007AC  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2805  0007B0  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2806  0007B4  2ADE               	incf	postinc2,f,c
  2807  0007B6  0E00               	movlw	0
  2808  0007B8  22DD               	addwfc	postdec2,f,c
  2809                           
  2810                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                
      +                               break;
  2811  0007BA  D02E               	goto	l3653
  2812  0007BC                     l3631:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
  2816  0007BC  8268               	bsf	_flags,1,c
  2817  0007BE  D7F6               	goto	l3629
  2818  0007C0                     l3635:
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
  2822  0007C0  8468               	bsf	_flags,2,c
  2823  0007C2  D7F4               	goto	l3629
  2824  0007C4                     l3639:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
  2828  0007C4  8668               	bsf	_flags,3,c
  2829  0007C6  D7F2               	goto	l3629
  2830  0007C8                     l3643:
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
  2834  0007C8  8868               	bsf	_flags,4,c
  2835  0007CA  D7F0               	goto	l3629
  2836  0007CC                     l3647:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
  2840  0007CC  0E00               	movlw	0
  2841  0007CE  6FE2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2842  0007D0  0E01               	movlw	1
  2843  0007D2                     L1:
  2844  0007D2  6FE1               	movwf	vfpfcnvrt@done& (0+255),b
  2845                           
  2846                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
  2847  0007D4  D021               	goto	l3653
  2848  0007D6                     l3651:
  2849                           
  2850                           ; BSR set to: 0
  2851  0007D6  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2852  0007DA  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2853  0007DE  CFDE FFF6          	movff	postinc2,tblptrl
  2854  0007E2  CFDD FFF7          	movff	postdec2,tblptrh
  2855  0007E6                     	if	0	;tblptru may be non-zero
  2856  0007E6                     	endif
  2857  0007E6                     	if	0	;tblptru may be non-zero
  2858  0007E6                     	endif
  2859  0007E6  0008               	tblrd		*
  2860  0007E8  50F5               	movf	tablat,w,c
  2861  0007EA  6E58               	movwf	??_vfpfcnvrt& (0+255),c
  2862  0007EC  6A59               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  2863                           
  2864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2865                           ; Switch size 1, requested type "simple"
  2866                           ; Number of cases is 1, Range of values is 0 to 0
  2867                           ; switch strategies available:
  2868                           ; Name         Instructions Cycles
  2869                           ; simple_byte            4     3 (average)
  2870                           ;	Chosen strategy is simple_byte
  2871  0007EE  5059               	movf	??_vfpfcnvrt+1,w,c
  2872  0007F0  0A00               	xorlw	0	; case 0
  2873  0007F2  A4D8               	btfss	status,2,c
  2874  0007F4  D7EB               	goto	l3647
  2875                           
  2876                           ; BSR set to: 0
  2877                           ; Switch size 1, requested type "simple"
  2878                           ; Number of cases is 5, Range of values is 32 to 48
  2879                           ; switch strategies available:
  2880                           ; Name         Instructions Cycles
  2881                           ; simple_byte           16     9 (average)
  2882                           ;	Chosen strategy is simple_byte
  2883  0007F6  5058               	movf	??_vfpfcnvrt,w,c
  2884  0007F8  0A20               	xorlw	32	; case 32
  2885  0007FA  B4D8               	btfsc	status,2,c
  2886  0007FC  D7E3               	goto	l3639
  2887  0007FE  0A03               	xorlw	3	; case 35
  2888  000800  B4D8               	btfsc	status,2,c
  2889  000802  D7E2               	goto	l3643
  2890  000804  0A08               	xorlw	8	; case 43
  2891  000806  B4D8               	btfsc	status,2,c
  2892  000808  D7DB               	goto	l3635
  2893  00080A  0A06               	xorlw	6	; case 45
  2894  00080C  B4D8               	btfsc	status,2,c
  2895  00080E  D7CD               	goto	l3627
  2896  000810  0A1D               	xorlw	29	; case 48
  2897  000812  B4D8               	btfsc	status,2,c
  2898  000814  D7D3               	goto	l3631
  2899  000816  D7DA               	goto	l3647
  2900  000818                     l3653:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
  2904  000818  51E1               	movf	vfpfcnvrt@done& (0+255),w,b
  2905  00081A  11E2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2906  00081C  B4D8               	btfsc	status,2,c
  2907  00081E  D7DB               	goto	l3651
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
  2911  000820  B068               	btfsc	_flags,0,c
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
  2915  000822  9268               	bcf	_flags,1,c
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
  2919  000824  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2920  000828  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2921  00082C  CFDE FFF6          	movff	postinc2,tblptrl
  2922  000830  CFDD FFF7          	movff	postdec2,tblptrh
  2923  000834                     	if	0	;tblptru may be non-zero
  2924  000834                     	endif
  2925  000834                     	if	0	;tblptru may be non-zero
  2926  000834                     	endif
  2927  000834  0008               	tblrd		*
  2928  000836  50F5               	movf	tablat,w,c
  2929  000838  0A2A               	xorlw	42
  2930  00083A  A4D8               	btfss	status,2,c
  2931  00083C  D023               	goto	l3665
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
  2935  00083E  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2936  000842  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2937  000846  2ADE               	incf	postinc2,f,c
  2938  000848  0E00               	movlw	0
  2939  00084A  22DD               	addwfc	postdec2,f,c
  2940                           
  2941                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  2942  00084C  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2943  000850  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2944  000854  CFDF F058          	movff	indf2,??_vfpfcnvrt
  2945  000858  0E02               	movlw	2
  2946  00085A  26DE               	addwf	postinc2,f,c
  2947  00085C  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  2948  000860  0E00               	movlw	0
  2949  000862  22DD               	addwfc	postdec2,f,c
  2950  000864  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2951  000868  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2952  00086C  CFDE F064          	movff	postinc2,_width
  2953  000870  CFDD F065          	movff	postdec2,_width+1
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
  2957  000874  AE65               	btfss	_width+1,7,c
  2958  000876  D040               	goto	u3600
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
  2962  000878  8068               	bsf	_flags,0,c
  2963                           
  2964                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
  2965  00087A  6C64               	negf	_width,c
  2966  00087C  1E65               	comf	_width+1,f,c
  2967  00087E  B0D8               	btfsc	status,0,c
  2968  000880  2A65               	incf	_width+1,f,c
  2969  000882  D03A               	goto	u3600
  2970  000884                     l3665:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
  2974  000884  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2975  000888  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2976  00088C  CFDE F013          	movff	postinc2,atoi@s
  2977  000890  CFDD F014          	movff	postdec2,atoi@s+1
  2978  000894  EC93  F008         	call	_atoi	;wreg free
  2979  000898  C013  F064         	movff	?_atoi,_width
  2980  00089C  C014  F065         	movff	?_atoi+1,_width+1
  2981                           
  2982                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2983  0008A0  D007               	goto	l3669
  2984  0008A2                     l3667:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
  2988  0008A2  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2989  0008A6  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2990  0008AA  2ADE               	incf	postinc2,f,c
  2991  0008AC  0E00               	movlw	0
  2992  0008AE  22DD               	addwfc	postdec2,f,c
  2993  0008B0                     l3669:
  2994  0008B0  0ED0               	movlw	208
  2995  0008B2  6E58               	movwf	??_vfpfcnvrt& (0+255),c
  2996  0008B4  0EFF               	movlw	255
  2997  0008B6  6E59               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2998  0008B8  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2999  0008BC  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3000  0008C0  CFDE FFF6          	movff	postinc2,tblptrl
  3001  0008C4  CFDD FFF7          	movff	postdec2,tblptrh
  3002  0008C8                     	if	0	;tblptru may be non-zero
  3003  0008C8                     	endif
  3004  0008C8                     	if	0	;tblptru may be non-zero
  3005  0008C8                     	endif
  3006  0008C8  0008               	tblrd		*
  3007  0008CA  50F5               	movf	tablat,w,c
  3008  0008CC  6E5A               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  3009  0008CE  6A5B               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  3010  0008D0  5058               	movf	??_vfpfcnvrt,w,c
  3011  0008D2  265A               	addwf	??_vfpfcnvrt+2,f,c
  3012  0008D4  5059               	movf	??_vfpfcnvrt+1,w,c
  3013  0008D6  225B               	addwfc	??_vfpfcnvrt+3,f,c
  3014  0008D8  505B               	movf	??_vfpfcnvrt+3,w,c
  3015  0008DA  E106               	bnz	u3580
  3016  0008DC  0E0A               	movlw	10
  3017  0008DE  5C5A               	subwf	??_vfpfcnvrt+2,w,c
  3018  0008E0  B0D8               	btfsc	status,0,c
  3019  0008E2  D002               	goto	u3580
  3020  0008E4  0E01               	movlw	1
  3021  0008E6  D001               	goto	u3590
  3022  0008E8                     u3580:
  3023  0008E8  0E00               	movlw	0
  3024  0008EA                     u3590:
  3025  0008EA  0100               	movlb	0	; () banked
  3026  0008EC  6FE3               	movwf	_vfpfcnvrt$537& (0+255),b
  3027  0008EE  6BE4               	clrf	(_vfpfcnvrt$537+1)& (0+255),b
  3028                           
  3029                           ; BSR set to: 0
  3030  0008F0  51E3               	movf	_vfpfcnvrt$537& (0+255),w,b
  3031  0008F2  11E4               	iorwf	(_vfpfcnvrt$537+1)& (0+255),w,b
  3032  0008F4  A4D8               	btfss	status,2,c
  3033  0008F6  D7D5               	goto	l3667
  3034  0008F8                     u3600:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
  3038  0008F8  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3039  0008FC  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3040  000900  CFDE FFF6          	movff	postinc2,tblptrl
  3041  000904  CFDD FFF7          	movff	postdec2,tblptrh
  3042  000908                     	if	0	;tblptru may be non-zero
  3043  000908                     	endif
  3044  000908                     	if	0	;tblptru may be non-zero
  3045  000908                     	endif
  3046  000908  0008               	tblrd		*
  3047  00090A  50F5               	movf	tablat,w,c
  3048  00090C  0A63               	xorlw	99
  3049  00090E  A4D8               	btfss	status,2,c
  3050  000910  D026               	goto	l3683
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
  3054  000912  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3055  000916  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3056  00091A  2ADE               	incf	postinc2,f,c
  3057  00091C  0E00               	movlw	0
  3058  00091E  22DD               	addwfc	postdec2,f,c
  3059                           
  3060                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3061  000920  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3062  000924  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3063  000928  CFDF F058          	movff	indf2,??_vfpfcnvrt
  3064  00092C  0E02               	movlw	2
  3065  00092E  26DE               	addwf	postinc2,f,c
  3066  000930  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  3067  000934  0E00               	movlw	0
  3068  000936  22DD               	addwfc	postdec2,f,c
  3069  000938  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3070  00093C  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3071  000940  50DF               	movf	indf2,w,c
  3072  000942  6FE5               	movwf	vfpfcnvrt@c& (0+255),b
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
  3076  000944  C052  F02B         	movff	vfpfcnvrt@fp,ctoa@fp
  3077  000948  C053  F02C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3078  00094C  C0E5  F02D         	movff	vfpfcnvrt@c,ctoa@c
  3079  000950  ECF1  F00B         	call	_ctoa	;wreg free
  3080  000954  C02B  F052         	movff	?_ctoa,?_vfpfcnvrt
  3081  000958  C02C  F053         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3082  00095C  0012               	return	
  3083  00095E                     l3683:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  3087  00095E  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3088  000962  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3089  000966  CFDE FFF6          	movff	postinc2,tblptrl
  3090  00096A  CFDD FFF7          	movff	postdec2,tblptrh
  3091  00096E                     	if	0	;tblptru may be non-zero
  3092  00096E                     	endif
  3093  00096E                     	if	0	;tblptru may be non-zero
  3094  00096E                     	endif
  3095  00096E  0008               	tblrd		*
  3096  000970  50F5               	movf	tablat,w,c
  3097  000972  0A64               	xorlw	100
  3098  000974  B4D8               	btfsc	status,2,c
  3099  000976  D00D               	goto	u3630
  3100                           
  3101                           ; BSR set to: 0
  3102  000978  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3103  00097C  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3104  000980  CFDE FFF6          	movff	postinc2,tblptrl
  3105  000984  CFDD FFF7          	movff	postdec2,tblptrh
  3106  000988                     	if	0	;tblptru may be non-zero
  3107  000988                     	endif
  3108  000988                     	if	0	;tblptru may be non-zero
  3109  000988                     	endif
  3110  000988  0008               	tblrd		*
  3111  00098A  50F5               	movf	tablat,w,c
  3112  00098C  0A69               	xorlw	105
  3113  00098E  A4D8               	btfss	status,2,c
  3114  000990  D03F               	goto	l3693
  3115  000992                     u3630:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  3119  000992  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3120  000996  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3121  00099A  2ADE               	incf	postinc2,f,c
  3122  00099C  0E00               	movlw	0
  3123  00099E  22DD               	addwfc	postdec2,f,c
  3124                           
  3125                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3126  0009A0  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3127  0009A4  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3128  0009A8  CFDF F058          	movff	indf2,??_vfpfcnvrt
  3129  0009AC  0E02               	movlw	2
  3130  0009AE  26DE               	addwf	postinc2,f,c
  3131  0009B0  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  3132  0009B4  0E00               	movlw	0
  3133  0009B6  22DD               	addwfc	postdec2,f,c
  3134  0009B8  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3135  0009BC  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3136  0009C0  CFDE F0D1          	movff	postinc2,vfpfcnvrt@ll
  3137  0009C4  CFDD F0D2          	movff	postdec2,vfpfcnvrt@ll+1
  3138  0009C8  0E00               	movlw	0
  3139  0009CA  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3140  0009CC  0EFF               	movlw	-1
  3141  0009CE  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3142  0009D0  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3143  0009D2  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3144  0009D4  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3145  0009D6  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3146  0009D8  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  3150  0009DA  C052  F02B         	movff	vfpfcnvrt@fp,dtoa@fp
  3151  0009DE  C053  F02C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3152  0009E2  C0D1  F02D         	movff	vfpfcnvrt@ll,dtoa@d
  3153  0009E6  C0D2  F02E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3154  0009EA  C0D3  F02F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3155  0009EE  C0D4  F030         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3156  0009F2  C0D5  F031         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3157  0009F6  C0D6  F032         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3158  0009FA  C0D7  F033         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3159  0009FE  C0D8  F034         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3160  000A02  ECB8  F005         	call	_dtoa	;wreg free
  3161  000A06  C02B  F052         	movff	?_dtoa,?_vfpfcnvrt
  3162  000A0A  C02C  F053         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3163  000A0E  0012               	return	
  3164  000A10                     l3693:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3168  000A10  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3169  000A14  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3170  000A18  CFDE FFF6          	movff	postinc2,tblptrl
  3171  000A1C  CFDD FFF7          	movff	postdec2,tblptrh
  3172  000A20                     	if	0	;tblptru may be non-zero
  3173  000A20                     	endif
  3174  000A20                     	if	0	;tblptru may be non-zero
  3175  000A20                     	endif
  3176  000A20  0008               	tblrd		*
  3177  000A22  50F5               	movf	tablat,w,c
  3178  000A24  0A78               	xorlw	120
  3179  000A26  B4D8               	btfsc	status,2,c
  3180  000A28  D00D               	goto	u3650
  3181                           
  3182                           ; BSR set to: 0
  3183  000A2A  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3184  000A2E  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3185  000A32  CFDE FFF6          	movff	postinc2,tblptrl
  3186  000A36  CFDD FFF7          	movff	postdec2,tblptrh
  3187  000A3A                     	if	0	;tblptru may be non-zero
  3188  000A3A                     	endif
  3189  000A3A                     	if	0	;tblptru may be non-zero
  3190  000A3A                     	endif
  3191  000A3A  0008               	tblrd		*
  3192  000A3C  50F5               	movf	tablat,w,c
  3193  000A3E  0A58               	xorlw	88
  3194  000A40  A4D8               	btfss	status,2,c
  3195  000A42  D04D               	goto	l3707
  3196  000A44                     u3650:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
  3200  000A44  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3201  000A48  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3202  000A4C  CFDE FFF6          	movff	postinc2,tblptrl
  3203  000A50  CFDD FFF7          	movff	postdec2,tblptrh
  3204  000A54                     	if	0	;tblptru may be non-zero
  3205  000A54                     	endif
  3206  000A54                     	if	0	;tblptru may be non-zero
  3207  000A54                     	endif
  3208  000A54  0008               	tblrd		*
  3209  000A56  CFF5 F0E5          	movff	tablat,vfpfcnvrt@c
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
  3213  000A5A  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3214  000A5E  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3215  000A62  2ADE               	incf	postinc2,f,c
  3216  000A64  0E00               	movlw	0
  3217  000A66  22DD               	addwfc	postdec2,f,c
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  3221  000A68  C056  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3222  000A6C  C057  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3223  000A70  CFDF F058          	movff	indf2,??_vfpfcnvrt
  3224  000A74  0E02               	movlw	2
  3225  000A76  26DE               	addwf	postinc2,f,c
  3226  000A78  CFDF F059          	movff	indf2,??_vfpfcnvrt+1
  3227  000A7C  0E00               	movlw	0
  3228  000A7E  22DD               	addwfc	postdec2,f,c
  3229  000A80  C058  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3230  000A84  C059  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3231  000A88  CFDE F05A          	movff	postinc2,??_vfpfcnvrt+2
  3232  000A8C  CFDD F05B          	movff	postdec2,??_vfpfcnvrt+3
  3233  000A90  C05A  F0D9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3234  000A94  C05B  F0DA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3235  000A98  6BDB               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3236  000A9A  6BDC               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3237  000A9C  6BDD               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3238  000A9E  6BDE               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3239  000AA0  6BDF               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3240  000AA2  6BE0               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
  3244  000AA4  C052  F02B         	movff	vfpfcnvrt@fp,xtoa@fp
  3245  000AA8  C053  F02C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3246  000AAC  C0D9  F02D         	movff	vfpfcnvrt@llu,xtoa@d
  3247  000AB0  C0DA  F02E         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3248  000AB4  C0DB  F02F         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3249  000AB8  C0DC  F030         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3250  000ABC  C0DD  F031         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3251  000AC0  C0DE  F032         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3252  000AC4  C0DF  F033         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3253  000AC8  C0E0  F034         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3254  000ACC  C0E5  F035         	movff	vfpfcnvrt@c,xtoa@x
  3255  000AD0  ECD9  F006         	call	_xtoa	;wreg free
  3256  000AD4  C02B  F052         	movff	?_xtoa,?_vfpfcnvrt
  3257  000AD8  C02C  F053         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3258  000ADC  0012               	return	
  3259  000ADE                     l3707:
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  3263  000ADE  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3264  000AE2  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3265  000AE6  CFDE FFF6          	movff	postinc2,tblptrl
  3266  000AEA  CFDD FFF7          	movff	postdec2,tblptrh
  3267  000AEE                     	if	0	;tblptru may be non-zero
  3268  000AEE                     	endif
  3269  000AEE                     	if	0	;tblptru may be non-zero
  3270  000AEE                     	endif
  3271  000AEE  0008               	tblrd		*
  3272  000AF0  50F5               	movf	tablat,w,c
  3273  000AF2  0A25               	xorlw	37
  3274  000AF4  A4D8               	btfss	status,2,c
  3275  000AF6  D016               	goto	l3717
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  3279  000AF8  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3280  000AFC  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3281  000B00  2ADE               	incf	postinc2,f,c
  3282  000B02  0E00               	movlw	0
  3283  000B04  22DD               	addwfc	postdec2,f,c
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  3287  000B06  0E00               	movlw	0
  3288  000B08  6E11               	movwf	fputc@c+1,c
  3289  000B0A  0E25               	movlw	37
  3290  000B0C  6E10               	movwf	fputc@c,c
  3291  000B0E  C052  F012         	movff	vfpfcnvrt@fp,fputc@fp
  3292  000B12  C053  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3293  000B16  EC2D  F00B         	call	_fputc	;wreg free
  3294  000B1A                     l3713:
  3295                           
  3296                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  3297  000B1A  0E00               	movlw	0
  3298  000B1C  6E53               	movwf	?_vfpfcnvrt+1,c
  3299  000B1E  0E01               	movlw	1
  3300  000B20  6E52               	movwf	?_vfpfcnvrt,c
  3301  000B22  0012               	return	
  3302  000B24                     l3717:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  3306  000B24  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3307  000B28  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3308  000B2C  2ADE               	incf	postinc2,f,c
  3309  000B2E  0E00               	movlw	0
  3310  000B30  22DD               	addwfc	postdec2,f,c
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  3314  000B32  0E00               	movlw	0
  3315  000B34  6E53               	movwf	?_vfpfcnvrt+1,c
  3316  000B36  0E00               	movlw	0
  3317  000B38  6E52               	movwf	?_vfpfcnvrt,c
  3318  000B3A  0012               	return	
  3319  000B3C                     l3723:
  3320                           
  3321                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  3322  000B3C  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3323  000B40  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3324  000B44  CFDE FFF6          	movff	postinc2,tblptrl
  3325  000B48  CFDD FFF7          	movff	postdec2,tblptrh
  3326  000B4C                     	if	0	;tblptru may be non-zero
  3327  000B4C                     	endif
  3328  000B4C                     	if	0	;tblptru may be non-zero
  3329  000B4C                     	endif
  3330  000B4C  0008               	tblrd		*
  3331  000B4E  50F5               	movf	tablat,w,c
  3332  000B50  6E10               	movwf	fputc@c,c
  3333  000B52  6A11               	clrf	fputc@c+1,c
  3334  000B54  C052  F012         	movff	vfpfcnvrt@fp,fputc@fp
  3335  000B58  C053  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3336  000B5C  EC2D  F00B         	call	_fputc	;wreg free
  3337                           
  3338                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  3339  000B60  C054  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340  000B64  C055  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341  000B68  2ADE               	incf	postinc2,f,c
  3342  000B6A  0E00               	movlw	0
  3343  000B6C  22DD               	addwfc	postdec2,f,c
  3344  000B6E  D7D5               	goto	l3713
  3345  000B70                     __end_of_vfpfcnvrt:
  3346                           	opt callstack 0
  3347                           
  3348 ;; *************** function _xtoa *****************
  3349 ;; Defined at:
  3350 ;;		line 623 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  3353 ;;		 -> NULL(0), 
  3354 ;;  d               8   44[COMRAM] unsigned long long 
  3355 ;;  x               1   52[COMRAM] unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  n               8   69[COMRAM] unsigned long long 
  3358 ;;  c               2   79[COMRAM] int 
  3359 ;;  i               2   77[COMRAM] int 
  3360 ;;  w               2   67[COMRAM] int 
  3361 ;;  p               2   65[COMRAM] int 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2   42[COMRAM] int 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3371 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;Total ram usage:       39 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    8
  3378 ;; This function calls:
  3379 ;;		_isalpha
  3380 ;;		_isupper
  3381 ;;		_pad
  3382 ;;		_toupper
  3383 ;; This function is called by:
  3384 ;;		_vfpfcnvrt
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text4
  3389  000DB2                     __ptext4:
  3390                           	opt callstack 0
  3391  000DB2                     _xtoa:
  3392                           	opt callstack 19
  3393                           
  3394                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
  3395                           
  3396                           ;incstack = 0
  3397  000DB2  AE67               	btfss	_prec+1,7,c
  3398                           
  3399                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
  3400  000DB4  9268               	bcf	_flags,1,c
  3401                           
  3402                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
  3403  000DB6  BE67               	btfsc	_prec+1,7,c
  3404  000DB8  D005               	goto	u3300
  3405  000DBA  5067               	movf	_prec+1,w,c
  3406  000DBC  E108               	bnz	l282
  3407  000DBE  0466               	decf	_prec,w,c
  3408  000DC0  B0D8               	btfsc	status,0,c
  3409  000DC2  D005               	goto	l282
  3410  000DC4                     u3300:
  3411  000DC4  0E00               	movlw	0
  3412  000DC6  6E43               	movwf	xtoa@p+1,c
  3413  000DC8  0E01               	movlw	1
  3414  000DCA  6E42               	movwf	xtoa@p,c
  3415  000DCC  D004               	goto	l284
  3416  000DCE                     l282:
  3417  000DCE  C066  F042         	movff	_prec,xtoa@p
  3418  000DD2  C067  F043         	movff	_prec+1,xtoa@p+1
  3419  000DD6                     l284:
  3420                           
  3421                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  3422  000DD6  C064  F044         	movff	_width,xtoa@w
  3423  000DDA  C065  F045         	movff	_width+1,xtoa@w+1
  3424                           
  3425                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
  3426  000DDE  A868               	btfss	_flags,4,c
  3427  000DE0  D004               	goto	l3519
  3428                           
  3429                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  3430  000DE2  0EFE               	movlw	254
  3431  000DE4  2644               	addwf	xtoa@w,f,c
  3432  000DE6  0EFF               	movlw	255
  3433  000DE8  2245               	addwfc	xtoa@w+1,f,c
  3434  000DEA                     l3519:
  3435                           
  3436                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  3437  000DEA  C02D  F046         	movff	xtoa@d,xtoa@n
  3438  000DEE  C02E  F047         	movff	xtoa@d+1,xtoa@n+1
  3439  000DF2  C02F  F048         	movff	xtoa@d+2,xtoa@n+2
  3440  000DF6  C030  F049         	movff	xtoa@d+3,xtoa@n+3
  3441  000DFA  C031  F04A         	movff	xtoa@d+4,xtoa@n+4
  3442  000DFE  C032  F04B         	movff	xtoa@d+5,xtoa@n+5
  3443  000E02  C033  F04C         	movff	xtoa@d+6,xtoa@n+6
  3444  000E06  C034  F04D         	movff	xtoa@d+7,xtoa@n+7
  3445                           
  3446                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
  3447  000E0A  0E00               	movlw	0
  3448  000E0C  6E4F               	movwf	xtoa@i+1,c
  3449  000E0E  0E1F               	movlw	31
  3450  000E10  6E4E               	movwf	xtoa@i,c
  3451                           
  3452                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
  3453  000E12  0E00               	movlw	0
  3454  000E14  0100               	movlb	0	; () banked
  3455  000E16  6FD0               	movwf	(_dbuf+31)& (0+255),b
  3456                           
  3457                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3458  000E18  D093               	goto	l3555
  3459  000E1A                     l3525:
  3460                           
  3461                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  3462  000E1A  064E               	decf	xtoa@i,f,c
  3463  000E1C  A0D8               	btfss	status,0,c
  3464  000E1E  064F               	decf	xtoa@i+1,f,c
  3465                           
  3466                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
  3467  000E20  0E0F               	movlw	15
  3468  000E22  1446               	andwf	xtoa@n,w,c
  3469  000E24  6E50               	movwf	xtoa@c,c
  3470  000E26  6A51               	clrf	xtoa@c+1,c
  3471                           
  3472                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
  3473  000E28  BE51               	btfsc	xtoa@c+1,7,c
  3474  000E2A  D008               	goto	l3533
  3475  000E2C  5051               	movf	xtoa@c+1,w,c
  3476  000E2E  E104               	bnz	u3320
  3477  000E30  0E0A               	movlw	10
  3478  000E32  5C50               	subwf	xtoa@c,w,c
  3479  000E34  A0D8               	btfss	status,0,c
  3480  000E36  D002               	goto	l3533
  3481  000E38                     u3320:
  3482  000E38  0E57               	movlw	87
  3483  000E3A  D001               	goto	L2
  3484  000E3C                     l3533:
  3485  000E3C  0E30               	movlw	48
  3486  000E3E                     L2:
  3487  000E3E  2450               	addwf	xtoa@c,w,c
  3488  000E40  6E50               	movwf	xtoa@c,c
  3489  000E42  0E00               	movlw	0
  3490  000E44  2051               	addwfc	xtoa@c+1,w,c
  3491  000E46  6E51               	movwf	xtoa@c+1,c
  3492                           
  3493                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 646:         if ((0 
      +                          ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsigned)(c)|
      +                          32)-'a') < 26)) {
  3494  000E48  0EBF               	movlw	191
  3495  000E4A  6E36               	movwf	??_xtoa& (0+255),c
  3496  000E4C  0EFF               	movlw	255
  3497  000E4E  6E37               	movwf	(??_xtoa+1)& (0+255),c
  3498  000E50  5035               	movf	xtoa@x,w,c
  3499  000E52  6E38               	movwf	(??_xtoa+2)& (0+255),c
  3500  000E54  6A39               	clrf	(??_xtoa+3)& (0+255),c
  3501  000E56  5036               	movf	??_xtoa,w,c
  3502  000E58  2638               	addwf	??_xtoa+2,f,c
  3503  000E5A  5037               	movf	??_xtoa+1,w,c
  3504  000E5C  2239               	addwfc	??_xtoa+3,f,c
  3505  000E5E  5039               	movf	??_xtoa+3,w,c
  3506  000E60  E106               	bnz	u3330
  3507  000E62  0E1A               	movlw	26
  3508  000E64  5C38               	subwf	??_xtoa+2,w,c
  3509  000E66  B0D8               	btfsc	status,0,c
  3510  000E68  D002               	goto	u3330
  3511  000E6A  0E01               	movlw	1
  3512  000E6C  D001               	goto	u3340
  3513  000E6E                     u3330:
  3514  000E6E  0E00               	movlw	0
  3515  000E70                     u3340:
  3516  000E70  6E3E               	movwf	_xtoa$522,c
  3517  000E72  6A3F               	clrf	_xtoa$522+1,c
  3518  000E74  503E               	movf	_xtoa$522,w,c
  3519  000E76  103F               	iorwf	_xtoa$522+1,w,c
  3520  000E78  B4D8               	btfsc	status,2,c
  3521  000E7A  D027               	goto	l3547
  3522  000E7C  0E9F               	movlw	159
  3523  000E7E  6E36               	movwf	??_xtoa& (0+255),c
  3524  000E80  0EFF               	movlw	255
  3525  000E82  6E37               	movwf	(??_xtoa+1)& (0+255),c
  3526  000E84  0E20               	movlw	32
  3527  000E86  1050               	iorwf	xtoa@c,w,c
  3528  000E88  6E38               	movwf	(??_xtoa+2)& (0+255),c
  3529  000E8A  0E00               	movlw	0
  3530  000E8C  1051               	iorwf	xtoa@c+1,w,c
  3531  000E8E  6E39               	movwf	(??_xtoa+3)& (0+255),c
  3532  000E90  5036               	movf	??_xtoa,w,c
  3533  000E92  2638               	addwf	??_xtoa+2,f,c
  3534  000E94  5037               	movf	??_xtoa+1,w,c
  3535  000E96  2239               	addwfc	??_xtoa+3,f,c
  3536  000E98  5039               	movf	??_xtoa+3,w,c
  3537  000E9A  E106               	bnz	u3360
  3538  000E9C  0E1A               	movlw	26
  3539  000E9E  5C38               	subwf	??_xtoa+2,w,c
  3540  000EA0  B0D8               	btfsc	status,0,c
  3541  000EA2  D002               	goto	u3360
  3542  000EA4  0E01               	movlw	1
  3543  000EA6  D001               	goto	u3370
  3544  000EA8                     u3360:
  3545  000EA8  0E00               	movlw	0
  3546  000EAA                     u3370:
  3547  000EAA  6E40               	movwf	_xtoa$523,c
  3548  000EAC  6A41               	clrf	_xtoa$523+1,c
  3549  000EAE  5040               	movf	_xtoa$523,w,c
  3550  000EB0  1041               	iorwf	_xtoa$523+1,w,c
  3551  000EB2  B4D8               	btfsc	status,2,c
  3552  000EB4  D00A               	goto	l3547
  3553                           
  3554                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
  3555  000EB6  C050  F012         	movff	xtoa@c,toupper@c
  3556  000EBA  C051  F013         	movff	xtoa@c+1,toupper@c+1
  3557  000EBE  EC18  F00C         	call	_toupper	;wreg free
  3558  000EC2  C012  F050         	movff	?_toupper,xtoa@c
  3559  000EC6  C013  F051         	movff	?_toupper+1,xtoa@c+1
  3560  000ECA                     l3547:
  3561                           
  3562                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
  3563  000ECA  0EB1               	movlw	low _dbuf
  3564  000ECC  244E               	addwf	xtoa@i,w,c
  3565  000ECE  6ED9               	movwf	fsr2l,c
  3566  000ED0  0E00               	movlw	high _dbuf
  3567  000ED2  204F               	addwfc	xtoa@i+1,w,c
  3568  000ED4  6EDA               	movwf	fsr2h,c
  3569  000ED6  C050  FFDF         	movff	xtoa@c,indf2
  3570                           
  3571                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  3572  000EDA  0642               	decf	xtoa@p,f,c
  3573  000EDC  A0D8               	btfss	status,0,c
  3574  000EDE  0643               	decf	xtoa@p+1,f,c
  3575                           
  3576                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  3577  000EE0  0644               	decf	xtoa@w,f,c
  3578  000EE2  A0D8               	btfss	status,0,c
  3579  000EE4  0645               	decf	xtoa@w+1,f,c
  3580                           
  3581                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
  3582  000EE6  C046  F036         	movff	xtoa@n,??_xtoa
  3583  000EEA  C047  F037         	movff	xtoa@n+1,??_xtoa+1
  3584  000EEE  C048  F038         	movff	xtoa@n+2,??_xtoa+2
  3585  000EF2  C049  F039         	movff	xtoa@n+3,??_xtoa+3
  3586  000EF6  C04A  F03A         	movff	xtoa@n+4,??_xtoa+4
  3587  000EFA  C04B  F03B         	movff	xtoa@n+5,??_xtoa+5
  3588  000EFE  C04C  F03C         	movff	xtoa@n+6,??_xtoa+6
  3589  000F02  C04D  F03D         	movff	xtoa@n+7,??_xtoa+7
  3590  000F06  0E05               	movlw	5
  3591  000F08  D009               	goto	u3390
  3592  000F0A                     u3395:
  3593  000F0A  90D8               	bcf	status,0,c
  3594  000F0C  323D               	rrcf	??_xtoa+7,f,c
  3595  000F0E  323C               	rrcf	??_xtoa+6,f,c
  3596  000F10  323B               	rrcf	??_xtoa+5,f,c
  3597  000F12  323A               	rrcf	??_xtoa+4,f,c
  3598  000F14  3239               	rrcf	??_xtoa+3,f,c
  3599  000F16  3238               	rrcf	??_xtoa+2,f,c
  3600  000F18  3237               	rrcf	??_xtoa+1,f,c
  3601  000F1A  3236               	rrcf	??_xtoa,f,c
  3602  000F1C                     u3390:
  3603  000F1C  2EE8               	decfsz	wreg,f,c
  3604  000F1E  D7F5               	goto	u3395
  3605  000F20  C036  F046         	movff	??_xtoa,xtoa@n
  3606  000F24  C037  F047         	movff	??_xtoa+1,xtoa@n+1
  3607  000F28  C038  F048         	movff	??_xtoa+2,xtoa@n+2
  3608  000F2C  C039  F049         	movff	??_xtoa+3,xtoa@n+3
  3609  000F30  C03A  F04A         	movff	??_xtoa+4,xtoa@n+4
  3610  000F34  C03B  F04B         	movff	??_xtoa+5,xtoa@n+5
  3611  000F38  C03C  F04C         	movff	??_xtoa+6,xtoa@n+6
  3612  000F3C  C03D  F04D         	movff	??_xtoa+7,xtoa@n+7
  3613  000F40                     l3555:
  3614                           
  3615                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3616  000F40  BE4F               	btfsc	xtoa@i+1,7,c
  3617  000F42  D020               	goto	u3440
  3618  000F44  504F               	movf	xtoa@i+1,w,c
  3619  000F46  E104               	bnz	u3400
  3620  000F48  0E02               	movlw	2
  3621  000F4A  5C4E               	subwf	xtoa@i,w,c
  3622  000F4C  A0D8               	btfss	status,0,c
  3623  000F4E  D01A               	goto	u3440
  3624  000F50                     u3400:
  3625  000F50  5046               	movf	xtoa@n,w,c
  3626  000F52  1047               	iorwf	xtoa@n+1,w,c
  3627  000F54  1048               	iorwf	xtoa@n+2,w,c
  3628  000F56  1049               	iorwf	xtoa@n+3,w,c
  3629  000F58  104A               	iorwf	xtoa@n+4,w,c
  3630  000F5A  104B               	iorwf	xtoa@n+5,w,c
  3631  000F5C  104C               	iorwf	xtoa@n+6,w,c
  3632  000F5E  104D               	iorwf	xtoa@n+7,w,c
  3633  000F60  A4D8               	btfss	status,2,c
  3634  000F62  D75B               	goto	l3525
  3635  000F64  BE43               	btfsc	xtoa@p+1,7,c
  3636  000F66  D005               	goto	u3420
  3637  000F68  5043               	movf	xtoa@p+1,w,c
  3638  000F6A  E102               	bnz	u3421
  3639  000F6C  0442               	decf	xtoa@p,w,c
  3640  000F6E  B0D8               	btfsc	status,0,c
  3641  000F70                     u3421:
  3642  000F70  D754               	goto	l3525
  3643  000F72                     u3420:
  3644  000F72  BE45               	btfsc	xtoa@w+1,7,c
  3645  000F74  D007               	goto	u3440
  3646  000F76  5045               	movf	xtoa@w+1,w,c
  3647  000F78  E103               	bnz	u3430
  3648  000F7A  0444               	decf	xtoa@w,w,c
  3649  000F7C  A0D8               	btfss	status,0,c
  3650  000F7E  D002               	goto	u3440
  3651  000F80                     u3430:
  3652  000F80  B268               	btfsc	_flags,1,c
  3653  000F82  D74B               	goto	l3525
  3654  000F84                     u3440:
  3655                           
  3656                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
  3657  000F84  A868               	btfss	_flags,4,c
  3658  000F86  D016               	goto	l3571
  3659                           
  3660                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  3661  000F88  064E               	decf	xtoa@i,f,c
  3662  000F8A  A0D8               	btfss	status,0,c
  3663  000F8C  064F               	decf	xtoa@i+1,f,c
  3664                           
  3665                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
  3666  000F8E  0EB1               	movlw	low _dbuf
  3667  000F90  244E               	addwf	xtoa@i,w,c
  3668  000F92  6ED9               	movwf	fsr2l,c
  3669  000F94  0E00               	movlw	high _dbuf
  3670  000F96  204F               	addwfc	xtoa@i+1,w,c
  3671  000F98  6EDA               	movwf	fsr2h,c
  3672  000F9A  C035  FFDF         	movff	xtoa@x,indf2
  3673                           
  3674                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  3675  000F9E  064E               	decf	xtoa@i,f,c
  3676  000FA0  A0D8               	btfss	status,0,c
  3677  000FA2  064F               	decf	xtoa@i+1,f,c
  3678                           
  3679                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
  3680  000FA4  0EB1               	movlw	low _dbuf
  3681  000FA6  244E               	addwf	xtoa@i,w,c
  3682  000FA8  6ED9               	movwf	fsr2l,c
  3683  000FAA  0E00               	movlw	high _dbuf
  3684  000FAC  204F               	addwfc	xtoa@i+1,w,c
  3685  000FAE  6EDA               	movwf	fsr2h,c
  3686  000FB0  0E30               	movlw	48
  3687  000FB2  6EDF               	movwf	indf2,c
  3688  000FB4                     l3571:
  3689                           
  3690                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
  3691  000FB4  C02B  F020         	movff	xtoa@fp,pad@fp
  3692  000FB8  C02C  F021         	movff	xtoa@fp+1,pad@fp+1
  3693  000FBC  0EB1               	movlw	low _dbuf
  3694  000FBE  244E               	addwf	xtoa@i,w,c
  3695  000FC0  6E22               	movwf	pad@buf,c
  3696  000FC2  0E00               	movlw	high _dbuf
  3697  000FC4  204F               	addwfc	xtoa@i+1,w,c
  3698  000FC6  6E23               	movwf	pad@buf+1,c
  3699  000FC8  C044  F024         	movff	xtoa@w,pad@p
  3700  000FCC  C045  F025         	movff	xtoa@w+1,pad@p+1
  3701  000FD0  EC2A  F00A         	call	_pad	;wreg free
  3702  000FD4  C020  F02B         	movff	?_pad,?_xtoa
  3703  000FD8  C021  F02C         	movff	?_pad+1,?_xtoa+1
  3704  000FDC  0012               	return		;funcret
  3705  000FDE                     __end_of_xtoa:
  3706                           	opt callstack 0
  3707                           
  3708 ;; *************** function _toupper *****************
  3709 ;; Defined at:
  3710 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  c               2   17[COMRAM] int 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  2   17[COMRAM] int 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;Total ram usage:        8 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    2
  3731 ;; This function calls:
  3732 ;;		_islower
  3733 ;; This function is called by:
  3734 ;;		_xtoa
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text5
  3739  001830                     __ptext5:
  3740                           	opt callstack 0
  3741  001830                     _toupper:
  3742                           	opt callstack 24
  3743                           
  3744                           ;incstack = 0
  3745  001830  0E9F               	movlw	159
  3746  001832  6E14               	movwf	??_toupper& (0+255),c
  3747  001834  0EFF               	movlw	255
  3748  001836  6E15               	movwf	(??_toupper+1)& (0+255),c
  3749  001838  C012  F016         	movff	toupper@c,??_toupper+2
  3750  00183C  C013  F017         	movff	toupper@c+1,??_toupper+3
  3751  001840  5014               	movf	??_toupper,w,c
  3752  001842  2616               	addwf	??_toupper+2,f,c
  3753  001844  5015               	movf	??_toupper+1,w,c
  3754  001846  2217               	addwfc	??_toupper+3,f,c
  3755  001848  5017               	movf	??_toupper+3,w,c
  3756  00184A  E106               	bnz	u2930
  3757  00184C  0E1A               	movlw	26
  3758  00184E  5C16               	subwf	??_toupper+2,w,c
  3759  001850  B0D8               	btfsc	status,0,c
  3760  001852  D002               	goto	u2930
  3761  001854  0E01               	movlw	1
  3762  001856  D001               	goto	u2940
  3763  001858                     u2930:
  3764  001858  0E00               	movlw	0
  3765  00185A                     u2940:
  3766  00185A  6E18               	movwf	_toupper$1088,c
  3767  00185C  6A19               	clrf	_toupper$1088+1,c
  3768  00185E  5018               	movf	_toupper$1088,w,c
  3769  001860  1019               	iorwf	_toupper$1088+1,w,c
  3770  001862  B4D8               	btfsc	status,2,c
  3771  001864  D005               	goto	l1123
  3772  001866  0E5F               	movlw	95
  3773  001868  1412               	andwf	toupper@c,w,c
  3774  00186A  6E12               	movwf	?_toupper,c
  3775  00186C  6A13               	clrf	?_toupper+1,c
  3776  00186E  0012               	return	
  3777  001870                     l1123:
  3778  001870  C012  F012         	movff	toupper@c,?_toupper
  3779  001874  C013  F013         	movff	toupper@c+1,?_toupper+1
  3780  001878  0012               	return		;funcret
  3781  00187A                     __end_of_toupper:
  3782                           	opt callstack 0
  3783                           
  3784 ;; *************** function _islower *****************
  3785 ;; Defined at:
  3786 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  c               2   11[COMRAM] int 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  2   11[COMRAM] int 
  3793 ;; Registers used:
  3794 ;;		wreg, status,2, status,0
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;Total ram usage:        6 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_toupper
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text6
  3815  001956                     __ptext6:
  3816                           	opt callstack 0
  3817  001956                     _islower:
  3818                           	opt callstack 24
  3819                           
  3820                           ;incstack = 0
  3821  001956  0E9F               	movlw	159
  3822  001958  6E0E               	movwf	??_islower& (0+255),c
  3823  00195A  0EFF               	movlw	255
  3824  00195C  6E0F               	movwf	(??_islower+1)& (0+255),c
  3825  00195E  C00C  F010         	movff	islower@c,??_islower+2
  3826  001962  C00D  F011         	movff	islower@c+1,??_islower+3
  3827  001966  500E               	movf	??_islower,w,c
  3828  001968  2610               	addwf	??_islower+2,f,c
  3829  00196A  500F               	movf	??_islower+1,w,c
  3830  00196C  2211               	addwfc	??_islower+3,f,c
  3831  00196E  5011               	movf	??_islower+3,w,c
  3832  001970  E106               	bnz	u2820
  3833  001972  0E1A               	movlw	26
  3834  001974  5C10               	subwf	??_islower+2,w,c
  3835  001976  B0D8               	btfsc	status,0,c
  3836  001978  D002               	goto	u2820
  3837  00197A  0E01               	movlw	1
  3838  00197C  D001               	goto	u2830
  3839  00197E                     u2820:
  3840  00197E  0E00               	movlw	0
  3841  001980                     u2830:
  3842  001980  6E0C               	movwf	?_islower,c
  3843  001982  6A0D               	clrf	?_islower+1,c
  3844  001984  0012               	return		;funcret
  3845  001986                     __end_of_islower:
  3846                           	opt callstack 0
  3847                           
  3848 ;; *************** function _isupper *****************
  3849 ;; Defined at:
  3850 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  c               2   11[COMRAM] int 
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  2   11[COMRAM] int 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3864 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;Total ram usage:        6 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    1
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_xtoa
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text7
  3879  001986                     __ptext7:
  3880                           	opt callstack 0
  3881  001986                     _isupper:
  3882                           	opt callstack 25
  3883                           
  3884                           ;incstack = 0
  3885  001986  0EBF               	movlw	191
  3886  001988  6E0E               	movwf	??_isupper& (0+255),c
  3887  00198A  0EFF               	movlw	255
  3888  00198C  6E0F               	movwf	(??_isupper+1)& (0+255),c
  3889  00198E  C00C  F010         	movff	isupper@c,??_isupper+2
  3890  001992  C00D  F011         	movff	isupper@c+1,??_isupper+3
  3891  001996  500E               	movf	??_isupper,w,c
  3892  001998  2610               	addwf	??_isupper+2,f,c
  3893  00199A  500F               	movf	??_isupper+1,w,c
  3894  00199C  2211               	addwfc	??_isupper+3,f,c
  3895  00199E  5011               	movf	??_isupper+3,w,c
  3896  0019A0  E106               	bnz	u2890
  3897  0019A2  0E1A               	movlw	26
  3898  0019A4  5C10               	subwf	??_isupper+2,w,c
  3899  0019A6  B0D8               	btfsc	status,0,c
  3900  0019A8  D002               	goto	u2890
  3901  0019AA  0E01               	movlw	1
  3902  0019AC  D001               	goto	u2900
  3903  0019AE                     u2890:
  3904  0019AE  0E00               	movlw	0
  3905  0019B0                     u2900:
  3906  0019B0  6E0C               	movwf	?_isupper,c
  3907  0019B2  6A0D               	clrf	?_isupper+1,c
  3908  0019B4  0012               	return		;funcret
  3909  0019B6                     __end_of_isupper:
  3910                           	opt callstack 0
  3911                           
  3912 ;; *************** function _isalpha *****************
  3913 ;; Defined at:
  3914 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  c               2   11[COMRAM] int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2   11[COMRAM] int 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;Total ram usage:        6 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_xtoa
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text8
  3943  0018F0                     __ptext8:
  3944                           	opt callstack 0
  3945  0018F0                     _isalpha:
  3946                           	opt callstack 25
  3947                           
  3948                           ;incstack = 0
  3949  0018F0  0E9F               	movlw	159
  3950  0018F2  6E0E               	movwf	??_isalpha& (0+255),c
  3951  0018F4  0EFF               	movlw	255
  3952  0018F6  6E0F               	movwf	(??_isalpha+1)& (0+255),c
  3953  0018F8  0E20               	movlw	32
  3954  0018FA  100C               	iorwf	isalpha@c,w,c
  3955  0018FC  6E10               	movwf	(??_isalpha+2)& (0+255),c
  3956  0018FE  0E00               	movlw	0
  3957  001900  100D               	iorwf	isalpha@c+1,w,c
  3958  001902  6E11               	movwf	(??_isalpha+3)& (0+255),c
  3959  001904  500E               	movf	??_isalpha,w,c
  3960  001906  2610               	addwf	??_isalpha+2,f,c
  3961  001908  500F               	movf	??_isalpha+1,w,c
  3962  00190A  2211               	addwfc	??_isalpha+3,f,c
  3963  00190C  5011               	movf	??_isalpha+3,w,c
  3964  00190E  E106               	bnz	u2910
  3965  001910  0E1A               	movlw	26
  3966  001912  5C10               	subwf	??_isalpha+2,w,c
  3967  001914  B0D8               	btfsc	status,0,c
  3968  001916  D002               	goto	u2910
  3969  001918  0E01               	movlw	1
  3970  00191A  D001               	goto	u2920
  3971  00191C                     u2910:
  3972  00191C  0E00               	movlw	0
  3973  00191E                     u2920:
  3974  00191E  6E0C               	movwf	?_isalpha,c
  3975  001920  6A0D               	clrf	?_isalpha+1,c
  3976  001922  0012               	return		;funcret
  3977  001924                     __end_of_isalpha:
  3978                           	opt callstack 0
  3979                           
  3980 ;; *************** function _dtoa *****************
  3981 ;; Defined at:
  3982 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  3985 ;;		 -> NULL(0), 
  3986 ;;  d               8   44[COMRAM] long long 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  n               8   68[COMRAM] long long 
  3989 ;;  i               2   76[COMRAM] int 
  3990 ;;  s               2   66[COMRAM] int 
  3991 ;;  w               2   64[COMRAM] int 
  3992 ;;  p               2   62[COMRAM] int 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2   42[COMRAM] int 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4002 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;Total ram usage:       36 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    8
  4009 ;; This function calls:
  4010 ;;		___aodiv
  4011 ;;		___aomod
  4012 ;;		_abs
  4013 ;;		_pad
  4014 ;; This function is called by:
  4015 ;;		_vfpfcnvrt
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text9
  4020  000B70                     __ptext9:
  4021                           	opt callstack 0
  4022  000B70                     _dtoa:
  4023                           	opt callstack 19
  4024                           
  4025                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  4026                           
  4027                           ;incstack = 0
  4028  000B70  C02D  F045         	movff	dtoa@d,dtoa@n
  4029  000B74  C02E  F046         	movff	dtoa@d+1,dtoa@n+1
  4030  000B78  C02F  F047         	movff	dtoa@d+2,dtoa@n+2
  4031  000B7C  C030  F048         	movff	dtoa@d+3,dtoa@n+3
  4032  000B80  C031  F049         	movff	dtoa@d+4,dtoa@n+4
  4033  000B84  C032  F04A         	movff	dtoa@d+5,dtoa@n+5
  4034  000B88  C033  F04B         	movff	dtoa@d+6,dtoa@n+6
  4035  000B8C  C034  F04C         	movff	dtoa@d+7,dtoa@n+7
  4036                           
  4037                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  4038  000B90  AE4C               	btfss	dtoa@n+7,7,c
  4039  000B92  D002               	goto	u3140
  4040  000B94  0E01               	movlw	1
  4041  000B96  D001               	goto	u3150
  4042  000B98                     u3140:
  4043  000B98  0E00               	movlw	0
  4044  000B9A                     u3150:
  4045  000B9A  6E43               	movwf	dtoa@s,c
  4046  000B9C  6A44               	clrf	dtoa@s+1,c
  4047                           
  4048                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  4049  000B9E  5043               	movf	dtoa@s,w,c
  4050  000BA0  1044               	iorwf	dtoa@s+1,w,c
  4051  000BA2  B4D8               	btfsc	status,2,c
  4052  000BA4  D010               	goto	l3453
  4053                           
  4054                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  4055  000BA6  1E4C               	comf	dtoa@n+7,f,c
  4056  000BA8  1E4B               	comf	dtoa@n+6,f,c
  4057  000BAA  1E4A               	comf	dtoa@n+5,f,c
  4058  000BAC  1E49               	comf	dtoa@n+4,f,c
  4059  000BAE  1E48               	comf	dtoa@n+3,f,c
  4060  000BB0  1E47               	comf	dtoa@n+2,f,c
  4061  000BB2  1E46               	comf	dtoa@n+1,f,c
  4062  000BB4  6C45               	negf	dtoa@n,c
  4063  000BB6  0E00               	movlw	0
  4064  000BB8  2246               	addwfc	dtoa@n+1,f,c
  4065  000BBA  2247               	addwfc	dtoa@n+2,f,c
  4066  000BBC  2248               	addwfc	dtoa@n+3,f,c
  4067  000BBE  2249               	addwfc	dtoa@n+4,f,c
  4068  000BC0  224A               	addwfc	dtoa@n+5,f,c
  4069  000BC2  224B               	addwfc	dtoa@n+6,f,c
  4070  000BC4  224C               	addwfc	dtoa@n+7,f,c
  4071  000BC6                     l3453:
  4072                           
  4073                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  4074  000BC6  AE67               	btfss	_prec+1,7,c
  4075                           
  4076                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  4077  000BC8  9268               	bcf	_flags,1,c
  4078                           
  4079                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  4080  000BCA  BE67               	btfsc	_prec+1,7,c
  4081  000BCC  D005               	goto	u3180
  4082  000BCE  5067               	movf	_prec+1,w,c
  4083  000BD0  E108               	bnz	l257
  4084  000BD2  0466               	decf	_prec,w,c
  4085  000BD4  B0D8               	btfsc	status,0,c
  4086  000BD6  D005               	goto	l257
  4087  000BD8                     u3180:
  4088  000BD8  0E00               	movlw	0
  4089  000BDA  6E40               	movwf	dtoa@p+1,c
  4090  000BDC  0E01               	movlw	1
  4091  000BDE  6E3F               	movwf	dtoa@p,c
  4092  000BE0  D004               	goto	l259
  4093  000BE2                     l257:
  4094  000BE2  C066  F03F         	movff	_prec,dtoa@p
  4095  000BE6  C067  F040         	movff	_prec+1,dtoa@p+1
  4096  000BEA                     l259:
  4097                           
  4098                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  4099  000BEA  C064  F041         	movff	_width,dtoa@w
  4100  000BEE  C065  F042         	movff	_width+1,dtoa@w+1
  4101                           
  4102                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  4103  000BF2  5043               	movf	dtoa@s,w,c
  4104  000BF4  1044               	iorwf	dtoa@s+1,w,c
  4105  000BF6  A4D8               	btfss	status,2,c
  4106  000BF8  D002               	goto	u3200
  4107  000BFA  A468               	btfss	_flags,2,c
  4108  000BFC  D003               	goto	l3467
  4109  000BFE                     u3200:
  4110                           
  4111                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  4112  000BFE  0641               	decf	dtoa@w,f,c
  4113  000C00  A0D8               	btfss	status,0,c
  4114  000C02  0642               	decf	dtoa@w+1,f,c
  4115  000C04                     l3467:
  4116                           
  4117                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  4118  000C04  0E00               	movlw	0
  4119  000C06  6E4E               	movwf	dtoa@i+1,c
  4120  000C08  0E1F               	movlw	31
  4121  000C0A  6E4D               	movwf	dtoa@i,c
  4122                           
  4123                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  4124  000C0C  0E00               	movlw	0
  4125  000C0E  0100               	movlb	0	; () banked
  4126  000C10  6FD0               	movwf	(_dbuf+31)& (0+255),b
  4127                           
  4128                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4129  000C12  D07C               	goto	l3481
  4130  000C14                     l3471:
  4131                           
  4132                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  4133  000C14  064D               	decf	dtoa@i,f,c
  4134  000C16  A0D8               	btfss	status,0,c
  4135  000C18  064E               	decf	dtoa@i+1,f,c
  4136                           
  4137                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  4138  000C1A  0EB1               	movlw	low _dbuf
  4139  000C1C  244D               	addwf	dtoa@i,w,c
  4140  000C1E  6ED9               	movwf	fsr2l,c
  4141  000C20  0E00               	movlw	high _dbuf
  4142  000C22  204E               	addwfc	dtoa@i+1,w,c
  4143  000C24  6EDA               	movwf	fsr2h,c
  4144  000C26  C045  F00C         	movff	dtoa@n,___aomod@dividend
  4145  000C2A  C046  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  4146  000C2E  C047  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  4147  000C32  C048  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  4148  000C36  C049  F010         	movff	dtoa@n+4,___aomod@dividend+4
  4149  000C3A  C04A  F011         	movff	dtoa@n+5,___aomod@dividend+5
  4150  000C3E  C04B  F012         	movff	dtoa@n+6,___aomod@dividend+6
  4151  000C42  C04C  F013         	movff	dtoa@n+7,___aomod@dividend+7
  4152  000C46  0E0A               	movlw	10
  4153  000C48  6E14               	movwf	___aomod@divisor,c
  4154  000C4A  0E00               	movlw	0
  4155  000C4C  6E15               	movwf	___aomod@divisor+1,c
  4156  000C4E  0E00               	movlw	0
  4157  000C50  6E16               	movwf	___aomod@divisor+2,c
  4158  000C52  0E00               	movlw	0
  4159  000C54  6E17               	movwf	___aomod@divisor+3,c
  4160  000C56  0E00               	movlw	0
  4161  000C58  6E18               	movwf	___aomod@divisor+4,c
  4162  000C5A  0E00               	movlw	0
  4163  000C5C  6E19               	movwf	___aomod@divisor+5,c
  4164  000C5E  0E00               	movlw	0
  4165  000C60  6E1A               	movwf	___aomod@divisor+6,c
  4166  000C62  0E00               	movlw	0
  4167  000C64  6E1B               	movwf	___aomod@divisor+7,c
  4168  000C66  EC33  F009         	call	___aomod	;wreg free
  4169  000C6A  C00C  F035         	movff	?___aomod,??_dtoa
  4170  000C6E  C00D  F036         	movff	?___aomod+1,??_dtoa+1
  4171  000C72  C00E  F037         	movff	?___aomod+2,??_dtoa+2
  4172  000C76  C00F  F038         	movff	?___aomod+3,??_dtoa+3
  4173  000C7A  C010  F039         	movff	?___aomod+4,??_dtoa+4
  4174  000C7E  C011  F03A         	movff	?___aomod+5,??_dtoa+5
  4175  000C82  C012  F03B         	movff	?___aomod+6,??_dtoa+6
  4176  000C86  C013  F03C         	movff	?___aomod+7,??_dtoa+7
  4177  000C8A  C035  F01E         	movff	??_dtoa,abs@a
  4178  000C8E  C037  F01F         	movff	??_dtoa+2,abs@a+1
  4179  000C92  EC92  F00C         	call	_abs	;wreg free
  4180  000C96  501E               	movf	?_abs,w,c
  4181  000C98  0F30               	addlw	48
  4182  000C9A  6EDF               	movwf	indf2,c
  4183                           
  4184                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  4185  000C9C  063F               	decf	dtoa@p,f,c
  4186  000C9E  A0D8               	btfss	status,0,c
  4187  000CA0  0640               	decf	dtoa@p+1,f,c
  4188                           
  4189                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  4190  000CA2  0641               	decf	dtoa@w,f,c
  4191  000CA4  A0D8               	btfss	status,0,c
  4192  000CA6  0642               	decf	dtoa@w+1,f,c
  4193                           
  4194                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  4195  000CA8  C045  F00C         	movff	dtoa@n,___aodiv@dividend
  4196  000CAC  C046  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  4197  000CB0  C047  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  4198  000CB4  C048  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  4199  000CB8  C049  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  4200  000CBC  C04A  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  4201  000CC0  C04B  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  4202  000CC4  C04C  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  4203  000CC8  0E0A               	movlw	10
  4204  000CCA  6E14               	movwf	___aodiv@divisor,c
  4205  000CCC  0E00               	movlw	0
  4206  000CCE  6E15               	movwf	___aodiv@divisor+1,c
  4207  000CD0  0E00               	movlw	0
  4208  000CD2  6E16               	movwf	___aodiv@divisor+2,c
  4209  000CD4  0E00               	movlw	0
  4210  000CD6  6E17               	movwf	___aodiv@divisor+3,c
  4211  000CD8  0E00               	movlw	0
  4212  000CDA  6E18               	movwf	___aodiv@divisor+4,c
  4213  000CDC  0E00               	movlw	0
  4214  000CDE  6E19               	movwf	___aodiv@divisor+5,c
  4215  000CE0  0E00               	movlw	0
  4216  000CE2  6E1A               	movwf	___aodiv@divisor+6,c
  4217  000CE4  0E00               	movlw	0
  4218  000CE6  6E1B               	movwf	___aodiv@divisor+7,c
  4219  000CE8  ECEF  F007         	call	___aodiv	;wreg free
  4220  000CEC  C00C  F045         	movff	?___aodiv,dtoa@n
  4221  000CF0  C00D  F046         	movff	?___aodiv+1,dtoa@n+1
  4222  000CF4  C00E  F047         	movff	?___aodiv+2,dtoa@n+2
  4223  000CF8  C00F  F048         	movff	?___aodiv+3,dtoa@n+3
  4224  000CFC  C010  F049         	movff	?___aodiv+4,dtoa@n+4
  4225  000D00  C011  F04A         	movff	?___aodiv+5,dtoa@n+5
  4226  000D04  C012  F04B         	movff	?___aodiv+6,dtoa@n+6
  4227  000D08  C013  F04C         	movff	?___aodiv+7,dtoa@n+7
  4228  000D0C                     l3481:
  4229                           
  4230                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4231  000D0C  BE4E               	btfsc	dtoa@i+1,7,c
  4232  000D0E  D01F               	goto	u3250
  4233  000D10  504E               	movf	dtoa@i+1,w,c
  4234  000D12  E103               	bnz	u3210
  4235  000D14  044D               	decf	dtoa@i,w,c
  4236  000D16  A0D8               	btfss	status,0,c
  4237  000D18  D01A               	goto	u3250
  4238  000D1A                     u3210:
  4239  000D1A  5045               	movf	dtoa@n,w,c
  4240  000D1C  1046               	iorwf	dtoa@n+1,w,c
  4241  000D1E  1047               	iorwf	dtoa@n+2,w,c
  4242  000D20  1048               	iorwf	dtoa@n+3,w,c
  4243  000D22  1049               	iorwf	dtoa@n+4,w,c
  4244  000D24  104A               	iorwf	dtoa@n+5,w,c
  4245  000D26  104B               	iorwf	dtoa@n+6,w,c
  4246  000D28  104C               	iorwf	dtoa@n+7,w,c
  4247  000D2A  A4D8               	btfss	status,2,c
  4248  000D2C  D773               	goto	l3471
  4249  000D2E  BE40               	btfsc	dtoa@p+1,7,c
  4250  000D30  D005               	goto	u3230
  4251  000D32  5040               	movf	dtoa@p+1,w,c
  4252  000D34  E102               	bnz	u3231
  4253  000D36  043F               	decf	dtoa@p,w,c
  4254  000D38  B0D8               	btfsc	status,0,c
  4255  000D3A                     u3231:
  4256  000D3A  D76C               	goto	l3471
  4257  000D3C                     u3230:
  4258  000D3C  BE42               	btfsc	dtoa@w+1,7,c
  4259  000D3E  D007               	goto	u3250
  4260  000D40  5042               	movf	dtoa@w+1,w,c
  4261  000D42  E103               	bnz	u3240
  4262  000D44  0441               	decf	dtoa@w,w,c
  4263  000D46  A0D8               	btfss	status,0,c
  4264  000D48  D002               	goto	u3250
  4265  000D4A                     u3240:
  4266  000D4A  B268               	btfsc	_flags,1,c
  4267  000D4C  D763               	goto	l3471
  4268  000D4E                     u3250:
  4269                           
  4270                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  4271  000D4E  5043               	movf	dtoa@s,w,c
  4272  000D50  1044               	iorwf	dtoa@s+1,w,c
  4273  000D52  A4D8               	btfss	status,2,c
  4274  000D54  D002               	goto	u3270
  4275  000D56  A468               	btfss	_flags,2,c
  4276  000D58  D017               	goto	l3505
  4277  000D5A                     u3270:
  4278                           
  4279                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  4280  000D5A  064D               	decf	dtoa@i,f,c
  4281  000D5C  A0D8               	btfss	status,0,c
  4282  000D5E  064E               	decf	dtoa@i+1,f,c
  4283                           
  4284                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  4285  000D60  5043               	movf	dtoa@s,w,c
  4286  000D62  1044               	iorwf	dtoa@s+1,w,c
  4287  000D64  A4D8               	btfss	status,2,c
  4288  000D66  D004               	goto	l3501
  4289  000D68  0E00               	movlw	0
  4290  000D6A  6E3E               	movwf	_dtoa$512+1,c
  4291  000D6C  0E2B               	movlw	43
  4292  000D6E  D003               	goto	L3
  4293  000D70                     l3501:
  4294  000D70  0E00               	movlw	0
  4295  000D72  6E3E               	movwf	_dtoa$512+1,c
  4296  000D74  0E2D               	movlw	45
  4297  000D76                     L3:
  4298  000D76  6E3D               	movwf	_dtoa$512,c
  4299  000D78  0EB1               	movlw	low _dbuf
  4300  000D7A  244D               	addwf	dtoa@i,w,c
  4301  000D7C  6ED9               	movwf	fsr2l,c
  4302  000D7E  0E00               	movlw	high _dbuf
  4303  000D80  204E               	addwfc	dtoa@i+1,w,c
  4304  000D82  6EDA               	movwf	fsr2h,c
  4305  000D84  C03D  FFDF         	movff	_dtoa$512,indf2
  4306  000D88                     l3505:
  4307                           
  4308                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  4309  000D88  C02B  F020         	movff	dtoa@fp,pad@fp
  4310  000D8C  C02C  F021         	movff	dtoa@fp+1,pad@fp+1
  4311  000D90  0EB1               	movlw	low _dbuf
  4312  000D92  244D               	addwf	dtoa@i,w,c
  4313  000D94  6E22               	movwf	pad@buf,c
  4314  000D96  0E00               	movlw	high _dbuf
  4315  000D98  204E               	addwfc	dtoa@i+1,w,c
  4316  000D9A  6E23               	movwf	pad@buf+1,c
  4317  000D9C  C041  F024         	movff	dtoa@w,pad@p
  4318  000DA0  C042  F025         	movff	dtoa@w+1,pad@p+1
  4319  000DA4  EC2A  F00A         	call	_pad	;wreg free
  4320  000DA8  C020  F02B         	movff	?_pad,?_dtoa
  4321  000DAC  C021  F02C         	movff	?_pad+1,?_dtoa+1
  4322  000DB0  0012               	return		;funcret
  4323  000DB2                     __end_of_dtoa:
  4324                           	opt callstack 0
  4325                           
  4326 ;; *************** function _abs *****************
  4327 ;; Defined at:
  4328 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  a               2   29[COMRAM] int 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  2   29[COMRAM] int 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4342 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;Total ram usage:        4 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_dtoa
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text10
  4357  001924                     __ptext10:
  4358                           	opt callstack 0
  4359  001924                     _abs:
  4360                           	opt callstack 25
  4361                           
  4362                           ;incstack = 0
  4363  001924  BE1F               	btfsc	abs@a+1,7,c
  4364  001926  D005               	goto	u2880
  4365  001928  501F               	movf	abs@a+1,w,c
  4366  00192A  E110               	bnz	l1025
  4367  00192C  041E               	decf	abs@a,w,c
  4368  00192E  B0D8               	btfsc	status,0,c
  4369  001930  D00D               	goto	l1025
  4370  001932                     u2880:
  4371  001932  C01E  F020         	movff	abs@a,??_abs
  4372  001936  C01F  F021         	movff	abs@a+1,??_abs+1
  4373  00193A  1E20               	comf	??_abs,f,c
  4374  00193C  1E21               	comf	??_abs+1,f,c
  4375  00193E  4A20               	infsnz	??_abs,f,c
  4376  001940  2A21               	incf	??_abs+1,f,c
  4377  001942  C020  F01E         	movff	??_abs,?_abs
  4378  001946  C021  F01F         	movff	??_abs+1,?_abs+1
  4379  00194A  0012               	return	
  4380  00194C                     l1025:
  4381  00194C  C01E  F01E         	movff	abs@a,?_abs
  4382  001950  C01F  F01F         	movff	abs@a+1,?_abs+1
  4383  001954  0012               	return		;funcret
  4384  001956                     __end_of_abs:
  4385                           	opt callstack 0
  4386                           
  4387 ;; *************** function ___aomod *****************
  4388 ;; Defined at:
  4389 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  dividend        8   11[COMRAM] long long 
  4392 ;;  divisor         8   19[COMRAM] long long 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  sign            1   28[COMRAM] unsigned char 
  4395 ;;  counter         1   27[COMRAM] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  8   11[COMRAM] long long 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:       18 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    1
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_dtoa
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text11
  4420  001266                     __ptext11:
  4421                           	opt callstack 0
  4422  001266                     ___aomod:
  4423                           	opt callstack 25
  4424                           
  4425                           ;incstack = 0
  4426  001266  0E00               	movlw	0
  4427  001268  6E1D               	movwf	___aomod@sign,c
  4428  00126A  AE13               	btfss	___aomod@dividend+7,7,c
  4429  00126C  D012               	goto	l3393
  4430  00126E  1E13               	comf	___aomod@dividend+7,f,c
  4431  001270  1E12               	comf	___aomod@dividend+6,f,c
  4432  001272  1E11               	comf	___aomod@dividend+5,f,c
  4433  001274  1E10               	comf	___aomod@dividend+4,f,c
  4434  001276  1E0F               	comf	___aomod@dividend+3,f,c
  4435  001278  1E0E               	comf	___aomod@dividend+2,f,c
  4436  00127A  1E0D               	comf	___aomod@dividend+1,f,c
  4437  00127C  6C0C               	negf	___aomod@dividend,c
  4438  00127E  0E00               	movlw	0
  4439  001280  220D               	addwfc	___aomod@dividend+1,f,c
  4440  001282  220E               	addwfc	___aomod@dividend+2,f,c
  4441  001284  220F               	addwfc	___aomod@dividend+3,f,c
  4442  001286  2210               	addwfc	___aomod@dividend+4,f,c
  4443  001288  2211               	addwfc	___aomod@dividend+5,f,c
  4444  00128A  2212               	addwfc	___aomod@dividend+6,f,c
  4445  00128C  2213               	addwfc	___aomod@dividend+7,f,c
  4446  00128E  0E01               	movlw	1
  4447  001290  6E1D               	movwf	___aomod@sign,c
  4448  001292                     l3393:
  4449  001292  AE1B               	btfss	___aomod@divisor+7,7,c
  4450  001294  D010               	goto	l3397
  4451  001296  1E1B               	comf	___aomod@divisor+7,f,c
  4452  001298  1E1A               	comf	___aomod@divisor+6,f,c
  4453  00129A  1E19               	comf	___aomod@divisor+5,f,c
  4454  00129C  1E18               	comf	___aomod@divisor+4,f,c
  4455  00129E  1E17               	comf	___aomod@divisor+3,f,c
  4456  0012A0  1E16               	comf	___aomod@divisor+2,f,c
  4457  0012A2  1E15               	comf	___aomod@divisor+1,f,c
  4458  0012A4  6C14               	negf	___aomod@divisor,c
  4459  0012A6  0E00               	movlw	0
  4460  0012A8  2215               	addwfc	___aomod@divisor+1,f,c
  4461  0012AA  2216               	addwfc	___aomod@divisor+2,f,c
  4462  0012AC  2217               	addwfc	___aomod@divisor+3,f,c
  4463  0012AE  2218               	addwfc	___aomod@divisor+4,f,c
  4464  0012B0  2219               	addwfc	___aomod@divisor+5,f,c
  4465  0012B2  221A               	addwfc	___aomod@divisor+6,f,c
  4466  0012B4  221B               	addwfc	___aomod@divisor+7,f,c
  4467  0012B6                     l3397:
  4468  0012B6  5014               	movf	___aomod@divisor,w,c
  4469  0012B8  1015               	iorwf	___aomod@divisor+1,w,c
  4470  0012BA  1016               	iorwf	___aomod@divisor+2,w,c
  4471  0012BC  1017               	iorwf	___aomod@divisor+3,w,c
  4472  0012BE  1018               	iorwf	___aomod@divisor+4,w,c
  4473  0012C0  1019               	iorwf	___aomod@divisor+5,w,c
  4474  0012C2  101A               	iorwf	___aomod@divisor+6,w,c
  4475  0012C4  101B               	iorwf	___aomod@divisor+7,w,c
  4476  0012C6  B4D8               	btfsc	status,2,c
  4477  0012C8  D03C               	goto	l3413
  4478  0012CA  0E01               	movlw	1
  4479  0012CC  6E1C               	movwf	___aomod@counter,c
  4480  0012CE  D00A               	goto	l3403
  4481  0012D0                     l3401:
  4482  0012D0  90D8               	bcf	status,0,c
  4483  0012D2  3614               	rlcf	___aomod@divisor,f,c
  4484  0012D4  3615               	rlcf	___aomod@divisor+1,f,c
  4485  0012D6  3616               	rlcf	___aomod@divisor+2,f,c
  4486  0012D8  3617               	rlcf	___aomod@divisor+3,f,c
  4487  0012DA  3618               	rlcf	___aomod@divisor+4,f,c
  4488  0012DC  3619               	rlcf	___aomod@divisor+5,f,c
  4489  0012DE  361A               	rlcf	___aomod@divisor+6,f,c
  4490  0012E0  361B               	rlcf	___aomod@divisor+7,f,c
  4491  0012E2  2A1C               	incf	___aomod@counter,f,c
  4492  0012E4                     l3403:
  4493  0012E4  AE1B               	btfss	___aomod@divisor+7,7,c
  4494  0012E6  D7F4               	goto	l3401
  4495  0012E8                     u3080:
  4496  0012E8  5014               	movf	___aomod@divisor,w,c
  4497  0012EA  5C0C               	subwf	___aomod@dividend,w,c
  4498  0012EC  5015               	movf	___aomod@divisor+1,w,c
  4499  0012EE  580D               	subwfb	___aomod@dividend+1,w,c
  4500  0012F0  5016               	movf	___aomod@divisor+2,w,c
  4501  0012F2  580E               	subwfb	___aomod@dividend+2,w,c
  4502  0012F4  5017               	movf	___aomod@divisor+3,w,c
  4503  0012F6  580F               	subwfb	___aomod@dividend+3,w,c
  4504  0012F8  5018               	movf	___aomod@divisor+4,w,c
  4505  0012FA  5810               	subwfb	___aomod@dividend+4,w,c
  4506  0012FC  5019               	movf	___aomod@divisor+5,w,c
  4507  0012FE  5811               	subwfb	___aomod@dividend+5,w,c
  4508  001300  501A               	movf	___aomod@divisor+6,w,c
  4509  001302  5812               	subwfb	___aomod@dividend+6,w,c
  4510  001304  501B               	movf	___aomod@divisor+7,w,c
  4511  001306  5813               	subwfb	___aomod@dividend+7,w,c
  4512  001308  A0D8               	btfss	status,0,c
  4513  00130A  D010               	goto	l3409
  4514  00130C  5014               	movf	___aomod@divisor,w,c
  4515  00130E  5E0C               	subwf	___aomod@dividend,f,c
  4516  001310  5015               	movf	___aomod@divisor+1,w,c
  4517  001312  5A0D               	subwfb	___aomod@dividend+1,f,c
  4518  001314  5016               	movf	___aomod@divisor+2,w,c
  4519  001316  5A0E               	subwfb	___aomod@dividend+2,f,c
  4520  001318  5017               	movf	___aomod@divisor+3,w,c
  4521  00131A  5A0F               	subwfb	___aomod@dividend+3,f,c
  4522  00131C  5018               	movf	___aomod@divisor+4,w,c
  4523  00131E  5A10               	subwfb	___aomod@dividend+4,f,c
  4524  001320  5019               	movf	___aomod@divisor+5,w,c
  4525  001322  5A11               	subwfb	___aomod@dividend+5,f,c
  4526  001324  501A               	movf	___aomod@divisor+6,w,c
  4527  001326  5A12               	subwfb	___aomod@dividend+6,f,c
  4528  001328  501B               	movf	___aomod@divisor+7,w,c
  4529  00132A  5A13               	subwfb	___aomod@dividend+7,f,c
  4530  00132C                     l3409:
  4531  00132C  90D8               	bcf	status,0,c
  4532  00132E  321B               	rrcf	___aomod@divisor+7,f,c
  4533  001330  321A               	rrcf	___aomod@divisor+6,f,c
  4534  001332  3219               	rrcf	___aomod@divisor+5,f,c
  4535  001334  3218               	rrcf	___aomod@divisor+4,f,c
  4536  001336  3217               	rrcf	___aomod@divisor+3,f,c
  4537  001338  3216               	rrcf	___aomod@divisor+2,f,c
  4538  00133A  3215               	rrcf	___aomod@divisor+1,f,c
  4539  00133C  3214               	rrcf	___aomod@divisor,f,c
  4540  00133E  2E1C               	decfsz	___aomod@counter,f,c
  4541  001340  D7D3               	goto	u3080
  4542  001342                     l3413:
  4543  001342  501D               	movf	___aomod@sign,w,c
  4544  001344  B4D8               	btfsc	status,2,c
  4545  001346  D010               	goto	l3417
  4546  001348  1E13               	comf	___aomod@dividend+7,f,c
  4547  00134A  1E12               	comf	___aomod@dividend+6,f,c
  4548  00134C  1E11               	comf	___aomod@dividend+5,f,c
  4549  00134E  1E10               	comf	___aomod@dividend+4,f,c
  4550  001350  1E0F               	comf	___aomod@dividend+3,f,c
  4551  001352  1E0E               	comf	___aomod@dividend+2,f,c
  4552  001354  1E0D               	comf	___aomod@dividend+1,f,c
  4553  001356  6C0C               	negf	___aomod@dividend,c
  4554  001358  0E00               	movlw	0
  4555  00135A  220D               	addwfc	___aomod@dividend+1,f,c
  4556  00135C  220E               	addwfc	___aomod@dividend+2,f,c
  4557  00135E  220F               	addwfc	___aomod@dividend+3,f,c
  4558  001360  2210               	addwfc	___aomod@dividend+4,f,c
  4559  001362  2211               	addwfc	___aomod@dividend+5,f,c
  4560  001364  2212               	addwfc	___aomod@dividend+6,f,c
  4561  001366  2213               	addwfc	___aomod@dividend+7,f,c
  4562  001368                     l3417:
  4563  001368  C00C  F00C         	movff	___aomod@dividend,?___aomod
  4564  00136C  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  4565  001370  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  4566  001374  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  4567  001378  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  4568  00137C  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  4569  001380  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  4570  001384  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  4571  001388  0012               	return		;funcret
  4572  00138A                     __end_of___aomod:
  4573                           	opt callstack 0
  4574                           
  4575 ;; *************** function ___aodiv *****************
  4576 ;; Defined at:
  4577 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  dividend        8   11[COMRAM] long long 
  4580 ;;  divisor         8   19[COMRAM] long long 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  quotient        8   29[COMRAM] long long 
  4583 ;;  sign            1   28[COMRAM] unsigned char 
  4584 ;;  counter         1   27[COMRAM] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  8   11[COMRAM] long long 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4594 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;Total ram usage:       26 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    1
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_dtoa
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text12
  4609  000FDE                     __ptext12:
  4610                           	opt callstack 0
  4611  000FDE                     ___aodiv:
  4612                           	opt callstack 25
  4613                           
  4614                           ;incstack = 0
  4615  000FDE  0E00               	movlw	0
  4616  000FE0  6E1D               	movwf	___aodiv@sign,c
  4617  000FE2  AE1B               	btfss	___aodiv@divisor+7,7,c
  4618  000FE4  D012               	goto	l3349
  4619  000FE6  1E1B               	comf	___aodiv@divisor+7,f,c
  4620  000FE8  1E1A               	comf	___aodiv@divisor+6,f,c
  4621  000FEA  1E19               	comf	___aodiv@divisor+5,f,c
  4622  000FEC  1E18               	comf	___aodiv@divisor+4,f,c
  4623  000FEE  1E17               	comf	___aodiv@divisor+3,f,c
  4624  000FF0  1E16               	comf	___aodiv@divisor+2,f,c
  4625  000FF2  1E15               	comf	___aodiv@divisor+1,f,c
  4626  000FF4  6C14               	negf	___aodiv@divisor,c
  4627  000FF6  0E00               	movlw	0
  4628  000FF8  2215               	addwfc	___aodiv@divisor+1,f,c
  4629  000FFA  2216               	addwfc	___aodiv@divisor+2,f,c
  4630  000FFC  2217               	addwfc	___aodiv@divisor+3,f,c
  4631  000FFE  2218               	addwfc	___aodiv@divisor+4,f,c
  4632  001000  2219               	addwfc	___aodiv@divisor+5,f,c
  4633  001002  221A               	addwfc	___aodiv@divisor+6,f,c
  4634  001004  221B               	addwfc	___aodiv@divisor+7,f,c
  4635  001006  0E01               	movlw	1
  4636  001008  6E1D               	movwf	___aodiv@sign,c
  4637  00100A                     l3349:
  4638  00100A  AE13               	btfss	___aodiv@dividend+7,7,c
  4639  00100C  D012               	goto	l3355
  4640  00100E  1E13               	comf	___aodiv@dividend+7,f,c
  4641  001010  1E12               	comf	___aodiv@dividend+6,f,c
  4642  001012  1E11               	comf	___aodiv@dividend+5,f,c
  4643  001014  1E10               	comf	___aodiv@dividend+4,f,c
  4644  001016  1E0F               	comf	___aodiv@dividend+3,f,c
  4645  001018  1E0E               	comf	___aodiv@dividend+2,f,c
  4646  00101A  1E0D               	comf	___aodiv@dividend+1,f,c
  4647  00101C  6C0C               	negf	___aodiv@dividend,c
  4648  00101E  0E00               	movlw	0
  4649  001020  220D               	addwfc	___aodiv@dividend+1,f,c
  4650  001022  220E               	addwfc	___aodiv@dividend+2,f,c
  4651  001024  220F               	addwfc	___aodiv@dividend+3,f,c
  4652  001026  2210               	addwfc	___aodiv@dividend+4,f,c
  4653  001028  2211               	addwfc	___aodiv@dividend+5,f,c
  4654  00102A  2212               	addwfc	___aodiv@dividend+6,f,c
  4655  00102C  2213               	addwfc	___aodiv@dividend+7,f,c
  4656  00102E  0E01               	movlw	1
  4657  001030  1A1D               	xorwf	___aodiv@sign,f,c
  4658  001032                     l3355:
  4659  001032  EE20  F01E         	lfsr	2,___aodiv@quotient
  4660  001036  0E07               	movlw	7
  4661  001038                     u3001:
  4662  001038  6ADE               	clrf	postinc2,c
  4663  00103A  06E8               	decf	wreg,f,c
  4664  00103C  E2FD               	bc	u3001
  4665  00103E  5014               	movf	___aodiv@divisor,w,c
  4666  001040  1015               	iorwf	___aodiv@divisor+1,w,c
  4667  001042  1016               	iorwf	___aodiv@divisor+2,w,c
  4668  001044  1017               	iorwf	___aodiv@divisor+3,w,c
  4669  001046  1018               	iorwf	___aodiv@divisor+4,w,c
  4670  001048  1019               	iorwf	___aodiv@divisor+5,w,c
  4671  00104A  101A               	iorwf	___aodiv@divisor+6,w,c
  4672  00104C  101B               	iorwf	___aodiv@divisor+7,w,c
  4673  00104E  B4D8               	btfsc	status,2,c
  4674  001050  D046               	goto	l3377
  4675  001052  0E01               	movlw	1
  4676  001054  6E1C               	movwf	___aodiv@counter,c
  4677  001056  D00A               	goto	l3363
  4678  001058                     l3361:
  4679  001058  90D8               	bcf	status,0,c
  4680  00105A  3614               	rlcf	___aodiv@divisor,f,c
  4681  00105C  3615               	rlcf	___aodiv@divisor+1,f,c
  4682  00105E  3616               	rlcf	___aodiv@divisor+2,f,c
  4683  001060  3617               	rlcf	___aodiv@divisor+3,f,c
  4684  001062  3618               	rlcf	___aodiv@divisor+4,f,c
  4685  001064  3619               	rlcf	___aodiv@divisor+5,f,c
  4686  001066  361A               	rlcf	___aodiv@divisor+6,f,c
  4687  001068  361B               	rlcf	___aodiv@divisor+7,f,c
  4688  00106A  2A1C               	incf	___aodiv@counter,f,c
  4689  00106C                     l3363:
  4690  00106C  AE1B               	btfss	___aodiv@divisor+7,7,c
  4691  00106E  D7F4               	goto	l3361
  4692  001070                     u3020:
  4693  001070  90D8               	bcf	status,0,c
  4694  001072  361E               	rlcf	___aodiv@quotient,f,c
  4695  001074  361F               	rlcf	___aodiv@quotient+1,f,c
  4696  001076  3620               	rlcf	___aodiv@quotient+2,f,c
  4697  001078  3621               	rlcf	___aodiv@quotient+3,f,c
  4698  00107A  3622               	rlcf	___aodiv@quotient+4,f,c
  4699  00107C  3623               	rlcf	___aodiv@quotient+5,f,c
  4700  00107E  3624               	rlcf	___aodiv@quotient+6,f,c
  4701  001080  3625               	rlcf	___aodiv@quotient+7,f,c
  4702  001082  5014               	movf	___aodiv@divisor,w,c
  4703  001084  5C0C               	subwf	___aodiv@dividend,w,c
  4704  001086  5015               	movf	___aodiv@divisor+1,w,c
  4705  001088  580D               	subwfb	___aodiv@dividend+1,w,c
  4706  00108A  5016               	movf	___aodiv@divisor+2,w,c
  4707  00108C  580E               	subwfb	___aodiv@dividend+2,w,c
  4708  00108E  5017               	movf	___aodiv@divisor+3,w,c
  4709  001090  580F               	subwfb	___aodiv@dividend+3,w,c
  4710  001092  5018               	movf	___aodiv@divisor+4,w,c
  4711  001094  5810               	subwfb	___aodiv@dividend+4,w,c
  4712  001096  5019               	movf	___aodiv@divisor+5,w,c
  4713  001098  5811               	subwfb	___aodiv@dividend+5,w,c
  4714  00109A  501A               	movf	___aodiv@divisor+6,w,c
  4715  00109C  5812               	subwfb	___aodiv@dividend+6,w,c
  4716  00109E  501B               	movf	___aodiv@divisor+7,w,c
  4717  0010A0  5813               	subwfb	___aodiv@dividend+7,w,c
  4718  0010A2  A0D8               	btfss	status,0,c
  4719  0010A4  D011               	goto	l3373
  4720  0010A6  5014               	movf	___aodiv@divisor,w,c
  4721  0010A8  5E0C               	subwf	___aodiv@dividend,f,c
  4722  0010AA  5015               	movf	___aodiv@divisor+1,w,c
  4723  0010AC  5A0D               	subwfb	___aodiv@dividend+1,f,c
  4724  0010AE  5016               	movf	___aodiv@divisor+2,w,c
  4725  0010B0  5A0E               	subwfb	___aodiv@dividend+2,f,c
  4726  0010B2  5017               	movf	___aodiv@divisor+3,w,c
  4727  0010B4  5A0F               	subwfb	___aodiv@dividend+3,f,c
  4728  0010B6  5018               	movf	___aodiv@divisor+4,w,c
  4729  0010B8  5A10               	subwfb	___aodiv@dividend+4,f,c
  4730  0010BA  5019               	movf	___aodiv@divisor+5,w,c
  4731  0010BC  5A11               	subwfb	___aodiv@dividend+5,f,c
  4732  0010BE  501A               	movf	___aodiv@divisor+6,w,c
  4733  0010C0  5A12               	subwfb	___aodiv@dividend+6,f,c
  4734  0010C2  501B               	movf	___aodiv@divisor+7,w,c
  4735  0010C4  5A13               	subwfb	___aodiv@dividend+7,f,c
  4736  0010C6  801E               	bsf	___aodiv@quotient,0,c
  4737  0010C8                     l3373:
  4738  0010C8  90D8               	bcf	status,0,c
  4739  0010CA  321B               	rrcf	___aodiv@divisor+7,f,c
  4740  0010CC  321A               	rrcf	___aodiv@divisor+6,f,c
  4741  0010CE  3219               	rrcf	___aodiv@divisor+5,f,c
  4742  0010D0  3218               	rrcf	___aodiv@divisor+4,f,c
  4743  0010D2  3217               	rrcf	___aodiv@divisor+3,f,c
  4744  0010D4  3216               	rrcf	___aodiv@divisor+2,f,c
  4745  0010D6  3215               	rrcf	___aodiv@divisor+1,f,c
  4746  0010D8  3214               	rrcf	___aodiv@divisor,f,c
  4747  0010DA  2E1C               	decfsz	___aodiv@counter,f,c
  4748  0010DC  D7C9               	goto	u3020
  4749  0010DE                     l3377:
  4750  0010DE  501D               	movf	___aodiv@sign,w,c
  4751  0010E0  B4D8               	btfsc	status,2,c
  4752  0010E2  D010               	goto	l3381
  4753  0010E4  1E25               	comf	___aodiv@quotient+7,f,c
  4754  0010E6  1E24               	comf	___aodiv@quotient+6,f,c
  4755  0010E8  1E23               	comf	___aodiv@quotient+5,f,c
  4756  0010EA  1E22               	comf	___aodiv@quotient+4,f,c
  4757  0010EC  1E21               	comf	___aodiv@quotient+3,f,c
  4758  0010EE  1E20               	comf	___aodiv@quotient+2,f,c
  4759  0010F0  1E1F               	comf	___aodiv@quotient+1,f,c
  4760  0010F2  6C1E               	negf	___aodiv@quotient,c
  4761  0010F4  0E00               	movlw	0
  4762  0010F6  221F               	addwfc	___aodiv@quotient+1,f,c
  4763  0010F8  2220               	addwfc	___aodiv@quotient+2,f,c
  4764  0010FA  2221               	addwfc	___aodiv@quotient+3,f,c
  4765  0010FC  2222               	addwfc	___aodiv@quotient+4,f,c
  4766  0010FE  2223               	addwfc	___aodiv@quotient+5,f,c
  4767  001100  2224               	addwfc	___aodiv@quotient+6,f,c
  4768  001102  2225               	addwfc	___aodiv@quotient+7,f,c
  4769  001104                     l3381:
  4770  001104  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  4771  001108  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  4772  00110C  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  4773  001110  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  4774  001114  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  4775  001118  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  4776  00111C  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  4777  001120  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  4778  001124  0012               	return		;funcret
  4779  001126                     __end_of___aodiv:
  4780                           	opt callstack 0
  4781                           
  4782 ;; *************** function _ctoa *****************
  4783 ;; Defined at:
  4784 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  4787 ;;		 -> NULL(0), 
  4788 ;;  c               1   44[COMRAM] unsigned char 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  w               2   45[COMRAM] int 
  4791 ;;  l               2    0        int 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  2   42[COMRAM] int 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4801 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4804 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;Total ram usage:        5 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    8
  4808 ;; This function calls:
  4809 ;;		_pad
  4810 ;; This function is called by:
  4811 ;;		_vfpfcnvrt
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text13
  4816  0017E2                     __ptext13:
  4817                           	opt callstack 0
  4818  0017E2                     _ctoa:
  4819                           	opt callstack 19
  4820                           
  4821                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  4822                           
  4823                           ;incstack = 0
  4824  0017E2  5064               	movf	_width,w,c
  4825  0017E4  1065               	iorwf	_width+1,w,c
  4826  0017E6  A4D8               	btfss	status,2,c
  4827  0017E8  D005               	goto	l3437
  4828  0017EA  C064  F02E         	movff	_width,ctoa@w
  4829  0017EE  C065  F02F         	movff	_width+1,ctoa@w+1
  4830  0017F2  D006               	goto	l3439
  4831  0017F4                     l3437:
  4832  0017F4  0EFF               	movlw	255
  4833  0017F6  2464               	addwf	_width,w,c
  4834  0017F8  6E2E               	movwf	ctoa@w,c
  4835  0017FA  0EFF               	movlw	255
  4836  0017FC  2065               	addwfc	_width+1,w,c
  4837  0017FE  6E2F               	movwf	ctoa@w+1,c
  4838  001800                     l3439:
  4839                           
  4840                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
  4841  001800  C02D  F0B1         	movff	ctoa@c,_dbuf
  4842                           
  4843                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
  4844  001804  0E00               	movlw	0
  4845  001806  0100               	movlb	0	; () banked
  4846  001808  6FB2               	movwf	(_dbuf+1)& (0+255),b
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
  4850  00180A  C02B  F020         	movff	ctoa@fp,pad@fp
  4851  00180E  C02C  F021         	movff	ctoa@fp+1,pad@fp+1
  4852  001812  0EB1               	movlw	low _dbuf
  4853  001814  6E22               	movwf	pad@buf,c
  4854  001816  0E00               	movlw	high _dbuf
  4855  001818  6E23               	movwf	pad@buf+1,c
  4856  00181A  C02E  F024         	movff	ctoa@w,pad@p
  4857  00181E  C02F  F025         	movff	ctoa@w+1,pad@p+1
  4858  001822  EC2A  F00A         	call	_pad	;wreg free
  4859  001826  C020  F02B         	movff	?_pad,?_ctoa
  4860  00182A  C021  F02C         	movff	?_pad+1,?_ctoa+1
  4861  00182E  0012               	return		;funcret
  4862  001830                     __end_of_ctoa:
  4863                           	opt callstack 0
  4864                           
  4865 ;; *************** function _pad *****************
  4866 ;; Defined at:
  4867 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  4870 ;;		 -> NULL(0), 
  4871 ;;  buf             2   33[COMRAM] PTR unsigned char 
  4872 ;;		 -> dbuf(32), 
  4873 ;;  p               2   35[COMRAM] int 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  w               2   40[COMRAM] int 
  4876 ;;  i               2   38[COMRAM] int 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  2   31[COMRAM] int 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4886 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;Total ram usage:       11 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    7
  4893 ;; This function calls:
  4894 ;;		_fputc
  4895 ;;		_fputs
  4896 ;;		_strlen
  4897 ;; This function is called by:
  4898 ;;		_ctoa
  4899 ;;		_dtoa
  4900 ;;		_xtoa
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text14
  4905  001454                     __ptext14:
  4906                           	opt callstack 0
  4907  001454                     _pad:
  4908                           	opt callstack 19
  4909                           
  4910                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  4911                           
  4912                           ;incstack = 0
  4913  001454  A068               	btfss	_flags,0,c
  4914  001456  D00A               	goto	l3291
  4915                           
  4916                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  4917  001458  C022  F019         	movff	pad@buf,fputs@s
  4918  00145C  C023  F01A         	movff	pad@buf+1,fputs@s+1
  4919  001460  C020  F01B         	movff	pad@fp,fputs@fp
  4920  001464  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  4921  001468  EC5C  F00C         	call	_fputs	;wreg free
  4922  00146C                     l3291:
  4923                           
  4924                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  4925  00146C  BE25               	btfsc	pad@p+1,7,c
  4926  00146E  D005               	goto	l3295
  4927  001470  C024  F029         	movff	pad@p,pad@w
  4928  001474  C025  F02A         	movff	pad@p+1,pad@w+1
  4929  001478  D004               	goto	l239
  4930  00147A                     l3295:
  4931  00147A  0E00               	movlw	0
  4932  00147C  6E2A               	movwf	pad@w+1,c
  4933  00147E  0E00               	movlw	0
  4934  001480  6E29               	movwf	pad@w,c
  4935  001482                     l239:
  4936                           
  4937                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4938  001482  0E00               	movlw	0
  4939  001484  6E28               	movwf	pad@i+1,c
  4940  001486  0E00               	movlw	0
  4941  001488  6E27               	movwf	pad@i,c
  4942                           
  4943                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  4944  00148A  D00C               	goto	l3301
  4945  00148C                     l3297:
  4946                           
  4947                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  4948  00148C  0E00               	movlw	0
  4949  00148E  6E11               	movwf	fputc@c+1,c
  4950  001490  0E20               	movlw	32
  4951  001492  6E10               	movwf	fputc@c,c
  4952  001494  C020  F012         	movff	pad@fp,fputc@fp
  4953  001498  C021  F013         	movff	pad@fp+1,fputc@fp+1
  4954  00149C  EC2D  F00B         	call	_fputc	;wreg free
  4955                           
  4956                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4957  0014A0  4A27               	infsnz	pad@i,f,c
  4958  0014A2  2A28               	incf	pad@i+1,f,c
  4959  0014A4                     l3301:
  4960                           
  4961                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  4962  0014A4  5029               	movf	pad@w,w,c
  4963  0014A6  5C27               	subwf	pad@i,w,c
  4964  0014A8  5028               	movf	pad@i+1,w,c
  4965  0014AA  0A80               	xorlw	128
  4966  0014AC  6E26               	movwf	??_pad& (0+255),c
  4967  0014AE  502A               	movf	pad@w+1,w,c
  4968  0014B0  0A80               	xorlw	128
  4969  0014B2  5826               	subwfb	??_pad& (0+255),w,c
  4970  0014B4  A0D8               	btfss	status,0,c
  4971  0014B6  D7EA               	goto	l3297
  4972                           
  4973                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  4974  0014B8  B068               	btfsc	_flags,0,c
  4975  0014BA  D00A               	goto	l3305
  4976                           
  4977                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  4978  0014BC  C022  F019         	movff	pad@buf,fputs@s
  4979  0014C0  C023  F01A         	movff	pad@buf+1,fputs@s+1
  4980  0014C4  C020  F01B         	movff	pad@fp,fputs@fp
  4981  0014C8  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  4982  0014CC  EC5C  F00C         	call	_fputs	;wreg free
  4983  0014D0                     l3305:
  4984                           
  4985                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  4986  0014D0  C022  F00C         	movff	pad@buf,strlen@s
  4987  0014D4  C023  F00D         	movff	pad@buf+1,strlen@s+1
  4988  0014D8  EC09  F00D         	call	_strlen	;wreg free
  4989  0014DC  5029               	movf	pad@w,w,c
  4990  0014DE  240C               	addwf	?_strlen,w,c
  4991  0014E0  6E20               	movwf	?_pad,c
  4992  0014E2  502A               	movf	pad@w+1,w,c
  4993  0014E4  200D               	addwfc	?_strlen+1,w,c
  4994  0014E6  6E21               	movwf	?_pad+1,c
  4995  0014E8  0012               	return		;funcret
  4996  0014EA                     __end_of_pad:
  4997                           	opt callstack 0
  4998                           
  4999 ;; *************** function _strlen *****************
  5000 ;; Defined at:
  5001 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5004 ;;		 -> dbuf(32), 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;  a               2   13[COMRAM] PTR const unsigned char 
  5007 ;;		 -> dbuf(32), 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  2   11[COMRAM] unsigned int 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5020 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;Total ram usage:        4 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    1
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_pad
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text15
  5032  001A12                     __ptext15:
  5033                           	opt callstack 0
  5034  001A12                     _strlen:
  5035                           	opt callstack 24
  5036                           
  5037                           ;incstack = 0
  5038  001A12  C00C  F00E         	movff	strlen@s,strlen@a
  5039  001A16  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  5040  001A1A  D002               	goto	l3277
  5041  001A1C                     l3275:
  5042  001A1C  4A0C               	infsnz	strlen@s,f,c
  5043  001A1E  2A0D               	incf	strlen@s+1,f,c
  5044  001A20                     l3277:
  5045  001A20  C00C  FFD9         	movff	strlen@s,fsr2l
  5046  001A24  C00D  FFDA         	movff	strlen@s+1,fsr2h
  5047  001A28  50DF               	movf	indf2,w,c
  5048  001A2A  A4D8               	btfss	status,2,c
  5049  001A2C  D7F7               	goto	l3275
  5050  001A2E  500E               	movf	strlen@a,w,c
  5051  001A30  5C0C               	subwf	strlen@s,w,c
  5052  001A32  6E0C               	movwf	?_strlen,c
  5053  001A34  500F               	movf	strlen@a+1,w,c
  5054  001A36  580D               	subwfb	strlen@s+1,w,c
  5055  001A38  6E0D               	movwf	?_strlen+1,c
  5056  001A3A  0012               	return		;funcret
  5057  001A3C                     __end_of_strlen:
  5058                           	opt callstack 0
  5059                           
  5060 ;; *************** function _fputs *****************
  5061 ;; Defined at:
  5062 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  s               2   24[COMRAM] PTR const unsigned char 
  5065 ;;		 -> dbuf(32), 
  5066 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  5067 ;;		 -> NULL(0), 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  i               2   29[COMRAM] int 
  5070 ;;  c               1   28[COMRAM] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  2   24[COMRAM] int 
  5073 ;; Registers used:
  5074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;Total ram usage:        7 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    6
  5087 ;; This function calls:
  5088 ;;		_fputc
  5089 ;; This function is called by:
  5090 ;;		_pad
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           	psect	text16
  5095  0018B8                     __ptext16:
  5096                           	opt callstack 0
  5097  0018B8                     _fputs:
  5098                           	opt callstack 19
  5099                           
  5100                           ;incstack = 0
  5101  0018B8  0E00               	movlw	0
  5102  0018BA  6E1F               	movwf	fputs@i+1,c
  5103  0018BC  0E00               	movlw	0
  5104  0018BE  6E1E               	movwf	fputs@i,c
  5105  0018C0  D00B               	goto	l3271
  5106  0018C2                     l3267:
  5107  0018C2  C01D  F010         	movff	fputs@c,fputc@c
  5108  0018C6  6A11               	clrf	fputc@c+1,c
  5109  0018C8  C01B  F012         	movff	fputs@fp,fputc@fp
  5110  0018CC  C01C  F013         	movff	fputs@fp+1,fputc@fp+1
  5111  0018D0  EC2D  F00B         	call	_fputc	;wreg free
  5112  0018D4  4A1E               	infsnz	fputs@i,f,c
  5113  0018D6  2A1F               	incf	fputs@i+1,f,c
  5114  0018D8                     l3271:
  5115  0018D8  501E               	movf	fputs@i,w,c
  5116  0018DA  2419               	addwf	fputs@s,w,c
  5117  0018DC  6ED9               	movwf	fsr2l,c
  5118  0018DE  501F               	movf	fputs@i+1,w,c
  5119  0018E0  201A               	addwfc	fputs@s+1,w,c
  5120  0018E2  6EDA               	movwf	fsr2h,c
  5121  0018E4  50DF               	movf	indf2,w,c
  5122  0018E6  6E1D               	movwf	fputs@c,c
  5123  0018E8  501D               	movf	fputs@c,w,c
  5124  0018EA  B4D8               	btfsc	status,2,c
  5125  0018EC  0012               	return	
  5126  0018EE  D7E9               	goto	l3267
  5127  0018F0                     __end_of_fputs:
  5128                           	opt callstack 0
  5129                           
  5130 ;; *************** function _fputc *****************
  5131 ;; Defined at:
  5132 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  c               2   15[COMRAM] int 
  5135 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  5136 ;;		 -> NULL(0), 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  2   15[COMRAM] int 
  5141 ;; Registers used:
  5142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;Total ram usage:        9 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    5
  5155 ;; This function calls:
  5156 ;;		_putch
  5157 ;; This function is called by:
  5158 ;;		_pad
  5159 ;;		_vfpfcnvrt
  5160 ;;		_fputs
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text17
  5165  00165A                     __ptext17:
  5166                           	opt callstack 0
  5167  00165A                     _fputc:
  5168                           	opt callstack 19
  5169                           
  5170                           ;incstack = 0
  5171  00165A  5012               	movf	fputc@fp,w,c
  5172  00165C  1013               	iorwf	fputc@fp+1,w,c
  5173  00165E  B4D8               	btfsc	status,2,c
  5174  001660  D004               	goto	u2770
  5175  001662  5012               	movf	fputc@fp,w,c
  5176  001664  1013               	iorwf	fputc@fp+1,w,c
  5177  001666  A4D8               	btfss	status,2,c
  5178  001668  D004               	goto	l3257
  5179  00166A                     u2770:
  5180  00166A  5010               	movf	fputc@c,w,c
  5181  00166C  EC93  F00D         	call	_putch
  5182  001670  0012               	return	
  5183  001672                     l3257:
  5184  001672  EE20 F004          	lfsr	2,4
  5185  001676  5012               	movf	fputc@fp,w,c
  5186  001678  26D9               	addwf	fsr2l,f,c
  5187  00167A  5013               	movf	fputc@fp+1,w,c
  5188  00167C  22DA               	addwfc	fsr2h,f,c
  5189  00167E  50DE               	movf	postinc2,w,c
  5190  001680  10DE               	iorwf	postinc2,w,c
  5191  001682  B4D8               	btfsc	status,2,c
  5192  001684  D016               	goto	u2790
  5193  001686  EE20 F004          	lfsr	2,4
  5194  00168A  5012               	movf	fputc@fp,w,c
  5195  00168C  26D9               	addwf	fsr2l,f,c
  5196  00168E  5013               	movf	fputc@fp+1,w,c
  5197  001690  22DA               	addwfc	fsr2h,f,c
  5198  001692  EE10 F002          	lfsr	1,2
  5199  001696  5012               	movf	fputc@fp,w,c
  5200  001698  26E1               	addwf	fsr1l,f,c
  5201  00169A  5013               	movf	fputc@fp+1,w,c
  5202  00169C  22E2               	addwfc	fsr1h,f,c
  5203  00169E  50DE               	movf	postinc2,w,c
  5204  0016A0  5CE6               	subwf	postinc1,w,c
  5205  0016A2  50E6               	movf	postinc1,w,c
  5206  0016A4  0A80               	xorlw	128
  5207  0016A6  6E18               	movwf	(??_fputc+4)& (0+255),c
  5208  0016A8  50DE               	movf	postinc2,w,c
  5209  0016AA  0A80               	xorlw	128
  5210  0016AC  5818               	subwfb	(??_fputc+4)& (0+255),w,c
  5211  0016AE  B0D8               	btfsc	status,0,c
  5212  0016B0  0012               	return	
  5213  0016B2                     u2790:
  5214  0016B2  EE20 F002          	lfsr	2,2
  5215  0016B6  5012               	movf	fputc@fp,w,c
  5216  0016B8  26D9               	addwf	fsr2l,f,c
  5217  0016BA  5013               	movf	fputc@fp+1,w,c
  5218  0016BC  22DA               	addwfc	fsr2h,f,c
  5219  0016BE  2ADE               	incf	postinc2,f,c
  5220  0016C0  0E00               	movlw	0
  5221  0016C2  22DD               	addwfc	postdec2,f,c
  5222  0016C4  0012               	return		;funcret
  5223  0016C6                     __end_of_fputc:
  5224                           	opt callstack 0
  5225                           
  5226 ;; *************** function _putch *****************
  5227 ;; Defined at:
  5228 ;;		line 102 in file "lcd.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  data            1    wreg     unsigned char 
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;  data            1   14[COMRAM] unsigned char 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      void 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0, cstack
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;Total ram usage:        1 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    4
  5249 ;; This function calls:
  5250 ;;		_send_byte
  5251 ;; This function is called by:
  5252 ;;		_fputc
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text18
  5257  001B26                     __ptext18:
  5258                           	opt callstack 0
  5259  001B26                     _putch:
  5260                           	opt callstack 19
  5261                           
  5262                           ;incstack = 0
  5263                           ;putch@data stored from wreg
  5264  001B26  6E0F               	movwf	putch@data,c
  5265                           
  5266                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  5267  001B28  848C               	bsf	3980,2,c	;volatile
  5268                           
  5269                           ;lcd.c: 104:     send_byte((unsigned char)data);
  5270  001B2A  500F               	movf	putch@data,w,c
  5271  001B2C  EC81  F00D         	call	_send_byte
  5272  001B30  0012               	return		;funcret
  5273  001B32                     __end_of_putch:
  5274                           	opt callstack 0
  5275                           
  5276 ;; *************** function _atoi *****************
  5277 ;; Defined at:
  5278 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  s               2   18[COMRAM] PTR const unsigned char 
  5281 ;;		 -> STR_34(10), STR_33(14), STR_32(11), STR_31(12), 
  5282 ;;		 -> STR_30(10), STR_29(15), STR_28(14), STR_27(12), 
  5283 ;;		 -> STR_26(10), STR_25(15), STR_24(12), STR_23(15), 
  5284 ;;		 -> STR_22(12), STR_21(16), STR_20(9), STR_19(9), 
  5285 ;;		 -> STR_18(11), STR_17(13), STR_16(15), STR_15(11), 
  5286 ;;		 -> STR_14(15), STR_13(12), STR_12(15), STR_11(13), 
  5287 ;;		 -> STR_10(11), STR_9(9), STR_8(12), STR_7(10), 
  5288 ;;		 -> STR_6(15), STR_5(17), STR_4(15), STR_3(15), 
  5289 ;;		 -> STR_2(9), STR_1(8), 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  n               2   31[COMRAM] int 
  5292 ;;  neg             2   24[COMRAM] int 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  2   18[COMRAM] int 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;Total ram usage:       15 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:    2
  5309 ;; This function calls:
  5310 ;;		___wmul
  5311 ;;		_isdigit
  5312 ;;		_isspace
  5313 ;; This function is called by:
  5314 ;;		_vfpfcnvrt
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text19
  5319  001126                     __ptext19:
  5320                           	opt callstack 0
  5321  001126                     _atoi:
  5322                           	opt callstack 25
  5323                           
  5324                           ;incstack = 0
  5325  001126  0E00               	movlw	0
  5326  001128  6E21               	movwf	atoi@n+1,c
  5327  00112A  0E00               	movlw	0
  5328  00112C  6E20               	movwf	atoi@n,c
  5329  00112E  0E00               	movlw	0
  5330  001130  6E1A               	movwf	atoi@neg+1,c
  5331  001132  0E00               	movlw	0
  5332  001134  6E19               	movwf	atoi@neg,c
  5333  001136  D002               	goto	l3579
  5334  001138                     l3577:
  5335  001138  4A13               	infsnz	atoi@s,f,c
  5336  00113A  2A14               	incf	atoi@s+1,f,c
  5337  00113C                     l3579:
  5338  00113C  0E01               	movlw	1
  5339  00113E  6E1F               	movwf	_atoi$997,c
  5340  001140  C013  FFF6         	movff	atoi@s,tblptrl
  5341  001144  C014  FFF7         	movff	atoi@s+1,tblptrh
  5342  001148                     	if	0	;tblptru may be non-zero
  5343  001148                     	endif
  5344  001148                     	if	0	;tblptru may be non-zero
  5345  001148                     	endif
  5346  001148  0008               	tblrd		*
  5347  00114A  50F5               	movf	tablat,w,c
  5348  00114C  0A20               	xorlw	32
  5349  00114E  B4D8               	btfsc	status,2,c
  5350  001150  D018               	goto	l3587
  5351  001152  0EF7               	movlw	247
  5352  001154  6E15               	movwf	??_atoi& (0+255),c
  5353  001156  0EFF               	movlw	255
  5354  001158  6E16               	movwf	(??_atoi+1)& (0+255),c
  5355  00115A  C013  FFF6         	movff	atoi@s,tblptrl
  5356  00115E  C014  FFF7         	movff	atoi@s+1,tblptrh
  5357  001162                     	if	0	;tblptru may be non-zero
  5358  001162                     	endif
  5359  001162                     	if	0	;tblptru may be non-zero
  5360  001162                     	endif
  5361  001162  0008               	tblrd		*
  5362  001164  50F5               	movf	tablat,w,c
  5363  001166  6E17               	movwf	(??_atoi+2)& (0+255),c
  5364  001168  6A18               	clrf	(??_atoi+3)& (0+255),c
  5365  00116A  5015               	movf	??_atoi,w,c
  5366  00116C  2617               	addwf	??_atoi+2,f,c
  5367  00116E  5016               	movf	??_atoi+1,w,c
  5368  001170  2218               	addwfc	??_atoi+3,f,c
  5369  001172  5018               	movf	??_atoi+3,w,c
  5370  001174  E104               	bnz	u3470
  5371  001176  0E05               	movlw	5
  5372  001178  5C17               	subwf	??_atoi+2,w,c
  5373  00117A  A0D8               	btfss	status,0,c
  5374  00117C  D002               	goto	l3587
  5375  00117E                     u3470:
  5376  00117E  0E00               	movlw	0
  5377  001180  6E1F               	movwf	_atoi$997,c
  5378  001182                     l3587:
  5379  001182  C01F  F01B         	movff	_atoi$997,_atoi$996
  5380  001186  6A1C               	clrf	_atoi$996+1,c
  5381  001188  501B               	movf	_atoi$996,w,c
  5382  00118A  101C               	iorwf	_atoi$996+1,w,c
  5383  00118C  B4D8               	btfsc	status,2,c
  5384  00118E  D008               	goto	l3597
  5385  001190  D7D3               	goto	l3577
  5386  001192                     l3593:
  5387  001192  0E00               	movlw	0
  5388  001194  6E1A               	movwf	atoi@neg+1,c
  5389  001196  0E01               	movlw	1
  5390  001198  6E19               	movwf	atoi@neg,c
  5391  00119A                     l3595:
  5392  00119A  4A13               	infsnz	atoi@s,f,c
  5393  00119C  2A14               	incf	atoi@s+1,f,c
  5394  00119E  D02E               	goto	l3603
  5395  0011A0                     l3597:
  5396  0011A0  C013  FFF6         	movff	atoi@s,tblptrl
  5397  0011A4  C014  FFF7         	movff	atoi@s+1,tblptrh
  5398  0011A8                     	if	0	;tblptru may be non-zero
  5399  0011A8                     	endif
  5400  0011A8                     	if	0	;tblptru may be non-zero
  5401  0011A8                     	endif
  5402  0011A8  0008               	tblrd		*
  5403  0011AA  50F5               	movf	tablat,w,c
  5404  0011AC  6E15               	movwf	??_atoi& (0+255),c
  5405  0011AE  6A16               	clrf	(??_atoi+1)& (0+255),c
  5406                           
  5407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5408                           ; Switch size 1, requested type "simple"
  5409                           ; Number of cases is 1, Range of values is 0 to 0
  5410                           ; switch strategies available:
  5411                           ; Name         Instructions Cycles
  5412                           ; simple_byte            4     3 (average)
  5413                           ;	Chosen strategy is simple_byte
  5414  0011B0  5016               	movf	??_atoi+1,w,c
  5415  0011B2  0A00               	xorlw	0	; case 0
  5416  0011B4  A4D8               	btfss	status,2,c
  5417  0011B6  D022               	goto	l3603
  5418                           
  5419                           ; Switch size 1, requested type "simple"
  5420                           ; Number of cases is 2, Range of values is 43 to 45
  5421                           ; switch strategies available:
  5422                           ; Name         Instructions Cycles
  5423                           ; simple_byte            7     4 (average)
  5424                           ;	Chosen strategy is simple_byte
  5425  0011B8  5015               	movf	??_atoi,w,c
  5426  0011BA  0A2B               	xorlw	43	; case 43
  5427  0011BC  B4D8               	btfsc	status,2,c
  5428  0011BE  D7ED               	goto	l3595
  5429  0011C0  0A06               	xorlw	6	; case 45
  5430  0011C2  B4D8               	btfsc	status,2,c
  5431  0011C4  D7E6               	goto	l3593
  5432  0011C6  D01A               	goto	l3603
  5433  0011C8                     l3599:
  5434  0011C8  C020  F00C         	movff	atoi@n,___wmul@multiplier
  5435  0011CC  C021  F00D         	movff	atoi@n+1,___wmul@multiplier+1
  5436  0011D0  0E00               	movlw	0
  5437  0011D2  6E0F               	movwf	___wmul@multiplicand+1,c
  5438  0011D4  0E0A               	movlw	10
  5439  0011D6  6E0E               	movwf	___wmul@multiplicand,c
  5440  0011D8  EC47  F00D         	call	___wmul	;wreg free
  5441  0011DC  C013  FFF6         	movff	atoi@s,tblptrl
  5442  0011E0  C014  FFF7         	movff	atoi@s+1,tblptrh
  5443  0011E4                     	if	0	;tblptru may be non-zero
  5444  0011E4                     	endif
  5445  0011E4                     	if	0	;tblptru may be non-zero
  5446  0011E4                     	endif
  5447  0011E4  0008               	tblrd		*
  5448  0011E6  50F5               	movf	tablat,w,c
  5449  0011E8  5E0C               	subwf	?___wmul,f,c
  5450  0011EA  0E00               	movlw	0
  5451  0011EC  5A0D               	subwfb	?___wmul+1,f,c
  5452  0011EE  0E30               	movlw	48
  5453  0011F0  240C               	addwf	?___wmul,w,c
  5454  0011F2  6E20               	movwf	atoi@n,c
  5455  0011F4  0E00               	movlw	0
  5456  0011F6  200D               	addwfc	?___wmul+1,w,c
  5457  0011F8  6E21               	movwf	atoi@n+1,c
  5458  0011FA  D7CF               	goto	l3595
  5459  0011FC                     l3603:
  5460  0011FC  0ED0               	movlw	208
  5461  0011FE  6E15               	movwf	??_atoi& (0+255),c
  5462  001200  0EFF               	movlw	255
  5463  001202  6E16               	movwf	(??_atoi+1)& (0+255),c
  5464  001204  C013  FFF6         	movff	atoi@s,tblptrl
  5465  001208  C014  FFF7         	movff	atoi@s+1,tblptrh
  5466  00120C                     	if	0	;tblptru may be non-zero
  5467  00120C                     	endif
  5468  00120C                     	if	0	;tblptru may be non-zero
  5469  00120C                     	endif
  5470  00120C  0008               	tblrd		*
  5471  00120E  50F5               	movf	tablat,w,c
  5472  001210  6E17               	movwf	(??_atoi+2)& (0+255),c
  5473  001212  6A18               	clrf	(??_atoi+3)& (0+255),c
  5474  001214  5015               	movf	??_atoi,w,c
  5475  001216  2617               	addwf	??_atoi+2,f,c
  5476  001218  5016               	movf	??_atoi+1,w,c
  5477  00121A  2218               	addwfc	??_atoi+3,f,c
  5478  00121C  5018               	movf	??_atoi+3,w,c
  5479  00121E  E106               	bnz	u3490
  5480  001220  0E0A               	movlw	10
  5481  001222  5C17               	subwf	??_atoi+2,w,c
  5482  001224  B0D8               	btfsc	status,0,c
  5483  001226  D002               	goto	u3490
  5484  001228  0E01               	movlw	1
  5485  00122A  D001               	goto	u3500
  5486  00122C                     u3490:
  5487  00122C  0E00               	movlw	0
  5488  00122E                     u3500:
  5489  00122E  6E1D               	movwf	_atoi$998,c
  5490  001230  6A1E               	clrf	_atoi$998+1,c
  5491  001232  501D               	movf	_atoi$998,w,c
  5492  001234  101E               	iorwf	_atoi$998+1,w,c
  5493  001236  A4D8               	btfss	status,2,c
  5494  001238  D7C7               	goto	l3599
  5495  00123A  5019               	movf	atoi@neg,w,c
  5496  00123C  101A               	iorwf	atoi@neg+1,w,c
  5497  00123E  A4D8               	btfss	status,2,c
  5498  001240  D00D               	goto	l1056
  5499  001242  C020  F015         	movff	atoi@n,??_atoi
  5500  001246  C021  F016         	movff	atoi@n+1,??_atoi+1
  5501  00124A  1E15               	comf	??_atoi,f,c
  5502  00124C  1E16               	comf	??_atoi+1,f,c
  5503  00124E  4A15               	infsnz	??_atoi,f,c
  5504  001250  2A16               	incf	??_atoi+1,f,c
  5505  001252  C015  F013         	movff	??_atoi,?_atoi
  5506  001256  C016  F014         	movff	??_atoi+1,?_atoi+1
  5507  00125A  0012               	return	
  5508  00125C                     l1056:
  5509  00125C  C020  F013         	movff	atoi@n,?_atoi
  5510  001260  C021  F014         	movff	atoi@n+1,?_atoi+1
  5511  001264  0012               	return		;funcret
  5512  001266                     __end_of_atoi:
  5513                           	opt callstack 0
  5514                           
  5515 ;; *************** function _isspace *****************
  5516 ;; Defined at:
  5517 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  c               2   11[COMRAM] int 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  2   11[COMRAM] int 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;Total ram usage:        7 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    1
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_atoi
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text20
  5546  00187A                     __ptext20:
  5547                           	opt callstack 0
  5548  00187A                     _isspace:
  5549                           	opt callstack 25
  5550                           
  5551                           ;incstack = 0
  5552  00187A  0E01               	movlw	1
  5553  00187C  6E12               	movwf	_isspace$1023,c
  5554  00187E  0E20               	movlw	32
  5555  001880  180C               	xorwf	isspace@c,w,c
  5556  001882  100D               	iorwf	isspace@c+1,w,c
  5557  001884  B4D8               	btfsc	status,2,c
  5558  001886  D014               	goto	l3429
  5559  001888  0EF7               	movlw	247
  5560  00188A  6E0E               	movwf	??_isspace& (0+255),c
  5561  00188C  0EFF               	movlw	255
  5562  00188E  6E0F               	movwf	(??_isspace+1)& (0+255),c
  5563  001890  C00C  F010         	movff	isspace@c,??_isspace+2
  5564  001894  C00D  F011         	movff	isspace@c+1,??_isspace+3
  5565  001898  500E               	movf	??_isspace,w,c
  5566  00189A  2610               	addwf	??_isspace+2,f,c
  5567  00189C  500F               	movf	??_isspace+1,w,c
  5568  00189E  2211               	addwfc	??_isspace+3,f,c
  5569  0018A0  5011               	movf	??_isspace+3,w,c
  5570  0018A2  E104               	bnz	u3120
  5571  0018A4  0E05               	movlw	5
  5572  0018A6  5C10               	subwf	??_isspace+2,w,c
  5573  0018A8  A0D8               	btfss	status,0,c
  5574  0018AA  D002               	goto	l3429
  5575  0018AC                     u3120:
  5576  0018AC  0E00               	movlw	0
  5577  0018AE  6E12               	movwf	_isspace$1023,c
  5578  0018B0                     l3429:
  5579  0018B0  C012  F00C         	movff	_isspace$1023,?_isspace
  5580  0018B4  6A0D               	clrf	?_isspace+1,c
  5581  0018B6  0012               	return		;funcret
  5582  0018B8                     __end_of_isspace:
  5583                           	opt callstack 0
  5584                           
  5585 ;; *************** function _isdigit *****************
  5586 ;; Defined at:
  5587 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  c               2   11[COMRAM] int 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  2   11[COMRAM] int 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;Total ram usage:        6 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:    1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_vfpfcnvrt
  5612 ;;		_atoi
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text21
  5617  0019B6                     __ptext21:
  5618                           	opt callstack 0
  5619  0019B6                     _isdigit:
  5620                           	opt callstack 26
  5621                           
  5622                           ;incstack = 0
  5623  0019B6  0ED0               	movlw	208
  5624  0019B8  6E0E               	movwf	??_isdigit& (0+255),c
  5625  0019BA  0EFF               	movlw	255
  5626  0019BC  6E0F               	movwf	(??_isdigit+1)& (0+255),c
  5627  0019BE  C00C  F010         	movff	isdigit@c,??_isdigit+2
  5628  0019C2  C00D  F011         	movff	isdigit@c+1,??_isdigit+3
  5629  0019C6  500E               	movf	??_isdigit,w,c
  5630  0019C8  2610               	addwf	??_isdigit+2,f,c
  5631  0019CA  500F               	movf	??_isdigit+1,w,c
  5632  0019CC  2211               	addwfc	??_isdigit+3,f,c
  5633  0019CE  5011               	movf	??_isdigit+3,w,c
  5634  0019D0  E106               	bnz	u2960
  5635  0019D2  0E0A               	movlw	10
  5636  0019D4  5C10               	subwf	??_isdigit+2,w,c
  5637  0019D6  B0D8               	btfsc	status,0,c
  5638  0019D8  D002               	goto	u2960
  5639  0019DA  0E01               	movlw	1
  5640  0019DC  D001               	goto	u2970
  5641  0019DE                     u2960:
  5642  0019DE  0E00               	movlw	0
  5643  0019E0                     u2970:
  5644  0019E0  6E0C               	movwf	?_isdigit,c
  5645  0019E2  6A0D               	clrf	?_isdigit+1,c
  5646  0019E4  0012               	return		;funcret
  5647  0019E6                     __end_of_isdigit:
  5648                           	opt callstack 0
  5649                           
  5650 ;; *************** function ___wmul *****************
  5651 ;; Defined at:
  5652 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  multiplier      2   11[COMRAM] unsigned int 
  5655 ;;  multiplicand    2   13[COMRAM] unsigned int 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  product         2   15[COMRAM] unsigned int 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  2   11[COMRAM] unsigned int 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0, prodl, prodh
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;Total ram usage:        6 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    1
  5674 ;; This function calls:
  5675 ;;		Nothing
  5676 ;; This function is called by:
  5677 ;;		_atoi
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text22
  5682  001A8E                     __ptext22:
  5683                           	opt callstack 0
  5684  001A8E                     ___wmul:
  5685                           	opt callstack 25
  5686                           
  5687                           ;incstack = 0
  5688  001A8E  500C               	movf	___wmul@multiplier,w,c
  5689  001A90  020E               	mulwf	___wmul@multiplicand,c
  5690  001A92  CFF3 F010          	movff	prodl,___wmul@product
  5691  001A96  CFF4 F011          	movff	prodh,___wmul@product+1
  5692  001A9A  500C               	movf	___wmul@multiplier,w,c
  5693  001A9C  020F               	mulwf	___wmul@multiplicand+1,c
  5694  001A9E  50F3               	movf	prodl,w,c
  5695  001AA0  2611               	addwf	___wmul@product+1,f,c
  5696  001AA2  500D               	movf	___wmul@multiplier+1,w,c
  5697  001AA4  020E               	mulwf	___wmul@multiplicand,c
  5698  001AA6  50F3               	movf	prodl,w,c
  5699  001AA8  2611               	addwf	___wmul@product+1,f,c
  5700  001AAA  C010  F00C         	movff	___wmul@product,?___wmul
  5701  001AAE  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  5702  001AB2  0012               	return		;funcret
  5703  001AB4                     __end_of___wmul:
  5704                           	opt callstack 0
  5705                           
  5706 ;; *************** function _initLCD *****************
  5707 ;; Defined at:
  5708 ;;		line 69 in file "lcd.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;Total ram usage:        1 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    5
  5729 ;; This function calls:
  5730 ;;		_lcdInst
  5731 ;;		_send_byte
  5732 ;;		_send_nibble
  5733 ;; This function is called by:
  5734 ;;		_main
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text23
  5739  0016C6                     __ptext23:
  5740                           	opt callstack 0
  5741  0016C6                     _initLCD:
  5742                           	opt callstack 25
  5743                           
  5744                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  5745                           
  5746                           ;incstack = 0
  5747  0016C6  0E31               	movlw	49
  5748  0016C8  6E10               	movwf	??_initLCD& (0+255),c
  5749  0016CA  0EB2               	movlw	178
  5750  0016CC                     u4287:
  5751  0016CC  2EE8               	decfsz	wreg,f,c
  5752  0016CE  D7FE               	bra	u4287
  5753  0016D0  2E10               	decfsz	??_initLCD& (0+255),f,c
  5754  0016D2  D7FC               	bra	u4287
  5755  0016D4  D000               	nop2	
  5756                           
  5757                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  5758  0016D6  948C               	bcf	3980,2,c	;volatile
  5759                           
  5760                           ;lcd.c: 74:     send_nibble(0b0011);
  5761  0016D8  0E03               	movlw	3
  5762  0016DA  EC6C  F00D         	call	_send_nibble
  5763                           
  5764                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  5765  0016DE  0E11               	movlw	17
  5766  0016E0  6E10               	movwf	??_initLCD& (0+255),c
  5767  0016E2  0E3A               	movlw	58
  5768  0016E4                     u4297:
  5769  0016E4  2EE8               	decfsz	wreg,f,c
  5770  0016E6  D7FE               	bra	u4297
  5771  0016E8  2E10               	decfsz	??_initLCD& (0+255),f,c
  5772  0016EA  D7FC               	bra	u4297
  5773  0016EC  D000               	nop2	
  5774                           
  5775                           ;lcd.c: 76:     send_nibble(0b0011);
  5776  0016EE  0E03               	movlw	3
  5777  0016F0  EC6C  F00D         	call	_send_nibble
  5778                           
  5779                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  5780  0016F4  0E7D               	movlw	125
  5781  0016F6                     u4307:
  5782  0016F6  2EE8               	decfsz	wreg,f,c
  5783  0016F8  D7FE               	bra	u4307
  5784                           
  5785                           ;lcd.c: 78:     send_byte(0b00110010);
  5786  0016FA  0E32               	movlw	50
  5787  0016FC  EC81  F00D         	call	_send_byte
  5788                           
  5789                           ;lcd.c: 80:     send_byte(0b00101000);
  5790  001700  0E28               	movlw	40
  5791  001702  EC81  F00D         	call	_send_byte
  5792                           
  5793                           ;lcd.c: 81:     send_byte(0b00001000);
  5794  001706  0E08               	movlw	8
  5795  001708  EC81  F00D         	call	_send_byte
  5796                           
  5797                           ;lcd.c: 82:     send_byte(0b00000001);
  5798  00170C  0E01               	movlw	1
  5799  00170E  EC81  F00D         	call	_send_byte
  5800                           
  5801                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  5802  001712  0E11               	movlw	17
  5803  001714  6E10               	movwf	??_initLCD& (0+255),c
  5804  001716  0E3A               	movlw	58
  5805  001718                     u4317:
  5806  001718  2EE8               	decfsz	wreg,f,c
  5807  00171A  D7FE               	bra	u4317
  5808  00171C  2E10               	decfsz	??_initLCD& (0+255),f,c
  5809  00171E  D7FC               	bra	u4317
  5810  001720  D000               	nop2	
  5811                           
  5812                           ;lcd.c: 84:     send_byte(0b00000110);
  5813  001722  0E06               	movlw	6
  5814  001724  EC81  F00D         	call	_send_byte
  5815                           
  5816                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  5817  001728  0E0F               	movlw	15
  5818  00172A  EC99  F00D         	call	_lcdInst
  5819  00172E  0012               	return		;funcret
  5820  001730                     __end_of_initLCD:
  5821                           	opt callstack 0
  5822                           
  5823 ;; *************** function _lcdInst *****************
  5824 ;; Defined at:
  5825 ;;		line 64 in file "lcd.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  data            1    wreg     unsigned char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  data            1   14[COMRAM] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;Total ram usage:        1 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    4
  5846 ;; This function calls:
  5847 ;;		_send_byte
  5848 ;; This function is called by:
  5849 ;;		_initLCD
  5850 ;;		_main
  5851 ;;		_lcd_shift_cursor
  5852 ;;		_lcd_shift_display
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text24
  5857  001B32                     __ptext24:
  5858                           	opt callstack 0
  5859  001B32                     _lcdInst:
  5860                           	opt callstack 26
  5861                           
  5862                           ;incstack = 0
  5863                           ;lcdInst@data stored from wreg
  5864  001B32  6E0F               	movwf	lcdInst@data,c
  5865                           
  5866                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  5867  001B34  948C               	bcf	3980,2,c	;volatile
  5868                           
  5869                           ;lcd.c: 66:     send_byte(data);
  5870  001B36  500F               	movf	lcdInst@data,w,c
  5871  001B38  EC81  F00D         	call	_send_byte
  5872  001B3C  0012               	return		;funcret
  5873  001B3E                     __end_of_lcdInst:
  5874                           	opt callstack 0
  5875                           
  5876 ;; *************** function _send_byte *****************
  5877 ;; Defined at:
  5878 ;;		line 55 in file "lcd.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  data            1    wreg     unsigned char 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  data            1   13[COMRAM] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;Total ram usage:        1 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    3
  5899 ;; This function calls:
  5900 ;;		_send_nibble
  5901 ;; This function is called by:
  5902 ;;		_lcdInst
  5903 ;;		_initLCD
  5904 ;;		_putch
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text25
  5909  001B02                     __ptext25:
  5910                           	opt callstack 0
  5911  001B02                     _send_byte:
  5912                           	opt callstack 19
  5913                           
  5914                           ;incstack = 0
  5915                           ;send_byte@data stored from wreg
  5916  001B02  6E0E               	movwf	send_byte@data,c
  5917                           
  5918                           ;lcd.c: 57:     send_nibble(data >> 4);
  5919  001B04  380E               	swapf	send_byte@data,w,c
  5920  001B06  0B0F               	andlw	15
  5921  001B08  EC6C  F00D         	call	_send_nibble
  5922                           
  5923                           ;lcd.c: 60:     send_nibble(data);
  5924  001B0C  500E               	movf	send_byte@data,w,c
  5925  001B0E  EC6C  F00D         	call	_send_nibble
  5926  001B12  0012               	return		;funcret
  5927  001B14                     __end_of_send_byte:
  5928                           	opt callstack 0
  5929                           
  5930 ;; *************** function _send_nibble *****************
  5931 ;; Defined at:
  5932 ;;		line 44 in file "lcd.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  data            1    wreg     unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  data            1   12[COMRAM] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;Total ram usage:        1 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    2
  5953 ;; This function calls:
  5954 ;;		_pulse_e
  5955 ;; This function is called by:
  5956 ;;		_send_byte
  5957 ;;		_initLCD
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text26
  5962  001AD8                     __ptext26:
  5963                           	opt callstack 0
  5964  001AD8                     _send_nibble:
  5965                           	opt callstack 19
  5966                           
  5967                           ;incstack = 0
  5968                           ;send_nibble@data stored from wreg
  5969  001AD8  6E0D               	movwf	send_nibble@data,c
  5970                           
  5971                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  5972  001ADA  508C               	movf	3980,w,c	;volatile
  5973  001ADC  0B0F               	andlw	15
  5974  001ADE  6E8C               	movwf	3980,c	;volatile
  5975                           
  5976                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  5977  001AE0  380D               	swapf	send_nibble@data,w,c
  5978  001AE2  0BF0               	andlw	240
  5979  001AE4  108C               	iorwf	3980,w,c	;volatile
  5980  001AE6  6E8C               	movwf	3980,c	;volatile
  5981                           
  5982                           ;lcd.c: 48:     pulse_e();
  5983  001AE8  EC1E  F00D         	call	_pulse_e	;wreg free
  5984  001AEC  0012               	return		;funcret
  5985  001AEE                     __end_of_send_nibble:
  5986                           	opt callstack 0
  5987                           
  5988 ;; *************** function _pulse_e *****************
  5989 ;; Defined at:
  5990 ;;		line 28 in file "lcd.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  interruptSta    1   11[COMRAM] unsigned char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;Total ram usage:        1 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    1
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_send_nibble
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text27
  6019  001A3C                     __ptext27:
  6020                           	opt callstack 0
  6021  001A3C                     _pulse_e:
  6022                           	opt callstack 19
  6023                           
  6024                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  6025                           
  6026                           ;incstack = 0
  6027  001A3C  0E00               	movlw	0
  6028  001A3E  BEF2               	btfsc	4082,7,c	;volatile
  6029  001A40  0E01               	movlw	1
  6030  001A42  6E0C               	movwf	pulse_e@interruptState,c
  6031                           
  6032                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  6033  001A44  9EF2               	bcf	4082,7,c	;volatile
  6034                           
  6035                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  6036  001A46  868C               	bsf	3980,3,c	;volatile
  6037                           
  6038                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  6039  001A48  0E14               	movlw	20
  6040  001A4A                     u4327:
  6041  001A4A  2EE8               	decfsz	wreg,f,c
  6042  001A4C  D7FE               	bra	u4327
  6043  001A4E  D000               	nop2	
  6044                           
  6045                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  6046  001A50  968C               	bcf	3980,3,c	;volatile
  6047                           
  6048                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  6049  001A52  0E53               	movlw	83
  6050  001A54                     u4337:
  6051  001A54  2EE8               	decfsz	wreg,f,c
  6052  001A56  D7FE               	bra	u4337
  6053  001A58  F000               	nop	
  6054                           
  6055                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  6056  001A5A  B00C               	btfsc	pulse_e@interruptState,0,c
  6057  001A5C  D002               	bra	u2755
  6058  001A5E  9EF2               	bcf	4082,7,c	;volatile
  6059  001A60  D001               	bra	u2756
  6060  001A62                     u2755:
  6061  001A62  8EF2               	bsf	4082,7,c	;volatile
  6062  001A64                     u2756:
  6063  001A64  0012               	return		;funcret
  6064  001A66                     __end_of_pulse_e:
  6065                           	opt callstack 0
  6066                           
  6067 ;; *************** function ___awmod *****************
  6068 ;; Defined at:
  6069 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  dividend        2   11[COMRAM] int 
  6072 ;;  divisor         2   13[COMRAM] int 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  sign            1   16[COMRAM] unsigned char 
  6075 ;;  counter         1   15[COMRAM] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  2   11[COMRAM] int 
  6078 ;; Registers used:
  6079 ;;		wreg, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:        6 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    1
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_main
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text28
  6100  0015EA                     __ptext28:
  6101                           	opt callstack 0
  6102  0015EA                     ___awmod:
  6103                           	opt callstack 29
  6104                           
  6105                           ;incstack = 0
  6106  0015EA  0E00               	movlw	0
  6107  0015EC  6E11               	movwf	___awmod@sign,c
  6108  0015EE  AE0D               	btfss	___awmod@dividend+1,7,c
  6109  0015F0  D006               	goto	l3849
  6110  0015F2  6C0C               	negf	___awmod@dividend,c
  6111  0015F4  1E0D               	comf	___awmod@dividend+1,f,c
  6112  0015F6  B0D8               	btfsc	status,0,c
  6113  0015F8  2A0D               	incf	___awmod@dividend+1,f,c
  6114  0015FA  0E01               	movlw	1
  6115  0015FC  6E11               	movwf	___awmod@sign,c
  6116  0015FE                     l3849:
  6117  0015FE  AE0F               	btfss	___awmod@divisor+1,7,c
  6118  001600  D004               	goto	l3853
  6119  001602  6C0E               	negf	___awmod@divisor,c
  6120  001604  1E0F               	comf	___awmod@divisor+1,f,c
  6121  001606  B0D8               	btfsc	status,0,c
  6122  001608  2A0F               	incf	___awmod@divisor+1,f,c
  6123  00160A                     l3853:
  6124  00160A  500E               	movf	___awmod@divisor,w,c
  6125  00160C  100F               	iorwf	___awmod@divisor+1,w,c
  6126  00160E  B4D8               	btfsc	status,2,c
  6127  001610  D018               	goto	l3869
  6128  001612  0E01               	movlw	1
  6129  001614  6E10               	movwf	___awmod@counter,c
  6130  001616  D004               	goto	l3859
  6131  001618                     l3857:
  6132  001618  90D8               	bcf	status,0,c
  6133  00161A  360E               	rlcf	___awmod@divisor,f,c
  6134  00161C  360F               	rlcf	___awmod@divisor+1,f,c
  6135  00161E  2A10               	incf	___awmod@counter,f,c
  6136  001620                     l3859:
  6137  001620  AE0F               	btfss	___awmod@divisor+1,7,c
  6138  001622  D7FA               	goto	l3857
  6139  001624                     u3780:
  6140  001624  500E               	movf	___awmod@divisor,w,c
  6141  001626  5C0C               	subwf	___awmod@dividend,w,c
  6142  001628  500F               	movf	___awmod@divisor+1,w,c
  6143  00162A  580D               	subwfb	___awmod@dividend+1,w,c
  6144  00162C  A0D8               	btfss	status,0,c
  6145  00162E  D004               	goto	l3865
  6146  001630  500E               	movf	___awmod@divisor,w,c
  6147  001632  5E0C               	subwf	___awmod@dividend,f,c
  6148  001634  500F               	movf	___awmod@divisor+1,w,c
  6149  001636  5A0D               	subwfb	___awmod@dividend+1,f,c
  6150  001638                     l3865:
  6151  001638  90D8               	bcf	status,0,c
  6152  00163A  320F               	rrcf	___awmod@divisor+1,f,c
  6153  00163C  320E               	rrcf	___awmod@divisor,f,c
  6154  00163E  2E10               	decfsz	___awmod@counter,f,c
  6155  001640  D7F1               	goto	u3780
  6156  001642                     l3869:
  6157  001642  5011               	movf	___awmod@sign,w,c
  6158  001644  B4D8               	btfsc	status,2,c
  6159  001646  D004               	goto	l3873
  6160  001648  6C0C               	negf	___awmod@dividend,c
  6161  00164A  1E0D               	comf	___awmod@dividend+1,f,c
  6162  00164C  B0D8               	btfsc	status,0,c
  6163  00164E  2A0D               	incf	___awmod@dividend+1,f,c
  6164  001650                     l3873:
  6165  001650  C00C  F00C         	movff	___awmod@dividend,?___awmod
  6166  001654  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  6167  001658  0012               	return		;funcret
  6168  00165A                     __end_of___awmod:
  6169                           	opt callstack 0
  6170                           
  6171 ;; *************** function _I2C_Master_Write *****************
  6172 ;; Defined at:
  6173 ;;		line 70 in file "I2C.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  byteToWrite     2   12[COMRAM] unsigned int 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0, cstack
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;Total ram usage:        2 bytes
  6192 ;; Hardware stack levels used:    1
  6193 ;; Hardware stack levels required when called:    2
  6194 ;; This function calls:
  6195 ;;		_I2C_Master_Wait
  6196 ;; This function is called by:
  6197 ;;		_main
  6198 ;;		_rtc_set_time
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text29
  6203  001B3E                     __ptext29:
  6204                           	opt callstack 0
  6205  001B3E                     _I2C_Master_Write:
  6206                           	opt callstack 28
  6207                           
  6208                           ;I2C.c: 71:     I2C_Master_Wait();
  6209                           
  6210                           ;incstack = 0
  6211  001B3E  EC8A  F00D         	call	_I2C_Master_Wait	;wreg free
  6212                           
  6213                           ;I2C.c: 74:     SSPBUF = byteToWrite;
  6214  001B42  C00D  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  6215  001B46  0012               	return		;funcret
  6216  001B48                     __end_of_I2C_Master_Write:
  6217                           	opt callstack 0
  6218                           
  6219 ;; *************** function _I2C_Master_Stop *****************
  6220 ;; Defined at:
  6221 ;;		line 65 in file "I2C.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2, status,0, cstack
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;Total ram usage:        0 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    2
  6242 ;; This function calls:
  6243 ;;		_I2C_Master_Wait
  6244 ;; This function is called by:
  6245 ;;		_main
  6246 ;;		_rtc_set_time
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text30
  6251  001B48                     __ptext30:
  6252                           	opt callstack 0
  6253  001B48                     _I2C_Master_Stop:
  6254                           	opt callstack 28
  6255                           
  6256                           ;I2C.c: 66:     I2C_Master_Wait();
  6257                           
  6258                           ;incstack = 0
  6259  001B48  EC8A  F00D         	call	_I2C_Master_Wait	;wreg free
  6260                           
  6261                           ;I2C.c: 67:     SSPCON2bits.PEN = 1;
  6262  001B4C  84C5               	bsf	4037,2,c	;volatile
  6263  001B4E  0012               	return		;funcret
  6264  001B50                     __end_of_I2C_Master_Stop:
  6265                           	opt callstack 0
  6266                           
  6267 ;; *************** function _I2C_Master_Start *****************
  6268 ;; Defined at:
  6269 ;;		line 55 in file "I2C.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;		None
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2, status,0, cstack
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;Total ram usage:        0 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:    2
  6290 ;; This function calls:
  6291 ;;		_I2C_Master_Wait
  6292 ;; This function is called by:
  6293 ;;		_main
  6294 ;;		_rtc_set_time
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text31
  6299  001B50                     __ptext31:
  6300                           	opt callstack 0
  6301  001B50                     _I2C_Master_Start:
  6302                           	opt callstack 28
  6303                           
  6304                           ;I2C.c: 56:     I2C_Master_Wait();
  6305                           
  6306                           ;incstack = 0
  6307  001B50  EC8A  F00D         	call	_I2C_Master_Wait	;wreg free
  6308                           
  6309                           ;I2C.c: 57:     SSPCON2bits.SEN = 1;
  6310  001B54  80C5               	bsf	4037,0,c	;volatile
  6311  001B56  0012               	return		;funcret
  6312  001B58                     __end_of_I2C_Master_Start:
  6313                           	opt callstack 0
  6314                           
  6315 ;; *************** function _I2C_Master_Read *****************
  6316 ;; Defined at:
  6317 ;;		line 77 in file "I2C.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  ackBit          1    wreg     unsigned char 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  ackBit          1   12[COMRAM] unsigned char 
  6322 ;;  receivedByte    1   13[COMRAM] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      unsigned char 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0, cstack
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;Total ram usage:        2 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    2
  6339 ;; This function calls:
  6340 ;;		_I2C_Master_Wait
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text32
  6347  001AB4                     __ptext32:
  6348                           	opt callstack 0
  6349  001AB4                     _I2C_Master_Read:
  6350                           	opt callstack 28
  6351                           
  6352                           ;incstack = 0
  6353                           ;I2C_Master_Read@ackBit stored from wreg
  6354  001AB4  6E0D               	movwf	I2C_Master_Read@ackBit,c
  6355                           
  6356                           ;I2C.c: 78:     I2C_Master_Wait();
  6357  001AB6  EC8A  F00D         	call	_I2C_Master_Wait	;wreg free
  6358                           
  6359                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  6360  001ABA  86C5               	bsf	4037,3,c	;volatile
  6361                           
  6362                           ;I2C.c: 81:     I2C_Master_Wait();
  6363  001ABC  EC8A  F00D         	call	_I2C_Master_Wait	;wreg free
  6364                           
  6365                           ;I2C.c: 84:     unsigned char receivedByte = SSPBUF;
  6366  001AC0  CFC9 F00E          	movff	4041,I2C_Master_Read@receivedByte	;volatile
  6367                           
  6368                           ;I2C.c: 86:     I2C_Master_Wait();
  6369  001AC4  EC8A  F00D         	call	_I2C_Master_Wait	;wreg free
  6370                           
  6371                           ;I2C.c: 87:     SSPCON2bits.ACKDT = ackBit;
  6372  001AC8  B00D               	btfsc	I2C_Master_Read@ackBit,0,c
  6373  001ACA  D002               	bra	u3745
  6374  001ACC  9AC5               	bcf	4037,5,c	;volatile
  6375  001ACE  D001               	bra	u3746
  6376  001AD0                     u3745:
  6377  001AD0  8AC5               	bsf	4037,5,c	;volatile
  6378  001AD2                     u3746:
  6379                           
  6380                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  6381  001AD2  88C5               	bsf	4037,4,c	;volatile
  6382                           
  6383                           ;I2C.c: 90:     return receivedByte;
  6384  001AD4  500E               	movf	I2C_Master_Read@receivedByte,w,c
  6385  001AD6  0012               	return		;funcret
  6386  001AD8                     __end_of_I2C_Master_Read:
  6387                           	opt callstack 0
  6388                           
  6389 ;; *************** function _I2C_Master_Wait *****************
  6390 ;; Defined at:
  6391 ;;		line 21 in file "I2C.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;Total ram usage:        1 bytes
  6410 ;; Hardware stack levels used:    1
  6411 ;; Hardware stack levels required when called:    1
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_I2C_Master_Start
  6416 ;;		_I2C_Master_Stop
  6417 ;;		_I2C_Master_Write
  6418 ;;		_I2C_Master_Read
  6419 ;;		_I2C_Master_RepeatedStart
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text33
  6424  001B14                     __ptext33:
  6425                           	opt callstack 0
  6426  001B14                     _I2C_Master_Wait:
  6427                           	opt callstack 28
  6428                           
  6429                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  6430                           
  6431                           ;I2C.c: 28:     }
  6432                           
  6433                           ;incstack = 0
  6434  001B14  B4C7               	btfsc	4039,2,c	;volatile
  6435  001B16  D7FE               	goto	_I2C_Master_Wait
  6436  001B18  CFC5 F00C          	movff	4037,??_I2C_Master_Wait	;volatile
  6437  001B1C  0E1F               	movlw	31
  6438  001B1E  160C               	andwf	??_I2C_Master_Wait,f,c
  6439  001B20  B4D8               	btfsc	status,2,c
  6440  001B22  0012               	return	
  6441  001B24  D7F7               	goto	_I2C_Master_Wait
  6442  001B26                     __end_of_I2C_Master_Wait:
  6443                           	opt callstack 0
  6444                           
  6445 ;; *************** function _I2C_Master_Init *****************
  6446 ;; Defined at:
  6447 ;;		line 32 in file "I2C.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  clockFreq       4   24[COMRAM] const unsigned long 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6465 ;;Total ram usage:        8 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    2
  6468 ;; This function calls:
  6469 ;;		___lldiv
  6470 ;; This function is called by:
  6471 ;;		_main
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text34
  6476  001730                     __ptext34:
  6477                           	opt callstack 0
  6478  001730                     _I2C_Master_Init:
  6479                           	opt callstack 28
  6480                           
  6481                           ;I2C.c: 34:     SSPCON1bits.SSPEN = 0;
  6482                           
  6483                           ;incstack = 0
  6484  001730  9AC6               	bcf	4038,5,c	;volatile
  6485                           
  6486                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  6487  001732  8694               	bsf	3988,3,c	;volatile
  6488                           
  6489                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  6490  001734  8894               	bsf	3988,4,c	;volatile
  6491                           
  6492                           ;I2C.c: 43:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  6493  001736  0E80               	movlw	128
  6494  001738  6E0C               	movwf	___lldiv@dividend,c
  6495  00173A  0E96               	movlw	150
  6496  00173C  6E0D               	movwf	___lldiv@dividend+1,c
  6497  00173E  0E98               	movlw	152
  6498  001740  6E0E               	movwf	___lldiv@dividend+2,c
  6499  001742  0E00               	movlw	0
  6500  001744  6E0F               	movwf	___lldiv@dividend+3,c
  6501  001746  C019  F01D         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  6502  00174A  C01A  F01E         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  6503  00174E  C01B  F01F         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  6504  001752  C01C  F020         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  6505  001756  0E02               	movlw	2
  6506  001758                     u3735:
  6507  001758  90D8               	bcf	status,0,c
  6508  00175A  361D               	rlcf	??_I2C_Master_Init,f,c
  6509  00175C  361E               	rlcf	??_I2C_Master_Init+1,f,c
  6510  00175E  361F               	rlcf	??_I2C_Master_Init+2,f,c
  6511  001760  3620               	rlcf	??_I2C_Master_Init+3,f,c
  6512  001762  2EE8               	decfsz	wreg,f,c
  6513  001764  D7F9               	goto	u3735
  6514  001766  C01D  F010         	movff	??_I2C_Master_Init,___lldiv@divisor
  6515  00176A  C01E  F011         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  6516  00176E  C01F  F012         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  6517  001772  C020  F013         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  6518  001776  EC75  F00A         	call	___lldiv	;wreg free
  6519  00177A  040C               	decf	?___lldiv,w,c
  6520  00177C  6EC8               	movwf	4040,c	;volatile
  6521                           
  6522                           ;I2C.c: 46:     SSPSTAT = 0b10000000;
  6523  00177E  0E80               	movlw	128
  6524  001780  6EC7               	movwf	4039,c	;volatile
  6525                           
  6526                           ;I2C.c: 49:     SSPCON1 = 0b00101000;
  6527  001782  0E28               	movlw	40
  6528  001784  6EC6               	movwf	4038,c	;volatile
  6529                           
  6530                           ;I2C.c: 52:     SSPCON2 = 0b00000000;
  6531  001786  0E00               	movlw	0
  6532  001788  6EC5               	movwf	4037,c	;volatile
  6533  00178A  0012               	return		;funcret
  6534  00178C                     __end_of_I2C_Master_Init:
  6535                           	opt callstack 0
  6536                           
  6537 ;; *************** function ___lldiv *****************
  6538 ;; Defined at:
  6539 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__lldiv.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  dividend        4   11[COMRAM] unsigned long 
  6542 ;;  divisor         4   15[COMRAM] unsigned long 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  quotient        4   19[COMRAM] unsigned long 
  6545 ;;  counter         1   23[COMRAM] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  4   11[COMRAM] unsigned long 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6555 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;Total ram usage:       13 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_I2C_Master_Init
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text35
  6570  0014EA                     __ptext35:
  6571                           	opt callstack 0
  6572  0014EA                     ___lldiv:
  6573                           	opt callstack 28
  6574                           
  6575                           ;incstack = 0
  6576  0014EA  0E00               	movlw	0
  6577  0014EC  6E14               	movwf	___lldiv@quotient,c
  6578  0014EE  0E00               	movlw	0
  6579  0014F0  6E15               	movwf	___lldiv@quotient+1,c
  6580  0014F2  0E00               	movlw	0
  6581  0014F4  6E16               	movwf	___lldiv@quotient+2,c
  6582  0014F6  0E00               	movlw	0
  6583  0014F8  6E17               	movwf	___lldiv@quotient+3,c
  6584  0014FA  5010               	movf	___lldiv@divisor,w,c
  6585  0014FC  1011               	iorwf	___lldiv@divisor+1,w,c
  6586  0014FE  1012               	iorwf	___lldiv@divisor+2,w,c
  6587  001500  1013               	iorwf	___lldiv@divisor+3,w,c
  6588  001502  B4D8               	btfsc	status,2,c
  6589  001504  D02A               	goto	l377
  6590  001506  0E01               	movlw	1
  6591  001508  6E18               	movwf	___lldiv@counter,c
  6592  00150A  D006               	goto	l3765
  6593  00150C                     l3763:
  6594  00150C  90D8               	bcf	status,0,c
  6595  00150E  3610               	rlcf	___lldiv@divisor,f,c
  6596  001510  3611               	rlcf	___lldiv@divisor+1,f,c
  6597  001512  3612               	rlcf	___lldiv@divisor+2,f,c
  6598  001514  3613               	rlcf	___lldiv@divisor+3,f,c
  6599  001516  2A18               	incf	___lldiv@counter,f,c
  6600  001518                     l3765:
  6601  001518  AE13               	btfss	___lldiv@divisor+3,7,c
  6602  00151A  D7F8               	goto	l3763
  6603  00151C                     u3710:
  6604  00151C  90D8               	bcf	status,0,c
  6605  00151E  3614               	rlcf	___lldiv@quotient,f,c
  6606  001520  3615               	rlcf	___lldiv@quotient+1,f,c
  6607  001522  3616               	rlcf	___lldiv@quotient+2,f,c
  6608  001524  3617               	rlcf	___lldiv@quotient+3,f,c
  6609  001526  5010               	movf	___lldiv@divisor,w,c
  6610  001528  5C0C               	subwf	___lldiv@dividend,w,c
  6611  00152A  5011               	movf	___lldiv@divisor+1,w,c
  6612  00152C  580D               	subwfb	___lldiv@dividend+1,w,c
  6613  00152E  5012               	movf	___lldiv@divisor+2,w,c
  6614  001530  580E               	subwfb	___lldiv@dividend+2,w,c
  6615  001532  5013               	movf	___lldiv@divisor+3,w,c
  6616  001534  580F               	subwfb	___lldiv@dividend+3,w,c
  6617  001536  A0D8               	btfss	status,0,c
  6618  001538  D009               	goto	l3775
  6619  00153A  5010               	movf	___lldiv@divisor,w,c
  6620  00153C  5E0C               	subwf	___lldiv@dividend,f,c
  6621  00153E  5011               	movf	___lldiv@divisor+1,w,c
  6622  001540  5A0D               	subwfb	___lldiv@dividend+1,f,c
  6623  001542  5012               	movf	___lldiv@divisor+2,w,c
  6624  001544  5A0E               	subwfb	___lldiv@dividend+2,f,c
  6625  001546  5013               	movf	___lldiv@divisor+3,w,c
  6626  001548  5A0F               	subwfb	___lldiv@dividend+3,f,c
  6627  00154A  8014               	bsf	___lldiv@quotient,0,c
  6628  00154C                     l3775:
  6629  00154C  90D8               	bcf	status,0,c
  6630  00154E  3213               	rrcf	___lldiv@divisor+3,f,c
  6631  001550  3212               	rrcf	___lldiv@divisor+2,f,c
  6632  001552  3211               	rrcf	___lldiv@divisor+1,f,c
  6633  001554  3210               	rrcf	___lldiv@divisor,f,c
  6634  001556  2E18               	decfsz	___lldiv@counter,f,c
  6635  001558  D7E1               	goto	u3710
  6636  00155A                     l377:
  6637  00155A  C014  F00C         	movff	___lldiv@quotient,?___lldiv
  6638  00155E  C015  F00D         	movff	___lldiv@quotient+1,?___lldiv+1
  6639  001562  C016  F00E         	movff	___lldiv@quotient+2,?___lldiv+2
  6640  001566  C017  F00F         	movff	___lldiv@quotient+3,?___lldiv+3
  6641  00156A  0012               	return		;funcret
  6642  00156C                     __end_of___lldiv:
  6643                           	opt callstack 0
  6644                           
  6645 ;; *************** function _interruptHandler *****************
  6646 ;; Defined at:
  6647 ;;		line 301 in file "main.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;		None
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  i               2    8[COMRAM] int 
  6652 ;;  keypress        1   10[COMRAM] unsigned char 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;Total ram usage:       11 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		Interrupt level 2
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	intcode
  6676  000008                     __pintcode:
  6677                           	opt callstack 0
  6678  000008                     _interruptHandler:
  6679                           	opt callstack 19
  6680                           
  6681                           ;incstack = 0
  6682  000008  826C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6683  00000A  EDC5  F009         	call	int_func,f	;refresh shadow registers
  6684                           
  6685                           	psect	intcode_body
  6686  00138A                     __pintcode_body:
  6687                           	opt callstack 19
  6688  00138A                     int_func:
  6689                           	opt callstack 19
  6690  00138A  0006               	pop		; remove dummy address from shadow register refresh
  6691  00138C  CFF6 F005          	movff	tblptrl,??_interruptHandler+4
  6692  001390  CFF7 F006          	movff	tblptrh,??_interruptHandler+5
  6693  001394  CFF8 F007          	movff	tblptru,??_interruptHandler+6
  6694  001398  CFF5 F008          	movff	tablat,??_interruptHandler+7
  6695                           
  6696                           ;main.c: 303:     if(INT1IF){
  6697  00139C  A0F0               	btfss	4080,0,c	;volatile
  6698  00139E  D050               	goto	i2u274_40
  6699                           
  6700                           ;main.c: 307:         INT1IF = 0;
  6701  0013A0  90F0               	bcf	4080,0,c	;volatile
  6702                           
  6703                           ;main.c: 309:         unsigned char keypress = (PORTB & 0xF0) >> 4;
  6704  0013A2  3881               	swapf	3969,w,c	;volatile
  6705  0013A4  0B0F               	andlw	15
  6706  0013A6  0B0F               	andlw	15
  6707  0013A8  6E0B               	movwf	interruptHandler@keypress,c
  6708                           
  6709                           ;main.c: 311:         if (keys[keypress] == 'A') {
  6710  0013AA  0E71               	movlw	low _keys
  6711  0013AC  240B               	addwf	interruptHandler@keypress,w,c
  6712  0013AE  6EF6               	movwf	tblptrl,c
  6713  0013B0  6AF7               	clrf	tblptrh,c
  6714  0013B2  0EFE               	movlw	high _keys
  6715  0013B4  22F7               	addwfc	tblptrh,f,c
  6716  0013B6                     	if	0	;There are less than 3 active tblptr bytes
  6717  0013B6                     	endif
  6718  0013B6  0008               	tblrd		*
  6719  0013B8  50F5               	movf	tablat,w,c
  6720  0013BA  0A41               	xorlw	65
  6721  0013BC  A4D8               	btfss	status,2,c
  6722  0013BE  D004               	goto	i2l3169
  6723                           
  6724                           ;main.c: 313:             start = 1;
  6725  0013C0  0E01               	movlw	1
  6726  0013C2  0100               	movlb	0	; () banked
  6727  0013C4  6FAE               	movwf	_start& (0+255),b	;volatile
  6728  0013C6  D03C               	goto	i2u274_40
  6729  0013C8                     i2l3169:
  6730                           
  6731                           ;main.c: 317:         if (keys[keypress] == '*') {
  6732  0013C8  0E71               	movlw	low _keys
  6733  0013CA  240B               	addwf	interruptHandler@keypress,w,c
  6734  0013CC  6EF6               	movwf	tblptrl,c
  6735  0013CE  6AF7               	clrf	tblptrh,c
  6736  0013D0  0EFE               	movlw	high _keys
  6737  0013D2  22F7               	addwfc	tblptrh,f,c
  6738  0013D4                     	if	0	;There are less than 3 active tblptr bytes
  6739  0013D4                     	endif
  6740  0013D4  0008               	tblrd		*
  6741  0013D6  50F5               	movf	tablat,w,c
  6742  0013D8  0A2A               	xorlw	42
  6743  0013DA  A4D8               	btfss	status,2,c
  6744  0013DC  D004               	goto	i2l3175
  6745                           
  6746                           ;main.c: 319:             exit_key = 1;
  6747  0013DE  0E01               	movlw	1
  6748  0013E0  0100               	movlb	0	; () banked
  6749  0013E2  6FAF               	movwf	_exit_key& (0+255),b	;volatile
  6750  0013E4  D02D               	goto	i2u274_40
  6751  0013E6                     i2l3175:
  6752                           
  6753                           ;main.c: 323:         for ( int i = 0; i < Canister; i++ ) {
  6754  0013E6  0E00               	movlw	0
  6755  0013E8  6E0A               	movwf	interruptHandler@i+1,c
  6756  0013EA  0E00               	movlw	0
  6757  0013EC  6E09               	movwf	interruptHandler@i,c
  6758  0013EE  D01D               	goto	i2l3185
  6759  0013F0                     i2l3177:
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;main.c: 325:             if ((char)i + '0' == keys[keypress]) {
  6763  0013F0  0E71               	movlw	low _keys
  6764  0013F2  240B               	addwf	interruptHandler@keypress,w,c
  6765  0013F4  6EF6               	movwf	tblptrl,c
  6766  0013F6  6AF7               	clrf	tblptrh,c
  6767  0013F8  0EFE               	movlw	high _keys
  6768  0013FA  22F7               	addwfc	tblptrh,f,c
  6769  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  6770  0013FC                     	endif
  6771  0013FC  0008               	tblrd		*
  6772  0013FE  50F5               	movf	tablat,w,c
  6773  001400  6E01               	movwf	??_interruptHandler& (0+255),c
  6774  001402  6A02               	clrf	(??_interruptHandler+1)& (0+255),c
  6775  001404  5009               	movf	interruptHandler@i,w,c
  6776  001406  6E03               	movwf	(??_interruptHandler+2)& (0+255),c
  6777  001408  6A04               	clrf	(??_interruptHandler+3)& (0+255),c
  6778  00140A  0E30               	movlw	48
  6779  00140C  2603               	addwf	??_interruptHandler+2,f,c
  6780  00140E  0E00               	movlw	0
  6781  001410  2204               	addwfc	??_interruptHandler+3,f,c
  6782  001412  5001               	movf	??_interruptHandler,w,c
  6783  001414  1803               	xorwf	??_interruptHandler+2,w,c
  6784  001416  E107               	bnz	i2l3183
  6785  001418  5002               	movf	??_interruptHandler+1,w,c
  6786  00141A  1804               	xorwf	??_interruptHandler+3,w,c
  6787  00141C  A4D8               	btfss	status,2,c
  6788  00141E  D003               	goto	i2l3183
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;main.c: 326:                 key_was_pressed = 1;
  6792  001420  0E01               	movlw	1
  6793  001422  6FB0               	movwf	_key_was_pressed& (0+255),b	;volatile
  6794  001424  D00D               	goto	i2u274_40
  6795  001426                     i2l3183:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;main.c: 330:         }
  6799  001426  4A09               	infsnz	interruptHandler@i,f,c
  6800  001428  2A0A               	incf	interruptHandler@i+1,f,c
  6801  00142A                     i2l3185:
  6802  00142A  0100               	movlb	0	; () banked
  6803  00142C  51AA               	movf	_Canister& (0+255),w,b
  6804  00142E  5C09               	subwf	interruptHandler@i,w,c
  6805  001430  500A               	movf	interruptHandler@i+1,w,c
  6806  001432  0A80               	xorlw	128
  6807  001434  6E01               	movwf	??_interruptHandler& (0+255),c
  6808  001436  51AB               	movf	(_Canister+1)& (0+255),w,b
  6809  001438  0A80               	xorlw	128
  6810  00143A  5801               	subwfb	??_interruptHandler& (0+255),w,c
  6811  00143C  A0D8               	btfss	status,0,c
  6812  00143E  D7D8               	goto	i2l3177
  6813  001440                     i2u274_40:
  6814  001440  C008  FFF5         	movff	??_interruptHandler+7,tablat
  6815  001444  C007  FFF8         	movff	??_interruptHandler+6,tblptru
  6816  001448  C006  FFF7         	movff	??_interruptHandler+5,tblptrh
  6817  00144C  C005  FFF6         	movff	??_interruptHandler+4,tblptrl
  6818  001450  926C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6819  001452  0011               	retfie		f
  6820  001454                     __end_of_interruptHandler:
  6821                           	opt callstack 0
  6822                           
  6823                           	psect	rparam
  6824  0000                     
  6825                           	psect	temp
  6826  00006C                     btemp:
  6827                           	opt callstack 0
  6828  00006C                     	ds	1
  6829  0000                     int$flags	set	btemp
  6830  0000                     wtemp8	set	btemp+1
  6831  0000                     ttemp5	set	btemp+1
  6832  0000                     ttemp6	set	btemp+4
  6833  0000                     ttemp7	set	btemp+8
  6834                           tosu	equ	0xFFF
  6835                           tosh	equ	0xFFE
  6836                           tosl	equ	0xFFD
  6837                           stkptr	equ	0xFFC
  6838                           pclatu	equ	0xFFB
  6839                           pclath	equ	0xFFA
  6840                           pcl	equ	0xFF9
  6841                           tblptru	equ	0xFF8
  6842                           tblptrh	equ	0xFF7
  6843                           tblptrl	equ	0xFF6
  6844                           tablat	equ	0xFF5
  6845                           prodh	equ	0xFF4
  6846                           prodl	equ	0xFF3
  6847                           indf0	equ	0xFEF
  6848                           postinc0	equ	0xFEE
  6849                           postdec0	equ	0xFED
  6850                           preinc0	equ	0xFEC
  6851                           plusw0	equ	0xFEB
  6852                           fsr0h	equ	0xFEA
  6853                           fsr0l	equ	0xFE9
  6854                           wreg	equ	0xFE8
  6855                           indf1	equ	0xFE7
  6856                           postinc1	equ	0xFE6
  6857                           postdec1	equ	0xFE5
  6858                           preinc1	equ	0xFE4
  6859                           plusw1	equ	0xFE3
  6860                           fsr1h	equ	0xFE2
  6861                           fsr1l	equ	0xFE1
  6862                           bsr	equ	0xFE0
  6863                           indf2	equ	0xFDF
  6864                           postinc2	equ	0xFDE
  6865                           postdec2	equ	0xFDD
  6866                           preinc2	equ	0xFDC
  6867                           plusw2	equ	0xFDB
  6868                           fsr2h	equ	0xFDA
  6869                           fsr2l	equ	0xFD9
  6870                           status	equ	0xFD8


Data Sizes:
    Strings     367
    Constant    30
    Data        66
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     99     107
    BANK0           128     35     116
    BANK1           256     23      43
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_34(CODE[10]), STR_33(CODE[14]), STR_32(CODE[11]), STR_31(CODE[12]), 
		 -> STR_30(CODE[10]), STR_29(CODE[15]), STR_28(CODE[14]), STR_27(CODE[12]), 
		 -> STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[15]), 
		 -> STR_22(CODE[12]), STR_21(CODE[16]), STR_20(CODE[9]), STR_19(CODE[9]), 
		 -> STR_18(CODE[11]), STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[13]), 
		 -> STR_10(CODE[11]), STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[10]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[15]), STR_3(CODE[15]), 
		 -> STR_2(CODE[9]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1036_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_34(CODE[10]), STR_33(CODE[14]), STR_32(CODE[11]), STR_31(CODE[12]), 
		 -> STR_30(CODE[10]), STR_29(CODE[15]), STR_28(CODE[14]), STR_27(CODE[12]), 
		 -> STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[15]), 
		 -> STR_22(CODE[12]), STR_21(CODE[16]), STR_20(CODE[9]), STR_19(CODE[9]), 
		 -> STR_18(CODE[11]), STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[13]), 
		 -> STR_10(CODE[11]), STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[10]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[15]), STR_3(CODE[15]), 
		 -> STR_2(CODE[9]), STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_34(CODE[10]), STR_33(CODE[14]), STR_32(CODE[11]), STR_31(CODE[12]), 
		 -> STR_30(CODE[10]), STR_29(CODE[15]), STR_28(CODE[14]), STR_27(CODE[12]), 
		 -> STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[15]), 
		 -> STR_22(CODE[12]), STR_21(CODE[16]), STR_20(CODE[9]), STR_19(CODE[9]), 
		 -> STR_18(CODE[11]), STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[13]), 
		 -> STR_10(CODE[11]), STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[10]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[15]), STR_3(CODE[15]), 
		 -> STR_2(CODE[9]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_34(CODE[10]), STR_33(CODE[14]), STR_32(CODE[11]), STR_31(CODE[12]), 
		 -> STR_30(CODE[10]), STR_29(CODE[15]), STR_28(CODE[14]), STR_27(CODE[12]), 
		 -> STR_26(CODE[10]), STR_25(CODE[15]), STR_24(CODE[12]), STR_23(CODE[15]), 
		 -> STR_22(CODE[12]), STR_21(CODE[16]), STR_20(CODE[9]), STR_19(CODE[9]), 
		 -> STR_18(CODE[11]), STR_17(CODE[13]), STR_16(CODE[15]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[13]), 
		 -> STR_10(CODE[11]), STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[10]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[15]), STR_3(CODE[15]), 
		 -> STR_2(CODE[9]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   28878
                                             97 COMRAM     2     2      0
                                              0 BANK1     23    23      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   25324
                                             93 COMRAM     4     4      0
                                             27 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22165
                                             91 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   21611
                                             81 COMRAM    10     4      6
                                              0 BANK0     21    21      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    6117
                                             42 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             17 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6353
                                             42 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4366
                                             42 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4087
                                             31 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1602
                                             24 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1102
                                             15 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0     158
                                             14 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1765
                                             18 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             11 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     662
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                             15 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     158
                                             14 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (9) _send_byte                                            1     1      0     127
                                             13 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (10) _send_nibble                                         1     1      0      65
                                             12 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (11) _pulse_e                                             1     1      0      34
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     613
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     571
                                             12 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      65
                                             12 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             24 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                             11 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _interruptHandler                                   11    11      0     113
                                              0 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awmod
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _toupper
             _islower

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     17      2B       7       16.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     23      74       5       90.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     63      6B       1       84.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10A      34        0.0%
DATA                 0      0     10A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb  6 13:58:08 2019

                __CFG_CPD$ON 000000          ___wmul@multiplicand 000E                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000                          l239 1482  
                        l257 0BE2                          l282 0DCE                          l259 0BEA  
                        l284 0DD6                          l377 155A                 __CFG_CPB$OFF 000000  
                        _abs 1924                          _pad 1454                 ___awmod@sign 0011  
                        wreg 000FE8                 __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000  
                       l1025 194C                         l1123 1870                         ?_abs 001E  
                       l1056 125C                         l3301 14A4                         l4023 0350  
                       l4007 02F4                         l3305 14D0                         l3401 12D0  
                       l4113 056C                         l4041 03B2                         l3403 12E4  
                       l4131 05F8                         l3413 1342                         l3501 0D70  
                       l4061 041A                         l3271 18D8                         l4039 03A6  
                       l3257 1672                         l3361 1058                         l3417 1368  
                       l3409 132C                         l3505 0D88                         l4153 0696  
                       l4161 06C2                         l4129 05EA                         l4137 0616  
                       l4081 0486                         l3603 11FC                         l3267 18C2  
                       l3275 1A1C                         l3291 146C                         l3363 106C  
                       l3355 1032                         l4171 0702                         l4155 06A4  
                       l3429 18B0                         l3277 1A20                         l3437 17F4  
                       l3381 1104                         l3373 10C8                         l3349 100A  
                       l3453 0BC6                         l3533 0E3C                         l3525 0E1A  
                       l4093 04D0                         l3295 147A                         l3439 1800  
                       l3471 0C14                         l3519 0DEA                         l3631 07BC  
                       l4175 0714                         l3297 148C                         l3377 10DE  
                       l3393 1292                         l3481 0D0C                         l3713 0B1A  
                       l3467 0C04                         l3571 0FB4                         l3547 0ECA  
                       l3555 0F40                         l3707 0ADE                         l3651 07D6  
                       l3643 07C8                         l3635 07C0                         l3627 07AA  
                       l3723 0B3C                         l4179 0724                         l3397 12B6  
                       l3717 0B24                         l3629 07AC                         l3653 0818  
                       l4189 0750                         ?_pad 0020                         l3647 07CC  
                       l3639 07C4                         l3593 1192                         l3577 1138  
                       l3665 0884                         l3753 17A0                         l3763 150C  
                       l3595 119A                         l3587 1182                         l3579 113C  
                       l3683 095E                         l3667 08A2                         l3755 17C6  
                       l3931 00CA                         l3923 0094                         l3765 1518  
                       l3853 160A                         l3597 11A0                         l3693 0A10  
                       l3669 08B0                         l3775 154C                         l3599 11C8  
                       l3873 1650                         l3865 1638                         l3857 1618  
                       l3849 15FE                         l3945 015A                         l3859 1620  
                       l3869 1642                         l3991 0294                         STR_1 FFF6  
                       STR_2 FFED                         STR_3 FEFB                         STR_4 FF0A  
                       STR_5 FE8F                         STR_6 FEBF                         STR_7 FFBE  
                       STR_8 FF85                         STR_9 FFD2                         u3001 1038  
                       u3020 1070                         u3120 18AC                         u3200 0BFE  
                       _LATD 000F8C                         u3210 0D1A                         u3140 0B98  
                       u3300 0DC4                         u3230 0D3C                         u3150 0B9A  
                       u3231 0D3A                         u3080 12E8                         u3240 0D4A  
                       u3400 0F50                         u3320 0E38                         u3250 0D4E  
                       u3330 0E6E                         u4107 0190                         u3500 122E  
                       u3180 0BD8                         u3420 0F72                         u3340 0E70  
                       u3421 0F70                         u4117 01BA                         u3270 0D5A  
                       u3430 0F80                         u4207 036C                         u4127 01D2  
                       u3440 0F84                         u3360 0EA8                         u3600 08F8  
                       u4217 03D0                         u4137 01F4                         u3370 0EAA  
                       u4307 16F6                         u4227 0438                         u4147 0224  
                       u2900 19B0                         u2820 197E                         u4317 1718  
                       u4237 04EE                         u4157 024A                         u4077 0066  
                       u3710 151C                         u3470 117E                         u2910 191C  
                       u2830 1980                         u3390 0F1C                         u3630 0992  
                       u4327 1A4A                         u4247 0588                         u4167 0268  
                       u4087 014C                         u2920 191E                         u4337 1A54  
                       u4257 0634                         u4177 02A8                         u4097 016E  
                       u3490 122C                         u2770 166A                         u2930 1858  
                       u3650 0A44                         u2755 1A62                         u3395 0F0A  
                       u4267 070C                         u4187 02DE                         u2756 1A64  
                       u2940 185A                         u3580 08E8                         u4277 075A  
                       u4197 0312                         u2790 16B2                         u3590 08EA  
                       u3735 1758                         u4287 16CC                         u2960 19DE  
                       u2880 1932                         u3745 1AD0                         u4297 16E4  
                       u3746 1AD2                         u2970 19E0                         u2890 19AE  
                       u3780 1624                         abs@a 001E                         _dbuf 00B1  
                       _atoi 1126                         _ctoa 17E2                         _main 0012  
                       _dtoa 0B70     __end_of_interruptHandler 1454                         _keys FE71  
                       _prec 0066                         _time 006A                         _nout 00AC  
                       pad@i 0027                         pad@p 0024                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf2 000FDF                         fsr1l 000FE1  
                       pad@w 0029                         fsr2l 000FD9                         btemp 006C  
                       _xtoa 0DB2                         prodh 000FF4                         prodl 000FF3  
                       start 000E                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_abs 0020                        ??_pad 0026  
      I2C_Master_Read@ackBit 000D             ?_I2C_Master_Init 0019             ?_I2C_Master_Read 0001  
           ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001              __end_of___aodiv 1126  
                      ?_atoi 0013                        ?_ctoa 002B                        ?_main 0001  
                      ?_dtoa 002B              __end_of___aomod 138A                        STR_10 FF9D  
                      STR_11 FF60                        STR_20 FFE4                        STR_12 FF19  
                      STR_13 FF6D                        STR_21 FEA0                        STR_30 FFC8  
                      STR_22 FF91                        STR_14 FECE                        STR_31 FF79  
                      STR_15 FFA8                        STR_23 FEB0                        STR_32 FF3A  
                      STR_24 FF79                        STR_16 FEEC                        STR_17 FF53  
                      STR_33 FF37                        STR_25 FEDD                        STR_34 FFC8  
                      STR_26 FFC8                        STR_18 FFB3                        STR_27 FF79  
                      STR_19 FFDB                        STR_28 FF45              __end_of___awmod 165A  
                      STR_29 FF28              __end_of___lldiv 156C                        ?_xtoa 002B  
               vfpfcnvrt@fmt 0054                 vfpfcnvrt@llu 00D9                        _PORTB 000F81  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                 main@miniTick 0109  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000              __end_of_lcdInst 1B3E               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
               main@keypress 0110               __CFG_EBTR3$OFF 000000                        _State 0094  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
                      _balls 00A8              __end_of_initLCD 1730               __CFG_EBTRB$OFF 000000  
                      _flags 0068                _BallDispensed 0117                        _fputc 165A  
            __end_of_isalpha 1924                        _fputs 18B8              __end_of_isdigit 19E6  
                      atoi@n 0020                        pad@fp 0020                        atoi@s 0013  
                      _width 0064                        ctoa@c 002D                        _putch 1B26  
                      _start 00AE                        ctoa@w 002E                        main@i 010D  
                      dtoa@d 002D                        dtoa@i 004D                        dtoa@n 0045  
                      dtoa@p 003F                        dtoa@s 0043                        dtoa@w 0041  
            __end_of_islower 1986              __end_of_isspace 18B8              __end_of_isupper 19B6  
                      tablat 000FF5              send_nibble@data 000D              __end_of_pulse_e 1A66  
                      ttemp5 006D                        ttemp6 0070                        ttemp7 0074  
                      status 000FD8  I2C_Master_Read@receivedByte 000E                        wtemp8 006D  
                      xtoa@c 0050                        xtoa@d 002D                        xtoa@i 004E  
                      xtoa@n 0046                        xtoa@p 0042                        xtoa@w 0044  
                      xtoa@x 0035              __end_of_toupper 187A               __CFG_PBADEN$ON 000000  
               _toupper$1088 0018           main@number_pressed 010B              __initialization 156C  
               __end_of_atoi 1266                 __end_of_ctoa 1830                 __end_of_main 0764  
               __end_of_dtoa 0DB2                 __end_of_keys FE82                 __end_of_xtoa 0FDE  
                     ??_atoi 0015                       ??_ctoa 002E                       ??_main 0062  
                     ??_dtoa 0035                       ??_xtoa 0036                __activetblptr 000002  
          ?_I2C_Master_Start 0001            ?_I2C_Master_Write 000D           ??_I2C_Master_Start 000D  
                     _ADCON1 000FC1           ??_I2C_Master_Write 000F                 ?_send_nibble 0001  
                     ?_fputc 0010                       ?_fputs 0019                       ?_putch 0001  
                     _INT1IE 007F83                       _INT1IF 007F80                       i2l3183 1426  
                     i2l3175 13E6                       i2l3177 13F0                       i2l3185 142A  
                     i2l3169 13C8                vfpfcnvrt@done 00E1                       _SSPADD 000FC8  
                     _SSPBUF 000FC9                main@miniClear 010E                main@miniState 0111  
             __CFG_XINST$OFF 000000                 vfprintf@cfmt 005C                    ??___aodiv 001C  
                  ??___aomod 001C                       ___wmul 1A8E               __CFG_STVREN$ON 000000  
                  ??___awmod 0010                    ??___lldiv 0014                       clear_0 15CA  
            ___awmod@divisor 000E              ___awmod@counter 0010                    ??_lcdInst 000F  
                     _printf 1A66                       pad@buf 0022                       ctoa@fp 002B  
                     dtoa@fp 002B                       _strlen 1A12                    ??_initLCD 0010  
                     fputc@c 0010                       fputs@c 001D                       fputs@i 001E  
               __pdataCOMRAM 006A                       fputs@s 0019                    ??_isalpha 000E  
                  ??_isdigit 000E                    ??_islower 000E                 __mediumconst FE70  
                  ??_isspace 000E                       tblptrh 000FF7                    ??_isupper 000E  
                     tblptrl 000FF6                       tblptru 000FF8             __end_of_vfprintf 17E2  
                  ??_pulse_e 000C                       xtoa@fp 002B                    ??_toupper 0014  
      pulse_e@interruptState 000C                   __accesstop 0080      __end_of__initialization 15DC  
              ___rparam_used 000001         __end_of_happynewyear FE89               __pcstackCOMRAM 0001  
               __pidataBANK0 19E6                 __pidataBANK1 1AEE                __end_of_fputc 16C6  
              __end_of_fputs 18F0                __end_of_putch 1B32              _key_was_pressed 00B0  
                    ??_fputc 0014                      ??_fputs 001D                      ??_putch 000F  
                 __pbssBANK0 00AC            ?_interruptHandler 0001           ??_interruptHandler 0001  
                    ?___wmul 000C           __size_of_send_byte 0012                      ?_printf 00EC  
                    ?_strlen 000C           __size_of_vfpfcnvrt 040C                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7         __size_of_send_nibble 0016  
           _DistanceCanister 0080                      __Hparam 0000                      __Lparam 0000  
                    ___aodiv 0FDE                      ___aomod 1266                      ___awmod 15EA  
                    ___lldiv 14EA              __size_of___wmul 0026                    ?_vfprintf 00E6  
   interruptHandler@keypress 000B                      __pcinit 156C                      __ramtop 1000  
                    _lcdInst 1B32                      __ptext0 0012                      __ptext1 1A66  
                    __ptext2 178C                      __ptext3 0764                      __ptext4 0DB2  
                    __ptext5 1830                      __ptext6 1956                      __ptext7 1986  
                    __ptext8 18F0                      __ptext9 0B70              __size_of_printf 0028  
            __size_of_strlen 002A                      _initLCD 16C6                 __size_of_abs 0032  
               __size_of_pad 0096                      _isalpha 18F0                      _isdigit 19B6  
           ___awmod@dividend 000C                      _islower 1956                      _isspace 187A  
                    _isupper 1986     __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Read 0024  
   __size_of_I2C_Master_Wait 0012     __size_of_I2C_Master_Stop 0008                      atoi@neg 0019  
                    _pulse_e 1A3C               __pintcode_body 138A                      _toupper 1830  
       end_of_initialization 15DC        __end_of_LCD_SIZE_HORZ FE8F            __end_of_send_byte 1B14  
      __end_of_LCD_SIZE_VERT FE8E                      fputc@fp 0012                __Lmediumconst FE70  
                    int_func 138A                      fputs@fp 001B    __size_of_I2C_Master_Start 0008  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0010              ___lldiv@counter 0018  
          __end_of_vfpfcnvrt 0B70                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc1 000FE6                      postinc2 000FDE  
                 ??_vfprintf 005C                      strlen@a 000E                      strlen@s 000C  
                  _TRISCbits 000F94                 _happynewyear FE82                send_byte@data 000E  
                vfpfcnvrt@ap 0056                  vfpfcnvrt@fp 0052                  vfpfcnvrt@ll 00D1  
             __end_of___wmul 1AB4                __pidataCOMRAM 1B58               __end_of_printf 1A8E  
             __end_of_strlen 1A3C          start_initialization 156C                  __end_of_abs 1956  
                __end_of_pad 14EA            ??_I2C_Master_Init 001D            ??_I2C_Master_Read 000D  
          ??_I2C_Master_Wait 000C            ??_I2C_Master_Stop 000D            interruptHandler@i 0009  
                vfprintf@fmt 00E8                     ??___wmul 0010     I2C_Master_Init@clockFreq 0019  
                __pdataBANK0 0080                  __pdataBANK1 0117             __CFG_LPT1OSC$OFF 000000  
                   ??_printf 005E    __size_of_interruptHandler 144C                     ??_strlen 000E  
                __pbssCOMRAM 0064                __pcstackBANK0 00D1                __pcstackBANK1 0100  
           ___aodiv@dividend 000C             _I2C_Master_Start 1B50             _I2C_Master_Write 1B3E  
          __CFG_CCP2MX$PORTC 000000                    __pintcode 0008                __pmediumconst FE70  
                   ?___aodiv 000C                     ?___aomod 000C             ___aodiv@quotient 001E  
                   ?___awmod 000C                     ?___lldiv 000C                     ?_lcdInst 0001  
          __size_of_vfprintf 0056                     ?_initLCD 0001                     ?_isalpha 000C  
                   ?_isdigit 000C                     ?_islower 000C                     ?_isspace 000C  
                   ?_isupper 000C                ??_send_nibble 000D                     ?_pulse_e 0001  
             __size_of_fputc 006C               __size_of_fputs 0038                     ?_toupper 0012  
             __size_of_putch 000C               ___wmul@product 0010                     _LATDbits 000F8C  
                  _send_byte 1B02               _LCD_LINE1_ADDR FE8C               _LCD_LINE2_ADDR FE8B  
             _LCD_LINE3_ADDR FE8A               _LCD_LINE4_ADDR FE89                     i2u274_40 1440  
           __CFG_WDTPS$32768 000000                    _vfpfcnvrt 0764            ___wmul@multiplier 000C  
                  main@clear 0113                     _Canister 00AA                    main@state 0115  
               _isspace$1023 0012                   vfpfcnvrt@c 00E5                    copy_data0 1580  
                  copy_data1 15A0       __end_of_LCD_LINE1_ADDR FE8D       __end_of_LCD_LINE2_ADDR FE8C  
     __end_of_LCD_LINE3_ADDR FE8B       __end_of_LCD_LINE4_ADDR FE8A          __end_of_send_nibble 1AEE  
                 ?_send_byte 0001                     __Hrparam 0000                   vfprintf@ap 00EA  
                   __Lrparam 0000                   vfprintf@fp 00E6           __CFG_BOREN$SBORDIS 000000  
           __size_of___aodiv 0148             __size_of___aomod 0124             __size_of___awmod 0070  
           __size_of___lldiv 0082                   ?_vfpfcnvrt 0052              ___aodiv@divisor 0014  
           _interruptHandler 0008              ___aodiv@counter 001C             __size_of_lcdInst 000C  
            _I2C_Master_Init 1730              _I2C_Master_Read 1AB4             __size_of_initLCD 006A  
            _I2C_Master_Wait 1B14                     _atoi$996 001B                     _atoi$997 001F  
                   _atoi$998 001D              _I2C_Master_Stop 1B48             __size_of_isalpha 0034  
           __size_of_isdigit 0030                     _dtoa$512 003D             __size_of_islower 0030  
           __size_of_isspace 003E                     __ptext10 1924                     __ptext11 1266  
                   __ptext20 187A                     __ptext12 0FDE                     __ptext21 19B6  
                   __ptext13 17E2                     __ptext30 1B48                     __ptext22 1A8E  
                   __ptext14 1454                     __ptext31 1B50                     __ptext23 16C6  
                   __ptext15 1A12                     __ptext32 1AB4                     __ptext24 1B32  
                   __ptext16 18B8                     __ptext33 1B14                     __ptext25 1B02  
                   __ptext17 165A                     __ptext34 1730                     __ptext26 1AD8  
                   __ptext18 1B26                     __ptext35 14EA                     __ptext27 1A3C  
                   __ptext19 1126                     __ptext28 15EA                     __ptext29 1B3E  
           __size_of_isupper 0030             __size_of_pulse_e 002A             __size_of_toupper 004A  
              __size_of_atoi 0140                __size_of_ctoa 004E                __size_of_main 0752  
              __size_of_dtoa 0242                     _exit_key 00AF                __size_of_xtoa 022C  
                   int$flags 006C                     _xtoa$522 003E                     _xtoa$523 0040  
                   _vfprintf 178C                    printf@fmt 00EC                     main@tick 0107  
                   main@time 0100  I2C_Master_Write@byteToWrite 000D             ___aomod@dividend 000C  
                  putch@data 000F     __end_of_I2C_Master_Start 1B58     __end_of_I2C_Master_Write 1B48  
                 _INTCONbits 000FF2                     isalpha@c 000C                     isdigit@c 000C  
                _send_nibble 1AD8                     intlevel2 0000                _LCD_SIZE_HORZ FE8E  
                   islower@c 000C                _LCD_SIZE_VERT FE8D                     isspace@c 000C  
           ___lldiv@dividend 000C                  ??_send_byte 000E                     isupper@c 000C  
                   printf@ap 0060      __end_of_I2C_Master_Init 178C              ___aomod@divisor 0014  
    __end_of_I2C_Master_Read 1AD8      __end_of_I2C_Master_Wait 1B26      __end_of_I2C_Master_Stop 1B50  
                ??_vfpfcnvrt 0058                  lcdInst@data 000F              ___aomod@counter 001C  
              _vfpfcnvrt$537 00E3             ___lldiv@quotient 0014                     toupper@c 0012  
                _SSPCON1bits 000FC6                  _SSPCON2bits 000FC5                 ___aodiv@sign 001D  
               ___aomod@sign 001D  
