

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb  2 21:38:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataBANK0
    75  001098                     __pidataBANK0:
    76                           	opt callstack 0
    77                           
    78                           ;initializer for _BallDispensed
    79  001098  0001               	dw	1
    80  00109A  0001               	dw	1
    81  00109C  0001               	dw	1
    82  00109E  0000               	dw	0
    83  0010A0  0000               	dw	0
    84  0010A2  0001               	dw	1
    85  0010A4  0001               	dw	1
    86  0010A6  0000               	dw	0
    87  0010A8  FFFF               	dw	65535
    88  0010AA  FFFF               	dw	65535
    89                           
    90                           ;initializer for _DistanceCanister
    91  0010AC  0014               	dw	20
    92  0010AE  001E               	dw	30
    93  0010B0  0028               	dw	40
    94  0010B2  003B               	dw	59
    95  0010B4  007B               	dw	123
    96  0010B6  00D4               	dw	212
    97  0010B8  014C               	dw	332
    98  0010BA  0190               	dw	400
    99  0010BC  FFFF               	dw	65535
   100  0010BE  FFFF               	dw	65535
   101                           
   102                           ;initializer for _State
   103  0010C0  0001               	dw	1
   104  0010C2  0001               	dw	1
   105  0010C4  0001               	dw	1
   106  0010C6  0000               	dw	0
   107  0010C8  0000               	dw	0
   108  0010CA  0001               	dw	1
   109  0010CC  0001               	dw	1
   110  0010CE  0000               	dw	0
   111  0010D0  FFFF               	dw	65535
   112  0010D2  FFFF               	dw	65535
   113                           
   114                           ;initializer for _balls
   115  0010D4  0005               	dw	5
   116                           
   117                           ;initializer for _Canister
   118  0010D6  0008               	dw	8
   119                           
   120                           ;initializer for _time
   121  0010D8  001E               	dw	30
   122                           
   123                           	psect	mediumconst
   124  00FE88                     __pmediumconst:
   125                           	opt callstack 0
   126  00FE88  00                 	db	0
   127  00FE89                     _keys:
   128                           	opt callstack 0
   129  00FE89  31                 	db	49
   130  00FE8A  32                 	db	50
   131  00FE8B  33                 	db	51
   132  00FE8C  41                 	db	65
   133  00FE8D  34                 	db	52
   134  00FE8E  35                 	db	53
   135  00FE8F  36                 	db	54
   136  00FE90  42                 	db	66
   137  00FE91  37                 	db	55
   138  00FE92  38                 	db	56
   139  00FE93  39                 	db	57
   140  00FE94  43                 	db	67
   141  00FE95  2A                 	db	42
   142  00FE96  30                 	db	48
   143  00FE97  23                 	db	35
   144  00FE98  44                 	db	68
   145  00FE99  00                 	db	0
   146  00FE9A                     __end_of_keys:
   147                           	opt callstack 0
   148  00FE9A  50                 	db	80
   149  00FE9B                     __end_of_LCD_LINE4_ADDR:
   150                           	opt callstack 0
   151  00FE9B  10                 	db	16
   152  00FE9C                     __end_of_LCD_LINE3_ADDR:
   153                           	opt callstack 0
   154  00FE9C  40                 	db	64
   155  00FE9D                     __end_of_LCD_LINE2_ADDR:
   156                           	opt callstack 0
   157  00FE9D  00                 	db	0
   158  00FE9E                     __end_of_LCD_LINE1_ADDR:
   159                           	opt callstack 0
   160  00FE9E                     _LCD_SIZE_VERT:
   161                           	opt callstack 0
   162  00FE9E  04                 	db	4
   163  00FE9F                     __end_of_LCD_SIZE_VERT:
   164                           	opt callstack 0
   165  00FE9F                     _LCD_SIZE_HORZ:
   166                           	opt callstack 0
   167  00FE9F  10                 	db	16
   168  00FEA0                     __end_of_LCD_SIZE_HORZ:
   169                           	opt callstack 0
   170  0000                     _PORTB	set	3969
   171  0000                     _ADCON1	set	4033
   172  0000                     _TRISD	set	3989
   173  0000                     _LATD	set	3980
   174  0000                     _LATDbits	set	3980
   175  0000                     _INTCONbits	set	4082
   176  0000                     _INT1IF	set	32640
   177  0000                     _INT1IE	set	32643
   178  00FEA0                     STR_4:
   179  00FEA0  49                 	db	73	;'I'
   180  00FEA1  74                 	db	116	;'t'
   181  00FEA2  27                 	db	39
   182  00FEA3  73                 	db	115	;'s'
   183  00FEA4  20                 	db	32
   184  00FEA5  79                 	db	121	;'y'
   185  00FEA6  61                 	db	97	;'a'
   186  00FEA7  20                 	db	32
   187  00FEA8  62                 	db	98	;'b'
   188  00FEA9  6F                 	db	111	;'o'
   189  00FEAA  79                 	db	121	;'y'
   190  00FEAB  20                 	db	32
   191  00FEAC  41                 	db	65	;'A'
   192  00FEAD  6C                 	db	108	;'l'
   193  00FEAE  69                 	db	105	;'i'
   194  00FEAF  21                 	db	33
   195  00FEB0  00                 	db	0
   196  00FEB1                     STR_20:
   197  00FEB1  49                 	db	73	;'I'
   198  00FEB2  6E                 	db	110	;'n'
   199  00FEB3  64                 	db	100	;'d'
   200  00FEB4  69                 	db	105	;'i'
   201  00FEB5  76                 	db	118	;'v'
   202  00FEB6  69                 	db	105	;'i'
   203  00FEB7  64                 	db	100	;'d'
   204  00FEB8  75                 	db	117	;'u'
   205  00FEB9  61                 	db	97	;'a'
   206  00FEBA  6C                 	db	108	;'l'
   207  00FEBB  20                 	db	32
   208  00FEBC  49                 	db	73	;'I'
   209  00FEBD  6E                 	db	110	;'n'
   210  00FEBE  66                 	db	102	;'f'
   211  00FEBF  6F                 	db	111	;'o'
   212  00FEC0  00                 	db	0
   213  00FEC1                     STR_22:
   214  00FEC1  50                 	db	80	;'P'
   215  00FEC2  72                 	db	114	;'r'
   216  00FEC3  65                 	db	101	;'e'
   217  00FEC4  73                 	db	115	;'s'
   218  00FEC5  73                 	db	115	;'s'
   219  00FEC6  20                 	db	32
   220  00FEC7  30                 	db	48	;'0'
   221  00FEC8  20                 	db	32
   222  00FEC9  74                 	db	116	;'t'
   223  00FECA  6F                 	db	111	;'o'
   224  00FECB  20                 	db	32
   225  00FECC  25                 	db	37
   226  00FECD  64                 	db	100	;'d'
   227  00FECE  20                 	db	32
   228  00FECF  00                 	db	0
   229  00FED0                     STR_5:
   230  00FED0  48                 	db	72	;'H'
   231  00FED1  65                 	db	101	;'e'
   232  00FED2  20                 	db	32
   233  00FED3  67                 	db	103	;'g'
   234  00FED4  65                 	db	101	;'e'
   235  00FED5  74                 	db	116	;'t'
   236  00FED6  74                 	db	116	;'t'
   237  00FED7  69                 	db	105	;'i'
   238  00FED8  6E                 	db	110	;'n'
   239  00FED9  20                 	db	32
   240  00FEDA  68                 	db	104	;'h'
   241  00FEDB  6F                 	db	111	;'o'
   242  00FEDC  74                 	db	116	;'t'
   243  00FEDD  20                 	db	32
   244  00FEDE  00                 	db	0
   245  00FEDF                     STR_13:
   246  00FEDF  4F                 	db	79	;'O'
   247  00FEE0  70                 	db	112	;'p'
   248  00FEE1  65                 	db	101	;'e'
   249  00FEE2  72                 	db	114	;'r'
   250  00FEE3  61                 	db	97	;'a'
   251  00FEE4  74                 	db	116	;'t'
   252  00FEE5  69                 	db	105	;'i'
   253  00FEE6  6F                 	db	111	;'o'
   254  00FEE7  6E                 	db	110	;'n'
   255  00FEE8  20                 	db	32
   256  00FEE9  54                 	db	84	;'T'
   257  00FEEA  69                 	db	105	;'i'
   258  00FEEB  6D                 	db	109	;'m'
   259  00FEEC  65                 	db	101	;'e'
   260  00FEED  00                 	db	0
   261  00FEEE                     STR_24:
   262  00FEEE  44                 	db	68	;'D'
   263  00FEEF  69                 	db	105	;'i'
   264  00FEF0  73                 	db	115	;'s'
   265  00FEF1  74                 	db	116	;'t'
   266  00FEF2  61                 	db	97	;'a'
   267  00FEF3  6E                 	db	110	;'n'
   268  00FEF4  63                 	db	99	;'c'
   269  00FEF5  65                 	db	101	;'e'
   270  00FEF6  20                 	db	32
   271  00FEF7  25                 	db	37
   272  00FEF8  64                 	db	100	;'d'
   273  00FEF9  20                 	db	32
   274  00FEFA  63                 	db	99	;'c'
   275  00FEFB  6D                 	db	109	;'m'
   276  00FEFC  00                 	db	0
   277  00FEFD                     STR_15:
   278  00FEFD  23                 	db	35
   279  00FEFE  20                 	db	32
   280  00FEFF  6F                 	db	111	;'o'
   281  00FF00  66                 	db	102	;'f'
   282  00FF01  20                 	db	32
   283  00FF02  43                 	db	67	;'C'
   284  00FF03  61                 	db	97	;'a'
   285  00FF04  6E                 	db	110	;'n'
   286  00FF05  69                 	db	105	;'i'
   287  00FF06  73                 	db	115	;'s'
   288  00FF07  74                 	db	116	;'t'
   289  00FF08  65                 	db	101	;'e'
   290  00FF09  72                 	db	114	;'r'
   291  00FF0A  73                 	db	115	;'s'
   292  00FF0B  00                 	db	0
   293  00FF0C                     STR_11:
   294  00FF0C  43                 	db	67	;'C'
   295  00FF0D  61                 	db	97	;'a'
   296  00FF0E  6E                 	db	110	;'n'
   297  00FF0F  69                 	db	105	;'i'
   298  00FF10  73                 	db	115	;'s'
   299  00FF11  74                 	db	116	;'t'
   300  00FF12  65                 	db	101	;'e'
   301  00FF13  72                 	db	114	;'r'
   302  00FF14  20                 	db	32
   303  00FF15  49                 	db	73	;'I'
   304  00FF16  6E                 	db	110	;'n'
   305  00FF17  64                 	db	100	;'d'
   306  00FF18  65                 	db	101	;'e'
   307  00FF19  78                 	db	120	;'x'
   308  00FF1A  00                 	db	0
   309  00FF1B                     STR_28:
   310  00FF1B  43                 	db	67	;'C'
   311  00FF1C  61                 	db	97	;'a'
   312  00FF1D  6E                 	db	110	;'n'
   313  00FF1E  69                 	db	105	;'i'
   314  00FF1F  73                 	db	115	;'s'
   315  00FF20  74                 	db	116	;'t'
   316  00FF21  65                 	db	101	;'e'
   317  00FF22  72                 	db	114	;'r'
   318  00FF23  20                 	db	32
   319  00FF24  45                 	db	69	;'E'
   320  00FF25  6D                 	db	109	;'m'
   321  00FF26  70                 	db	112	;'p'
   322  00FF27  74                 	db	116	;'t'
   323  00FF28  79                 	db	121	;'y'
   324  00FF29  00                 	db	0
   325  00FF2A                     STR_32:
   326  00FF2A  4E                 	db	78	;'N'
   327  00FF2B  6F                 	db	111	;'o'
   328  00FF2C  20                 	db	32
   329  00FF2D  42                 	db	66	;'B'
   330  00FF2E  61                 	db	97	;'a'
   331  00FF2F  6C                 	db	108	;'l'
   332  00FF30  6C                 	db	108	;'l'
   333  00FF31  20                 	db	32
   334  00FF32  41                 	db	65	;'A'
   335  00FF33  64                 	db	100	;'d'
   336  00FF34  64                 	db	100	;'d'
   337  00FF35  65                 	db	101	;'e'
   338  00FF36  64                 	db	100	;'d'
   339  00FF37  00                 	db	0
   340  00FF38                     STR_27:
   341  00FF38  43                 	db	67	;'C'
   342  00FF39  61                 	db	97	;'a'
   343  00FF3A  6E                 	db	110	;'n'
   344  00FF3B  69                 	db	105	;'i'
   345  00FF3C  73                 	db	115	;'s'
   346  00FF3D  74                 	db	116	;'t'
   347  00FF3E  65                 	db	101	;'e'
   348  00FF3F  72                 	db	114	;'r'
   349  00FF40  20                 	db	32
   350  00FF41  46                 	db	70	;'F'
   351  00FF42  75                 	db	117	;'u'
   352  00FF43  6C                 	db	108	;'l'
   353  00FF44  6C                 	db	108	;'l'
   354  00FF45  00                 	db	0
   355  00FF46                     STR_3:
   356  00FF46  41                 	db	65	;'A'
   357  00FF47  20                 	db	32
   358  00FF48  66                 	db	102	;'f'
   359  00FF49  6F                 	db	111	;'o'
   360  00FF4A  72                 	db	114	;'r'
   361  00FF4B  20                 	db	32
   362  00FF4C  41                 	db	65	;'A'
   363  00FF4D  6C                 	db	108	;'l'
   364  00FF4E  69                 	db	105	;'i'
   365  00FF4F  20                 	db	32
   366  00FF50  3B                 	db	59	;';'
   367  00FF51  29                 	db	41
   368  00FF52  00                 	db	0
   369  00FF53                     STR_16:
   370  00FF53  25                 	db	37
   371  00FF54  64                 	db	100	;'d'
   372  00FF55  20                 	db	32
   373  00FF56  43                 	db	67	;'C'
   374  00FF57  61                 	db	97	;'a'
   375  00FF58  6E                 	db	110	;'n'
   376  00FF59  69                 	db	105	;'i'
   377  00FF5A  73                 	db	115	;'s'
   378  00FF5B  74                 	db	116	;'t'
   379  00FF5C  65                 	db	101	;'e'
   380  00FF5D  72                 	db	114	;'r'
   381  00FF5E  73                 	db	115	;'s'
   382  00FF5F  00                 	db	0
   383  00FF60                     STR_10:
   384  00FF60  76                 	db	118	;'v'
   385  00FF61  69                 	db	105	;'i'
   386  00FF62  65                 	db	101	;'e'
   387  00FF63  77                 	db	119	;'w'
   388  00FF64  20                 	db	32
   389  00FF65  72                 	db	114	;'r'
   390  00FF66  65                 	db	101	;'e'
   391  00FF67  73                 	db	115	;'s'
   392  00FF68  75                 	db	117	;'u'
   393  00FF69  6C                 	db	108	;'l'
   394  00FF6A  74                 	db	116	;'t'
   395  00FF6B  73                 	db	115	;'s'
   396  00FF6C  00                 	db	0
   397  00FF6D                     STR_12:
   398  00FF6D  73                 	db	115	;'s'
   399  00FF6E  74                 	db	116	;'t'
   400  00FF6F  61                 	db	97	;'a'
   401  00FF70  72                 	db	114	;'r'
   402  00FF71  74                 	db	116	;'t'
   403  00FF72  73                 	db	115	;'s'
   404  00FF73  20                 	db	32
   405  00FF74  61                 	db	97	;'a'
   406  00FF75  74                 	db	116	;'t'
   407  00FF76  20                 	db	32
   408  00FF77  30                 	db	48	;'0'
   409  00FF78  00                 	db	0
   410  00FF79                     STR_23:
   411  00FF79  43                 	db	67	;'C'
   412  00FF7A  61                 	db	97	;'a'
   413  00FF7B  6E                 	db	110	;'n'
   414  00FF7C  73                 	db	115	;'s'
   415  00FF7D  69                 	db	105	;'i'
   416  00FF7E  74                 	db	116	;'t'
   417  00FF7F  65                 	db	101	;'e'
   418  00FF80  72                 	db	114	;'r'
   419  00FF81  20                 	db	32
   420  00FF82  25                 	db	37
   421  00FF83  63                 	db	99	;'c'
   422  00FF84  00                 	db	0
   423  00FF85                     STR_7:
   424  00FF85  41                 	db	65	;'A'
   425  00FF86  6C                 	db	108	;'l'
   426  00FF87  6D                 	db	109	;'m'
   427  00FF88  6F                 	db	111	;'o'
   428  00FF89  73                 	db	115	;'s'
   429  00FF8A  74                 	db	116	;'t'
   430  00FF8B  20                 	db	32
   431  00FF8C  64                 	db	100	;'d'
   432  00FF8D  6F                 	db	111	;'o'
   433  00FF8E  6E                 	db	110	;'n'
   434  00FF8F  65                 	db	101	;'e'
   435  00FF90  00                 	db	0
   436  00FF91                     STR_21:
   437  00FF91  6F                 	db	111	;'o'
   438  00FF92  66                 	db	102	;'f'
   439  00FF93  20                 	db	32
   440  00FF94  43                 	db	67	;'C'
   441  00FF95  61                 	db	97	;'a'
   442  00FF96  6E                 	db	110	;'n'
   443  00FF97  69                 	db	105	;'i'
   444  00FF98  73                 	db	115	;'s'
   445  00FF99  74                 	db	116	;'t'
   446  00FF9A  65                 	db	101	;'e'
   447  00FF9B  72                 	db	114	;'r'
   448  00FF9C  00                 	db	0
   449  00FF9D                     STR_9:
   450  00FF9D  50                 	db	80	;'P'
   451  00FF9E  72                 	db	114	;'r'
   452  00FF9F  65                 	db	101	;'e'
   453  00FFA0  73                 	db	115	;'s'
   454  00FFA1  73                 	db	115	;'s'
   455  00FFA2  20                 	db	32
   456  00FFA3  41                 	db	65	;'A'
   457  00FFA4  20                 	db	32
   458  00FFA5  74                 	db	116	;'t'
   459  00FFA6  6F                 	db	111	;'o'
   460  00FFA7  00                 	db	0
   461  00FFA8                     STR_14:
   462  00FFA8  25                 	db	37
   463  00FFA9  64                 	db	100	;'d'
   464  00FFAA  20                 	db	32
   465  00FFAB  73                 	db	115	;'s'
   466  00FFAC  65                 	db	101	;'e'
   467  00FFAD  63                 	db	99	;'c'
   468  00FFAE  6F                 	db	111	;'o'
   469  00FFAF  6E                 	db	110	;'n'
   470  00FFB0  64                 	db	100	;'d'
   471  00FFB1  73                 	db	115	;'s'
   472  00FFB2  00                 	db	0
   473  00FFB3                     STR_17:
   474  00FFB3  23                 	db	35
   475  00FFB4  20                 	db	32
   476  00FFB5  6F                 	db	111	;'o'
   477  00FFB6  66                 	db	102	;'f'
   478  00FFB7  20                 	db	32
   479  00FFB8  42                 	db	66	;'B'
   480  00FFB9  61                 	db	97	;'a'
   481  00FFBA  6C                 	db	108	;'l'
   482  00FFBB  6C                 	db	108	;'l'
   483  00FFBC  73                 	db	115	;'s'
   484  00FFBD  00                 	db	0
   485  00FFBE                     STR_6:
   486  00FFBE  48                 	db	72	;'H'
   487  00FFBF  69                 	db	105	;'i'
   488  00FFC0  20                 	db	32
   489  00FFC1  43                 	db	67	;'C'
   490  00FFC2  75                 	db	117	;'u'
   491  00FFC3  6C                 	db	108	;'l'
   492  00FFC4  6C                 	db	108	;'l'
   493  00FFC5  20                 	db	32
   494  00FFC6  21                 	db	33
   495  00FFC7  00                 	db	0
   496  00FFC8                     STR_25:
   497  00FFC8  2A                 	db	42
   498  00FFC9  20                 	db	32
   499  00FFCA  74                 	db	116	;'t'
   500  00FFCB  6F                 	db	111	;'o'
   501  00FFCC  20                 	db	32
   502  00FFCD  65                 	db	101	;'e'
   503  00FFCE  78                 	db	120	;'x'
   504  00FFCF  69                 	db	105	;'i'
   505  00FFD0  74                 	db	116	;'t'
   506  00FFD1  00                 	db	0
   507  00FFD2                     STR_8:
   508  00FFD2  41                 	db	65	;'A'
   509  00FFD3  4E                 	db	78	;'N'
   510  00FFD4  44                 	db	68	;'D'
   511  00FFD5  20                 	db	32
   512  00FFD6  44                 	db	68	;'D'
   513  00FFD7  4F                 	db	79	;'O'
   514  00FFD8  4E                 	db	78	;'N'
   515  00FFD9  45                 	db	69	;'E'
   516  00FFDA  00                 	db	0
   517  00FFDB                     STR_18:
   518  00FFDB  73                 	db	115	;'s'
   519  00FFDC  75                 	db	117	;'u'
   520  00FFDD  70                 	db	112	;'p'
   521  00FFDE  70                 	db	112	;'p'
   522  00FFDF  6C                 	db	108	;'l'
   523  00FFE0  69                 	db	105	;'i'
   524  00FFE1  65                 	db	101	;'e'
   525  00FFE2  64                 	db	100	;'d'
   526  00FFE3  00                 	db	0
   527  00FFE4                     STR_19:
   528  00FFE4  25                 	db	37
   529  00FFE5  64                 	db	100	;'d'
   530  00FFE6  20                 	db	32
   531  00FFE7  62                 	db	98	;'b'
   532  00FFE8  61                 	db	97	;'a'
   533  00FFE9  6C                 	db	108	;'l'
   534  00FFEA  6C                 	db	108	;'l'
   535  00FFEB  73                 	db	115	;'s'
   536  00FFEC  00                 	db	0
   537  00FFED                     STR_2:
   538  00FFED  74                 	db	116	;'t'
   539  00FFEE  6F                 	db	111	;'o'
   540  00FFEF  20                 	db	32
   541  00FFF0  73                 	db	115	;'s'
   542  00FFF1  74                 	db	116	;'t'
   543  00FFF2  61                 	db	97	;'a'
   544  00FFF3  72                 	db	114	;'r'
   545  00FFF4  74                 	db	116	;'t'
   546  00FFF5  00                 	db	0
   547  00FFF6                     STR_1:
   548  00FFF6  50                 	db	80	;'P'
   549  00FFF7  72                 	db	114	;'r'
   550  00FFF8  65                 	db	101	;'e'
   551  00FFF9  73                 	db	115	;'s'
   552  00FFFA  73                 	db	115	;'s'
   553  00FFFB  20                 	db	32
   554  00FFFC  41                 	db	65	;'A'
   555  00FFFD  00                 	db	0
   556  0000                     
   557                           ; #config settings
   558  00FFFE  00                 	db	0	; dummy byte at the end
   559  0000                     
   560                           	psect	cinit
   561  001052                     __pcinit:
   562                           	opt callstack 0
   563  001052                     start_initialization:
   564                           	opt callstack 0
   565  001052                     __initialization:
   566                           	opt callstack 0
   567                           
   568                           ; Initialize objects allocated to BANK0 (66 bytes)
   569                           ; load TBLPTR registers with __pidataBANK0
   570  001052  0E98               	movlw	low __pidataBANK0
   571  001054  6EF6               	movwf	tblptrl,c
   572  001056  0E10               	movlw	high __pidataBANK0
   573  001058  6EF7               	movwf	tblptrh,c
   574  00105A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   575  00105C  6EF8               	movwf	tblptru,c
   576  00105E  EE00  F080         	lfsr	0,__pdataBANK0
   577  001062  EE10 F042          	lfsr	1,66
   578  001066                     copy_data0:
   579  001066  0009               	tblrd		*+
   580  001068  CFF5 FFEE          	movff	tablat,postinc0
   581  00106C  50E5               	movf	postdec1,w,c
   582  00106E  50E1               	movf	fsr1l,w,c
   583  001070  E1FA               	bnz	copy_data0
   584                           
   585                           ; Clear objects allocated to BANK0 (35 bytes)
   586  001072  EE00  F0C2         	lfsr	0,__pbssBANK0
   587  001076  0E23               	movlw	35
   588  001078                     clear_0:
   589  001078  6AEE               	clrf	postinc0,c
   590  00107A  06E8               	decf	wreg,f,c
   591  00107C  E1FD               	bnz	clear_0
   592                           
   593                           ; Clear objects allocated to COMRAM (8 bytes)
   594  00107E  EE00  F06C         	lfsr	0,__pbssCOMRAM
   595  001082  0E08               	movlw	8
   596  001084                     clear_1:
   597  001084  6AEE               	clrf	postinc0,c
   598  001086  06E8               	decf	wreg,f,c
   599  001088  E1FD               	bnz	clear_1
   600  00108A                     end_of_initialization:
   601                           	opt callstack 0
   602  00108A                     __end_of__initialization:
   603                           	opt callstack 0
   604  00108A  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   605  00108C  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   606  00108E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   607  001090  6EF8               	movwf	tblptru,c
   608  001092  0100               	movlb	0
   609  001094  EF09  F000         	goto	_main	;jump to C main() function
   610                           
   611                           	psect	bssCOMRAM
   612  00006C                     __pbssCOMRAM:
   613                           	opt callstack 0
   614  00006C                     _nout:
   615                           	opt callstack 0
   616  00006C                     	ds	2
   617  00006E                     _width:
   618                           	opt callstack 0
   619  00006E                     	ds	2
   620  000070                     _prec:
   621                           	opt callstack 0
   622  000070                     	ds	2
   623  000072                     _flags:
   624                           	opt callstack 0
   625  000072                     	ds	2
   626                           
   627                           	psect	bssBANK0
   628  0000C2                     __pbssBANK0:
   629                           	opt callstack 0
   630  0000C2                     _start:
   631                           	opt callstack 0
   632  0000C2                     	ds	1
   633  0000C3                     _exit_key:
   634                           	opt callstack 0
   635  0000C3                     	ds	1
   636  0000C4                     _key_was_pressed:
   637                           	opt callstack 0
   638  0000C4                     	ds	1
   639  0000C5                     _dbuf:
   640                           	opt callstack 0
   641  0000C5                     	ds	32
   642                           
   643                           	psect	dataBANK0
   644  000080                     __pdataBANK0:
   645                           	opt callstack 0
   646  000080                     _BallDispensed:
   647                           	opt callstack 0
   648  000080                     	ds	20
   649  000094                     _DistanceCanister:
   650                           	opt callstack 0
   651  000094                     	ds	20
   652  0000A8                     _State:
   653                           	opt callstack 0
   654  0000A8                     	ds	20
   655  0000BC                     _balls:
   656                           	opt callstack 0
   657  0000BC                     	ds	2
   658  0000BE                     _Canister:
   659                           	opt callstack 0
   660  0000BE                     	ds	2
   661  0000C0                     _time:
   662                           	opt callstack 0
   663  0000C0                     	ds	2
   664                           
   665                           	psect	cstackBANK0
   666  0000E5                     __pcstackBANK0:
   667                           	opt callstack 0
   668  0000E5                     	ds	2
   669  0000E7                     printf@ap:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x2
   673  0000E7                     	ds	2
   674  0000E9                     ??_main:
   675                           
   676                           ; 1 bytes @ 0x4
   677  0000E9                     	ds	2
   678  0000EB                     main@tick:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x6
   682  0000EB                     	ds	2
   683  0000ED                     main@miniTick:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x8
   687  0000ED                     	ds	2
   688  0000EF                     main@number_pressed:
   689                           	opt callstack 0
   690                           
   691                           ; 2 bytes @ 0xA
   692  0000EF                     	ds	2
   693  0000F1                     main@miniClear:
   694                           	opt callstack 0
   695                           
   696                           ; 2 bytes @ 0xC
   697  0000F1                     	ds	2
   698  0000F3                     main@keypress:
   699                           	opt callstack 0
   700                           
   701                           ; 1 bytes @ 0xE
   702  0000F3                     	ds	1
   703  0000F4                     main@miniState:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0xF
   707  0000F4                     	ds	2
   708  0000F6                     main@clear:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x11
   712  0000F6                     	ds	2
   713  0000F8                     main@state:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x13
   717  0000F8                     	ds	2
   718                           
   719                           	psect	cstackCOMRAM
   720  000001                     __pcstackCOMRAM:
   721                           	opt callstack 0
   722  000001                     ??_interruptHandler:
   723                           
   724                           ; 1 bytes @ 0x0
   725  000001                     	ds	8
   726  000009                     interruptHandler@i:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0x8
   730  000009                     	ds	2
   731  00000B                     interruptHandler@keypress:
   732                           	opt callstack 0
   733                           
   734                           ; 1 bytes @ 0xA
   735  00000B                     	ds	1
   736  00000C                     ?_strlen:
   737                           	opt callstack 0
   738  00000C                     ?___awmod:
   739                           	opt callstack 0
   740  00000C                     ?___aodiv:
   741                           	opt callstack 0
   742  00000C                     ?___aomod:
   743                           	opt callstack 0
   744  00000C                     pulse_e@interruptState:
   745                           	opt callstack 0
   746  00000C                     ___awmod@dividend:
   747                           	opt callstack 0
   748  00000C                     strlen@s:
   749                           	opt callstack 0
   750  00000C                     ___aodiv@dividend:
   751                           	opt callstack 0
   752  00000C                     ___aomod@dividend:
   753                           	opt callstack 0
   754                           
   755                           ; 8 bytes @ 0xB
   756  00000C                     	ds	1
   757  00000D                     send_nibble@data:
   758                           	opt callstack 0
   759                           
   760                           ; 1 bytes @ 0xC
   761  00000D                     	ds	1
   762  00000E                     send_byte@data:
   763                           	opt callstack 0
   764  00000E                     ___awmod@divisor:
   765                           	opt callstack 0
   766  00000E                     strlen@a:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0xD
   770  00000E                     	ds	1
   771  00000F                     lcdInst@data:
   772                           	opt callstack 0
   773  00000F                     putch@data:
   774                           	opt callstack 0
   775                           
   776                           ; 1 bytes @ 0xE
   777  00000F                     	ds	1
   778  000010                     ??_initLCD:
   779  000010                     ___awmod@counter:
   780                           	opt callstack 0
   781  000010                     fputc@c:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0xF
   785  000010                     	ds	1
   786  000011                     ___awmod@sign:
   787                           	opt callstack 0
   788                           
   789                           ; 1 bytes @ 0x10
   790  000011                     	ds	1
   791  000012                     fputc@fp:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x11
   795  000012                     	ds	2
   796  000014                     ??_fputc:
   797  000014                     ___aodiv@divisor:
   798                           	opt callstack 0
   799  000014                     ___aomod@divisor:
   800                           	opt callstack 0
   801                           
   802                           ; 8 bytes @ 0x13
   803  000014                     	ds	5
   804  000019                     fputs@s:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x18
   808  000019                     	ds	2
   809  00001B                     fputs@fp:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x1A
   813  00001B                     	ds	1
   814  00001C                     ___aodiv@counter:
   815                           	opt callstack 0
   816  00001C                     ___aomod@counter:
   817                           	opt callstack 0
   818                           
   819                           ; 1 bytes @ 0x1B
   820  00001C                     	ds	1
   821  00001D                     ___aodiv@sign:
   822                           	opt callstack 0
   823  00001D                     ___aomod@sign:
   824                           	opt callstack 0
   825  00001D                     fputs@c:
   826                           	opt callstack 0
   827                           
   828                           ; 1 bytes @ 0x1C
   829  00001D                     	ds	1
   830  00001E                     ?_abs:
   831                           	opt callstack 0
   832  00001E                     abs@a:
   833                           	opt callstack 0
   834  00001E                     fputs@i:
   835                           	opt callstack 0
   836  00001E                     ___aodiv@quotient:
   837                           	opt callstack 0
   838                           
   839                           ; 8 bytes @ 0x1D
   840  00001E                     	ds	2
   841  000020                     ??_abs:
   842  000020                     ?_pad:
   843                           	opt callstack 0
   844  000020                     pad@fp:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x1F
   848  000020                     	ds	2
   849  000022                     pad@buf:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x21
   853  000022                     	ds	2
   854  000024                     pad@p:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x23
   858  000024                     	ds	2
   859  000026                     ??_pad:
   860                           
   861                           ; 1 bytes @ 0x25
   862  000026                     	ds	1
   863  000027                     pad@i:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x26
   867  000027                     	ds	2
   868  000029                     pad@w:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x28
   872  000029                     	ds	2
   873  00002B                     ?_ctoa:
   874                           	opt callstack 0
   875  00002B                     ?_dtoa:
   876                           	opt callstack 0
   877  00002B                     ctoa@fp:
   878                           	opt callstack 0
   879  00002B                     dtoa@fp:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x2A
   883  00002B                     	ds	2
   884  00002D                     ctoa@c:
   885                           	opt callstack 0
   886  00002D                     dtoa@d:
   887                           	opt callstack 0
   888                           
   889                           ; 8 bytes @ 0x2C
   890  00002D                     	ds	1
   891  00002E                     ctoa@w:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0x2D
   895  00002E                     	ds	7
   896  000035                     ??_dtoa:
   897                           
   898                           ; 1 bytes @ 0x34
   899  000035                     	ds	8
   900  00003D                     _dtoa$332:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x3C
   904  00003D                     	ds	2
   905  00003F                     dtoa@p:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x3E
   909  00003F                     	ds	2
   910  000041                     dtoa@w:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x40
   914  000041                     	ds	2
   915  000043                     dtoa@s:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x42
   919  000043                     	ds	2
   920  000045                     dtoa@n:
   921                           	opt callstack 0
   922                           
   923                           ; 8 bytes @ 0x44
   924  000045                     	ds	8
   925  00004D                     dtoa@i:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x4C
   929  00004D                     	ds	2
   930  00004F                     ?_vfpfcnvrt:
   931                           	opt callstack 0
   932  00004F                     vfpfcnvrt@fp:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x4E
   936  00004F                     	ds	2
   937  000051                     vfpfcnvrt@fmt:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x50
   941  000051                     	ds	2
   942  000053                     vfpfcnvrt@ap:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x52
   946  000053                     	ds	2
   947  000055                     ??_vfpfcnvrt:
   948                           
   949                           ; 1 bytes @ 0x54
   950  000055                     	ds	2
   951  000057                     vfpfcnvrt@ll:
   952                           	opt callstack 0
   953                           
   954                           ; 8 bytes @ 0x56
   955  000057                     	ds	8
   956  00005F                     vfpfcnvrt@c:
   957                           	opt callstack 0
   958                           
   959                           ; 1 bytes @ 0x5E
   960  00005F                     	ds	1
   961  000060                     ?_vfprintf:
   962                           	opt callstack 0
   963  000060                     vfprintf@fp:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x5F
   967  000060                     	ds	2
   968  000062                     vfprintf@fmt:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x61
   972  000062                     	ds	2
   973  000064                     vfprintf@ap:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x63
   977  000064                     	ds	2
   978  000066                     vfprintf@cfmt:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x65
   982  000066                     	ds	2
   983  000068                     ?_printf:
   984                           	opt callstack 0
   985  000068                     printf@fmt:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0x67
   989  000068                     	ds	4
   990  00006C                     
   991                           ; 1 bytes @ 0x6B
   992 ;;
   993 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   994 ;;
   995 ;; *************** function _main *****************
   996 ;; Defined at:
   997 ;;		line 37 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  miniState       2   15[BANK0 ] int 
  1002 ;;  miniClear       2   12[BANK0 ] int 
  1003 ;;  number_press    2   10[BANK0 ] int 
  1004 ;;  miniTick        2    8[BANK0 ] int 
  1005 ;;  keypress        1   14[BANK0 ] unsigned char 
  1006 ;;  state           2   19[BANK0 ] int 
  1007 ;;  clear           2   17[BANK0 ] int 
  1008 ;;  tick            2    6[BANK0 ] int 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;Total ram usage:       17 bytes
  1023 ;; Hardware stack levels required when called:   12
  1024 ;; This function calls:
  1025 ;;		___awmod
  1026 ;;		_initLCD
  1027 ;;		_lcdInst
  1028 ;;		_printf
  1029 ;; This function is called by:
  1030 ;;		Startup code after reset
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text0
  1035  000012                     __ptext0:
  1036                           	opt callstack 0
  1037  000012                     _main:
  1038                           	opt callstack 19
  1039                           
  1040                           ;main.c: 41:     LATD = 0x00;
  1041                           
  1042                           ;incstack = 0
  1043  000012  0E00               	movlw	0
  1044  000014  6E8C               	movwf	3980,c	;volatile
  1045                           
  1046                           ;main.c: 42:     TRISD = 0x00;
  1047  000016  0E00               	movlw	0
  1048  000018  6E95               	movwf	3989,c	;volatile
  1049                           
  1050                           ;main.c: 45:     ADCON1 = 0b00001111;
  1051  00001A  0E0F               	movlw	15
  1052  00001C  6EC1               	movwf	4033,c	;volatile
  1053                           
  1054                           ;main.c: 48:     INT1IE = 1;
  1055  00001E  86F0               	bsf	4080,3,c	;volatile
  1056                           
  1057                           ;main.c: 51:     initLCD();
  1058  000020  ECA4  F007         	call	_initLCD	;wreg free
  1059                           
  1060                           ;main.c: 54:     (INTCONbits.GIE = 1);
  1061  000024  8EF2               	bsf	4082,7,c	;volatile
  1062                           
  1063                           ;main.c: 57:     int state = 0;
  1064  000026  0E00               	movlw	0
  1065  000028  0100               	movlb	0	; () banked
  1066  00002A  6FF9               	movwf	(main@state+1)& (0+255),b
  1067  00002C  0E00               	movlw	0
  1068  00002E  6FF8               	movwf	main@state& (0+255),b
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;main.c: 58:     int tick = 0;
  1072  000030  0E00               	movlw	0
  1073  000032  6FEC               	movwf	(main@tick+1)& (0+255),b
  1074  000034  0E00               	movlw	0
  1075  000036  6FEB               	movwf	main@tick& (0+255),b
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;main.c: 59:     int clear = 1;
  1079  000038  0E00               	movlw	0
  1080  00003A  6FF7               	movwf	(main@clear+1)& (0+255),b
  1081  00003C  0E01               	movlw	1
  1082  00003E  6FF6               	movwf	main@clear& (0+255),b
  1083                           
  1084                           ;main.c: 64:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  1085  000040  0E0C               	movlw	12
  1086  000042  ECFA  F008         	call	_lcdInst
  1087                           
  1088                           ;main.c: 65:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1089  000046  0E01               	movlw	1
  1090  000048  ECFA  F008         	call	_lcdInst
  1091  00004C  0E11               	movlw	17
  1092  00004E  0100               	movlb	0	; () banked
  1093  000050  6FE9               	movwf	??_main& (0+255),b
  1094  000052  0E3A               	movlw	58
  1095  000054                     u2367:
  1096  000054  2EE8               	decfsz	wreg,f,c
  1097  000056  D7FE               	bra	u2367
  1098  000058  2FE9               	decfsz	??_main& (0+255),f,b
  1099  00005A  D7FC               	bra	u2367
  1100  00005C  F000               	nop	
  1101                           
  1102                           ;main.c: 66:     printf("Press A");
  1103  00005E  0EF6               	movlw	low STR_1
  1104  000060  6E68               	movwf	printf@fmt,c
  1105  000062  0EFF               	movlw	high STR_1
  1106  000064  6E69               	movwf	printf@fmt+1,c
  1107  000066  ECCC  F008         	call	_printf	;wreg free
  1108  00006A  0EC0               	movlw	192
  1109  00006C  ECFA  F008         	call	_lcdInst
  1110                           
  1111                           ;main.c: 68:     printf("to start");
  1112  000070  0EED               	movlw	low STR_2
  1113  000072  6E68               	movwf	printf@fmt,c
  1114  000074  0EFF               	movlw	high STR_2
  1115  000076  6E69               	movwf	printf@fmt+1,c
  1116  000078  ECCC  F008         	call	_printf	;wreg free
  1117  00007C  0ED0               	movlw	208
  1118  00007E  ECFA  F008         	call	_lcdInst
  1119                           
  1120                           ;main.c: 70:     printf("A for Ali ;)");
  1121  000082  0E46               	movlw	low STR_3
  1122  000084  6E68               	movwf	printf@fmt,c
  1123  000086  0EFF               	movlw	high STR_3
  1124  000088  6E69               	movwf	printf@fmt+1,c
  1125  00008A  ECCC  F008         	call	_printf	;wreg free
  1126  00008E                     l2675:
  1127  00008E  0100               	movlb	0	; () banked
  1128  000090  51C2               	movf	_start& (0+255),w,b	;volatile
  1129  000092  B4D8               	btfsc	status,2,c
  1130  000094  D7FC               	goto	l2675
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;main.c: 74:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1134  000096  0E01               	movlw	1
  1135  000098  ECFA  F008         	call	_lcdInst
  1136  00009C  0E11               	movlw	17
  1137  00009E  0100               	movlb	0	; () banked
  1138  0000A0  6FE9               	movwf	??_main& (0+255),b
  1139  0000A2  0E3A               	movlw	58
  1140  0000A4                     u2377:
  1141  0000A4  2EE8               	decfsz	wreg,f,c
  1142  0000A6  D7FE               	bra	u2377
  1143  0000A8  2FE9               	decfsz	??_main& (0+255),f,b
  1144  0000AA  D7FC               	bra	u2377
  1145  0000AC  F000               	nop	
  1146                           
  1147                           ;main.c: 75:     printf("It's ya boy Ali!");
  1148  0000AE  0EA0               	movlw	low STR_4
  1149  0000B0  6E68               	movwf	printf@fmt,c
  1150  0000B2  0EFE               	movlw	high STR_4
  1151  0000B4  6E69               	movwf	printf@fmt+1,c
  1152  0000B6  ECCC  F008         	call	_printf	;wreg free
  1153                           
  1154                           ;main.c: 76:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1155  0000BA  0E33               	movlw	51
  1156  0000BC  0100               	movlb	0	; () banked
  1157  0000BE  6FEA               	movwf	(??_main+1)& (0+255),b
  1158  0000C0  0EBB               	movlw	187
  1159  0000C2  6FE9               	movwf	??_main& (0+255),b
  1160  0000C4  0EDF               	movlw	223
  1161  0000C6                     u2387:
  1162  0000C6  2EE8               	decfsz	wreg,f,c
  1163  0000C8  D7FE               	bra	u2387
  1164  0000CA  2FE9               	decfsz	??_main& (0+255),f,b
  1165  0000CC  D7FC               	bra	u2387
  1166  0000CE  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1167  0000D0  D7FA               	bra	u2387
  1168  0000D2  D000               	nop2	
  1169  0000D4  0E90               	movlw	144
  1170  0000D6  ECFA  F008         	call	_lcdInst
  1171                           
  1172                           ;main.c: 78:     printf("He gettin hot ");
  1173  0000DA  0ED0               	movlw	low STR_5
  1174  0000DC  6E68               	movwf	printf@fmt,c
  1175  0000DE  0EFE               	movlw	high STR_5
  1176  0000E0  6E69               	movwf	printf@fmt+1,c
  1177  0000E2  ECCC  F008         	call	_printf	;wreg free
  1178                           
  1179                           ;main.c: 79:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1180  0000E6  0E33               	movlw	51
  1181  0000E8  0100               	movlb	0	; () banked
  1182  0000EA  6FEA               	movwf	(??_main+1)& (0+255),b
  1183  0000EC  0EBB               	movlw	187
  1184  0000EE  6FE9               	movwf	??_main& (0+255),b
  1185  0000F0  0EDF               	movlw	223
  1186  0000F2                     u2397:
  1187  0000F2  2EE8               	decfsz	wreg,f,c
  1188  0000F4  D7FE               	bra	u2397
  1189  0000F6  2FE9               	decfsz	??_main& (0+255),f,b
  1190  0000F8  D7FC               	bra	u2397
  1191  0000FA  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1192  0000FC  D7FA               	bra	u2397
  1193  0000FE  D000               	nop2	
  1194                           
  1195                           ;main.c: 81:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1196  000100  0E01               	movlw	1
  1197  000102  ECFA  F008         	call	_lcdInst
  1198  000106  0E11               	movlw	17
  1199  000108  0100               	movlb	0	; () banked
  1200  00010A  6FE9               	movwf	??_main& (0+255),b
  1201  00010C  0E3A               	movlw	58
  1202  00010E                     u2407:
  1203  00010E  2EE8               	decfsz	wreg,f,c
  1204  000110  D7FE               	bra	u2407
  1205  000112  2FE9               	decfsz	??_main& (0+255),f,b
  1206  000114  D7FC               	bra	u2407
  1207  000116  F000               	nop	
  1208                           
  1209                           ;main.c: 82:     printf("Hi Cull !");
  1210  000118  0EBE               	movlw	low STR_6
  1211  00011A  6E68               	movwf	printf@fmt,c
  1212  00011C  0EFF               	movlw	high STR_6
  1213  00011E  6E69               	movwf	printf@fmt+1,c
  1214  000120  ECCC  F008         	call	_printf	;wreg free
  1215                           
  1216                           ;main.c: 83:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1217  000124  0E33               	movlw	51
  1218  000126  0100               	movlb	0	; () banked
  1219  000128  6FEA               	movwf	(??_main+1)& (0+255),b
  1220  00012A  0EBB               	movlw	187
  1221  00012C  6FE9               	movwf	??_main& (0+255),b
  1222  00012E  0EDF               	movlw	223
  1223  000130                     u2417:
  1224  000130  2EE8               	decfsz	wreg,f,c
  1225  000132  D7FE               	bra	u2417
  1226  000134  2FE9               	decfsz	??_main& (0+255),f,b
  1227  000136  D7FC               	bra	u2417
  1228  000138  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1229  00013A  D7FA               	bra	u2417
  1230  00013C  D000               	nop2	
  1231  00013E  0E90               	movlw	144
  1232  000140  ECFA  F008         	call	_lcdInst
  1233                           
  1234                           ;main.c: 85:     printf("Almost done");
  1235  000144  0E85               	movlw	low STR_7
  1236  000146  6E68               	movwf	printf@fmt,c
  1237  000148  0EFF               	movlw	high STR_7
  1238  00014A  6E69               	movwf	printf@fmt+1,c
  1239  00014C  ECCC  F008         	call	_printf	;wreg free
  1240  000150  0ED0               	movlw	208
  1241  000152  ECFA  F008         	call	_lcdInst
  1242                           
  1243                           ;main.c: 87:     _delay((unsigned long)((2000)*(10000000/4000.0)));
  1244  000156  0E1A               	movlw	26
  1245  000158  0100               	movlb	0	; () banked
  1246  00015A  6FEA               	movwf	(??_main+1)& (0+255),b
  1247  00015C  0E5E               	movlw	94
  1248  00015E  6FE9               	movwf	??_main& (0+255),b
  1249  000160  0E6E               	movlw	110
  1250  000162                     u2427:
  1251  000162  2EE8               	decfsz	wreg,f,c
  1252  000164  D7FE               	bra	u2427
  1253  000166  2FE9               	decfsz	??_main& (0+255),f,b
  1254  000168  D7FC               	bra	u2427
  1255  00016A  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1256  00016C  D7FA               	bra	u2427
  1257  00016E  F000               	nop	
  1258                           
  1259                           ;main.c: 88:     printf("AND DONE");
  1260  000170  0ED2               	movlw	low STR_8
  1261  000172  6E68               	movwf	printf@fmt,c
  1262  000174  0EFF               	movlw	high STR_8
  1263  000176  6E69               	movwf	printf@fmt+1,c
  1264  000178  ECCC  F008         	call	_printf	;wreg free
  1265                           
  1266                           ;main.c: 89:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1267  00017C  0E33               	movlw	51
  1268  00017E  0100               	movlb	0	; () banked
  1269  000180  6FEA               	movwf	(??_main+1)& (0+255),b
  1270  000182  0EBB               	movlw	187
  1271  000184  6FE9               	movwf	??_main& (0+255),b
  1272  000186  0EDF               	movlw	223
  1273  000188                     u2437:
  1274  000188  2EE8               	decfsz	wreg,f,c
  1275  00018A  D7FE               	bra	u2437
  1276  00018C  2FE9               	decfsz	??_main& (0+255),f,b
  1277  00018E  D7FC               	bra	u2437
  1278  000190  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1279  000192  D7FA               	bra	u2437
  1280  000194  D000               	nop2	
  1281                           
  1282                           ;main.c: 91:     start = 0;
  1283  000196  0E00               	movlw	0
  1284  000198  0100               	movlb	0	; () banked
  1285  00019A  6FC2               	movwf	_start& (0+255),b	;volatile
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;main.c: 93:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1289  00019C  0E01               	movlw	1
  1290  00019E  ECFA  F008         	call	_lcdInst
  1291  0001A2  0E11               	movlw	17
  1292  0001A4  0100               	movlb	0	; () banked
  1293  0001A6  6FE9               	movwf	??_main& (0+255),b
  1294  0001A8  0E3A               	movlw	58
  1295  0001AA                     u2447:
  1296  0001AA  2EE8               	decfsz	wreg,f,c
  1297  0001AC  D7FE               	bra	u2447
  1298  0001AE  2FE9               	decfsz	??_main& (0+255),f,b
  1299  0001B0  D7FC               	bra	u2447
  1300  0001B2  F000               	nop	
  1301                           
  1302                           ;main.c: 94:     printf("Press A to");
  1303  0001B4  0E9D               	movlw	low STR_9
  1304  0001B6  6E68               	movwf	printf@fmt,c
  1305  0001B8  0EFF               	movlw	high STR_9
  1306  0001BA  6E69               	movwf	printf@fmt+1,c
  1307  0001BC  ECCC  F008         	call	_printf	;wreg free
  1308  0001C0  0E90               	movlw	144
  1309  0001C2  ECFA  F008         	call	_lcdInst
  1310                           
  1311                           ;main.c: 96:     printf("view results");
  1312  0001C6  0E60               	movlw	low STR_10
  1313  0001C8  6E68               	movwf	printf@fmt,c
  1314  0001CA  0EFF               	movlw	high STR_10
  1315  0001CC  6E69               	movwf	printf@fmt+1,c
  1316  0001CE  ECCC  F008         	call	_printf	;wreg free
  1317  0001D2                     l2721:
  1318  0001D2  0100               	movlb	0	; () banked
  1319  0001D4  51C2               	movf	_start& (0+255),w,b	;volatile
  1320  0001D6  B4D8               	btfsc	status,2,c
  1321  0001D8  D7FC               	goto	l2721
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;main.c: 101:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1325  0001DA  0E01               	movlw	1
  1326  0001DC  ECFA  F008         	call	_lcdInst
  1327  0001E0  0E11               	movlw	17
  1328  0001E2  0100               	movlb	0	; () banked
  1329  0001E4  6FE9               	movwf	??_main& (0+255),b
  1330  0001E6  0E3A               	movlw	58
  1331  0001E8                     u2457:
  1332  0001E8  2EE8               	decfsz	wreg,f,c
  1333  0001EA  D7FE               	bra	u2457
  1334  0001EC  2FE9               	decfsz	??_main& (0+255),f,b
  1335  0001EE  D7FC               	bra	u2457
  1336  0001F0  F000               	nop	
  1337                           
  1338                           ;main.c: 102:     printf("Canister Index");
  1339  0001F2  0E0C               	movlw	low STR_11
  1340  0001F4  6E68               	movwf	printf@fmt,c
  1341  0001F6  0EFF               	movlw	high STR_11
  1342  0001F8  6E69               	movwf	printf@fmt+1,c
  1343  0001FA  ECCC  F008         	call	_printf	;wreg free
  1344  0001FE  0E90               	movlw	144
  1345  000200  ECFA  F008         	call	_lcdInst
  1346                           
  1347                           ;main.c: 104:     printf("starts at 0");
  1348  000204  0E6D               	movlw	low STR_12
  1349  000206  6E68               	movwf	printf@fmt,c
  1350  000208  0EFF               	movlw	high STR_12
  1351  00020A  6E69               	movwf	printf@fmt+1,c
  1352  00020C  ECCC  F008         	call	_printf	;wreg free
  1353                           
  1354                           ;main.c: 105:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1355  000210  0E33               	movlw	51
  1356  000212  0100               	movlb	0	; () banked
  1357  000214  6FEA               	movwf	(??_main+1)& (0+255),b
  1358  000216  0EBB               	movlw	187
  1359  000218  6FE9               	movwf	??_main& (0+255),b
  1360  00021A  0EDF               	movlw	223
  1361  00021C                     u2467:
  1362  00021C  2EE8               	decfsz	wreg,f,c
  1363  00021E  D7FE               	bra	u2467
  1364  000220  2FE9               	decfsz	??_main& (0+255),f,b
  1365  000222  D7FC               	bra	u2467
  1366  000224  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1367  000226  D7FA               	bra	u2467
  1368  000228  D000               	nop2	
  1369                           
  1370                           ;main.c: 112:         if (state == 0 & clear == 1) {
  1371  00022A  0100               	movlb	0	; () banked
  1372  00022C  51F8               	movf	main@state& (0+255),w,b
  1373  00022E  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1374  000230  A4D8               	btfss	status,2,c
  1375  000232  D028               	goto	l2749
  1376                           
  1377                           ; BSR set to: 0
  1378  000234  05F6               	decf	main@clear& (0+255),w,b
  1379  000236  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1380  000238  A4D8               	btfss	status,2,c
  1381  00023A  D024               	goto	l2749
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;main.c: 113:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1385  00023C  0E01               	movlw	1
  1386  00023E  ECFA  F008         	call	_lcdInst
  1387  000242  0E11               	movlw	17
  1388  000244  0100               	movlb	0	; () banked
  1389  000246  6FE9               	movwf	??_main& (0+255),b
  1390  000248  0E3A               	movlw	58
  1391  00024A                     u2477:
  1392  00024A  2EE8               	decfsz	wreg,f,c
  1393  00024C  D7FE               	bra	u2477
  1394  00024E  2FE9               	decfsz	??_main& (0+255),f,b
  1395  000250  D7FC               	bra	u2477
  1396  000252  F000               	nop	
  1397                           
  1398                           ;main.c: 114:         printf("Operation Time");
  1399  000254  0EDF               	movlw	low STR_13
  1400  000256  6E68               	movwf	printf@fmt,c
  1401  000258  0EFE               	movlw	high STR_13
  1402  00025A  6E69               	movwf	printf@fmt+1,c
  1403  00025C  ECCC  F008         	call	_printf	;wreg free
  1404  000260  0E90               	movlw	144
  1405  000262  ECFA  F008         	call	_lcdInst
  1406                           
  1407                           ;main.c: 116:         printf("%d seconds", time);
  1408  000266  0EA8               	movlw	low STR_14
  1409  000268  6E68               	movwf	printf@fmt,c
  1410  00026A  0EFF               	movlw	high STR_14
  1411  00026C  6E69               	movwf	printf@fmt+1,c
  1412  00026E  0E00               	movlw	0
  1413  000270  6E6B               	movwf	?_printf+3,c
  1414  000272  0E1E               	movlw	30
  1415  000274  6E6A               	movwf	?_printf+2,c
  1416  000276  ECCC  F008         	call	_printf	;wreg free
  1417                           
  1418                           ;main.c: 117:         clear = 0;
  1419  00027A  0E00               	movlw	0
  1420  00027C  0100               	movlb	0	; () banked
  1421  00027E  6FF7               	movwf	(main@clear+1)& (0+255),b
  1422  000280  0E00               	movlw	0
  1423  000282  6FF6               	movwf	main@clear& (0+255),b
  1424  000284                     l2749:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;main.c: 121:         if (state == 1 & clear == 1) {
  1428  000284  05F8               	decf	main@state& (0+255),w,b
  1429  000286  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1430  000288  A4D8               	btfss	status,2,c
  1431  00028A  D02C               	goto	l2767
  1432                           
  1433                           ; BSR set to: 0
  1434  00028C  05F6               	decf	main@clear& (0+255),w,b
  1435  00028E  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1436  000290  A4D8               	btfss	status,2,c
  1437  000292  D028               	goto	l2767
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 123:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1441  000294  0E01               	movlw	1
  1442  000296  ECFA  F008         	call	_lcdInst
  1443  00029A  0E11               	movlw	17
  1444  00029C  0100               	movlb	0	; () banked
  1445  00029E  6FE9               	movwf	??_main& (0+255),b
  1446  0002A0  0E3A               	movlw	58
  1447  0002A2                     u2487:
  1448  0002A2  2EE8               	decfsz	wreg,f,c
  1449  0002A4  D7FE               	bra	u2487
  1450  0002A6  2FE9               	decfsz	??_main& (0+255),f,b
  1451  0002A8  D7FC               	bra	u2487
  1452  0002AA  F000               	nop	
  1453                           
  1454                           ;main.c: 124:             { lcdInst(0x80 | LCD_LINE1_ADDR);};
  1455  0002AC  0E80               	movlw	128
  1456  0002AE  ECFA  F008         	call	_lcdInst
  1457                           
  1458                           ;main.c: 125:             printf("# of Canisters");
  1459  0002B2  0EFD               	movlw	low STR_15
  1460  0002B4  6E68               	movwf	printf@fmt,c
  1461  0002B6  0EFE               	movlw	high STR_15
  1462  0002B8  6E69               	movwf	printf@fmt+1,c
  1463  0002BA  ECCC  F008         	call	_printf	;wreg free
  1464  0002BE  0E90               	movlw	144
  1465  0002C0  ECFA  F008         	call	_lcdInst
  1466                           
  1467                           ;main.c: 127:             printf("%d Canisters", Canister);
  1468  0002C4  0E53               	movlw	low STR_16
  1469  0002C6  6E68               	movwf	printf@fmt,c
  1470  0002C8  0EFF               	movlw	high STR_16
  1471  0002CA  6E69               	movwf	printf@fmt+1,c
  1472  0002CC  C0BE  F06A         	movff	_Canister,?_printf+2
  1473  0002D0  C0BF  F06B         	movff	_Canister+1,?_printf+3
  1474  0002D4  ECCC  F008         	call	_printf	;wreg free
  1475  0002D8                     l2765:
  1476                           
  1477                           ;main.c: 128:             clear = 0;
  1478  0002D8  0E00               	movlw	0
  1479  0002DA  0100               	movlb	0	; () banked
  1480  0002DC  6FF7               	movwf	(main@clear+1)& (0+255),b
  1481  0002DE  0E00               	movlw	0
  1482  0002E0  6FF6               	movwf	main@clear& (0+255),b
  1483                           
  1484                           ;main.c: 130:         }
  1485  0002E2  D067               	goto	l2807
  1486  0002E4                     l2767:
  1487                           
  1488                           ; BSR set to: 0
  1489  0002E4  0E02               	movlw	2
  1490  0002E6  19F8               	xorwf	main@state& (0+255),w,b
  1491  0002E8  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1492  0002EA  A4D8               	btfss	status,2,c
  1493  0002EC  D02D               	goto	l2787
  1494                           
  1495                           ; BSR set to: 0
  1496  0002EE  05F6               	decf	main@clear& (0+255),w,b
  1497  0002F0  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1498  0002F2  A4D8               	btfss	status,2,c
  1499  0002F4  D029               	goto	l2787
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;main.c: 134:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1503  0002F6  0E01               	movlw	1
  1504  0002F8  ECFA  F008         	call	_lcdInst
  1505  0002FC  0E11               	movlw	17
  1506  0002FE  0100               	movlb	0	; () banked
  1507  000300  6FE9               	movwf	??_main& (0+255),b
  1508  000302  0E3A               	movlw	58
  1509  000304                     u2497:
  1510  000304  2EE8               	decfsz	wreg,f,c
  1511  000306  D7FE               	bra	u2497
  1512  000308  2FE9               	decfsz	??_main& (0+255),f,b
  1513  00030A  D7FC               	bra	u2497
  1514  00030C  F000               	nop	
  1515                           
  1516                           ;main.c: 135:             printf("# of Balls");
  1517  00030E  0EB3               	movlw	low STR_17
  1518  000310  6E68               	movwf	printf@fmt,c
  1519  000312  0EFF               	movlw	high STR_17
  1520  000314  6E69               	movwf	printf@fmt+1,c
  1521  000316  ECCC  F008         	call	_printf	;wreg free
  1522  00031A  0EC0               	movlw	192
  1523  00031C  ECFA  F008         	call	_lcdInst
  1524                           
  1525                           ;main.c: 137:             printf("supplied");
  1526  000320  0EDB               	movlw	low STR_18
  1527  000322  6E68               	movwf	printf@fmt,c
  1528  000324  0EFF               	movlw	high STR_18
  1529  000326  6E69               	movwf	printf@fmt+1,c
  1530  000328  ECCC  F008         	call	_printf	;wreg free
  1531  00032C  0ED0               	movlw	208
  1532  00032E  ECFA  F008         	call	_lcdInst
  1533                           
  1534                           ;main.c: 139:             printf("%d balls", balls);
  1535  000332  0EE4               	movlw	low STR_19
  1536  000334  6E68               	movwf	printf@fmt,c
  1537  000336  0EFF               	movlw	high STR_19
  1538  000338  6E69               	movwf	printf@fmt+1,c
  1539  00033A  0E00               	movlw	0
  1540  00033C  6E6B               	movwf	?_printf+3,c
  1541  00033E  0E05               	movlw	5
  1542  000340  6E6A               	movwf	?_printf+2,c
  1543  000342  ECCC  F008         	call	_printf	;wreg free
  1544  000346  D7C8               	goto	l2765
  1545  000348                     l2787:
  1546                           
  1547                           ; BSR set to: 0
  1548  000348  0E03               	movlw	3
  1549  00034A  19F8               	xorwf	main@state& (0+255),w,b
  1550  00034C  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1551  00034E  A4D8               	btfss	status,2,c
  1552  000350  D030               	goto	l2807
  1553                           
  1554                           ; BSR set to: 0
  1555  000352  05F6               	decf	main@clear& (0+255),w,b
  1556  000354  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1557  000356  A4D8               	btfss	status,2,c
  1558  000358  D02C               	goto	l2807
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;main.c: 146:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1562  00035A  0E01               	movlw	1
  1563  00035C  ECFA  F008         	call	_lcdInst
  1564  000360  0E11               	movlw	17
  1565  000362  0100               	movlb	0	; () banked
  1566  000364  6FE9               	movwf	??_main& (0+255),b
  1567  000366  0E3A               	movlw	58
  1568  000368                     u2507:
  1569  000368  2EE8               	decfsz	wreg,f,c
  1570  00036A  D7FE               	bra	u2507
  1571  00036C  2FE9               	decfsz	??_main& (0+255),f,b
  1572  00036E  D7FC               	bra	u2507
  1573  000370  F000               	nop	
  1574                           
  1575                           ;main.c: 147:             printf("Individual Info");
  1576  000372  0EB1               	movlw	low STR_20
  1577  000374  6E68               	movwf	printf@fmt,c
  1578  000376  0EFE               	movlw	high STR_20
  1579  000378  6E69               	movwf	printf@fmt+1,c
  1580  00037A  ECCC  F008         	call	_printf	;wreg free
  1581  00037E  0EC0               	movlw	192
  1582  000380  ECFA  F008         	call	_lcdInst
  1583                           
  1584                           ;main.c: 149:             printf("of Canister");
  1585  000384  0E91               	movlw	low STR_21
  1586  000386  6E68               	movwf	printf@fmt,c
  1587  000388  0EFF               	movlw	high STR_21
  1588  00038A  6E69               	movwf	printf@fmt+1,c
  1589  00038C  ECCC  F008         	call	_printf	;wreg free
  1590  000390  0ED0               	movlw	208
  1591  000392  ECFA  F008         	call	_lcdInst
  1592                           
  1593                           ;main.c: 151:             printf("Press 0 to %d ", Canister-1);
  1594  000396  0EC1               	movlw	low STR_22
  1595  000398  6E68               	movwf	printf@fmt,c
  1596  00039A  0EFE               	movlw	high STR_22
  1597  00039C  6E69               	movwf	printf@fmt+1,c
  1598  00039E  0EFF               	movlw	255
  1599  0003A0  0100               	movlb	0	; () banked
  1600  0003A2  25BE               	addwf	_Canister& (0+255),w,b
  1601  0003A4  6E6A               	movwf	?_printf+2,c
  1602  0003A6  0EFF               	movlw	255
  1603  0003A8  21BF               	addwfc	(_Canister+1)& (0+255),w,b
  1604  0003AA  6E6B               	movwf	?_printf+3,c
  1605  0003AC  ECCC  F008         	call	_printf	;wreg free
  1606  0003B0  D793               	goto	l2765
  1607  0003B2                     l2807:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;main.c: 156:         if(key_was_pressed){
  1611  0003B2  51C4               	movf	_key_was_pressed& (0+255),w,b	;volatile
  1612  0003B4  B4D8               	btfsc	status,2,c
  1613  0003B6  D140               	goto	l2905
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;main.c: 158:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1617  0003B8  3881               	swapf	3969,w,c	;volatile
  1618  0003BA  0B0F               	andlw	15
  1619  0003BC  0B0F               	andlw	15
  1620  0003BE  6FF3               	movwf	main@keypress& (0+255),b
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;main.c: 159:             int miniTick = 0;
  1624  0003C0  0E00               	movlw	0
  1625  0003C2  6FEE               	movwf	(main@miniTick+1)& (0+255),b
  1626  0003C4  0E00               	movlw	0
  1627  0003C6  6FED               	movwf	main@miniTick& (0+255),b
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;main.c: 160:             int miniState = 0;
  1631  0003C8  0E00               	movlw	0
  1632  0003CA  6FF5               	movwf	(main@miniState+1)& (0+255),b
  1633  0003CC  0E00               	movlw	0
  1634  0003CE  6FF4               	movwf	main@miniState& (0+255),b
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;main.c: 161:             int miniClear = 1;
  1638  0003D0  0E00               	movlw	0
  1639  0003D2  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1640  0003D4  0E01               	movlw	1
  1641  0003D6  6FF1               	movwf	main@miniClear& (0+255),b
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 163:             int number_pressed = (int) (keys[keypress] - '0');
  1645  0003D8  0E89               	movlw	low _keys
  1646  0003DA  25F3               	addwf	main@keypress& (0+255),w,b
  1647  0003DC  6EF6               	movwf	tblptrl,c
  1648  0003DE  6AF7               	clrf	tblptrh,c
  1649  0003E0  0EFE               	movlw	high _keys
  1650  0003E2  22F7               	addwfc	tblptrh,f,c
  1651  0003E4                     	if	0	;There are less than 3 active tblptr bytes
  1652  0003E4                     	endif
  1653  0003E4  0008               	tblrd		*
  1654  0003E6  CFF5 F0E9          	movff	tablat,??_main
  1655  0003EA  0ED0               	movlw	208
  1656  0003EC  25E9               	addwf	??_main& (0+255),w,b
  1657  0003EE  6FEF               	movwf	main@number_pressed& (0+255),b
  1658  0003F0  6BF0               	clrf	(main@number_pressed+1)& (0+255),b
  1659  0003F2  0EFF               	movlw	255
  1660  0003F4  23F0               	addwfc	(main@number_pressed+1)& (0+255),f,b
  1661                           
  1662                           ;main.c: 165:             while(!exit_key) {
  1663  0003F6  D118               	goto	l2901
  1664  0003F8                     l2819:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;main.c: 167:                 if (miniState == 0 & miniClear == 1) {
  1668  0003F8  51F4               	movf	main@miniState& (0+255),w,b
  1669  0003FA  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1670  0003FC  A4D8               	btfss	status,2,c
  1671  0003FE  D046               	goto	l2839
  1672                           
  1673                           ; BSR set to: 0
  1674  000400  05F1               	decf	main@miniClear& (0+255),w,b
  1675  000402  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1676  000404  A4D8               	btfss	status,2,c
  1677  000406  D042               	goto	l2839
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;main.c: 169:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1681  000408  0E01               	movlw	1
  1682  00040A  ECFA  F008         	call	_lcdInst
  1683  00040E  0E11               	movlw	17
  1684  000410  0100               	movlb	0	; () banked
  1685  000412  6FE9               	movwf	??_main& (0+255),b
  1686  000414  0E3A               	movlw	58
  1687  000416                     u2517:
  1688  000416  2EE8               	decfsz	wreg,f,c
  1689  000418  D7FE               	bra	u2517
  1690  00041A  2FE9               	decfsz	??_main& (0+255),f,b
  1691  00041C  D7FC               	bra	u2517
  1692  00041E  F000               	nop	
  1693                           
  1694                           ;main.c: 170:                     printf("Cansiter %c", keys[keypress]);
  1695  000420  0E79               	movlw	low STR_23
  1696  000422  6E68               	movwf	printf@fmt,c
  1697  000424  0EFF               	movlw	high STR_23
  1698  000426  6E69               	movwf	printf@fmt+1,c
  1699  000428  0E89               	movlw	low _keys
  1700  00042A  0100               	movlb	0	; () banked
  1701  00042C  25F3               	addwf	main@keypress& (0+255),w,b
  1702  00042E  6EF6               	movwf	tblptrl,c
  1703  000430  6AF7               	clrf	tblptrh,c
  1704  000432  0EFE               	movlw	high _keys
  1705  000434  22F7               	addwfc	tblptrh,f,c
  1706  000436                     	if	0	;There are less than 3 active tblptr bytes
  1707  000436                     	endif
  1708  000436  0008               	tblrd		*
  1709  000438  50F5               	movf	tablat,w,c
  1710  00043A  6E6A               	movwf	?_printf+2,c
  1711  00043C  6A6B               	clrf	?_printf+3,c
  1712  00043E  ECCC  F008         	call	_printf	;wreg free
  1713  000442  0E90               	movlw	144
  1714  000444  ECFA  F008         	call	_lcdInst
  1715                           
  1716                           ;main.c: 172:                     printf("Distance %d cm", DistanceCanister[number_press
      +                          ed] );
  1717  000448  0EEE               	movlw	low STR_24
  1718  00044A  6E68               	movwf	printf@fmt,c
  1719  00044C  0EFE               	movlw	high STR_24
  1720  00044E  6E69               	movwf	printf@fmt+1,c
  1721  000450  90D8               	bcf	status,0,c
  1722  000452  0100               	movlb	0	; () banked
  1723  000454  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1724  000456  6ED9               	movwf	fsr2l,c
  1725  000458  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1726  00045A  6EDA               	movwf	fsr2h,c
  1727  00045C  0E94               	movlw	low _DistanceCanister
  1728  00045E  26D9               	addwf	fsr2l,f,c
  1729  000460  0E00               	movlw	high _DistanceCanister
  1730  000462  22DA               	addwfc	fsr2h,f,c
  1731  000464  CFDE F06A          	movff	postinc2,?_printf+2
  1732  000468  CFDD F06B          	movff	postdec2,?_printf+3
  1733  00046C  ECCC  F008         	call	_printf	;wreg free
  1734  000470  0ED0               	movlw	208
  1735  000472  ECFA  F008         	call	_lcdInst
  1736                           
  1737                           ;main.c: 174:                     printf("* to exit");
  1738  000476  0EC8               	movlw	low STR_25
  1739  000478  6E68               	movwf	printf@fmt,c
  1740  00047A  0EFF               	movlw	high STR_25
  1741  00047C  6E69               	movwf	printf@fmt+1,c
  1742  00047E  ECCC  F008         	call	_printf	;wreg free
  1743                           
  1744                           ;main.c: 175:                     miniClear = 0;
  1745  000482  0E00               	movlw	0
  1746  000484  0100               	movlb	0	; () banked
  1747  000486  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1748  000488  0E00               	movlw	0
  1749  00048A  6FF1               	movwf	main@miniClear& (0+255),b
  1750  00048C                     l2839:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 178:                 if (miniState == 1 & miniClear == 1) {
  1754  00048C  05F4               	decf	main@miniState& (0+255),w,b
  1755  00048E  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1756  000490  A4D8               	btfss	status,2,c
  1757  000492  D04D               	goto	l2863
  1758                           
  1759                           ; BSR set to: 0
  1760  000494  05F1               	decf	main@miniClear& (0+255),w,b
  1761  000496  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1762  000498  A4D8               	btfss	status,2,c
  1763  00049A  D049               	goto	l2863
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;main.c: 180:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1767  00049C  0E01               	movlw	1
  1768  00049E  ECFA  F008         	call	_lcdInst
  1769  0004A2  0E11               	movlw	17
  1770  0004A4  0100               	movlb	0	; () banked
  1771  0004A6  6FE9               	movwf	??_main& (0+255),b
  1772  0004A8  0E3A               	movlw	58
  1773  0004AA                     u2527:
  1774  0004AA  2EE8               	decfsz	wreg,f,c
  1775  0004AC  D7FE               	bra	u2527
  1776  0004AE  2FE9               	decfsz	??_main& (0+255),f,b
  1777  0004B0  D7FC               	bra	u2527
  1778  0004B2  F000               	nop	
  1779                           
  1780                           ;main.c: 181:                     printf("Cansiter %c", keys[keypress]);
  1781  0004B4  0E79               	movlw	low STR_23
  1782  0004B6  6E68               	movwf	printf@fmt,c
  1783  0004B8  0EFF               	movlw	high STR_23
  1784  0004BA  6E69               	movwf	printf@fmt+1,c
  1785  0004BC  0E89               	movlw	low _keys
  1786  0004BE  0100               	movlb	0	; () banked
  1787  0004C0  25F3               	addwf	main@keypress& (0+255),w,b
  1788  0004C2  6EF6               	movwf	tblptrl,c
  1789  0004C4  6AF7               	clrf	tblptrh,c
  1790  0004C6  0EFE               	movlw	high _keys
  1791  0004C8  22F7               	addwfc	tblptrh,f,c
  1792  0004CA                     	if	0	;There are less than 3 active tblptr bytes
  1793  0004CA                     	endif
  1794  0004CA  0008               	tblrd		*
  1795  0004CC  50F5               	movf	tablat,w,c
  1796  0004CE  6E6A               	movwf	?_printf+2,c
  1797  0004D0  6A6B               	clrf	?_printf+3,c
  1798  0004D2  ECCC  F008         	call	_printf	;wreg free
  1799  0004D6  0E90               	movlw	144
  1800  0004D8  ECFA  F008         	call	_lcdInst
  1801                           
  1802                           ;main.c: 183:                     if (State[number_pressed] == 1)
  1803  0004DC  90D8               	bcf	status,0,c
  1804  0004DE  0100               	movlb	0	; () banked
  1805  0004E0  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1806  0004E2  6ED9               	movwf	fsr2l,c
  1807  0004E4  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1808  0004E6  6EDA               	movwf	fsr2h,c
  1809  0004E8  0EA8               	movlw	low _State
  1810  0004EA  26D9               	addwf	fsr2l,f,c
  1811  0004EC  0E00               	movlw	high _State
  1812  0004EE  22DA               	addwfc	fsr2h,f,c
  1813  0004F0  04DE               	decf	postinc2,w,c
  1814  0004F2  10DE               	iorwf	postinc2,w,c
  1815  0004F4  A4D8               	btfss	status,2,c
  1816  0004F6  D007               	goto	l2855
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;main.c: 184:                         printf("Canister Full");
  1820  0004F8  0E38               	movlw	low STR_27
  1821  0004FA  6E68               	movwf	printf@fmt,c
  1822  0004FC  0EFF               	movlw	high STR_27
  1823  0004FE  6E69               	movwf	printf@fmt+1,c
  1824  000500  ECCC  F008         	call	_printf	;wreg free
  1825  000504  D006               	goto	l2857
  1826  000506                     l2855:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;main.c: 186:                         printf("Canister Empty");
  1830  000506  0E1B               	movlw	low STR_28
  1831  000508  6E68               	movwf	printf@fmt,c
  1832  00050A  0EFF               	movlw	high STR_28
  1833  00050C  6E69               	movwf	printf@fmt+1,c
  1834  00050E  ECCC  F008         	call	_printf	;wreg free
  1835  000512                     l2857:
  1836  000512  0ED0               	movlw	208
  1837  000514  ECFA  F008         	call	_lcdInst
  1838                           
  1839                           ;main.c: 188:                     printf("* to exit");
  1840  000518  0EC8               	movlw	low STR_25
  1841  00051A  6E68               	movwf	printf@fmt,c
  1842  00051C  0EFF               	movlw	high STR_25
  1843  00051E  6E69               	movwf	printf@fmt+1,c
  1844  000520  ECCC  F008         	call	_printf	;wreg free
  1845                           
  1846                           ;main.c: 189:                     miniClear = 0;
  1847  000524  0E00               	movlw	0
  1848  000526  0100               	movlb	0	; () banked
  1849  000528  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1850  00052A  0E00               	movlw	0
  1851  00052C  6FF1               	movwf	main@miniClear& (0+255),b
  1852  00052E                     l2863:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;main.c: 192:                 if (miniState == 2 & miniClear == 1) {
  1856  00052E  0E02               	movlw	2
  1857  000530  19F4               	xorwf	main@miniState& (0+255),w,b
  1858  000532  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1859  000534  A4D8               	btfss	status,2,c
  1860  000536  D04D               	goto	l2887
  1861                           
  1862                           ; BSR set to: 0
  1863  000538  05F1               	decf	main@miniClear& (0+255),w,b
  1864  00053A  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1865  00053C  A4D8               	btfss	status,2,c
  1866  00053E  D049               	goto	l2887
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;main.c: 194:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1870  000540  0E01               	movlw	1
  1871  000542  ECFA  F008         	call	_lcdInst
  1872  000546  0E11               	movlw	17
  1873  000548  0100               	movlb	0	; () banked
  1874  00054A  6FE9               	movwf	??_main& (0+255),b
  1875  00054C  0E3A               	movlw	58
  1876  00054E                     u2537:
  1877  00054E  2EE8               	decfsz	wreg,f,c
  1878  000550  D7FE               	bra	u2537
  1879  000552  2FE9               	decfsz	??_main& (0+255),f,b
  1880  000554  D7FC               	bra	u2537
  1881  000556  F000               	nop	
  1882                           
  1883                           ;main.c: 195:                     printf("Cansiter %c", keys[keypress]);
  1884  000558  0E79               	movlw	low STR_23
  1885  00055A  6E68               	movwf	printf@fmt,c
  1886  00055C  0EFF               	movlw	high STR_23
  1887  00055E  6E69               	movwf	printf@fmt+1,c
  1888  000560  0E89               	movlw	low _keys
  1889  000562  0100               	movlb	0	; () banked
  1890  000564  25F3               	addwf	main@keypress& (0+255),w,b
  1891  000566  6EF6               	movwf	tblptrl,c
  1892  000568  6AF7               	clrf	tblptrh,c
  1893  00056A  0EFE               	movlw	high _keys
  1894  00056C  22F7               	addwfc	tblptrh,f,c
  1895  00056E                     	if	0	;There are less than 3 active tblptr bytes
  1896  00056E                     	endif
  1897  00056E  0008               	tblrd		*
  1898  000570  50F5               	movf	tablat,w,c
  1899  000572  6E6A               	movwf	?_printf+2,c
  1900  000574  6A6B               	clrf	?_printf+3,c
  1901  000576  ECCC  F008         	call	_printf	;wreg free
  1902  00057A  0E90               	movlw	144
  1903  00057C  ECFA  F008         	call	_lcdInst
  1904                           
  1905                           ;main.c: 197:                     if (BallDispensed[number_pressed] == 1)
  1906  000580  90D8               	bcf	status,0,c
  1907  000582  0100               	movlb	0	; () banked
  1908  000584  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1909  000586  6ED9               	movwf	fsr2l,c
  1910  000588  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1911  00058A  6EDA               	movwf	fsr2h,c
  1912  00058C  0E80               	movlw	low _BallDispensed
  1913  00058E  26D9               	addwf	fsr2l,f,c
  1914  000590  0E00               	movlw	high _BallDispensed
  1915  000592  22DA               	addwfc	fsr2h,f,c
  1916  000594  04DE               	decf	postinc2,w,c
  1917  000596  10DE               	iorwf	postinc2,w,c
  1918  000598  A4D8               	btfss	status,2,c
  1919  00059A  D007               	goto	l2879
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;main.c: 198:                         printf("Ball Added");
  1923  00059C  0E2D               	movlw	low (STR_32+3)
  1924  00059E  6E68               	movwf	printf@fmt,c
  1925  0005A0  0EFF               	movlw	high (STR_32+3)
  1926  0005A2  6E69               	movwf	printf@fmt+1,c
  1927  0005A4  ECCC  F008         	call	_printf	;wreg free
  1928  0005A8  D006               	goto	l2881
  1929  0005AA                     l2879:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;main.c: 200:                         printf("No Ball Added");
  1933  0005AA  0E2A               	movlw	low STR_32
  1934  0005AC  6E68               	movwf	printf@fmt,c
  1935  0005AE  0EFF               	movlw	high STR_32
  1936  0005B0  6E69               	movwf	printf@fmt+1,c
  1937  0005B2  ECCC  F008         	call	_printf	;wreg free
  1938  0005B6                     l2881:
  1939  0005B6  0ED0               	movlw	208
  1940  0005B8  ECFA  F008         	call	_lcdInst
  1941                           
  1942                           ;main.c: 202:                     printf("* to exit");
  1943  0005BC  0EC8               	movlw	low STR_25
  1944  0005BE  6E68               	movwf	printf@fmt,c
  1945  0005C0  0EFF               	movlw	high STR_25
  1946  0005C2  6E69               	movwf	printf@fmt+1,c
  1947  0005C4  ECCC  F008         	call	_printf	;wreg free
  1948                           
  1949                           ;main.c: 205:                     miniClear = 0;
  1950  0005C8  0E00               	movlw	0
  1951  0005CA  0100               	movlb	0	; () banked
  1952  0005CC  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1953  0005CE  0E00               	movlw	0
  1954  0005D0  6FF1               	movwf	main@miniClear& (0+255),b
  1955  0005D2                     l2887:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;main.c: 208:                 if (miniTick == 3000) {
  1959  0005D2  0EB8               	movlw	184
  1960  0005D4  19ED               	xorwf	main@miniTick& (0+255),w,b
  1961  0005D6  E11D               	bnz	l2897
  1962  0005D8  0E0B               	movlw	11
  1963  0005DA  19EE               	xorwf	(main@miniTick+1)& (0+255),w,b
  1964  0005DC  A4D8               	btfss	status,2,c
  1965  0005DE  D019               	goto	l2897
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;main.c: 209:                     miniClear = 1;
  1969  0005E0  0E00               	movlw	0
  1970  0005E2  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1971  0005E4  0E01               	movlw	1
  1972  0005E6  6FF1               	movwf	main@miniClear& (0+255),b
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;main.c: 210:                     miniState++;
  1976  0005E8  4BF4               	infsnz	main@miniState& (0+255),f,b
  1977  0005EA  2BF5               	incf	(main@miniState+1)& (0+255),f,b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;main.c: 211:                     miniState = miniState % 3;
  1981  0005EC  C0F4  F00C         	movff	main@miniState,___awmod@dividend
  1982  0005F0  C0F5  F00D         	movff	main@miniState+1,___awmod@dividend+1
  1983  0005F4  0E00               	movlw	0
  1984  0005F6  6E0F               	movwf	___awmod@divisor+1,c
  1985  0005F8  0E03               	movlw	3
  1986  0005FA  6E0E               	movwf	___awmod@divisor,c
  1987  0005FC  EC36  F007         	call	___awmod	;wreg free
  1988  000600  C00C  F0F4         	movff	?___awmod,main@miniState
  1989  000604  C00D  F0F5         	movff	?___awmod+1,main@miniState+1
  1990                           
  1991                           ;main.c: 212:                     miniTick = 0;
  1992  000608  0E00               	movlw	0
  1993  00060A  0100               	movlb	0	; () banked
  1994  00060C  6FEE               	movwf	(main@miniTick+1)& (0+255),b
  1995  00060E  0E00               	movlw	0
  1996  000610  6FED               	movwf	main@miniTick& (0+255),b
  1997  000612                     l2897:
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;main.c: 215:                 miniTick++;
  2001  000612  4BED               	infsnz	main@miniTick& (0+255),f,b
  2002  000614  2BEE               	incf	(main@miniTick+1)& (0+255),f,b
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 216:                 _delay((unsigned long)((1)*(10000000/4000.0)));
  2006  000616  0E04               	movlw	4
  2007  000618  0100               	movlb	0	; () banked
  2008  00061A  6FE9               	movwf	??_main& (0+255),b
  2009  00061C  0E3D               	movlw	61
  2010  00061E                     u2547:
  2011  00061E  2EE8               	decfsz	wreg,f,c
  2012  000620  D7FE               	bra	u2547
  2013  000622  2FE9               	decfsz	??_main& (0+255),f,b
  2014  000624  D7FC               	bra	u2547
  2015  000626  D000               	nop2	
  2016  000628                     l2901:
  2017                           
  2018                           ;main.c: 165:             while(!exit_key) {
  2019  000628  0100               	movlb	0	; () banked
  2020  00062A  51C3               	movf	_exit_key& (0+255),w,b	;volatile
  2021  00062C  B4D8               	btfsc	status,2,c
  2022  00062E  D6E4               	goto	l2819
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;main.c: 221:             key_was_pressed = 0;
  2026  000630  0E00               	movlw	0
  2027  000632  6FC4               	movwf	_key_was_pressed& (0+255),b	;volatile
  2028                           
  2029                           ;main.c: 222:             exit_key = 0;
  2030  000634  0E00               	movlw	0
  2031  000636  6FC3               	movwf	_exit_key& (0+255),b	;volatile
  2032  000638                     l2905:
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;main.c: 226:         if (tick == 2000) {
  2036  000638  0ED0               	movlw	208
  2037  00063A  19EB               	xorwf	main@tick& (0+255),w,b
  2038  00063C  E112               	bnz	l2915
  2039  00063E  0E07               	movlw	7
  2040  000640  19EC               	xorwf	(main@tick+1)& (0+255),w,b
  2041  000642  A4D8               	btfss	status,2,c
  2042  000644  D00E               	goto	l2915
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;main.c: 227:             clear = 1;
  2046  000646  0E00               	movlw	0
  2047  000648  6FF7               	movwf	(main@clear+1)& (0+255),b
  2048  00064A  0E01               	movlw	1
  2049  00064C  6FF6               	movwf	main@clear& (0+255),b
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;main.c: 228:             state++;
  2053  00064E  4BF8               	infsnz	main@state& (0+255),f,b
  2054  000650  2BF9               	incf	(main@state+1)& (0+255),f,b
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;main.c: 229:             state = state % 4;
  2058  000652  0E03               	movlw	3
  2059  000654  15F8               	andwf	main@state& (0+255),w,b
  2060  000656  6FF8               	movwf	main@state& (0+255),b
  2061  000658  6BF9               	clrf	(main@state+1)& (0+255),b
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;main.c: 230:             tick = 0;
  2065  00065A  0E00               	movlw	0
  2066  00065C  6FEC               	movwf	(main@tick+1)& (0+255),b
  2067  00065E  0E00               	movlw	0
  2068  000660  6FEB               	movwf	main@tick& (0+255),b
  2069  000662                     l2915:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;main.c: 233:         tick++;
  2073  000662  4BEB               	infsnz	main@tick& (0+255),f,b
  2074  000664  2BEC               	incf	(main@tick+1)& (0+255),f,b
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;main.c: 234:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2078  000666  0E04               	movlw	4
  2079  000668  0100               	movlb	0	; () banked
  2080  00066A  6FE9               	movwf	??_main& (0+255),b
  2081  00066C  0E3D               	movlw	61
  2082  00066E                     u2557:
  2083  00066E  2EE8               	decfsz	wreg,f,c
  2084  000670  D7FE               	bra	u2557
  2085  000672  2FE9               	decfsz	??_main& (0+255),f,b
  2086  000674  D7FC               	bra	u2557
  2087  000676  D5D8               	goto	L1
  2088  000678                     __end_of_main:
  2089                           	opt callstack 0
  2090                           
  2091 ;; *************** function _printf *****************
  2092 ;; Defined at:
  2093 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  fmt             2  103[COMRAM] PTR const unsigned char 
  2096 ;;		 -> STR_33(10), STR_32(14), STR_31(11), STR_30(12), 
  2097 ;;		 -> STR_29(10), STR_28(15), STR_27(14), STR_26(12), 
  2098 ;;		 -> STR_25(10), STR_24(15), STR_23(12), STR_22(15), 
  2099 ;;		 -> STR_21(12), STR_20(16), STR_19(9), STR_18(9), 
  2100 ;;		 -> STR_17(11), STR_16(13), STR_15(15), STR_14(11), 
  2101 ;;		 -> STR_13(15), STR_12(12), STR_11(15), STR_10(13), 
  2102 ;;		 -> STR_9(11), STR_8(9), STR_7(12), STR_6(10), 
  2103 ;;		 -> STR_5(15), STR_4(17), STR_3(13), STR_2(9), 
  2104 ;;		 -> STR_1(8), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  ap              2    2[BANK0 ] PTR void [1]
  2107 ;;		 -> ?_printf(2), 
  2108 ;;  ret             2    0        int 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2  103[COMRAM] int 
  2111 ;; Registers used:
  2112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        8 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:   11
  2125 ;; This function calls:
  2126 ;;		_vfprintf
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text1
  2133  001198                     __ptext1:
  2134                           	opt callstack 0
  2135  001198                     _printf:
  2136                           	opt callstack 19
  2137                           
  2138                           ;incstack = 0
  2139  001198  0E6A               	movlw	low (?_printf+2)
  2140  00119A  0100               	movlb	0	; () banked
  2141  00119C  6FE7               	movwf	printf@ap& (0+255),b
  2142  00119E  0E00               	movlw	high (?_printf+2)
  2143  0011A0  6FE8               	movwf	(printf@ap+1)& (0+255),b
  2144                           
  2145                           ; BSR set to: 0
  2146  0011A2  0E00               	movlw	0
  2147  0011A4  6E60               	movwf	vfprintf@fp,c
  2148  0011A6  0E00               	movlw	0
  2149  0011A8  6E61               	movwf	vfprintf@fp+1,c
  2150  0011AA  C068  F062         	movff	printf@fmt,vfprintf@fmt
  2151  0011AE  C069  F063         	movff	printf@fmt+1,vfprintf@fmt+1
  2152  0011B2  0EE7               	movlw	low printf@ap
  2153  0011B4  6E64               	movwf	vfprintf@ap,c
  2154  0011B6  0E00               	movlw	high printf@ap
  2155  0011B8  6E65               	movwf	vfprintf@ap+1,c
  2156  0011BA  ECD9  F007         	call	_vfprintf	;wreg free
  2157  0011BE  0012               	return		;funcret
  2158  0011C0                     __end_of_printf:
  2159                           	opt callstack 0
  2160                           
  2161 ;; *************** function _vfprintf *****************
  2162 ;; Defined at:
  2163 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  fp              2   95[COMRAM] PTR struct _IO_FILE
  2166 ;;		 -> NULL(0), 
  2167 ;;  fmt             2   97[COMRAM] PTR const unsigned char 
  2168 ;;		 -> STR_33(10), STR_32(14), STR_31(11), STR_30(12), 
  2169 ;;		 -> STR_29(10), STR_28(15), STR_27(14), STR_26(12), 
  2170 ;;		 -> STR_25(10), STR_24(15), STR_23(12), STR_22(15), 
  2171 ;;		 -> STR_21(12), STR_20(16), STR_19(9), STR_18(9), 
  2172 ;;		 -> STR_17(11), STR_16(13), STR_15(15), STR_14(11), 
  2173 ;;		 -> STR_13(15), STR_12(12), STR_11(15), STR_10(13), 
  2174 ;;		 -> STR_9(11), STR_8(9), STR_7(12), STR_6(10), 
  2175 ;;		 -> STR_5(15), STR_4(17), STR_3(13), STR_2(9), 
  2176 ;;		 -> STR_1(8), 
  2177 ;;  ap              2   99[COMRAM] PTR PTR void 
  2178 ;;		 -> printf@ap(2), 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  cfmt            2  101[COMRAM] PTR unsigned char 
  2181 ;;		 -> STR_33(10), STR_32(14), STR_31(11), STR_30(12), 
  2182 ;;		 -> STR_29(10), STR_28(15), STR_27(14), STR_26(12), 
  2183 ;;		 -> STR_25(10), STR_24(15), STR_23(12), STR_22(15), 
  2184 ;;		 -> STR_21(12), STR_20(16), STR_19(9), STR_18(9), 
  2185 ;;		 -> STR_17(11), STR_16(13), STR_15(15), STR_14(11), 
  2186 ;;		 -> STR_13(15), STR_12(12), STR_11(15), STR_10(13), 
  2187 ;;		 -> STR_9(11), STR_8(9), STR_7(12), STR_6(10), 
  2188 ;;		 -> STR_5(15), STR_4(17), STR_3(13), STR_2(9), 
  2189 ;;		 -> STR_1(8), 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  2   95[COMRAM] int 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2199 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;Total ram usage:        8 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:   10
  2206 ;; This function calls:
  2207 ;;		_vfpfcnvrt
  2208 ;; This function is called by:
  2209 ;;		_printf
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text2
  2214  000FB2                     __ptext2:
  2215                           	opt callstack 0
  2216  000FB2                     _vfprintf:
  2217                           	opt callstack 19
  2218                           
  2219                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  2220                           
  2221                           ;incstack = 0
  2222  000FB2  C062  F066         	movff	vfprintf@fmt,vfprintf@cfmt
  2223  000FB6  C063  F067         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2224                           
  2225                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2226  000FBA  0E00               	movlw	0
  2227  000FBC  6E6D               	movwf	_nout+1,c
  2228  000FBE  0E00               	movlw	0
  2229  000FC0  6E6C               	movwf	_nout,c
  2230                           
  2231                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2232  000FC2  D012               	goto	l2597
  2233  000FC4                     l2595:
  2234                           
  2235                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2236  000FC4  C060  F04F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2237  000FC8  C061  F050         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2238  000FCC  0E66               	movlw	low vfprintf@cfmt
  2239  000FCE  6E51               	movwf	vfpfcnvrt@fmt,c
  2240  000FD0  0E00               	movlw	high vfprintf@cfmt
  2241  000FD2  6E52               	movwf	vfpfcnvrt@fmt+1,c
  2242  000FD4  C064  F053         	movff	vfprintf@ap,vfpfcnvrt@ap
  2243  000FD8  C065  F054         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2244  000FDC  EC5D  F004         	call	_vfpfcnvrt	;wreg free
  2245  000FE0  504F               	movf	?_vfpfcnvrt,w,c
  2246  000FE2  266C               	addwf	_nout,f,c
  2247  000FE4  5050               	movf	?_vfpfcnvrt+1,w,c
  2248  000FE6  226D               	addwfc	_nout+1,f,c
  2249  000FE8                     l2597:
  2250                           
  2251                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2252  000FE8  C066  FFF6         	movff	vfprintf@cfmt,tblptrl
  2253  000FEC  C067  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2254  000FF0                     	if	0	;tblptru may be non-zero
  2255  000FF0                     	endif
  2256  000FF0                     	if	0	;tblptru may be non-zero
  2257  000FF0                     	endif
  2258  000FF0  0008               	tblrd		*
  2259  000FF2  50F5               	movf	tablat,w,c
  2260  000FF4  0900               	iorlw	0
  2261  000FF6  A4D8               	btfss	status,2,c
  2262  000FF8  D7E5               	goto	l2595
  2263                           
  2264                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  2265  000FFA  C06C  F060         	movff	_nout,?_vfprintf
  2266  000FFE  C06D  F061         	movff	_nout+1,?_vfprintf+1
  2267  001002  0012               	return		;funcret
  2268  001004                     __end_of_vfprintf:
  2269                           	opt callstack 0
  2270                           
  2271 ;; *************** function _vfpfcnvrt *****************
  2272 ;; Defined at:
  2273 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  2276 ;;		 -> NULL(0), 
  2277 ;;  fmt             2   80[COMRAM] PTR PTR unsigned char 
  2278 ;;		 -> vfprintf@cfmt(2), 
  2279 ;;  ap              2   82[COMRAM] PTR PTR void 
  2280 ;;		 -> printf@ap(2), 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  ll              8   86[COMRAM] long long 
  2283 ;;  llu             8    0        unsigned long long 
  2284 ;;  f               4    0        unsigned long long 
  2285 ;;  vp              3    0        PTR void 
  2286 ;;  ct              3    0        unsigned char [3]
  2287 ;;  cp              3    0        PTR unsigned char 
  2288 ;;  i               2    0        int 
  2289 ;;  done            2    0        int 
  2290 ;;  c               1   94[COMRAM] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  2   78[COMRAM] int 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2300 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;Total ram usage:       17 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; Hardware stack levels required when called:    9
  2307 ;; This function calls:
  2308 ;;		_ctoa
  2309 ;;		_dtoa
  2310 ;;		_fputc
  2311 ;; This function is called by:
  2312 ;;		_vfprintf
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text3
  2317  0008BA                     __ptext3:
  2318                           	opt callstack 0
  2319  0008BA                     _vfpfcnvrt:
  2320                           	opt callstack 19
  2321                           
  2322                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  2323                           
  2324                           ;incstack = 0
  2325  0008BA  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2326  0008BE  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2327  0008C2  CFDE FFF6          	movff	postinc2,tblptrl
  2328  0008C6  CFDD FFF7          	movff	postdec2,tblptrh
  2329  0008CA                     	if	0	;tblptru may be non-zero
  2330  0008CA                     	endif
  2331  0008CA                     	if	0	;tblptru may be non-zero
  2332  0008CA                     	endif
  2333  0008CA  0008               	tblrd		*
  2334  0008CC  50F5               	movf	tablat,w,c
  2335  0008CE  0A25               	xorlw	37
  2336  0008D0  A4D8               	btfss	status,2,c
  2337  0008D2  D0CC               	goto	l2579
  2338                           
  2339                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2340  0008D4  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341  0008D8  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342  0008DC  2ADE               	incf	postinc2,f,c
  2343  0008DE  0E00               	movlw	0
  2344  0008E0  22DD               	addwfc	postdec2,f,c
  2345                           
  2346                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  2347  0008E2  0E00               	movlw	0
  2348  0008E4  6E6F               	movwf	_width+1,c
  2349  0008E6  0E00               	movlw	0
  2350  0008E8  6E6E               	movwf	_width,c
  2351  0008EA  C06E  F072         	movff	_width,_flags
  2352  0008EE  C06F  F073         	movff	_width+1,_flags+1
  2353                           
  2354                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  2355  0008F2  6870               	setf	_prec,c
  2356  0008F4  6871               	setf	_prec+1,c
  2357                           
  2358                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
  2359  0008F6  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2360  0008FA  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2361  0008FE  CFDE FFF6          	movff	postinc2,tblptrl
  2362  000902  CFDD FFF7          	movff	postdec2,tblptrh
  2363  000906                     	if	0	;tblptru may be non-zero
  2364  000906                     	endif
  2365  000906                     	if	0	;tblptru may be non-zero
  2366  000906                     	endif
  2367  000906  0008               	tblrd		*
  2368  000908  50F5               	movf	tablat,w,c
  2369  00090A  0A63               	xorlw	99
  2370  00090C  A4D8               	btfss	status,2,c
  2371  00090E  D026               	goto	l2553
  2372                           
  2373                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
  2374  000910  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2375  000914  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2376  000918  2ADE               	incf	postinc2,f,c
  2377  00091A  0E00               	movlw	0
  2378  00091C  22DD               	addwfc	postdec2,f,c
  2379                           
  2380                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2381  00091E  C053  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2382  000922  C054  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2383  000926  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2384  00092A  0E02               	movlw	2
  2385  00092C  26DE               	addwf	postinc2,f,c
  2386  00092E  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2387  000932  0E00               	movlw	0
  2388  000934  22DD               	addwfc	postdec2,f,c
  2389  000936  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2390  00093A  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2391  00093E  50DF               	movf	indf2,w,c
  2392  000940  6E5F               	movwf	vfpfcnvrt@c,c
  2393                           
  2394                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
  2395  000942  C04F  F02B         	movff	vfpfcnvrt@fp,ctoa@fp
  2396  000946  C050  F02C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2397  00094A  C05F  F02D         	movff	vfpfcnvrt@c,ctoa@c
  2398  00094E  EC02  F008         	call	_ctoa	;wreg free
  2399  000952  C02B  F04F         	movff	?_ctoa,?_vfpfcnvrt
  2400  000956  C02C  F050         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2401  00095A  0012               	return	
  2402  00095C                     l2553:
  2403                           
  2404                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  2405  00095C  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2406  000960  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2407  000964  CFDE FFF6          	movff	postinc2,tblptrl
  2408  000968  CFDD FFF7          	movff	postdec2,tblptrh
  2409  00096C                     	if	0	;tblptru may be non-zero
  2410  00096C                     	endif
  2411  00096C                     	if	0	;tblptru may be non-zero
  2412  00096C                     	endif
  2413  00096C  0008               	tblrd		*
  2414  00096E  50F5               	movf	tablat,w,c
  2415  000970  0A64               	xorlw	100
  2416  000972  B4D8               	btfsc	status,2,c
  2417  000974  D00D               	goto	u2090
  2418  000976  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2419  00097A  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2420  00097E  CFDE FFF6          	movff	postinc2,tblptrl
  2421  000982  CFDD FFF7          	movff	postdec2,tblptrh
  2422  000986                     	if	0	;tblptru may be non-zero
  2423  000986                     	endif
  2424  000986                     	if	0	;tblptru may be non-zero
  2425  000986                     	endif
  2426  000986  0008               	tblrd		*
  2427  000988  50F5               	movf	tablat,w,c
  2428  00098A  0A69               	xorlw	105
  2429  00098C  A4D8               	btfss	status,2,c
  2430  00098E  D03F               	goto	l2563
  2431  000990                     u2090:
  2432                           
  2433                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  2434  000990  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2435  000994  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2436  000998  2ADE               	incf	postinc2,f,c
  2437  00099A  0E00               	movlw	0
  2438  00099C  22DD               	addwfc	postdec2,f,c
  2439                           
  2440                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2441  00099E  C053  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2442  0009A2  C054  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2443  0009A6  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2444  0009AA  0E02               	movlw	2
  2445  0009AC  26DE               	addwf	postinc2,f,c
  2446  0009AE  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2447  0009B2  0E00               	movlw	0
  2448  0009B4  22DD               	addwfc	postdec2,f,c
  2449  0009B6  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2450  0009BA  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2451  0009BE  CFDE F057          	movff	postinc2,vfpfcnvrt@ll
  2452  0009C2  CFDD F058          	movff	postdec2,vfpfcnvrt@ll+1
  2453  0009C6  0E00               	movlw	0
  2454  0009C8  BE58               	btfsc	vfpfcnvrt@ll+1,7,c
  2455  0009CA  0EFF               	movlw	-1
  2456  0009CC  6E59               	movwf	vfpfcnvrt@ll+2,c
  2457  0009CE  6E5A               	movwf	vfpfcnvrt@ll+3,c
  2458  0009D0  6E5B               	movwf	vfpfcnvrt@ll+4,c
  2459  0009D2  6E5C               	movwf	vfpfcnvrt@ll+5,c
  2460  0009D4  6E5D               	movwf	vfpfcnvrt@ll+6,c
  2461  0009D6  6E5E               	movwf	vfpfcnvrt@ll+7,c
  2462                           
  2463                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  2464  0009D8  C04F  F02B         	movff	vfpfcnvrt@fp,dtoa@fp
  2465  0009DC  C050  F02C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2466  0009E0  C057  F02D         	movff	vfpfcnvrt@ll,dtoa@d
  2467  0009E4  C058  F02E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2468  0009E8  C059  F02F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2469  0009EC  C05A  F030         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2470  0009F0  C05B  F031         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2471  0009F4  C05C  F032         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2472  0009F8  C05D  F033         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2473  0009FC  C05E  F034         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2474  000A00  EC3C  F003         	call	_dtoa	;wreg free
  2475  000A04  C02B  F04F         	movff	?_dtoa,?_vfpfcnvrt
  2476  000A08  C02C  F050         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2477  000A0C  0012               	return	
  2478  000A0E                     l2563:
  2479                           
  2480                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  2481  000A0E  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2482  000A12  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2483  000A16  CFDE FFF6          	movff	postinc2,tblptrl
  2484  000A1A  CFDD FFF7          	movff	postdec2,tblptrh
  2485  000A1E                     	if	0	;tblptru may be non-zero
  2486  000A1E                     	endif
  2487  000A1E                     	if	0	;tblptru may be non-zero
  2488  000A1E                     	endif
  2489  000A1E  0008               	tblrd		*
  2490  000A20  50F5               	movf	tablat,w,c
  2491  000A22  0A25               	xorlw	37
  2492  000A24  A4D8               	btfss	status,2,c
  2493  000A26  D016               	goto	l2573
  2494                           
  2495                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  2496  000A28  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2497  000A2C  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2498  000A30  2ADE               	incf	postinc2,f,c
  2499  000A32  0E00               	movlw	0
  2500  000A34  22DD               	addwfc	postdec2,f,c
  2501                           
  2502                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  2503  000A36  0E00               	movlw	0
  2504  000A38  6E11               	movwf	fputc@c+1,c
  2505  000A3A  0E25               	movlw	37
  2506  000A3C  6E10               	movwf	fputc@c,c
  2507  000A3E  C04F  F012         	movff	vfpfcnvrt@fp,fputc@fp
  2508  000A42  C050  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2509  000A46  EC6E  F007         	call	_fputc	;wreg free
  2510  000A4A                     l2569:
  2511                           
  2512                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  2513  000A4A  0E00               	movlw	0
  2514  000A4C  6E50               	movwf	?_vfpfcnvrt+1,c
  2515  000A4E  0E01               	movlw	1
  2516  000A50  6E4F               	movwf	?_vfpfcnvrt,c
  2517  000A52  0012               	return	
  2518  000A54                     l2573:
  2519                           
  2520                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  2521  000A54  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2522  000A58  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2523  000A5C  2ADE               	incf	postinc2,f,c
  2524  000A5E  0E00               	movlw	0
  2525  000A60  22DD               	addwfc	postdec2,f,c
  2526                           
  2527                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  2528  000A62  0E00               	movlw	0
  2529  000A64  6E50               	movwf	?_vfpfcnvrt+1,c
  2530  000A66  0E00               	movlw	0
  2531  000A68  6E4F               	movwf	?_vfpfcnvrt,c
  2532  000A6A  0012               	return	
  2533  000A6C                     l2579:
  2534                           
  2535                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  2536  000A6C  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2537  000A70  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2538  000A74  CFDE FFF6          	movff	postinc2,tblptrl
  2539  000A78  CFDD FFF7          	movff	postdec2,tblptrh
  2540  000A7C                     	if	0	;tblptru may be non-zero
  2541  000A7C                     	endif
  2542  000A7C                     	if	0	;tblptru may be non-zero
  2543  000A7C                     	endif
  2544  000A7C  0008               	tblrd		*
  2545  000A7E  50F5               	movf	tablat,w,c
  2546  000A80  6E10               	movwf	fputc@c,c
  2547  000A82  6A11               	clrf	fputc@c+1,c
  2548  000A84  C04F  F012         	movff	vfpfcnvrt@fp,fputc@fp
  2549  000A88  C050  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2550  000A8C  EC6E  F007         	call	_fputc	;wreg free
  2551                           
  2552                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2553  000A90  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2554  000A94  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2555  000A98  2ADE               	incf	postinc2,f,c
  2556  000A9A  0E00               	movlw	0
  2557  000A9C  22DD               	addwfc	postdec2,f,c
  2558  000A9E  D7D5               	goto	l2569
  2559  000AA0                     __end_of_vfpfcnvrt:
  2560                           	opt callstack 0
  2561                           
  2562 ;; *************** function _dtoa *****************
  2563 ;; Defined at:
  2564 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  2567 ;;		 -> NULL(0), 
  2568 ;;  d               8   44[COMRAM] long long 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  n               8   68[COMRAM] long long 
  2571 ;;  i               2   76[COMRAM] int 
  2572 ;;  s               2   66[COMRAM] int 
  2573 ;;  w               2   64[COMRAM] int 
  2574 ;;  p               2   62[COMRAM] int 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2   42[COMRAM] int 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:       36 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    8
  2591 ;; This function calls:
  2592 ;;		___aodiv
  2593 ;;		___aomod
  2594 ;;		_abs
  2595 ;;		_pad
  2596 ;; This function is called by:
  2597 ;;		_vfpfcnvrt
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text4
  2602  000678                     __ptext4:
  2603                           	opt callstack 0
  2604  000678                     _dtoa:
  2605                           	opt callstack 19
  2606                           
  2607                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  2608                           
  2609                           ;incstack = 0
  2610  000678  C02D  F045         	movff	dtoa@d,dtoa@n
  2611  00067C  C02E  F046         	movff	dtoa@d+1,dtoa@n+1
  2612  000680  C02F  F047         	movff	dtoa@d+2,dtoa@n+2
  2613  000684  C030  F048         	movff	dtoa@d+3,dtoa@n+3
  2614  000688  C031  F049         	movff	dtoa@d+4,dtoa@n+4
  2615  00068C  C032  F04A         	movff	dtoa@d+5,dtoa@n+5
  2616  000690  C033  F04B         	movff	dtoa@d+6,dtoa@n+6
  2617  000694  C034  F04C         	movff	dtoa@d+7,dtoa@n+7
  2618                           
  2619                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  2620  000698  AE4C               	btfss	dtoa@n+7,7,c
  2621  00069A  D002               	goto	u1910
  2622  00069C  0E01               	movlw	1
  2623  00069E  D001               	goto	u1920
  2624  0006A0                     u1910:
  2625  0006A0  0E00               	movlw	0
  2626  0006A2                     u1920:
  2627  0006A2  6E43               	movwf	dtoa@s,c
  2628  0006A4  6A44               	clrf	dtoa@s+1,c
  2629                           
  2630                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  2631  0006A6  5043               	movf	dtoa@s,w,c
  2632  0006A8  1044               	iorwf	dtoa@s+1,w,c
  2633  0006AA  B4D8               	btfsc	status,2,c
  2634  0006AC  D010               	goto	l2481
  2635                           
  2636                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  2637  0006AE  1E4C               	comf	dtoa@n+7,f,c
  2638  0006B0  1E4B               	comf	dtoa@n+6,f,c
  2639  0006B2  1E4A               	comf	dtoa@n+5,f,c
  2640  0006B4  1E49               	comf	dtoa@n+4,f,c
  2641  0006B6  1E48               	comf	dtoa@n+3,f,c
  2642  0006B8  1E47               	comf	dtoa@n+2,f,c
  2643  0006BA  1E46               	comf	dtoa@n+1,f,c
  2644  0006BC  6C45               	negf	dtoa@n,c
  2645  0006BE  0E00               	movlw	0
  2646  0006C0  2246               	addwfc	dtoa@n+1,f,c
  2647  0006C2  2247               	addwfc	dtoa@n+2,f,c
  2648  0006C4  2248               	addwfc	dtoa@n+3,f,c
  2649  0006C6  2249               	addwfc	dtoa@n+4,f,c
  2650  0006C8  224A               	addwfc	dtoa@n+5,f,c
  2651  0006CA  224B               	addwfc	dtoa@n+6,f,c
  2652  0006CC  224C               	addwfc	dtoa@n+7,f,c
  2653  0006CE                     l2481:
  2654                           
  2655                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  2656  0006CE  AE71               	btfss	_prec+1,7,c
  2657                           
  2658                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  2659  0006D0  9272               	bcf	_flags,1,c
  2660                           
  2661                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  2662  0006D2  BE71               	btfsc	_prec+1,7,c
  2663  0006D4  D005               	goto	u1950
  2664  0006D6  5071               	movf	_prec+1,w,c
  2665  0006D8  E108               	bnz	l188
  2666  0006DA  0470               	decf	_prec,w,c
  2667  0006DC  B0D8               	btfsc	status,0,c
  2668  0006DE  D005               	goto	l188
  2669  0006E0                     u1950:
  2670  0006E0  0E00               	movlw	0
  2671  0006E2  6E40               	movwf	dtoa@p+1,c
  2672  0006E4  0E01               	movlw	1
  2673  0006E6  6E3F               	movwf	dtoa@p,c
  2674  0006E8  D004               	goto	l190
  2675  0006EA                     l188:
  2676  0006EA  C070  F03F         	movff	_prec,dtoa@p
  2677  0006EE  C071  F040         	movff	_prec+1,dtoa@p+1
  2678  0006F2                     l190:
  2679                           
  2680                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  2681  0006F2  C06E  F041         	movff	_width,dtoa@w
  2682  0006F6  C06F  F042         	movff	_width+1,dtoa@w+1
  2683                           
  2684                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  2685  0006FA  5043               	movf	dtoa@s,w,c
  2686  0006FC  1044               	iorwf	dtoa@s+1,w,c
  2687  0006FE  A4D8               	btfss	status,2,c
  2688  000700  D002               	goto	u1970
  2689  000702  A472               	btfss	_flags,2,c
  2690  000704  D003               	goto	l2495
  2691  000706                     u1970:
  2692                           
  2693                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  2694  000706  0641               	decf	dtoa@w,f,c
  2695  000708  A0D8               	btfss	status,0,c
  2696  00070A  0642               	decf	dtoa@w+1,f,c
  2697  00070C                     l2495:
  2698                           
  2699                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  2700  00070C  0E00               	movlw	0
  2701  00070E  6E4E               	movwf	dtoa@i+1,c
  2702  000710  0E1F               	movlw	31
  2703  000712  6E4D               	movwf	dtoa@i,c
  2704                           
  2705                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  2706  000714  0E00               	movlw	0
  2707  000716  0100               	movlb	0	; () banked
  2708  000718  6FE4               	movwf	(_dbuf+31)& (0+255),b
  2709                           
  2710                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2711  00071A  D07C               	goto	l2509
  2712  00071C                     l2499:
  2713                           
  2714                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  2715  00071C  064D               	decf	dtoa@i,f,c
  2716  00071E  A0D8               	btfss	status,0,c
  2717  000720  064E               	decf	dtoa@i+1,f,c
  2718                           
  2719                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  2720  000722  0EC5               	movlw	low _dbuf
  2721  000724  244D               	addwf	dtoa@i,w,c
  2722  000726  6ED9               	movwf	fsr2l,c
  2723  000728  0E00               	movlw	high _dbuf
  2724  00072A  204E               	addwfc	dtoa@i+1,w,c
  2725  00072C  6EDA               	movwf	fsr2h,c
  2726  00072E  C045  F00C         	movff	dtoa@n,___aomod@dividend
  2727  000732  C046  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  2728  000736  C047  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  2729  00073A  C048  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  2730  00073E  C049  F010         	movff	dtoa@n+4,___aomod@dividend+4
  2731  000742  C04A  F011         	movff	dtoa@n+5,___aomod@dividend+5
  2732  000746  C04B  F012         	movff	dtoa@n+6,___aomod@dividend+6
  2733  00074A  C04C  F013         	movff	dtoa@n+7,___aomod@dividend+7
  2734  00074E  0E0A               	movlw	10
  2735  000750  6E14               	movwf	___aomod@divisor,c
  2736  000752  0E00               	movlw	0
  2737  000754  6E15               	movwf	___aomod@divisor+1,c
  2738  000756  0E00               	movlw	0
  2739  000758  6E16               	movwf	___aomod@divisor+2,c
  2740  00075A  0E00               	movlw	0
  2741  00075C  6E17               	movwf	___aomod@divisor+3,c
  2742  00075E  0E00               	movlw	0
  2743  000760  6E18               	movwf	___aomod@divisor+4,c
  2744  000762  0E00               	movlw	0
  2745  000764  6E19               	movwf	___aomod@divisor+5,c
  2746  000766  0E00               	movlw	0
  2747  000768  6E1A               	movwf	___aomod@divisor+6,c
  2748  00076A  0E00               	movlw	0
  2749  00076C  6E1B               	movwf	___aomod@divisor+7,c
  2750  00076E  ECF4  F005         	call	___aomod	;wreg free
  2751  000772  C00C  F035         	movff	?___aomod,??_dtoa
  2752  000776  C00D  F036         	movff	?___aomod+1,??_dtoa+1
  2753  00077A  C00E  F037         	movff	?___aomod+2,??_dtoa+2
  2754  00077E  C00F  F038         	movff	?___aomod+3,??_dtoa+3
  2755  000782  C010  F039         	movff	?___aomod+4,??_dtoa+4
  2756  000786  C011  F03A         	movff	?___aomod+5,??_dtoa+5
  2757  00078A  C012  F03B         	movff	?___aomod+6,??_dtoa+6
  2758  00078E  C013  F03C         	movff	?___aomod+7,??_dtoa+7
  2759  000792  C035  F01E         	movff	??_dtoa,abs@a
  2760  000796  C037  F01F         	movff	??_dtoa+2,abs@a+1
  2761  00079A  EC89  F008         	call	_abs	;wreg free
  2762  00079E  501E               	movf	?_abs,w,c
  2763  0007A0  0F30               	addlw	48
  2764  0007A2  6EDF               	movwf	indf2,c
  2765                           
  2766                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  2767  0007A4  063F               	decf	dtoa@p,f,c
  2768  0007A6  A0D8               	btfss	status,0,c
  2769  0007A8  0640               	decf	dtoa@p+1,f,c
  2770                           
  2771                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  2772  0007AA  0641               	decf	dtoa@w,f,c
  2773  0007AC  A0D8               	btfss	status,0,c
  2774  0007AE  0642               	decf	dtoa@w+1,f,c
  2775                           
  2776                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  2777  0007B0  C045  F00C         	movff	dtoa@n,___aodiv@dividend
  2778  0007B4  C046  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  2779  0007B8  C047  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  2780  0007BC  C048  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  2781  0007C0  C049  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  2782  0007C4  C04A  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  2783  0007C8  C04B  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  2784  0007CC  C04C  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  2785  0007D0  0E0A               	movlw	10
  2786  0007D2  6E14               	movwf	___aodiv@divisor,c
  2787  0007D4  0E00               	movlw	0
  2788  0007D6  6E15               	movwf	___aodiv@divisor+1,c
  2789  0007D8  0E00               	movlw	0
  2790  0007DA  6E16               	movwf	___aodiv@divisor+2,c
  2791  0007DC  0E00               	movlw	0
  2792  0007DE  6E17               	movwf	___aodiv@divisor+3,c
  2793  0007E0  0E00               	movlw	0
  2794  0007E2  6E18               	movwf	___aodiv@divisor+4,c
  2795  0007E4  0E00               	movlw	0
  2796  0007E6  6E19               	movwf	___aodiv@divisor+5,c
  2797  0007E8  0E00               	movlw	0
  2798  0007EA  6E1A               	movwf	___aodiv@divisor+6,c
  2799  0007EC  0E00               	movlw	0
  2800  0007EE  6E1B               	movwf	___aodiv@divisor+7,c
  2801  0007F0  EC50  F005         	call	___aodiv	;wreg free
  2802  0007F4  C00C  F045         	movff	?___aodiv,dtoa@n
  2803  0007F8  C00D  F046         	movff	?___aodiv+1,dtoa@n+1
  2804  0007FC  C00E  F047         	movff	?___aodiv+2,dtoa@n+2
  2805  000800  C00F  F048         	movff	?___aodiv+3,dtoa@n+3
  2806  000804  C010  F049         	movff	?___aodiv+4,dtoa@n+4
  2807  000808  C011  F04A         	movff	?___aodiv+5,dtoa@n+5
  2808  00080C  C012  F04B         	movff	?___aodiv+6,dtoa@n+6
  2809  000810  C013  F04C         	movff	?___aodiv+7,dtoa@n+7
  2810  000814                     l2509:
  2811                           
  2812                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2813  000814  BE4E               	btfsc	dtoa@i+1,7,c
  2814  000816  D01F               	goto	u2020
  2815  000818  504E               	movf	dtoa@i+1,w,c
  2816  00081A  E103               	bnz	u1980
  2817  00081C  044D               	decf	dtoa@i,w,c
  2818  00081E  A0D8               	btfss	status,0,c
  2819  000820  D01A               	goto	u2020
  2820  000822                     u1980:
  2821  000822  5045               	movf	dtoa@n,w,c
  2822  000824  1046               	iorwf	dtoa@n+1,w,c
  2823  000826  1047               	iorwf	dtoa@n+2,w,c
  2824  000828  1048               	iorwf	dtoa@n+3,w,c
  2825  00082A  1049               	iorwf	dtoa@n+4,w,c
  2826  00082C  104A               	iorwf	dtoa@n+5,w,c
  2827  00082E  104B               	iorwf	dtoa@n+6,w,c
  2828  000830  104C               	iorwf	dtoa@n+7,w,c
  2829  000832  A4D8               	btfss	status,2,c
  2830  000834  D773               	goto	l2499
  2831  000836  BE40               	btfsc	dtoa@p+1,7,c
  2832  000838  D005               	goto	u2000
  2833  00083A  5040               	movf	dtoa@p+1,w,c
  2834  00083C  E102               	bnz	u2001
  2835  00083E  043F               	decf	dtoa@p,w,c
  2836  000840  B0D8               	btfsc	status,0,c
  2837  000842                     u2001:
  2838  000842  D76C               	goto	l2499
  2839  000844                     u2000:
  2840  000844  BE42               	btfsc	dtoa@w+1,7,c
  2841  000846  D007               	goto	u2020
  2842  000848  5042               	movf	dtoa@w+1,w,c
  2843  00084A  E103               	bnz	u2010
  2844  00084C  0441               	decf	dtoa@w,w,c
  2845  00084E  A0D8               	btfss	status,0,c
  2846  000850  D002               	goto	u2020
  2847  000852                     u2010:
  2848  000852  B272               	btfsc	_flags,1,c
  2849  000854  D763               	goto	l2499
  2850  000856                     u2020:
  2851                           
  2852                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  2853  000856  5043               	movf	dtoa@s,w,c
  2854  000858  1044               	iorwf	dtoa@s+1,w,c
  2855  00085A  A4D8               	btfss	status,2,c
  2856  00085C  D002               	goto	u2040
  2857  00085E  A472               	btfss	_flags,2,c
  2858  000860  D017               	goto	l2533
  2859  000862                     u2040:
  2860                           
  2861                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  2862  000862  064D               	decf	dtoa@i,f,c
  2863  000864  A0D8               	btfss	status,0,c
  2864  000866  064E               	decf	dtoa@i+1,f,c
  2865                           
  2866                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  2867  000868  5043               	movf	dtoa@s,w,c
  2868  00086A  1044               	iorwf	dtoa@s+1,w,c
  2869  00086C  A4D8               	btfss	status,2,c
  2870  00086E  D004               	goto	l2529
  2871  000870  0E00               	movlw	0
  2872  000872  6E3E               	movwf	_dtoa$332+1,c
  2873  000874  0E2B               	movlw	43
  2874  000876  D003               	goto	L2
  2875  000878                     l2529:
  2876  000878  0E00               	movlw	0
  2877  00087A  6E3E               	movwf	_dtoa$332+1,c
  2878  00087C  0E2D               	movlw	45
  2879  00087E                     L2:
  2880  00087E  6E3D               	movwf	_dtoa$332,c
  2881  000880  0EC5               	movlw	low _dbuf
  2882  000882  244D               	addwf	dtoa@i,w,c
  2883  000884  6ED9               	movwf	fsr2l,c
  2884  000886  0E00               	movlw	high _dbuf
  2885  000888  204E               	addwfc	dtoa@i+1,w,c
  2886  00088A  6EDA               	movwf	fsr2h,c
  2887  00088C  C03D  FFDF         	movff	_dtoa$332,indf2
  2888  000890                     l2533:
  2889                           
  2890                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  2891  000890  C02B  F020         	movff	dtoa@fp,pad@fp
  2892  000894  C02C  F021         	movff	dtoa@fp+1,pad@fp+1
  2893  000898  0EC5               	movlw	low _dbuf
  2894  00089A  244D               	addwf	dtoa@i,w,c
  2895  00089C  6E22               	movwf	pad@buf,c
  2896  00089E  0E00               	movlw	high _dbuf
  2897  0008A0  204E               	addwfc	dtoa@i+1,w,c
  2898  0008A2  6E23               	movwf	pad@buf+1,c
  2899  0008A4  C041  F024         	movff	dtoa@w,pad@p
  2900  0008A8  C042  F025         	movff	dtoa@w+1,pad@p+1
  2901  0008AC  ECEB  F006         	call	_pad	;wreg free
  2902  0008B0  C020  F02B         	movff	?_pad,?_dtoa
  2903  0008B4  C021  F02C         	movff	?_pad+1,?_dtoa+1
  2904  0008B8  0012               	return		;funcret
  2905  0008BA                     __end_of_dtoa:
  2906                           	opt callstack 0
  2907                           
  2908 ;; *************** function _abs *****************
  2909 ;; Defined at:
  2910 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  a               2   29[COMRAM] int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2   29[COMRAM] int 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        4 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_dtoa
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text5
  2939  001112                     __ptext5:
  2940                           	opt callstack 0
  2941  001112                     _abs:
  2942                           	opt callstack 25
  2943                           
  2944                           ;incstack = 0
  2945  001112  BE1F               	btfsc	abs@a+1,7,c
  2946  001114  D005               	goto	u1760
  2947  001116  501F               	movf	abs@a+1,w,c
  2948  001118  E110               	bnz	l901
  2949  00111A  041E               	decf	abs@a,w,c
  2950  00111C  B0D8               	btfsc	status,0,c
  2951  00111E  D00D               	goto	l901
  2952  001120                     u1760:
  2953  001120  C01E  F020         	movff	abs@a,??_abs
  2954  001124  C01F  F021         	movff	abs@a+1,??_abs+1
  2955  001128  1E20               	comf	??_abs,f,c
  2956  00112A  1E21               	comf	??_abs+1,f,c
  2957  00112C  4A20               	infsnz	??_abs,f,c
  2958  00112E  2A21               	incf	??_abs+1,f,c
  2959  001130  C020  F01E         	movff	??_abs,?_abs
  2960  001134  C021  F01F         	movff	??_abs+1,?_abs+1
  2961  001138  0012               	return	
  2962  00113A                     l901:
  2963  00113A  C01E  F01E         	movff	abs@a,?_abs
  2964  00113E  C01F  F01F         	movff	abs@a+1,?_abs+1
  2965  001142  0012               	return		;funcret
  2966  001144                     __end_of_abs:
  2967                           	opt callstack 0
  2968                           
  2969 ;; *************** function ___aomod *****************
  2970 ;; Defined at:
  2971 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  dividend        8   11[COMRAM] long long 
  2974 ;;  divisor         8   19[COMRAM] long long 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  sign            1   28[COMRAM] unsigned char 
  2977 ;;  counter         1   27[COMRAM] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  8   11[COMRAM] long long 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2987 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;Total ram usage:       18 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    1
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_dtoa
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text6
  3002  000BE8                     __ptext6:
  3003                           	opt callstack 0
  3004  000BE8                     ___aomod:
  3005                           	opt callstack 25
  3006                           
  3007                           ;incstack = 0
  3008  000BE8  0E00               	movlw	0
  3009  000BEA  6E1D               	movwf	___aomod@sign,c
  3010  000BEC  AE13               	btfss	___aomod@dividend+7,7,c
  3011  000BEE  D012               	goto	l2433
  3012  000BF0  1E13               	comf	___aomod@dividend+7,f,c
  3013  000BF2  1E12               	comf	___aomod@dividend+6,f,c
  3014  000BF4  1E11               	comf	___aomod@dividend+5,f,c
  3015  000BF6  1E10               	comf	___aomod@dividend+4,f,c
  3016  000BF8  1E0F               	comf	___aomod@dividend+3,f,c
  3017  000BFA  1E0E               	comf	___aomod@dividend+2,f,c
  3018  000BFC  1E0D               	comf	___aomod@dividend+1,f,c
  3019  000BFE  6C0C               	negf	___aomod@dividend,c
  3020  000C00  0E00               	movlw	0
  3021  000C02  220D               	addwfc	___aomod@dividend+1,f,c
  3022  000C04  220E               	addwfc	___aomod@dividend+2,f,c
  3023  000C06  220F               	addwfc	___aomod@dividend+3,f,c
  3024  000C08  2210               	addwfc	___aomod@dividend+4,f,c
  3025  000C0A  2211               	addwfc	___aomod@dividend+5,f,c
  3026  000C0C  2212               	addwfc	___aomod@dividend+6,f,c
  3027  000C0E  2213               	addwfc	___aomod@dividend+7,f,c
  3028  000C10  0E01               	movlw	1
  3029  000C12  6E1D               	movwf	___aomod@sign,c
  3030  000C14                     l2433:
  3031  000C14  AE1B               	btfss	___aomod@divisor+7,7,c
  3032  000C16  D010               	goto	l2437
  3033  000C18  1E1B               	comf	___aomod@divisor+7,f,c
  3034  000C1A  1E1A               	comf	___aomod@divisor+6,f,c
  3035  000C1C  1E19               	comf	___aomod@divisor+5,f,c
  3036  000C1E  1E18               	comf	___aomod@divisor+4,f,c
  3037  000C20  1E17               	comf	___aomod@divisor+3,f,c
  3038  000C22  1E16               	comf	___aomod@divisor+2,f,c
  3039  000C24  1E15               	comf	___aomod@divisor+1,f,c
  3040  000C26  6C14               	negf	___aomod@divisor,c
  3041  000C28  0E00               	movlw	0
  3042  000C2A  2215               	addwfc	___aomod@divisor+1,f,c
  3043  000C2C  2216               	addwfc	___aomod@divisor+2,f,c
  3044  000C2E  2217               	addwfc	___aomod@divisor+3,f,c
  3045  000C30  2218               	addwfc	___aomod@divisor+4,f,c
  3046  000C32  2219               	addwfc	___aomod@divisor+5,f,c
  3047  000C34  221A               	addwfc	___aomod@divisor+6,f,c
  3048  000C36  221B               	addwfc	___aomod@divisor+7,f,c
  3049  000C38                     l2437:
  3050  000C38  5014               	movf	___aomod@divisor,w,c
  3051  000C3A  1015               	iorwf	___aomod@divisor+1,w,c
  3052  000C3C  1016               	iorwf	___aomod@divisor+2,w,c
  3053  000C3E  1017               	iorwf	___aomod@divisor+3,w,c
  3054  000C40  1018               	iorwf	___aomod@divisor+4,w,c
  3055  000C42  1019               	iorwf	___aomod@divisor+5,w,c
  3056  000C44  101A               	iorwf	___aomod@divisor+6,w,c
  3057  000C46  101B               	iorwf	___aomod@divisor+7,w,c
  3058  000C48  B4D8               	btfsc	status,2,c
  3059  000C4A  D03C               	goto	l2453
  3060  000C4C  0E01               	movlw	1
  3061  000C4E  6E1C               	movwf	___aomod@counter,c
  3062  000C50  D00A               	goto	l2443
  3063  000C52                     l2441:
  3064  000C52  90D8               	bcf	status,0,c
  3065  000C54  3614               	rlcf	___aomod@divisor,f,c
  3066  000C56  3615               	rlcf	___aomod@divisor+1,f,c
  3067  000C58  3616               	rlcf	___aomod@divisor+2,f,c
  3068  000C5A  3617               	rlcf	___aomod@divisor+3,f,c
  3069  000C5C  3618               	rlcf	___aomod@divisor+4,f,c
  3070  000C5E  3619               	rlcf	___aomod@divisor+5,f,c
  3071  000C60  361A               	rlcf	___aomod@divisor+6,f,c
  3072  000C62  361B               	rlcf	___aomod@divisor+7,f,c
  3073  000C64  2A1C               	incf	___aomod@counter,f,c
  3074  000C66                     l2443:
  3075  000C66  AE1B               	btfss	___aomod@divisor+7,7,c
  3076  000C68  D7F4               	goto	l2441
  3077  000C6A                     u1870:
  3078  000C6A  5014               	movf	___aomod@divisor,w,c
  3079  000C6C  5C0C               	subwf	___aomod@dividend,w,c
  3080  000C6E  5015               	movf	___aomod@divisor+1,w,c
  3081  000C70  580D               	subwfb	___aomod@dividend+1,w,c
  3082  000C72  5016               	movf	___aomod@divisor+2,w,c
  3083  000C74  580E               	subwfb	___aomod@dividend+2,w,c
  3084  000C76  5017               	movf	___aomod@divisor+3,w,c
  3085  000C78  580F               	subwfb	___aomod@dividend+3,w,c
  3086  000C7A  5018               	movf	___aomod@divisor+4,w,c
  3087  000C7C  5810               	subwfb	___aomod@dividend+4,w,c
  3088  000C7E  5019               	movf	___aomod@divisor+5,w,c
  3089  000C80  5811               	subwfb	___aomod@dividend+5,w,c
  3090  000C82  501A               	movf	___aomod@divisor+6,w,c
  3091  000C84  5812               	subwfb	___aomod@dividend+6,w,c
  3092  000C86  501B               	movf	___aomod@divisor+7,w,c
  3093  000C88  5813               	subwfb	___aomod@dividend+7,w,c
  3094  000C8A  A0D8               	btfss	status,0,c
  3095  000C8C  D010               	goto	l2449
  3096  000C8E  5014               	movf	___aomod@divisor,w,c
  3097  000C90  5E0C               	subwf	___aomod@dividend,f,c
  3098  000C92  5015               	movf	___aomod@divisor+1,w,c
  3099  000C94  5A0D               	subwfb	___aomod@dividend+1,f,c
  3100  000C96  5016               	movf	___aomod@divisor+2,w,c
  3101  000C98  5A0E               	subwfb	___aomod@dividend+2,f,c
  3102  000C9A  5017               	movf	___aomod@divisor+3,w,c
  3103  000C9C  5A0F               	subwfb	___aomod@dividend+3,f,c
  3104  000C9E  5018               	movf	___aomod@divisor+4,w,c
  3105  000CA0  5A10               	subwfb	___aomod@dividend+4,f,c
  3106  000CA2  5019               	movf	___aomod@divisor+5,w,c
  3107  000CA4  5A11               	subwfb	___aomod@dividend+5,f,c
  3108  000CA6  501A               	movf	___aomod@divisor+6,w,c
  3109  000CA8  5A12               	subwfb	___aomod@dividend+6,f,c
  3110  000CAA  501B               	movf	___aomod@divisor+7,w,c
  3111  000CAC  5A13               	subwfb	___aomod@dividend+7,f,c
  3112  000CAE                     l2449:
  3113  000CAE  90D8               	bcf	status,0,c
  3114  000CB0  321B               	rrcf	___aomod@divisor+7,f,c
  3115  000CB2  321A               	rrcf	___aomod@divisor+6,f,c
  3116  000CB4  3219               	rrcf	___aomod@divisor+5,f,c
  3117  000CB6  3218               	rrcf	___aomod@divisor+4,f,c
  3118  000CB8  3217               	rrcf	___aomod@divisor+3,f,c
  3119  000CBA  3216               	rrcf	___aomod@divisor+2,f,c
  3120  000CBC  3215               	rrcf	___aomod@divisor+1,f,c
  3121  000CBE  3214               	rrcf	___aomod@divisor,f,c
  3122  000CC0  2E1C               	decfsz	___aomod@counter,f,c
  3123  000CC2  D7D3               	goto	u1870
  3124  000CC4                     l2453:
  3125  000CC4  501D               	movf	___aomod@sign,w,c
  3126  000CC6  B4D8               	btfsc	status,2,c
  3127  000CC8  D010               	goto	l2457
  3128  000CCA  1E13               	comf	___aomod@dividend+7,f,c
  3129  000CCC  1E12               	comf	___aomod@dividend+6,f,c
  3130  000CCE  1E11               	comf	___aomod@dividend+5,f,c
  3131  000CD0  1E10               	comf	___aomod@dividend+4,f,c
  3132  000CD2  1E0F               	comf	___aomod@dividend+3,f,c
  3133  000CD4  1E0E               	comf	___aomod@dividend+2,f,c
  3134  000CD6  1E0D               	comf	___aomod@dividend+1,f,c
  3135  000CD8  6C0C               	negf	___aomod@dividend,c
  3136  000CDA  0E00               	movlw	0
  3137  000CDC  220D               	addwfc	___aomod@dividend+1,f,c
  3138  000CDE  220E               	addwfc	___aomod@dividend+2,f,c
  3139  000CE0  220F               	addwfc	___aomod@dividend+3,f,c
  3140  000CE2  2210               	addwfc	___aomod@dividend+4,f,c
  3141  000CE4  2211               	addwfc	___aomod@dividend+5,f,c
  3142  000CE6  2212               	addwfc	___aomod@dividend+6,f,c
  3143  000CE8  2213               	addwfc	___aomod@dividend+7,f,c
  3144  000CEA                     l2457:
  3145  000CEA  C00C  F00C         	movff	___aomod@dividend,?___aomod
  3146  000CEE  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  3147  000CF2  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  3148  000CF6  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  3149  000CFA  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  3150  000CFE  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  3151  000D02  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  3152  000D06  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  3153  000D0A  0012               	return		;funcret
  3154  000D0C                     __end_of___aomod:
  3155                           	opt callstack 0
  3156                           
  3157 ;; *************** function ___aodiv *****************
  3158 ;; Defined at:
  3159 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  dividend        8   11[COMRAM] long long 
  3162 ;;  divisor         8   19[COMRAM] long long 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  quotient        8   29[COMRAM] long long 
  3165 ;;  sign            1   28[COMRAM] unsigned char 
  3166 ;;  counter         1   27[COMRAM] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  8   11[COMRAM] long long 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3176 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;Total ram usage:       26 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    1
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_dtoa
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text7
  3191  000AA0                     __ptext7:
  3192                           	opt callstack 0
  3193  000AA0                     ___aodiv:
  3194                           	opt callstack 25
  3195                           
  3196                           ;incstack = 0
  3197  000AA0  0E00               	movlw	0
  3198  000AA2  6E1D               	movwf	___aodiv@sign,c
  3199  000AA4  AE1B               	btfss	___aodiv@divisor+7,7,c
  3200  000AA6  D012               	goto	l2389
  3201  000AA8  1E1B               	comf	___aodiv@divisor+7,f,c
  3202  000AAA  1E1A               	comf	___aodiv@divisor+6,f,c
  3203  000AAC  1E19               	comf	___aodiv@divisor+5,f,c
  3204  000AAE  1E18               	comf	___aodiv@divisor+4,f,c
  3205  000AB0  1E17               	comf	___aodiv@divisor+3,f,c
  3206  000AB2  1E16               	comf	___aodiv@divisor+2,f,c
  3207  000AB4  1E15               	comf	___aodiv@divisor+1,f,c
  3208  000AB6  6C14               	negf	___aodiv@divisor,c
  3209  000AB8  0E00               	movlw	0
  3210  000ABA  2215               	addwfc	___aodiv@divisor+1,f,c
  3211  000ABC  2216               	addwfc	___aodiv@divisor+2,f,c
  3212  000ABE  2217               	addwfc	___aodiv@divisor+3,f,c
  3213  000AC0  2218               	addwfc	___aodiv@divisor+4,f,c
  3214  000AC2  2219               	addwfc	___aodiv@divisor+5,f,c
  3215  000AC4  221A               	addwfc	___aodiv@divisor+6,f,c
  3216  000AC6  221B               	addwfc	___aodiv@divisor+7,f,c
  3217  000AC8  0E01               	movlw	1
  3218  000ACA  6E1D               	movwf	___aodiv@sign,c
  3219  000ACC                     l2389:
  3220  000ACC  AE13               	btfss	___aodiv@dividend+7,7,c
  3221  000ACE  D012               	goto	l2395
  3222  000AD0  1E13               	comf	___aodiv@dividend+7,f,c
  3223  000AD2  1E12               	comf	___aodiv@dividend+6,f,c
  3224  000AD4  1E11               	comf	___aodiv@dividend+5,f,c
  3225  000AD6  1E10               	comf	___aodiv@dividend+4,f,c
  3226  000AD8  1E0F               	comf	___aodiv@dividend+3,f,c
  3227  000ADA  1E0E               	comf	___aodiv@dividend+2,f,c
  3228  000ADC  1E0D               	comf	___aodiv@dividend+1,f,c
  3229  000ADE  6C0C               	negf	___aodiv@dividend,c
  3230  000AE0  0E00               	movlw	0
  3231  000AE2  220D               	addwfc	___aodiv@dividend+1,f,c
  3232  000AE4  220E               	addwfc	___aodiv@dividend+2,f,c
  3233  000AE6  220F               	addwfc	___aodiv@dividend+3,f,c
  3234  000AE8  2210               	addwfc	___aodiv@dividend+4,f,c
  3235  000AEA  2211               	addwfc	___aodiv@dividend+5,f,c
  3236  000AEC  2212               	addwfc	___aodiv@dividend+6,f,c
  3237  000AEE  2213               	addwfc	___aodiv@dividend+7,f,c
  3238  000AF0  0E01               	movlw	1
  3239  000AF2  1A1D               	xorwf	___aodiv@sign,f,c
  3240  000AF4                     l2395:
  3241  000AF4  EE20  F01E         	lfsr	2,___aodiv@quotient
  3242  000AF8  0E07               	movlw	7
  3243  000AFA                     u1791:
  3244  000AFA  6ADE               	clrf	postinc2,c
  3245  000AFC  06E8               	decf	wreg,f,c
  3246  000AFE  E2FD               	bc	u1791
  3247  000B00  5014               	movf	___aodiv@divisor,w,c
  3248  000B02  1015               	iorwf	___aodiv@divisor+1,w,c
  3249  000B04  1016               	iorwf	___aodiv@divisor+2,w,c
  3250  000B06  1017               	iorwf	___aodiv@divisor+3,w,c
  3251  000B08  1018               	iorwf	___aodiv@divisor+4,w,c
  3252  000B0A  1019               	iorwf	___aodiv@divisor+5,w,c
  3253  000B0C  101A               	iorwf	___aodiv@divisor+6,w,c
  3254  000B0E  101B               	iorwf	___aodiv@divisor+7,w,c
  3255  000B10  B4D8               	btfsc	status,2,c
  3256  000B12  D046               	goto	l2417
  3257  000B14  0E01               	movlw	1
  3258  000B16  6E1C               	movwf	___aodiv@counter,c
  3259  000B18  D00A               	goto	l2403
  3260  000B1A                     l2401:
  3261  000B1A  90D8               	bcf	status,0,c
  3262  000B1C  3614               	rlcf	___aodiv@divisor,f,c
  3263  000B1E  3615               	rlcf	___aodiv@divisor+1,f,c
  3264  000B20  3616               	rlcf	___aodiv@divisor+2,f,c
  3265  000B22  3617               	rlcf	___aodiv@divisor+3,f,c
  3266  000B24  3618               	rlcf	___aodiv@divisor+4,f,c
  3267  000B26  3619               	rlcf	___aodiv@divisor+5,f,c
  3268  000B28  361A               	rlcf	___aodiv@divisor+6,f,c
  3269  000B2A  361B               	rlcf	___aodiv@divisor+7,f,c
  3270  000B2C  2A1C               	incf	___aodiv@counter,f,c
  3271  000B2E                     l2403:
  3272  000B2E  AE1B               	btfss	___aodiv@divisor+7,7,c
  3273  000B30  D7F4               	goto	l2401
  3274  000B32                     u1810:
  3275  000B32  90D8               	bcf	status,0,c
  3276  000B34  361E               	rlcf	___aodiv@quotient,f,c
  3277  000B36  361F               	rlcf	___aodiv@quotient+1,f,c
  3278  000B38  3620               	rlcf	___aodiv@quotient+2,f,c
  3279  000B3A  3621               	rlcf	___aodiv@quotient+3,f,c
  3280  000B3C  3622               	rlcf	___aodiv@quotient+4,f,c
  3281  000B3E  3623               	rlcf	___aodiv@quotient+5,f,c
  3282  000B40  3624               	rlcf	___aodiv@quotient+6,f,c
  3283  000B42  3625               	rlcf	___aodiv@quotient+7,f,c
  3284  000B44  5014               	movf	___aodiv@divisor,w,c
  3285  000B46  5C0C               	subwf	___aodiv@dividend,w,c
  3286  000B48  5015               	movf	___aodiv@divisor+1,w,c
  3287  000B4A  580D               	subwfb	___aodiv@dividend+1,w,c
  3288  000B4C  5016               	movf	___aodiv@divisor+2,w,c
  3289  000B4E  580E               	subwfb	___aodiv@dividend+2,w,c
  3290  000B50  5017               	movf	___aodiv@divisor+3,w,c
  3291  000B52  580F               	subwfb	___aodiv@dividend+3,w,c
  3292  000B54  5018               	movf	___aodiv@divisor+4,w,c
  3293  000B56  5810               	subwfb	___aodiv@dividend+4,w,c
  3294  000B58  5019               	movf	___aodiv@divisor+5,w,c
  3295  000B5A  5811               	subwfb	___aodiv@dividend+5,w,c
  3296  000B5C  501A               	movf	___aodiv@divisor+6,w,c
  3297  000B5E  5812               	subwfb	___aodiv@dividend+6,w,c
  3298  000B60  501B               	movf	___aodiv@divisor+7,w,c
  3299  000B62  5813               	subwfb	___aodiv@dividend+7,w,c
  3300  000B64  A0D8               	btfss	status,0,c
  3301  000B66  D011               	goto	l2413
  3302  000B68  5014               	movf	___aodiv@divisor,w,c
  3303  000B6A  5E0C               	subwf	___aodiv@dividend,f,c
  3304  000B6C  5015               	movf	___aodiv@divisor+1,w,c
  3305  000B6E  5A0D               	subwfb	___aodiv@dividend+1,f,c
  3306  000B70  5016               	movf	___aodiv@divisor+2,w,c
  3307  000B72  5A0E               	subwfb	___aodiv@dividend+2,f,c
  3308  000B74  5017               	movf	___aodiv@divisor+3,w,c
  3309  000B76  5A0F               	subwfb	___aodiv@dividend+3,f,c
  3310  000B78  5018               	movf	___aodiv@divisor+4,w,c
  3311  000B7A  5A10               	subwfb	___aodiv@dividend+4,f,c
  3312  000B7C  5019               	movf	___aodiv@divisor+5,w,c
  3313  000B7E  5A11               	subwfb	___aodiv@dividend+5,f,c
  3314  000B80  501A               	movf	___aodiv@divisor+6,w,c
  3315  000B82  5A12               	subwfb	___aodiv@dividend+6,f,c
  3316  000B84  501B               	movf	___aodiv@divisor+7,w,c
  3317  000B86  5A13               	subwfb	___aodiv@dividend+7,f,c
  3318  000B88  801E               	bsf	___aodiv@quotient,0,c
  3319  000B8A                     l2413:
  3320  000B8A  90D8               	bcf	status,0,c
  3321  000B8C  321B               	rrcf	___aodiv@divisor+7,f,c
  3322  000B8E  321A               	rrcf	___aodiv@divisor+6,f,c
  3323  000B90  3219               	rrcf	___aodiv@divisor+5,f,c
  3324  000B92  3218               	rrcf	___aodiv@divisor+4,f,c
  3325  000B94  3217               	rrcf	___aodiv@divisor+3,f,c
  3326  000B96  3216               	rrcf	___aodiv@divisor+2,f,c
  3327  000B98  3215               	rrcf	___aodiv@divisor+1,f,c
  3328  000B9A  3214               	rrcf	___aodiv@divisor,f,c
  3329  000B9C  2E1C               	decfsz	___aodiv@counter,f,c
  3330  000B9E  D7C9               	goto	u1810
  3331  000BA0                     l2417:
  3332  000BA0  501D               	movf	___aodiv@sign,w,c
  3333  000BA2  B4D8               	btfsc	status,2,c
  3334  000BA4  D010               	goto	l2421
  3335  000BA6  1E25               	comf	___aodiv@quotient+7,f,c
  3336  000BA8  1E24               	comf	___aodiv@quotient+6,f,c
  3337  000BAA  1E23               	comf	___aodiv@quotient+5,f,c
  3338  000BAC  1E22               	comf	___aodiv@quotient+4,f,c
  3339  000BAE  1E21               	comf	___aodiv@quotient+3,f,c
  3340  000BB0  1E20               	comf	___aodiv@quotient+2,f,c
  3341  000BB2  1E1F               	comf	___aodiv@quotient+1,f,c
  3342  000BB4  6C1E               	negf	___aodiv@quotient,c
  3343  000BB6  0E00               	movlw	0
  3344  000BB8  221F               	addwfc	___aodiv@quotient+1,f,c
  3345  000BBA  2220               	addwfc	___aodiv@quotient+2,f,c
  3346  000BBC  2221               	addwfc	___aodiv@quotient+3,f,c
  3347  000BBE  2222               	addwfc	___aodiv@quotient+4,f,c
  3348  000BC0  2223               	addwfc	___aodiv@quotient+5,f,c
  3349  000BC2  2224               	addwfc	___aodiv@quotient+6,f,c
  3350  000BC4  2225               	addwfc	___aodiv@quotient+7,f,c
  3351  000BC6                     l2421:
  3352  000BC6  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  3353  000BCA  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  3354  000BCE  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  3355  000BD2  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  3356  000BD6  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  3357  000BDA  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  3358  000BDE  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  3359  000BE2  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  3360  000BE6  0012               	return		;funcret
  3361  000BE8                     __end_of___aodiv:
  3362                           	opt callstack 0
  3363                           
  3364 ;; *************** function _ctoa *****************
  3365 ;; Defined at:
  3366 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  3369 ;;		 -> NULL(0), 
  3370 ;;  c               1   44[COMRAM] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  w               2   45[COMRAM] int 
  3373 ;;  l               2    0        int 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  2   42[COMRAM] int 
  3376 ;; Registers used:
  3377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3383 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;Total ram usage:        5 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    8
  3390 ;; This function calls:
  3391 ;;		_pad
  3392 ;; This function is called by:
  3393 ;;		_vfpfcnvrt
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text8
  3398  001004                     __ptext8:
  3399                           	opt callstack 0
  3400  001004                     _ctoa:
  3401                           	opt callstack 19
  3402                           
  3403                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  3404                           
  3405                           ;incstack = 0
  3406  001004  506E               	movf	_width,w,c
  3407  001006  106F               	iorwf	_width+1,w,c
  3408  001008  A4D8               	btfss	status,2,c
  3409  00100A  D005               	goto	l2465
  3410  00100C  C06E  F02E         	movff	_width,ctoa@w
  3411  001010  C06F  F02F         	movff	_width+1,ctoa@w+1
  3412  001014  D006               	goto	l2467
  3413  001016                     l2465:
  3414  001016  0EFF               	movlw	255
  3415  001018  246E               	addwf	_width,w,c
  3416  00101A  6E2E               	movwf	ctoa@w,c
  3417  00101C  0EFF               	movlw	255
  3418  00101E  206F               	addwfc	_width+1,w,c
  3419  001020  6E2F               	movwf	ctoa@w+1,c
  3420  001022                     l2467:
  3421                           
  3422                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
  3423  001022  C02D  F0C5         	movff	ctoa@c,_dbuf
  3424                           
  3425                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
  3426  001026  0E00               	movlw	0
  3427  001028  0100               	movlb	0	; () banked
  3428  00102A  6FC6               	movwf	(_dbuf+1)& (0+255),b
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
  3432  00102C  C02B  F020         	movff	ctoa@fp,pad@fp
  3433  001030  C02C  F021         	movff	ctoa@fp+1,pad@fp+1
  3434  001034  0EC5               	movlw	low _dbuf
  3435  001036  6E22               	movwf	pad@buf,c
  3436  001038  0E00               	movlw	high _dbuf
  3437  00103A  6E23               	movwf	pad@buf+1,c
  3438  00103C  C02E  F024         	movff	ctoa@w,pad@p
  3439  001040  C02F  F025         	movff	ctoa@w+1,pad@p+1
  3440  001044  ECEB  F006         	call	_pad	;wreg free
  3441  001048  C020  F02B         	movff	?_pad,?_ctoa
  3442  00104C  C021  F02C         	movff	?_pad+1,?_ctoa+1
  3443  001050  0012               	return		;funcret
  3444  001052                     __end_of_ctoa:
  3445                           	opt callstack 0
  3446                           
  3447 ;; *************** function _pad *****************
  3448 ;; Defined at:
  3449 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3452 ;;		 -> NULL(0), 
  3453 ;;  buf             2   33[COMRAM] PTR unsigned char 
  3454 ;;		 -> dbuf(32), 
  3455 ;;  p               2   35[COMRAM] int 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  w               2   40[COMRAM] int 
  3458 ;;  i               2   38[COMRAM] int 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2   31[COMRAM] int 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3468 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;Total ram usage:       11 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    7
  3475 ;; This function calls:
  3476 ;;		_fputc
  3477 ;;		_fputs
  3478 ;;		_strlen
  3479 ;; This function is called by:
  3480 ;;		_ctoa
  3481 ;;		_dtoa
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text9
  3486  000DD6                     __ptext9:
  3487                           	opt callstack 0
  3488  000DD6                     _pad:
  3489                           	opt callstack 19
  3490                           
  3491                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  3492                           
  3493                           ;incstack = 0
  3494  000DD6  A072               	btfss	_flags,0,c
  3495  000DD8  D00A               	goto	l2359
  3496                           
  3497                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  3498  000DDA  C022  F019         	movff	pad@buf,fputs@s
  3499  000DDE  C023  F01A         	movff	pad@buf+1,fputs@s+1
  3500  000DE2  C020  F01B         	movff	pad@fp,fputs@fp
  3501  000DE6  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  3502  000DEA  EC6D  F008         	call	_fputs	;wreg free
  3503  000DEE                     l2359:
  3504                           
  3505                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  3506  000DEE  BE25               	btfsc	pad@p+1,7,c
  3507  000DF0  D005               	goto	l2363
  3508  000DF2  C024  F029         	movff	pad@p,pad@w
  3509  000DF6  C025  F02A         	movff	pad@p+1,pad@w+1
  3510  000DFA  D004               	goto	l170
  3511  000DFC                     l2363:
  3512  000DFC  0E00               	movlw	0
  3513  000DFE  6E2A               	movwf	pad@w+1,c
  3514  000E00  0E00               	movlw	0
  3515  000E02  6E29               	movwf	pad@w,c
  3516  000E04                     l170:
  3517                           
  3518                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3519  000E04  0E00               	movlw	0
  3520  000E06  6E28               	movwf	pad@i+1,c
  3521  000E08  0E00               	movlw	0
  3522  000E0A  6E27               	movwf	pad@i,c
  3523                           
  3524                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3525  000E0C  D00C               	goto	l2369
  3526  000E0E                     l2365:
  3527                           
  3528                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  3529  000E0E  0E00               	movlw	0
  3530  000E10  6E11               	movwf	fputc@c+1,c
  3531  000E12  0E20               	movlw	32
  3532  000E14  6E10               	movwf	fputc@c,c
  3533  000E16  C020  F012         	movff	pad@fp,fputc@fp
  3534  000E1A  C021  F013         	movff	pad@fp+1,fputc@fp+1
  3535  000E1E  EC6E  F007         	call	_fputc	;wreg free
  3536                           
  3537                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3538  000E22  4A27               	infsnz	pad@i,f,c
  3539  000E24  2A28               	incf	pad@i+1,f,c
  3540  000E26                     l2369:
  3541                           
  3542                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3543  000E26  5029               	movf	pad@w,w,c
  3544  000E28  5C27               	subwf	pad@i,w,c
  3545  000E2A  5028               	movf	pad@i+1,w,c
  3546  000E2C  0A80               	xorlw	128
  3547  000E2E  6E26               	movwf	??_pad& (0+255),c
  3548  000E30  502A               	movf	pad@w+1,w,c
  3549  000E32  0A80               	xorlw	128
  3550  000E34  5826               	subwfb	??_pad& (0+255),w,c
  3551  000E36  A0D8               	btfss	status,0,c
  3552  000E38  D7EA               	goto	l2365
  3553                           
  3554                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  3555  000E3A  B072               	btfsc	_flags,0,c
  3556  000E3C  D00A               	goto	l2373
  3557                           
  3558                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  3559  000E3E  C022  F019         	movff	pad@buf,fputs@s
  3560  000E42  C023  F01A         	movff	pad@buf+1,fputs@s+1
  3561  000E46  C020  F01B         	movff	pad@fp,fputs@fp
  3562  000E4A  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  3563  000E4E  EC6D  F008         	call	_fputs	;wreg free
  3564  000E52                     l2373:
  3565                           
  3566                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  3567  000E52  C022  F00C         	movff	pad@buf,strlen@s
  3568  000E56  C023  F00D         	movff	pad@buf+1,strlen@s+1
  3569  000E5A  ECA2  F008         	call	_strlen	;wreg free
  3570  000E5E  5029               	movf	pad@w,w,c
  3571  000E60  240C               	addwf	?_strlen,w,c
  3572  000E62  6E20               	movwf	?_pad,c
  3573  000E64  502A               	movf	pad@w+1,w,c
  3574  000E66  200D               	addwfc	?_strlen+1,w,c
  3575  000E68  6E21               	movwf	?_pad+1,c
  3576  000E6A  0012               	return		;funcret
  3577  000E6C                     __end_of_pad:
  3578                           	opt callstack 0
  3579                           
  3580 ;; *************** function _strlen *****************
  3581 ;; Defined at:
  3582 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3585 ;;		 -> dbuf(32), 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3588 ;;		 -> dbuf(32), 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  2   11[COMRAM] unsigned int 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        4 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_pad
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text10
  3613  001144                     __ptext10:
  3614                           	opt callstack 0
  3615  001144                     _strlen:
  3616                           	opt callstack 24
  3617                           
  3618                           ;incstack = 0
  3619  001144  C00C  F00E         	movff	strlen@s,strlen@a
  3620  001148  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3621  00114C  D002               	goto	l2349
  3622  00114E                     l2347:
  3623  00114E  4A0C               	infsnz	strlen@s,f,c
  3624  001150  2A0D               	incf	strlen@s+1,f,c
  3625  001152                     l2349:
  3626  001152  C00C  FFD9         	movff	strlen@s,fsr2l
  3627  001156  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3628  00115A  50DF               	movf	indf2,w,c
  3629  00115C  A4D8               	btfss	status,2,c
  3630  00115E  D7F7               	goto	l2347
  3631  001160  500E               	movf	strlen@a,w,c
  3632  001162  5C0C               	subwf	strlen@s,w,c
  3633  001164  6E0C               	movwf	?_strlen,c
  3634  001166  500F               	movf	strlen@a+1,w,c
  3635  001168  580D               	subwfb	strlen@s+1,w,c
  3636  00116A  6E0D               	movwf	?_strlen+1,c
  3637  00116C  0012               	return		;funcret
  3638  00116E                     __end_of_strlen:
  3639                           	opt callstack 0
  3640                           
  3641 ;; *************** function _fputs *****************
  3642 ;; Defined at:
  3643 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  s               2   24[COMRAM] PTR const unsigned char 
  3646 ;;		 -> dbuf(32), 
  3647 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  3648 ;;		 -> NULL(0), 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  i               2   29[COMRAM] int 
  3651 ;;  c               1   28[COMRAM] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2   24[COMRAM] int 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;Total ram usage:        7 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    6
  3668 ;; This function calls:
  3669 ;;		_fputc
  3670 ;; This function is called by:
  3671 ;;		_pad
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text11
  3676  0010DA                     __ptext11:
  3677                           	opt callstack 0
  3678  0010DA                     _fputs:
  3679                           	opt callstack 19
  3680                           
  3681                           ;incstack = 0
  3682  0010DA  0E00               	movlw	0
  3683  0010DC  6E1F               	movwf	fputs@i+1,c
  3684  0010DE  0E00               	movlw	0
  3685  0010E0  6E1E               	movwf	fputs@i,c
  3686  0010E2  D00B               	goto	l2343
  3687  0010E4                     l2339:
  3688  0010E4  C01D  F010         	movff	fputs@c,fputc@c
  3689  0010E8  6A11               	clrf	fputc@c+1,c
  3690  0010EA  C01B  F012         	movff	fputs@fp,fputc@fp
  3691  0010EE  C01C  F013         	movff	fputs@fp+1,fputc@fp+1
  3692  0010F2  EC6E  F007         	call	_fputc	;wreg free
  3693  0010F6  4A1E               	infsnz	fputs@i,f,c
  3694  0010F8  2A1F               	incf	fputs@i+1,f,c
  3695  0010FA                     l2343:
  3696  0010FA  501E               	movf	fputs@i,w,c
  3697  0010FC  2419               	addwf	fputs@s,w,c
  3698  0010FE  6ED9               	movwf	fsr2l,c
  3699  001100  501F               	movf	fputs@i+1,w,c
  3700  001102  201A               	addwfc	fputs@s+1,w,c
  3701  001104  6EDA               	movwf	fsr2h,c
  3702  001106  50DF               	movf	indf2,w,c
  3703  001108  6E1D               	movwf	fputs@c,c
  3704  00110A  501D               	movf	fputs@c,w,c
  3705  00110C  B4D8               	btfsc	status,2,c
  3706  00110E  0012               	return	
  3707  001110  D7E9               	goto	l2339
  3708  001112                     __end_of_fputs:
  3709                           	opt callstack 0
  3710                           
  3711 ;; *************** function _fputc *****************
  3712 ;; Defined at:
  3713 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  c               2   15[COMRAM] int 
  3716 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3717 ;;		 -> NULL(0), 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  2   15[COMRAM] int 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;Total ram usage:        9 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    5
  3736 ;; This function calls:
  3737 ;;		_putch
  3738 ;; This function is called by:
  3739 ;;		_pad
  3740 ;;		_vfpfcnvrt
  3741 ;;		_fputs
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text12
  3746  000EDC                     __ptext12:
  3747                           	opt callstack 0
  3748  000EDC                     _fputc:
  3749                           	opt callstack 22
  3750                           
  3751                           ;incstack = 0
  3752  000EDC  5012               	movf	fputc@fp,w,c
  3753  000EDE  1013               	iorwf	fputc@fp+1,w,c
  3754  000EE0  B4D8               	btfsc	status,2,c
  3755  000EE2  D004               	goto	u1670
  3756  000EE4  5012               	movf	fputc@fp,w,c
  3757  000EE6  1013               	iorwf	fputc@fp+1,w,c
  3758  000EE8  A4D8               	btfss	status,2,c
  3759  000EEA  D004               	goto	l2329
  3760  000EEC                     u1670:
  3761  000EEC  5010               	movf	fputc@c,w,c
  3762  000EEE  ECF4  F008         	call	_putch
  3763  000EF2  0012               	return	
  3764  000EF4                     l2329:
  3765  000EF4  EE20 F004          	lfsr	2,4
  3766  000EF8  5012               	movf	fputc@fp,w,c
  3767  000EFA  26D9               	addwf	fsr2l,f,c
  3768  000EFC  5013               	movf	fputc@fp+1,w,c
  3769  000EFE  22DA               	addwfc	fsr2h,f,c
  3770  000F00  50DE               	movf	postinc2,w,c
  3771  000F02  10DE               	iorwf	postinc2,w,c
  3772  000F04  B4D8               	btfsc	status,2,c
  3773  000F06  D016               	goto	u1690
  3774  000F08  EE20 F004          	lfsr	2,4
  3775  000F0C  5012               	movf	fputc@fp,w,c
  3776  000F0E  26D9               	addwf	fsr2l,f,c
  3777  000F10  5013               	movf	fputc@fp+1,w,c
  3778  000F12  22DA               	addwfc	fsr2h,f,c
  3779  000F14  EE10 F002          	lfsr	1,2
  3780  000F18  5012               	movf	fputc@fp,w,c
  3781  000F1A  26E1               	addwf	fsr1l,f,c
  3782  000F1C  5013               	movf	fputc@fp+1,w,c
  3783  000F1E  22E2               	addwfc	fsr1h,f,c
  3784  000F20  50DE               	movf	postinc2,w,c
  3785  000F22  5CE6               	subwf	postinc1,w,c
  3786  000F24  50E6               	movf	postinc1,w,c
  3787  000F26  0A80               	xorlw	128
  3788  000F28  6E18               	movwf	(??_fputc+4)& (0+255),c
  3789  000F2A  50DE               	movf	postinc2,w,c
  3790  000F2C  0A80               	xorlw	128
  3791  000F2E  5818               	subwfb	(??_fputc+4)& (0+255),w,c
  3792  000F30  B0D8               	btfsc	status,0,c
  3793  000F32  0012               	return	
  3794  000F34                     u1690:
  3795  000F34  EE20 F002          	lfsr	2,2
  3796  000F38  5012               	movf	fputc@fp,w,c
  3797  000F3A  26D9               	addwf	fsr2l,f,c
  3798  000F3C  5013               	movf	fputc@fp+1,w,c
  3799  000F3E  22DA               	addwfc	fsr2h,f,c
  3800  000F40  2ADE               	incf	postinc2,f,c
  3801  000F42  0E00               	movlw	0
  3802  000F44  22DD               	addwfc	postdec2,f,c
  3803  000F46  0012               	return		;funcret
  3804  000F48                     __end_of_fputc:
  3805                           	opt callstack 0
  3806                           
  3807 ;; *************** function _putch *****************
  3808 ;; Defined at:
  3809 ;;		line 102 in file "lcd.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  data            1    wreg     unsigned char 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  data            1   14[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;Total ram usage:        1 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    4
  3830 ;; This function calls:
  3831 ;;		_send_byte
  3832 ;; This function is called by:
  3833 ;;		_fputc
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text13
  3838  0011E8                     __ptext13:
  3839                           	opt callstack 0
  3840  0011E8                     _putch:
  3841                           	opt callstack 22
  3842                           
  3843                           ;incstack = 0
  3844                           ;putch@data stored from wreg
  3845  0011E8  6E0F               	movwf	putch@data,c
  3846                           
  3847                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  3848  0011EA  848C               	bsf	3980,2,c	;volatile
  3849                           
  3850                           ;lcd.c: 104:     send_byte((unsigned char)data);
  3851  0011EC  500F               	movf	putch@data,w,c
  3852  0011EE  ECEB  F008         	call	_send_byte
  3853  0011F2  0012               	return		;funcret
  3854  0011F4                     __end_of_putch:
  3855                           	opt callstack 0
  3856                           
  3857 ;; *************** function _initLCD *****************
  3858 ;; Defined at:
  3859 ;;		line 69 in file "lcd.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;Total ram usage:        1 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    5
  3880 ;; This function calls:
  3881 ;;		_lcdInst
  3882 ;;		_send_byte
  3883 ;;		_send_nibble
  3884 ;; This function is called by:
  3885 ;;		_main
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text14
  3890  000F48                     __ptext14:
  3891                           	opt callstack 0
  3892  000F48                     _initLCD:
  3893                           	opt callstack 25
  3894                           
  3895                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  3896                           
  3897                           ;incstack = 0
  3898  000F48  0E31               	movlw	49
  3899  000F4A  6E10               	movwf	??_initLCD& (0+255),c
  3900  000F4C  0EB2               	movlw	178
  3901  000F4E                     u2567:
  3902  000F4E  2EE8               	decfsz	wreg,f,c
  3903  000F50  D7FE               	bra	u2567
  3904  000F52  2E10               	decfsz	??_initLCD& (0+255),f,c
  3905  000F54  D7FC               	bra	u2567
  3906  000F56  D000               	nop2	
  3907                           
  3908                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  3909  000F58  948C               	bcf	3980,2,c	;volatile
  3910                           
  3911                           ;lcd.c: 74:     send_nibble(0b0011);
  3912  000F5A  0E03               	movlw	3
  3913  000F5C  ECE0  F008         	call	_send_nibble
  3914                           
  3915                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3916  000F60  0E11               	movlw	17
  3917  000F62  6E10               	movwf	??_initLCD& (0+255),c
  3918  000F64  0E3A               	movlw	58
  3919  000F66                     u2577:
  3920  000F66  2EE8               	decfsz	wreg,f,c
  3921  000F68  D7FE               	bra	u2577
  3922  000F6A  2E10               	decfsz	??_initLCD& (0+255),f,c
  3923  000F6C  D7FC               	bra	u2577
  3924  000F6E  D000               	nop2	
  3925                           
  3926                           ;lcd.c: 76:     send_nibble(0b0011);
  3927  000F70  0E03               	movlw	3
  3928  000F72  ECE0  F008         	call	_send_nibble
  3929                           
  3930                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  3931  000F76  0E7D               	movlw	125
  3932  000F78                     u2587:
  3933  000F78  2EE8               	decfsz	wreg,f,c
  3934  000F7A  D7FE               	bra	u2587
  3935                           
  3936                           ;lcd.c: 78:     send_byte(0b00110010);
  3937  000F7C  0E32               	movlw	50
  3938  000F7E  ECEB  F008         	call	_send_byte
  3939                           
  3940                           ;lcd.c: 80:     send_byte(0b00101000);
  3941  000F82  0E28               	movlw	40
  3942  000F84  ECEB  F008         	call	_send_byte
  3943                           
  3944                           ;lcd.c: 81:     send_byte(0b00001000);
  3945  000F88  0E08               	movlw	8
  3946  000F8A  ECEB  F008         	call	_send_byte
  3947                           
  3948                           ;lcd.c: 82:     send_byte(0b00000001);
  3949  000F8E  0E01               	movlw	1
  3950  000F90  ECEB  F008         	call	_send_byte
  3951                           
  3952                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3953  000F94  0E11               	movlw	17
  3954  000F96  6E10               	movwf	??_initLCD& (0+255),c
  3955  000F98  0E3A               	movlw	58
  3956  000F9A                     u2597:
  3957  000F9A  2EE8               	decfsz	wreg,f,c
  3958  000F9C  D7FE               	bra	u2597
  3959  000F9E  2E10               	decfsz	??_initLCD& (0+255),f,c
  3960  000FA0  D7FC               	bra	u2597
  3961  000FA2  D000               	nop2	
  3962                           
  3963                           ;lcd.c: 84:     send_byte(0b00000110);
  3964  000FA4  0E06               	movlw	6
  3965  000FA6  ECEB  F008         	call	_send_byte
  3966                           
  3967                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  3968  000FAA  0E0F               	movlw	15
  3969  000FAC  ECFA  F008         	call	_lcdInst
  3970  000FB0  0012               	return		;funcret
  3971  000FB2                     __end_of_initLCD:
  3972                           	opt callstack 0
  3973                           
  3974 ;; *************** function _lcdInst *****************
  3975 ;; Defined at:
  3976 ;;		line 64 in file "lcd.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  data            1    wreg     unsigned char 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  data            1   14[COMRAM] unsigned char 
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;Total ram usage:        1 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    4
  3997 ;; This function calls:
  3998 ;;		_send_byte
  3999 ;; This function is called by:
  4000 ;;		_initLCD
  4001 ;;		_main
  4002 ;;		_lcd_shift_cursor
  4003 ;;		_lcd_shift_display
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text15
  4008  0011F4                     __ptext15:
  4009                           	opt callstack 0
  4010  0011F4                     _lcdInst:
  4011                           	opt callstack 26
  4012                           
  4013                           ;incstack = 0
  4014                           ;lcdInst@data stored from wreg
  4015  0011F4  6E0F               	movwf	lcdInst@data,c
  4016                           
  4017                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  4018  0011F6  948C               	bcf	3980,2,c	;volatile
  4019                           
  4020                           ;lcd.c: 66:     send_byte(data);
  4021  0011F8  500F               	movf	lcdInst@data,w,c
  4022  0011FA  ECEB  F008         	call	_send_byte
  4023  0011FE  0012               	return		;funcret
  4024  001200                     __end_of_lcdInst:
  4025                           	opt callstack 0
  4026                           
  4027 ;; *************** function _send_byte *****************
  4028 ;; Defined at:
  4029 ;;		line 55 in file "lcd.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  data            1    wreg     unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  data            1   13[COMRAM] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;Total ram usage:        1 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    3
  4050 ;; This function calls:
  4051 ;;		_send_nibble
  4052 ;; This function is called by:
  4053 ;;		_lcdInst
  4054 ;;		_initLCD
  4055 ;;		_putch
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text16
  4060  0011D6                     __ptext16:
  4061                           	opt callstack 0
  4062  0011D6                     _send_byte:
  4063                           	opt callstack 22
  4064                           
  4065                           ;incstack = 0
  4066                           ;send_byte@data stored from wreg
  4067  0011D6  6E0E               	movwf	send_byte@data,c
  4068                           
  4069                           ;lcd.c: 57:     send_nibble(data >> 4);
  4070  0011D8  380E               	swapf	send_byte@data,w,c
  4071  0011DA  0B0F               	andlw	15
  4072  0011DC  ECE0  F008         	call	_send_nibble
  4073                           
  4074                           ;lcd.c: 60:     send_nibble(data);
  4075  0011E0  500E               	movf	send_byte@data,w,c
  4076  0011E2  ECE0  F008         	call	_send_nibble
  4077  0011E6  0012               	return		;funcret
  4078  0011E8                     __end_of_send_byte:
  4079                           	opt callstack 0
  4080                           
  4081 ;; *************** function _send_nibble *****************
  4082 ;; Defined at:
  4083 ;;		line 44 in file "lcd.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  data            1    wreg     unsigned char 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  data            1   12[COMRAM] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;Total ram usage:        1 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    2
  4104 ;; This function calls:
  4105 ;;		_pulse_e
  4106 ;; This function is called by:
  4107 ;;		_send_byte
  4108 ;;		_initLCD
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text17
  4113  0011C0                     __ptext17:
  4114                           	opt callstack 0
  4115  0011C0                     _send_nibble:
  4116                           	opt callstack 22
  4117                           
  4118                           ;incstack = 0
  4119                           ;send_nibble@data stored from wreg
  4120  0011C0  6E0D               	movwf	send_nibble@data,c
  4121                           
  4122                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  4123  0011C2  508C               	movf	3980,w,c	;volatile
  4124  0011C4  0B0F               	andlw	15
  4125  0011C6  6E8C               	movwf	3980,c	;volatile
  4126                           
  4127                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  4128  0011C8  380D               	swapf	send_nibble@data,w,c
  4129  0011CA  0BF0               	andlw	240
  4130  0011CC  108C               	iorwf	3980,w,c	;volatile
  4131  0011CE  6E8C               	movwf	3980,c	;volatile
  4132                           
  4133                           ;lcd.c: 48:     pulse_e();
  4134  0011D0  ECB7  F008         	call	_pulse_e	;wreg free
  4135  0011D4  0012               	return		;funcret
  4136  0011D6                     __end_of_send_nibble:
  4137                           	opt callstack 0
  4138                           
  4139 ;; *************** function _pulse_e *****************
  4140 ;; Defined at:
  4141 ;;		line 28 in file "lcd.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  interruptSta    1   11[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        1 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_send_nibble
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text18
  4170  00116E                     __ptext18:
  4171                           	opt callstack 0
  4172  00116E                     _pulse_e:
  4173                           	opt callstack 22
  4174                           
  4175                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  4176                           
  4177                           ;incstack = 0
  4178  00116E  0E00               	movlw	0
  4179  001170  BEF2               	btfsc	4082,7,c	;volatile
  4180  001172  0E01               	movlw	1
  4181  001174  6E0C               	movwf	pulse_e@interruptState,c
  4182                           
  4183                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  4184  001176  9EF2               	bcf	4082,7,c	;volatile
  4185                           
  4186                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  4187  001178  868C               	bsf	3980,3,c	;volatile
  4188                           
  4189                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  4190  00117A  0E14               	movlw	20
  4191  00117C                     u2607:
  4192  00117C  2EE8               	decfsz	wreg,f,c
  4193  00117E  D7FE               	bra	u2607
  4194  001180  D000               	nop2	
  4195                           
  4196                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  4197  001182  968C               	bcf	3980,3,c	;volatile
  4198                           
  4199                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  4200  001184  0E53               	movlw	83
  4201  001186                     u2617:
  4202  001186  2EE8               	decfsz	wreg,f,c
  4203  001188  D7FE               	bra	u2617
  4204  00118A  F000               	nop	
  4205                           
  4206                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  4207  00118C  B00C               	btfsc	pulse_e@interruptState,0,c
  4208  00118E  D002               	bra	u1655
  4209  001190  9EF2               	bcf	4082,7,c	;volatile
  4210  001192  D001               	bra	u1656
  4211  001194                     u1655:
  4212  001194  8EF2               	bsf	4082,7,c	;volatile
  4213  001196                     u1656:
  4214  001196  0012               	return		;funcret
  4215  001198                     __end_of_pulse_e:
  4216                           	opt callstack 0
  4217                           
  4218 ;; *************** function ___awmod *****************
  4219 ;; Defined at:
  4220 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  dividend        2   11[COMRAM] int 
  4223 ;;  divisor         2   13[COMRAM] int 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  sign            1   16[COMRAM] unsigned char 
  4226 ;;  counter         1   15[COMRAM] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2   11[COMRAM] int 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4239 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;Total ram usage:        6 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    1
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text19
  4251  000E6C                     __ptext19:
  4252                           	opt callstack 0
  4253  000E6C                     ___awmod:
  4254                           	opt callstack 29
  4255                           
  4256                           ;incstack = 0
  4257  000E6C  0E00               	movlw	0
  4258  000E6E  6E11               	movwf	___awmod@sign,c
  4259  000E70  AE0D               	btfss	___awmod@dividend+1,7,c
  4260  000E72  D006               	goto	l1951
  4261  000E74  6C0C               	negf	___awmod@dividend,c
  4262  000E76  1E0D               	comf	___awmod@dividend+1,f,c
  4263  000E78  B0D8               	btfsc	status,0,c
  4264  000E7A  2A0D               	incf	___awmod@dividend+1,f,c
  4265  000E7C  0E01               	movlw	1
  4266  000E7E  6E11               	movwf	___awmod@sign,c
  4267  000E80                     l1951:
  4268  000E80  AE0F               	btfss	___awmod@divisor+1,7,c
  4269  000E82  D004               	goto	l1955
  4270  000E84  6C0E               	negf	___awmod@divisor,c
  4271  000E86  1E0F               	comf	___awmod@divisor+1,f,c
  4272  000E88  B0D8               	btfsc	status,0,c
  4273  000E8A  2A0F               	incf	___awmod@divisor+1,f,c
  4274  000E8C                     l1955:
  4275  000E8C  500E               	movf	___awmod@divisor,w,c
  4276  000E8E  100F               	iorwf	___awmod@divisor+1,w,c
  4277  000E90  B4D8               	btfsc	status,2,c
  4278  000E92  D018               	goto	l1971
  4279  000E94  0E01               	movlw	1
  4280  000E96  6E10               	movwf	___awmod@counter,c
  4281  000E98  D004               	goto	l1961
  4282  000E9A                     l1959:
  4283  000E9A  90D8               	bcf	status,0,c
  4284  000E9C  360E               	rlcf	___awmod@divisor,f,c
  4285  000E9E  360F               	rlcf	___awmod@divisor+1,f,c
  4286  000EA0  2A10               	incf	___awmod@counter,f,c
  4287  000EA2                     l1961:
  4288  000EA2  AE0F               	btfss	___awmod@divisor+1,7,c
  4289  000EA4  D7FA               	goto	l1959
  4290  000EA6                     u1330:
  4291  000EA6  500E               	movf	___awmod@divisor,w,c
  4292  000EA8  5C0C               	subwf	___awmod@dividend,w,c
  4293  000EAA  500F               	movf	___awmod@divisor+1,w,c
  4294  000EAC  580D               	subwfb	___awmod@dividend+1,w,c
  4295  000EAE  A0D8               	btfss	status,0,c
  4296  000EB0  D004               	goto	l1967
  4297  000EB2  500E               	movf	___awmod@divisor,w,c
  4298  000EB4  5E0C               	subwf	___awmod@dividend,f,c
  4299  000EB6  500F               	movf	___awmod@divisor+1,w,c
  4300  000EB8  5A0D               	subwfb	___awmod@dividend+1,f,c
  4301  000EBA                     l1967:
  4302  000EBA  90D8               	bcf	status,0,c
  4303  000EBC  320F               	rrcf	___awmod@divisor+1,f,c
  4304  000EBE  320E               	rrcf	___awmod@divisor,f,c
  4305  000EC0  2E10               	decfsz	___awmod@counter,f,c
  4306  000EC2  D7F1               	goto	u1330
  4307  000EC4                     l1971:
  4308  000EC4  5011               	movf	___awmod@sign,w,c
  4309  000EC6  B4D8               	btfsc	status,2,c
  4310  000EC8  D004               	goto	l1975
  4311  000ECA  6C0C               	negf	___awmod@dividend,c
  4312  000ECC  1E0D               	comf	___awmod@dividend+1,f,c
  4313  000ECE  B0D8               	btfsc	status,0,c
  4314  000ED0  2A0D               	incf	___awmod@dividend+1,f,c
  4315  000ED2                     l1975:
  4316  000ED2  C00C  F00C         	movff	___awmod@dividend,?___awmod
  4317  000ED6  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  4318  000EDA  0012               	return		;funcret
  4319  000EDC                     __end_of___awmod:
  4320                           	opt callstack 0
  4321                           
  4322 ;; *************** function _interruptHandler *****************
  4323 ;; Defined at:
  4324 ;;		line 242 in file "main.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  i               2    8[COMRAM] int 
  4329 ;;  keypress        1   10[COMRAM] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:       11 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		Interrupt level 2
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	intcode
  4353  000008                     __pintcode:
  4354                           	opt callstack 0
  4355  000008                     _interruptHandler:
  4356                           	opt callstack 19
  4357                           
  4358                           ;incstack = 0
  4359  000008  8274               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4360  00000A  ED86  F006         	call	int_func,f	;refresh shadow registers
  4361                           
  4362                           	psect	intcode_body
  4363  000D0C                     __pintcode_body:
  4364                           	opt callstack 19
  4365  000D0C                     int_func:
  4366                           	opt callstack 19
  4367  000D0C  0006               	pop		; remove dummy address from shadow register refresh
  4368  000D0E  CFF6 F005          	movff	tblptrl,??_interruptHandler+4
  4369  000D12  CFF7 F006          	movff	tblptrh,??_interruptHandler+5
  4370  000D16  CFF8 F007          	movff	tblptru,??_interruptHandler+6
  4371  000D1A  CFF5 F008          	movff	tablat,??_interruptHandler+7
  4372                           
  4373                           ;main.c: 244:     if(INT1IF){
  4374  000D1E  A0F0               	btfss	4080,0,c	;volatile
  4375  000D20  D050               	goto	i2u164_40
  4376                           
  4377                           ;main.c: 248:         INT1IF = 0;
  4378  000D22  90F0               	bcf	4080,0,c	;volatile
  4379                           
  4380                           ;main.c: 250:         unsigned char keypress = (PORTB & 0xF0) >> 4;
  4381  000D24  3881               	swapf	3969,w,c	;volatile
  4382  000D26  0B0F               	andlw	15
  4383  000D28  0B0F               	andlw	15
  4384  000D2A  6E0B               	movwf	interruptHandler@keypress,c
  4385                           
  4386                           ;main.c: 252:         if (keys[keypress] == 'A') {
  4387  000D2C  0E89               	movlw	low _keys
  4388  000D2E  240B               	addwf	interruptHandler@keypress,w,c
  4389  000D30  6EF6               	movwf	tblptrl,c
  4390  000D32  6AF7               	clrf	tblptrh,c
  4391  000D34  0EFE               	movlw	high _keys
  4392  000D36  22F7               	addwfc	tblptrh,f,c
  4393  000D38                     	if	0	;There are less than 3 active tblptr bytes
  4394  000D38                     	endif
  4395  000D38  0008               	tblrd		*
  4396  000D3A  50F5               	movf	tablat,w,c
  4397  000D3C  0A41               	xorlw	65
  4398  000D3E  A4D8               	btfss	status,2,c
  4399  000D40  D004               	goto	i2l2285
  4400                           
  4401                           ;main.c: 254:             start = 1;
  4402  000D42  0E01               	movlw	1
  4403  000D44  0100               	movlb	0	; () banked
  4404  000D46  6FC2               	movwf	_start& (0+255),b	;volatile
  4405  000D48  D03C               	goto	i2u164_40
  4406  000D4A                     i2l2285:
  4407                           
  4408                           ;main.c: 258:         if (keys[keypress] == '*') {
  4409  000D4A  0E89               	movlw	low _keys
  4410  000D4C  240B               	addwf	interruptHandler@keypress,w,c
  4411  000D4E  6EF6               	movwf	tblptrl,c
  4412  000D50  6AF7               	clrf	tblptrh,c
  4413  000D52  0EFE               	movlw	high _keys
  4414  000D54  22F7               	addwfc	tblptrh,f,c
  4415  000D56                     	if	0	;There are less than 3 active tblptr bytes
  4416  000D56                     	endif
  4417  000D56  0008               	tblrd		*
  4418  000D58  50F5               	movf	tablat,w,c
  4419  000D5A  0A2A               	xorlw	42
  4420  000D5C  A4D8               	btfss	status,2,c
  4421  000D5E  D004               	goto	i2l2291
  4422                           
  4423                           ;main.c: 260:             exit_key = 1;
  4424  000D60  0E01               	movlw	1
  4425  000D62  0100               	movlb	0	; () banked
  4426  000D64  6FC3               	movwf	_exit_key& (0+255),b	;volatile
  4427  000D66  D02D               	goto	i2u164_40
  4428  000D68                     i2l2291:
  4429                           
  4430                           ;main.c: 264:         for ( int i = 0; i < Canister; i++ ) {
  4431  000D68  0E00               	movlw	0
  4432  000D6A  6E0A               	movwf	interruptHandler@i+1,c
  4433  000D6C  0E00               	movlw	0
  4434  000D6E  6E09               	movwf	interruptHandler@i,c
  4435  000D70  D01D               	goto	i2l2301
  4436  000D72                     i2l2293:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;main.c: 266:             if ((char)i + '0' == keys[keypress]) {
  4440  000D72  0E89               	movlw	low _keys
  4441  000D74  240B               	addwf	interruptHandler@keypress,w,c
  4442  000D76  6EF6               	movwf	tblptrl,c
  4443  000D78  6AF7               	clrf	tblptrh,c
  4444  000D7A  0EFE               	movlw	high _keys
  4445  000D7C  22F7               	addwfc	tblptrh,f,c
  4446  000D7E                     	if	0	;There are less than 3 active tblptr bytes
  4447  000D7E                     	endif
  4448  000D7E  0008               	tblrd		*
  4449  000D80  50F5               	movf	tablat,w,c
  4450  000D82  6E01               	movwf	??_interruptHandler& (0+255),c
  4451  000D84  6A02               	clrf	(??_interruptHandler+1)& (0+255),c
  4452  000D86  5009               	movf	interruptHandler@i,w,c
  4453  000D88  6E03               	movwf	(??_interruptHandler+2)& (0+255),c
  4454  000D8A  6A04               	clrf	(??_interruptHandler+3)& (0+255),c
  4455  000D8C  0E30               	movlw	48
  4456  000D8E  2603               	addwf	??_interruptHandler+2,f,c
  4457  000D90  0E00               	movlw	0
  4458  000D92  2204               	addwfc	??_interruptHandler+3,f,c
  4459  000D94  5001               	movf	??_interruptHandler,w,c
  4460  000D96  1803               	xorwf	??_interruptHandler+2,w,c
  4461  000D98  E107               	bnz	i2l2299
  4462  000D9A  5002               	movf	??_interruptHandler+1,w,c
  4463  000D9C  1804               	xorwf	??_interruptHandler+3,w,c
  4464  000D9E  A4D8               	btfss	status,2,c
  4465  000DA0  D003               	goto	i2l2299
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;main.c: 267:                 key_was_pressed = 1;
  4469  000DA2  0E01               	movlw	1
  4470  000DA4  6FC4               	movwf	_key_was_pressed& (0+255),b	;volatile
  4471  000DA6  D00D               	goto	i2u164_40
  4472  000DA8                     i2l2299:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 271:         }
  4476  000DA8  4A09               	infsnz	interruptHandler@i,f,c
  4477  000DAA  2A0A               	incf	interruptHandler@i+1,f,c
  4478  000DAC                     i2l2301:
  4479  000DAC  0100               	movlb	0	; () banked
  4480  000DAE  51BE               	movf	_Canister& (0+255),w,b
  4481  000DB0  5C09               	subwf	interruptHandler@i,w,c
  4482  000DB2  500A               	movf	interruptHandler@i+1,w,c
  4483  000DB4  0A80               	xorlw	128
  4484  000DB6  6E01               	movwf	??_interruptHandler& (0+255),c
  4485  000DB8  51BF               	movf	(_Canister+1)& (0+255),w,b
  4486  000DBA  0A80               	xorlw	128
  4487  000DBC  5801               	subwfb	??_interruptHandler& (0+255),w,c
  4488  000DBE  A0D8               	btfss	status,0,c
  4489  000DC0  D7D8               	goto	i2l2293
  4490  000DC2                     i2u164_40:
  4491  000DC2  C008  FFF5         	movff	??_interruptHandler+7,tablat
  4492  000DC6  C007  FFF8         	movff	??_interruptHandler+6,tblptru
  4493  000DCA  C006  FFF7         	movff	??_interruptHandler+5,tblptrh
  4494  000DCE  C005  FFF6         	movff	??_interruptHandler+4,tblptrl
  4495  000DD2  9274               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4496  000DD4  0011               	retfie		f
  4497  000DD6                     __end_of_interruptHandler:
  4498                           	opt callstack 0
  4499                           
  4500                           	psect	rparam
  4501  0000                     
  4502                           	psect	temp
  4503  000074                     btemp:
  4504                           	opt callstack 0
  4505  000074                     	ds	1
  4506  0000                     int$flags	set	btemp
  4507  0000                     wtemp8	set	btemp+1
  4508  0000                     ttemp5	set	btemp+1
  4509  0000                     ttemp6	set	btemp+4
  4510  0000                     ttemp7	set	btemp+8
  4511                           tosu	equ	0xFFF
  4512                           tosh	equ	0xFFE
  4513                           tosl	equ	0xFFD
  4514                           stkptr	equ	0xFFC
  4515                           pclatu	equ	0xFFB
  4516                           pclath	equ	0xFFA
  4517                           pcl	equ	0xFF9
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           indf0	equ	0xFEF
  4525                           postinc0	equ	0xFEE
  4526                           postdec0	equ	0xFED
  4527                           preinc0	equ	0xFEC
  4528                           plusw0	equ	0xFEB
  4529                           fsr0h	equ	0xFEA
  4530                           fsr0l	equ	0xFE9
  4531                           wreg	equ	0xFE8
  4532                           indf1	equ	0xFE7
  4533                           postinc1	equ	0xFE6
  4534                           postdec1	equ	0xFE5
  4535                           preinc1	equ	0xFE4
  4536                           plusw1	equ	0xFE3
  4537                           fsr1h	equ	0xFE2
  4538                           fsr1l	equ	0xFE1
  4539                           bsr	equ	0xFE0
  4540                           indf2	equ	0xFDF
  4541                           postinc2	equ	0xFDE
  4542                           postdec2	equ	0xFDD
  4543                           preinc2	equ	0xFDC
  4544                           plusw2	equ	0xFDB
  4545                           fsr2h	equ	0xFDA
  4546                           fsr2l	equ	0xFD9
  4547                           status	equ	0xFD8


Data Sizes:
    Strings     350
    Constant    23
    Data        66
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    107     115
    BANK0           128     21     122
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[10]), STR_32(CODE[14]), STR_31(CODE[11]), STR_30(CODE[12]), 
		 -> STR_29(CODE[10]), STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[12]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[16]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[11]), STR_16(CODE[13]), STR_15(CODE[15]), STR_14(CODE[11]), 
		 -> STR_13(CODE[15]), STR_12(CODE[12]), STR_11(CODE[15]), STR_10(CODE[13]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[12]), STR_6(CODE[10]), 
		 -> STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[9]), 
		 -> STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S793_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[10]), STR_32(CODE[14]), STR_31(CODE[11]), STR_30(CODE[12]), 
		 -> STR_29(CODE[10]), STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[12]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[16]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[11]), STR_16(CODE[13]), STR_15(CODE[15]), STR_14(CODE[11]), 
		 -> STR_13(CODE[15]), STR_12(CODE[12]), STR_11(CODE[15]), STR_10(CODE[13]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[12]), STR_6(CODE[10]), 
		 -> STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[9]), 
		 -> STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[10]), STR_32(CODE[14]), STR_31(CODE[11]), STR_30(CODE[12]), 
		 -> STR_29(CODE[10]), STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[12]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[16]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[11]), STR_16(CODE[13]), STR_15(CODE[15]), STR_14(CODE[11]), 
		 -> STR_13(CODE[15]), STR_12(CODE[12]), STR_11(CODE[15]), STR_10(CODE[13]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[12]), STR_6(CODE[10]), 
		 -> STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[9]), 
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   17522
                                              4 BANK0     17    17      0
                            ___awmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   15716
                                            103 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12659
                                             95 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   12177
                                             78 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6083
                                             42 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4096
                                             42 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3817
                                             31 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1602
                                             24 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1102
                                             15 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     158
                                             14 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                             15 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     158
                                             14 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0     127
                                             13 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      65
                                             12 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      34
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _interruptHandler                                   11    11      0     113
                                              0 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     15      7A       5       95.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6B      73       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      ED      34        0.0%
DATA                 0      0      ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb  2 21:38:47 2019

              __CFG_CPD$ON 000000                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000                        l170 0E04                        l190 06F2  
                      l188 06EA                        l901 113A               __CFG_CPB$OFF 000000  
                      _abs 1112                        _pad 0DD6               ___awmod@sign 0011  
                      wreg 000FE8               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     ?_abs 001E                       l2401 0B1A                       l2403 0B2E  
                     l2421 0BC6                       l2413 0B8A                       l2343 10FA  
                     l2329 0EF4                       l2417 0BA0                       l2441 0C52  
                     l2433 0C14                       l2339 10E4                       l2347 114E  
                     l2363 0DFC                       l2443 0C66                       l2349 1152  
                     l2373 0E52                       l2365 0E0E                       l2453 0CC4  
                     l2437 0C38                       l2533 0890                       l2509 0814  
                     l2359 0DEE                       l2369 0E26                       l2465 1016  
                     l2457 0CEA                       l2449 0CAE                       l2529 0878  
                     l2481 06CE                       l2553 095C                       l2721 01D2  
                     l2467 1022                       l2395 0AF4                       l2563 0A0E  
                     l2389 0ACC                       l2573 0A54                       l2901 0628  
                     l1951 0E80                       l2495 070C                       l2807 03B2  
                     l1961 0EA2                       l2569 0A4A                       l2905 0638  
                     l1971 0EC4                       l1955 0E8C                       l2499 071C  
                     l2579 0A6C                       l2595 0FC4                       l2915 0662  
                     l2819 03F8                       l2675 008E                       l2597 0FE8  
                     l2765 02D8                       l2749 0284                       ?_pad 0020  
                     l1975 0ED2                       l1967 0EBA                       l1959 0E9A  
                     l2855 0506                       l2863 052E                       l2839 048C  
                     l2767 02E4                       l2881 05B6                       l2857 0512  
                     l2787 0348                       l2879 05AA                       l2887 05D2  
                     l2897 0612                       STR_1 FFF6                       STR_2 FFED  
                     STR_3 FF46                       STR_4 FEA0                       STR_5 FED0  
                     STR_6 FFBE                       STR_7 FF85                       STR_8 FFD2  
                     STR_9 FF9D                       u2000 0844                       u2001 0842  
                     u2010 0852                       u2020 0856                       u2040 0862  
                     u1330 0EA6                       _LATD 000F8C                       u2090 0990  
                     u2407 010E                       u2417 0130                       u1810 0B32  
                     u2507 0368                       u2427 0162                       u2517 0416  
                     u2437 0188                       u1670 0EEC                       u1910 06A0  
                     u1655 1194                       u2607 117C                       u2527 04AA  
                     u2447 01AA                       u2367 0054                       u1656 1196  
                     u1760 1120                       u1920 06A2                       u2617 1186  
                     u2537 054E                       u2457 01E8                       u2377 00A4  
                     u1690 0F34                       u2547 061E                       u2467 021C  
                     u2387 00C6                       u2557 066E                       u2477 024A  
                     u2397 00F2                       u1870 0C6A                       u1950 06E0  
                     u2567 0F4E                       u1791 0AFA                       u2487 02A2  
                     u2577 0F66                       u2497 0304                       u1970 0706  
                     u2587 0F78                       u1980 0822                       u2597 0F9A  
                     abs@a 001E                       _dbuf 00C5                       _ctoa 1004  
                     _main 0012                       _dtoa 0678   __end_of_interruptHandler 0DD6  
                     _keys FE89                       _prec 0070                       _time 00C0  
                     _nout 006C                       pad@i 0027                       pad@p 0024  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 0029                       fsr2l 000FD9  
                     btemp 0074                       start 000E              __CFG_IESO$OFF 000000  
            __CFG_MCLRE$ON 000000               ___param_bank 000000                      ??_abs 0020  
                    ??_pad 0026            __end_of___aodiv 0BE8                      ?_ctoa 002B  
                    ?_main 0001                      ?_dtoa 002B            __end_of___aomod 0D0C  
                    STR_10 FF60                      STR_11 FF0C                      STR_12 FF6D  
                    STR_20 FEB1                      STR_21 FF91                      STR_13 FEDF  
                    STR_30 FF79                      STR_14 FFA8                      STR_22 FEC1  
                    STR_31 FF2D                      STR_23 FF79                      STR_15 FEFD  
                    STR_16 FF53                      STR_32 FF2A                      STR_24 FEEE  
                    STR_33 FFC8                      STR_25 FFC8                      STR_17 FFB3  
                    STR_26 FF79                      STR_18 FFDB                      STR_19 FFE4  
                    STR_27 FF38                      STR_28 FF1B            __end_of___awmod 0EDC  
                    STR_29 FFC8               vfpfcnvrt@fmt 0051                      _PORTB 000F81  
                    _TRISD 000F95              __CFG_PWRT$OFF 000000               main@miniTick 00ED  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000            __end_of_lcdInst 1200             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
             main@keypress 00F3             __CFG_EBTR3$OFF 000000                      _State 00A8  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
                    _balls 00BC            __end_of_initLCD 0FB2             __CFG_EBTRB$OFF 000000  
                    _flags 0072              _BallDispensed 0080                      _fputc 0EDC  
                    _fputs 10DA                      pad@fp 0020                      _width 006E  
                    ctoa@c 002D                      _putch 11E8                      _start 00C2  
                    ctoa@w 002E                      dtoa@d 002D                      dtoa@i 004D  
                    dtoa@n 0045                      dtoa@p 003F                      dtoa@s 0043  
                    dtoa@w 0041                      tablat 000FF5            send_nibble@data 000D  
          __end_of_pulse_e 1198                      ttemp5 0075                      ttemp6 0078  
                    ttemp7 007C                      status 000FD8                      wtemp8 0075  
           __CFG_PBADEN$ON 000000         main@number_pressed 00EF            __initialization 1052  
             __end_of_ctoa 1052               __end_of_main 0678               __end_of_dtoa 08BA  
             __end_of_keys FE9A                     ??_ctoa 002E                     ??_main 00E9  
                   ??_dtoa 0035              __activetblptr 000002                     _ADCON1 000FC1  
             ?_send_nibble 0001                     ?_fputc 0010                     ?_fputs 0019  
                   ?_putch 0001                     _INT1IE 007F83                     _INT1IF 007F80  
                   i2l2301 0DAC                     i2l2291 0D68                     i2l2293 0D72  
                   i2l2285 0D4A                     i2l2299 0DA8              main@miniClear 00F1  
            main@miniState 00F4             __CFG_XINST$OFF 000000               vfprintf@cfmt 0066  
                ??___aodiv 001C                  ??___aomod 001C             __CFG_STVREN$ON 000000  
                ??___awmod 0010                     clear_0 1078                     clear_1 1084  
          ___awmod@divisor 000E            ___awmod@counter 0010                  ??_lcdInst 000F  
                   _printf 1198                     pad@buf 0022                     ctoa@fp 002B  
                   dtoa@fp 002B                     _strlen 1144                  ??_initLCD 0010  
                   fputc@c 0010                     fputs@c 001D                     fputs@i 001E  
                   fputs@s 0019               __mediumconst FE88                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8           __end_of_vfprintf 1004  
                ??_pulse_e 000C      pulse_e@interruptState 000C                 __accesstop 0080  
  __end_of__initialization 108A              ___rparam_used 000001             __pcstackCOMRAM 0001  
             __pidataBANK0 1098              __end_of_fputc 0F48              __end_of_fputs 1112  
            __end_of_putch 11F4            _key_was_pressed 00C4                    ??_fputc 0014  
                  ??_fputs 001D                    ??_putch 000F                 __pbssBANK0 00C2  
        ?_interruptHandler 0001         ??_interruptHandler 0001         __size_of_send_byte 0012  
                  ?_printf 0068                    ?_strlen 000C         __size_of_vfpfcnvrt 01E6  
     __size_of_send_nibble 0016           _DistanceCanister 0094                    __Hparam 0000  
                  __Lparam 0000                    ___aodiv 0AA0                    ___aomod 0BE8  
                  ___awmod 0E6C                  ?_vfprintf 0060   interruptHandler@keypress 000B  
                  __pcinit 1052                    __ramtop 1000                    _lcdInst 11F4  
                  __ptext0 0012                    __ptext1 1198                    __ptext2 0FB2  
                  __ptext3 08BA                    __ptext4 0678                    __ptext5 1112  
                  __ptext6 0BE8                    __ptext7 0AA0                    __ptext8 1004  
                  __ptext9 0DD6            __size_of_printf 0028            __size_of_strlen 002A  
                  _initLCD 0F48               __size_of_abs 0032               __size_of_pad 0096  
         ___awmod@dividend 000C                    _pulse_e 116E             __pintcode_body 0D0C  
     end_of_initialization 108A      __end_of_LCD_SIZE_HORZ FEA0          __end_of_send_byte 11E8  
    __end_of_LCD_SIZE_VERT FE9F                    fputc@fp 0012              __Lmediumconst FE88  
                  int_func 0D0C                    fputs@fp 001B          __end_of_vfpfcnvrt 0AA0  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_vfprintf 0066  
                  strlen@a 000E                    strlen@s 000C              send_byte@data 000E  
              vfpfcnvrt@ap 0053                vfpfcnvrt@fp 004F                vfpfcnvrt@ll 0057  
           __end_of_printf 11C0             __end_of_strlen 116E        start_initialization 1052  
              __end_of_abs 1144                __end_of_pad 0E6C          interruptHandler@i 0009  
              vfprintf@fmt 0062                __pdataBANK0 0080           __CFG_LPT1OSC$OFF 000000  
                 ??_printf 006C  __size_of_interruptHandler 0DCE                   ??_strlen 000E  
              __pbssCOMRAM 006C              __pcstackBANK0 00E5           ___aodiv@dividend 000C  
        __CFG_CCP2MX$PORTC 000000                  __pintcode 0008              __pmediumconst FE88  
                 ?___aodiv 000C                   ?___aomod 000C           ___aodiv@quotient 001E  
                 ?___awmod 000C                   ?_lcdInst 0001          __size_of_vfprintf 0052  
                 ?_initLCD 0001              ??_send_nibble 000D                   ?_pulse_e 0001  
           __size_of_fputc 006C             __size_of_fputs 0038             __size_of_putch 000C  
                 _LATDbits 000F8C                  _send_byte 11D6             _LCD_LINE1_ADDR FE9D  
           _LCD_LINE2_ADDR FE9C             _LCD_LINE3_ADDR FE9B             _LCD_LINE4_ADDR FE9A  
                 i2u164_40 0DC2           __CFG_WDTPS$32768 000000                  _vfpfcnvrt 08BA  
                main@clear 00F6                   _Canister 00BE                  main@state 00F8  
               vfpfcnvrt@c 005F                  copy_data0 1066     __end_of_LCD_LINE1_ADDR FE9E  
   __end_of_LCD_LINE2_ADDR FE9D     __end_of_LCD_LINE3_ADDR FE9C     __end_of_LCD_LINE4_ADDR FE9B  
      __end_of_send_nibble 11D6                 ?_send_byte 0001                   __Hrparam 0000  
               vfprintf@ap 0064                   __Lrparam 0000                 vfprintf@fp 0060  
       __CFG_BOREN$SBORDIS 000000           __size_of___aodiv 0148           __size_of___aomod 0124  
         __size_of___awmod 0070                 ?_vfpfcnvrt 004F            ___aodiv@divisor 0014  
         _interruptHandler 0008            ___aodiv@counter 001C           __size_of_lcdInst 000C  
         __size_of_initLCD 006A                   _dtoa$332 003D                   __ptext10 1144  
                 __ptext11 10DA                   __ptext12 0EDC                   __ptext13 11E8  
                 __ptext14 0F48                   __ptext15 11F4                   __ptext16 11D6  
                 __ptext17 11C0                   __ptext18 116E                   __ptext19 0E6C  
         __size_of_pulse_e 002A              __size_of_ctoa 004E              __size_of_main 0666  
            __size_of_dtoa 0242                   _exit_key 00C3                   int$flags 0074  
                 _vfprintf 0FB2                  printf@fmt 0068                   main@tick 00EB  
         ___aomod@dividend 000C                  putch@data 000F                 _INTCONbits 000FF2  
              _send_nibble 11C0                   intlevel2 0000              _LCD_SIZE_HORZ FE9F  
            _LCD_SIZE_VERT FE9E                ??_send_byte 000E                   printf@ap 00E7  
          ___aomod@divisor 0014                ??_vfpfcnvrt 0055                lcdInst@data 000F  
          ___aomod@counter 001C               ___aodiv@sign 001D               ___aomod@sign 001D  
