

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb  6 12:17:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataBANK0
    75  0010A4                     __pidataBANK0:
    76                           	opt callstack 0
    77                           
    78                           ;initializer for _BallDispensed
    79  0010A4  0001               	dw	1
    80  0010A6  0001               	dw	1
    81  0010A8  0001               	dw	1
    82  0010AA  0000               	dw	0
    83  0010AC  0000               	dw	0
    84  0010AE  0001               	dw	1
    85  0010B0  0001               	dw	1
    86  0010B2  0000               	dw	0
    87  0010B4  FFFF               	dw	65535
    88  0010B6  FFFF               	dw	65535
    89                           
    90                           ;initializer for _DistanceCanister
    91  0010B8  0014               	dw	20
    92  0010BA  001E               	dw	30
    93  0010BC  0028               	dw	40
    94  0010BE  003B               	dw	59
    95  0010C0  007B               	dw	123
    96  0010C2  00D4               	dw	212
    97  0010C4  014C               	dw	332
    98  0010C6  0190               	dw	400
    99  0010C8  FFFF               	dw	65535
   100  0010CA  FFFF               	dw	65535
   101                           
   102                           ;initializer for _State
   103  0010CC  0001               	dw	1
   104  0010CE  0001               	dw	1
   105  0010D0  0001               	dw	1
   106  0010D2  0000               	dw	0
   107  0010D4  0000               	dw	0
   108  0010D6  0001               	dw	1
   109  0010D8  0001               	dw	1
   110  0010DA  0000               	dw	0
   111  0010DC  FFFF               	dw	65535
   112  0010DE  FFFF               	dw	65535
   113                           
   114                           ;initializer for _balls
   115  0010E0  0005               	dw	5
   116                           
   117                           ;initializer for _Canister
   118  0010E2  0008               	dw	8
   119                           
   120                           ;initializer for _time
   121  0010E4  001E               	dw	30
   122                           
   123                           	psect	mediumconst
   124  00FE88                     __pmediumconst:
   125                           	opt callstack 0
   126  00FE88  00                 	db	0
   127  00FE89                     _keys:
   128                           	opt callstack 0
   129  00FE89  31                 	db	49
   130  00FE8A  32                 	db	50
   131  00FE8B  33                 	db	51
   132  00FE8C  41                 	db	65
   133  00FE8D  34                 	db	52
   134  00FE8E  35                 	db	53
   135  00FE8F  36                 	db	54
   136  00FE90  42                 	db	66
   137  00FE91  37                 	db	55
   138  00FE92  38                 	db	56
   139  00FE93  39                 	db	57
   140  00FE94  43                 	db	67
   141  00FE95  2A                 	db	42
   142  00FE96  30                 	db	48
   143  00FE97  23                 	db	35
   144  00FE98  44                 	db	68
   145  00FE99  00                 	db	0
   146  00FE9A                     __end_of_keys:
   147                           	opt callstack 0
   148  00FE9A  50                 	db	80
   149  00FE9B                     __end_of_LCD_LINE4_ADDR:
   150                           	opt callstack 0
   151  00FE9B  10                 	db	16
   152  00FE9C                     __end_of_LCD_LINE3_ADDR:
   153                           	opt callstack 0
   154  00FE9C  40                 	db	64
   155  00FE9D                     __end_of_LCD_LINE2_ADDR:
   156                           	opt callstack 0
   157  00FE9D  00                 	db	0
   158  00FE9E                     __end_of_LCD_LINE1_ADDR:
   159                           	opt callstack 0
   160  00FE9E                     _LCD_SIZE_VERT:
   161                           	opt callstack 0
   162  00FE9E  04                 	db	4
   163  00FE9F                     __end_of_LCD_SIZE_VERT:
   164                           	opt callstack 0
   165  00FE9F                     _LCD_SIZE_HORZ:
   166                           	opt callstack 0
   167  00FE9F  10                 	db	16
   168  00FEA0                     __end_of_LCD_SIZE_HORZ:
   169                           	opt callstack 0
   170  0000                     _PORTB	set	3969
   171  0000                     _ADCON1	set	4033
   172  0000                     _TRISD	set	3989
   173  0000                     _LATD	set	3980
   174  0000                     _LATDbits	set	3980
   175  0000                     _INTCONbits	set	4082
   176  0000                     _INT1IF	set	32640
   177  0000                     _INT1IE	set	32643
   178  00FEA0                     STR_4:
   179  00FEA0  49                 	db	73	;'I'
   180  00FEA1  74                 	db	116	;'t'
   181  00FEA2  27                 	db	39
   182  00FEA3  73                 	db	115	;'s'
   183  00FEA4  20                 	db	32
   184  00FEA5  79                 	db	121	;'y'
   185  00FEA6  61                 	db	97	;'a'
   186  00FEA7  20                 	db	32
   187  00FEA8  62                 	db	98	;'b'
   188  00FEA9  6F                 	db	111	;'o'
   189  00FEAA  79                 	db	121	;'y'
   190  00FEAB  20                 	db	32
   191  00FEAC  41                 	db	65	;'A'
   192  00FEAD  6C                 	db	108	;'l'
   193  00FEAE  69                 	db	105	;'i'
   194  00FEAF  21                 	db	33
   195  00FEB0  00                 	db	0
   196  00FEB1                     STR_20:
   197  00FEB1  49                 	db	73	;'I'
   198  00FEB2  6E                 	db	110	;'n'
   199  00FEB3  64                 	db	100	;'d'
   200  00FEB4  69                 	db	105	;'i'
   201  00FEB5  76                 	db	118	;'v'
   202  00FEB6  69                 	db	105	;'i'
   203  00FEB7  64                 	db	100	;'d'
   204  00FEB8  75                 	db	117	;'u'
   205  00FEB9  61                 	db	97	;'a'
   206  00FEBA  6C                 	db	108	;'l'
   207  00FEBB  20                 	db	32
   208  00FEBC  49                 	db	73	;'I'
   209  00FEBD  6E                 	db	110	;'n'
   210  00FEBE  66                 	db	102	;'f'
   211  00FEBF  6F                 	db	111	;'o'
   212  00FEC0  00                 	db	0
   213  00FEC1                     STR_22:
   214  00FEC1  50                 	db	80	;'P'
   215  00FEC2  72                 	db	114	;'r'
   216  00FEC3  65                 	db	101	;'e'
   217  00FEC4  73                 	db	115	;'s'
   218  00FEC5  73                 	db	115	;'s'
   219  00FEC6  20                 	db	32
   220  00FEC7  30                 	db	48	;'0'
   221  00FEC8  20                 	db	32
   222  00FEC9  74                 	db	116	;'t'
   223  00FECA  6F                 	db	111	;'o'
   224  00FECB  20                 	db	32
   225  00FECC  25                 	db	37
   226  00FECD  64                 	db	100	;'d'
   227  00FECE  20                 	db	32
   228  00FECF  00                 	db	0
   229  00FED0                     STR_5:
   230  00FED0  48                 	db	72	;'H'
   231  00FED1  65                 	db	101	;'e'
   232  00FED2  20                 	db	32
   233  00FED3  67                 	db	103	;'g'
   234  00FED4  65                 	db	101	;'e'
   235  00FED5  74                 	db	116	;'t'
   236  00FED6  74                 	db	116	;'t'
   237  00FED7  69                 	db	105	;'i'
   238  00FED8  6E                 	db	110	;'n'
   239  00FED9  20                 	db	32
   240  00FEDA  68                 	db	104	;'h'
   241  00FEDB  6F                 	db	111	;'o'
   242  00FEDC  74                 	db	116	;'t'
   243  00FEDD  20                 	db	32
   244  00FEDE  00                 	db	0
   245  00FEDF                     STR_13:
   246  00FEDF  4F                 	db	79	;'O'
   247  00FEE0  70                 	db	112	;'p'
   248  00FEE1  65                 	db	101	;'e'
   249  00FEE2  72                 	db	114	;'r'
   250  00FEE3  61                 	db	97	;'a'
   251  00FEE4  74                 	db	116	;'t'
   252  00FEE5  69                 	db	105	;'i'
   253  00FEE6  6F                 	db	111	;'o'
   254  00FEE7  6E                 	db	110	;'n'
   255  00FEE8  20                 	db	32
   256  00FEE9  54                 	db	84	;'T'
   257  00FEEA  69                 	db	105	;'i'
   258  00FEEB  6D                 	db	109	;'m'
   259  00FEEC  65                 	db	101	;'e'
   260  00FEED  00                 	db	0
   261  00FEEE                     STR_24:
   262  00FEEE  44                 	db	68	;'D'
   263  00FEEF  69                 	db	105	;'i'
   264  00FEF0  73                 	db	115	;'s'
   265  00FEF1  74                 	db	116	;'t'
   266  00FEF2  61                 	db	97	;'a'
   267  00FEF3  6E                 	db	110	;'n'
   268  00FEF4  63                 	db	99	;'c'
   269  00FEF5  65                 	db	101	;'e'
   270  00FEF6  20                 	db	32
   271  00FEF7  25                 	db	37
   272  00FEF8  64                 	db	100	;'d'
   273  00FEF9  20                 	db	32
   274  00FEFA  63                 	db	99	;'c'
   275  00FEFB  6D                 	db	109	;'m'
   276  00FEFC  00                 	db	0
   277  00FEFD                     STR_15:
   278  00FEFD  23                 	db	35
   279  00FEFE  20                 	db	32
   280  00FEFF  6F                 	db	111	;'o'
   281  00FF00  66                 	db	102	;'f'
   282  00FF01  20                 	db	32
   283  00FF02  43                 	db	67	;'C'
   284  00FF03  61                 	db	97	;'a'
   285  00FF04  6E                 	db	110	;'n'
   286  00FF05  69                 	db	105	;'i'
   287  00FF06  73                 	db	115	;'s'
   288  00FF07  74                 	db	116	;'t'
   289  00FF08  65                 	db	101	;'e'
   290  00FF09  72                 	db	114	;'r'
   291  00FF0A  73                 	db	115	;'s'
   292  00FF0B  00                 	db	0
   293  00FF0C                     STR_11:
   294  00FF0C  43                 	db	67	;'C'
   295  00FF0D  61                 	db	97	;'a'
   296  00FF0E  6E                 	db	110	;'n'
   297  00FF0F  69                 	db	105	;'i'
   298  00FF10  73                 	db	115	;'s'
   299  00FF11  74                 	db	116	;'t'
   300  00FF12  65                 	db	101	;'e'
   301  00FF13  72                 	db	114	;'r'
   302  00FF14  20                 	db	32
   303  00FF15  49                 	db	73	;'I'
   304  00FF16  6E                 	db	110	;'n'
   305  00FF17  64                 	db	100	;'d'
   306  00FF18  65                 	db	101	;'e'
   307  00FF19  78                 	db	120	;'x'
   308  00FF1A  00                 	db	0
   309  00FF1B                     STR_28:
   310  00FF1B  43                 	db	67	;'C'
   311  00FF1C  61                 	db	97	;'a'
   312  00FF1D  6E                 	db	110	;'n'
   313  00FF1E  69                 	db	105	;'i'
   314  00FF1F  73                 	db	115	;'s'
   315  00FF20  74                 	db	116	;'t'
   316  00FF21  65                 	db	101	;'e'
   317  00FF22  72                 	db	114	;'r'
   318  00FF23  20                 	db	32
   319  00FF24  45                 	db	69	;'E'
   320  00FF25  6D                 	db	109	;'m'
   321  00FF26  70                 	db	112	;'p'
   322  00FF27  74                 	db	116	;'t'
   323  00FF28  79                 	db	121	;'y'
   324  00FF29  00                 	db	0
   325  00FF2A                     STR_32:
   326  00FF2A  4E                 	db	78	;'N'
   327  00FF2B  6F                 	db	111	;'o'
   328  00FF2C  20                 	db	32
   329  00FF2D  42                 	db	66	;'B'
   330  00FF2E  61                 	db	97	;'a'
   331  00FF2F  6C                 	db	108	;'l'
   332  00FF30  6C                 	db	108	;'l'
   333  00FF31  20                 	db	32
   334  00FF32  41                 	db	65	;'A'
   335  00FF33  64                 	db	100	;'d'
   336  00FF34  64                 	db	100	;'d'
   337  00FF35  65                 	db	101	;'e'
   338  00FF36  64                 	db	100	;'d'
   339  00FF37  00                 	db	0
   340  00FF38                     STR_27:
   341  00FF38  43                 	db	67	;'C'
   342  00FF39  61                 	db	97	;'a'
   343  00FF3A  6E                 	db	110	;'n'
   344  00FF3B  69                 	db	105	;'i'
   345  00FF3C  73                 	db	115	;'s'
   346  00FF3D  74                 	db	116	;'t'
   347  00FF3E  65                 	db	101	;'e'
   348  00FF3F  72                 	db	114	;'r'
   349  00FF40  20                 	db	32
   350  00FF41  46                 	db	70	;'F'
   351  00FF42  75                 	db	117	;'u'
   352  00FF43  6C                 	db	108	;'l'
   353  00FF44  6C                 	db	108	;'l'
   354  00FF45  00                 	db	0
   355  00FF46                     STR_3:
   356  00FF46  41                 	db	65	;'A'
   357  00FF47  20                 	db	32
   358  00FF48  66                 	db	102	;'f'
   359  00FF49  6F                 	db	111	;'o'
   360  00FF4A  72                 	db	114	;'r'
   361  00FF4B  20                 	db	32
   362  00FF4C  41                 	db	65	;'A'
   363  00FF4D  6C                 	db	108	;'l'
   364  00FF4E  69                 	db	105	;'i'
   365  00FF4F  20                 	db	32
   366  00FF50  3B                 	db	59	;';'
   367  00FF51  29                 	db	41
   368  00FF52  00                 	db	0
   369  00FF53                     STR_16:
   370  00FF53  25                 	db	37
   371  00FF54  64                 	db	100	;'d'
   372  00FF55  20                 	db	32
   373  00FF56  43                 	db	67	;'C'
   374  00FF57  61                 	db	97	;'a'
   375  00FF58  6E                 	db	110	;'n'
   376  00FF59  69                 	db	105	;'i'
   377  00FF5A  73                 	db	115	;'s'
   378  00FF5B  74                 	db	116	;'t'
   379  00FF5C  65                 	db	101	;'e'
   380  00FF5D  72                 	db	114	;'r'
   381  00FF5E  73                 	db	115	;'s'
   382  00FF5F  00                 	db	0
   383  00FF60                     STR_10:
   384  00FF60  76                 	db	118	;'v'
   385  00FF61  69                 	db	105	;'i'
   386  00FF62  65                 	db	101	;'e'
   387  00FF63  77                 	db	119	;'w'
   388  00FF64  20                 	db	32
   389  00FF65  72                 	db	114	;'r'
   390  00FF66  65                 	db	101	;'e'
   391  00FF67  73                 	db	115	;'s'
   392  00FF68  75                 	db	117	;'u'
   393  00FF69  6C                 	db	108	;'l'
   394  00FF6A  74                 	db	116	;'t'
   395  00FF6B  73                 	db	115	;'s'
   396  00FF6C  00                 	db	0
   397  00FF6D                     STR_12:
   398  00FF6D  73                 	db	115	;'s'
   399  00FF6E  74                 	db	116	;'t'
   400  00FF6F  61                 	db	97	;'a'
   401  00FF70  72                 	db	114	;'r'
   402  00FF71  74                 	db	116	;'t'
   403  00FF72  73                 	db	115	;'s'
   404  00FF73  20                 	db	32
   405  00FF74  61                 	db	97	;'a'
   406  00FF75  74                 	db	116	;'t'
   407  00FF76  20                 	db	32
   408  00FF77  30                 	db	48	;'0'
   409  00FF78  00                 	db	0
   410  00FF79                     STR_23:
   411  00FF79  43                 	db	67	;'C'
   412  00FF7A  61                 	db	97	;'a'
   413  00FF7B  6E                 	db	110	;'n'
   414  00FF7C  73                 	db	115	;'s'
   415  00FF7D  69                 	db	105	;'i'
   416  00FF7E  74                 	db	116	;'t'
   417  00FF7F  65                 	db	101	;'e'
   418  00FF80  72                 	db	114	;'r'
   419  00FF81  20                 	db	32
   420  00FF82  25                 	db	37
   421  00FF83  63                 	db	99	;'c'
   422  00FF84  00                 	db	0
   423  00FF85                     STR_7:
   424  00FF85  41                 	db	65	;'A'
   425  00FF86  6C                 	db	108	;'l'
   426  00FF87  6D                 	db	109	;'m'
   427  00FF88  6F                 	db	111	;'o'
   428  00FF89  73                 	db	115	;'s'
   429  00FF8A  74                 	db	116	;'t'
   430  00FF8B  20                 	db	32
   431  00FF8C  64                 	db	100	;'d'
   432  00FF8D  6F                 	db	111	;'o'
   433  00FF8E  6E                 	db	110	;'n'
   434  00FF8F  65                 	db	101	;'e'
   435  00FF90  00                 	db	0
   436  00FF91                     STR_21:
   437  00FF91  6F                 	db	111	;'o'
   438  00FF92  66                 	db	102	;'f'
   439  00FF93  20                 	db	32
   440  00FF94  43                 	db	67	;'C'
   441  00FF95  61                 	db	97	;'a'
   442  00FF96  6E                 	db	110	;'n'
   443  00FF97  69                 	db	105	;'i'
   444  00FF98  73                 	db	115	;'s'
   445  00FF99  74                 	db	116	;'t'
   446  00FF9A  65                 	db	101	;'e'
   447  00FF9B  72                 	db	114	;'r'
   448  00FF9C  00                 	db	0
   449  00FF9D                     STR_9:
   450  00FF9D  50                 	db	80	;'P'
   451  00FF9E  72                 	db	114	;'r'
   452  00FF9F  65                 	db	101	;'e'
   453  00FFA0  73                 	db	115	;'s'
   454  00FFA1  73                 	db	115	;'s'
   455  00FFA2  20                 	db	32
   456  00FFA3  41                 	db	65	;'A'
   457  00FFA4  20                 	db	32
   458  00FFA5  74                 	db	116	;'t'
   459  00FFA6  6F                 	db	111	;'o'
   460  00FFA7  00                 	db	0
   461  00FFA8                     STR_14:
   462  00FFA8  25                 	db	37
   463  00FFA9  64                 	db	100	;'d'
   464  00FFAA  20                 	db	32
   465  00FFAB  73                 	db	115	;'s'
   466  00FFAC  65                 	db	101	;'e'
   467  00FFAD  63                 	db	99	;'c'
   468  00FFAE  6F                 	db	111	;'o'
   469  00FFAF  6E                 	db	110	;'n'
   470  00FFB0  64                 	db	100	;'d'
   471  00FFB1  73                 	db	115	;'s'
   472  00FFB2  00                 	db	0
   473  00FFB3                     STR_17:
   474  00FFB3  23                 	db	35
   475  00FFB4  20                 	db	32
   476  00FFB5  6F                 	db	111	;'o'
   477  00FFB6  66                 	db	102	;'f'
   478  00FFB7  20                 	db	32
   479  00FFB8  42                 	db	66	;'B'
   480  00FFB9  61                 	db	97	;'a'
   481  00FFBA  6C                 	db	108	;'l'
   482  00FFBB  6C                 	db	108	;'l'
   483  00FFBC  73                 	db	115	;'s'
   484  00FFBD  00                 	db	0
   485  00FFBE                     STR_6:
   486  00FFBE  48                 	db	72	;'H'
   487  00FFBF  69                 	db	105	;'i'
   488  00FFC0  20                 	db	32
   489  00FFC1  43                 	db	67	;'C'
   490  00FFC2  75                 	db	117	;'u'
   491  00FFC3  6C                 	db	108	;'l'
   492  00FFC4  6C                 	db	108	;'l'
   493  00FFC5  20                 	db	32
   494  00FFC6  21                 	db	33
   495  00FFC7  00                 	db	0
   496  00FFC8                     STR_25:
   497  00FFC8  2A                 	db	42
   498  00FFC9  20                 	db	32
   499  00FFCA  74                 	db	116	;'t'
   500  00FFCB  6F                 	db	111	;'o'
   501  00FFCC  20                 	db	32
   502  00FFCD  65                 	db	101	;'e'
   503  00FFCE  78                 	db	120	;'x'
   504  00FFCF  69                 	db	105	;'i'
   505  00FFD0  74                 	db	116	;'t'
   506  00FFD1  00                 	db	0
   507  00FFD2                     STR_8:
   508  00FFD2  41                 	db	65	;'A'
   509  00FFD3  4E                 	db	78	;'N'
   510  00FFD4  44                 	db	68	;'D'
   511  00FFD5  20                 	db	32
   512  00FFD6  44                 	db	68	;'D'
   513  00FFD7  4F                 	db	79	;'O'
   514  00FFD8  4E                 	db	78	;'N'
   515  00FFD9  45                 	db	69	;'E'
   516  00FFDA  00                 	db	0
   517  00FFDB                     STR_18:
   518  00FFDB  73                 	db	115	;'s'
   519  00FFDC  75                 	db	117	;'u'
   520  00FFDD  70                 	db	112	;'p'
   521  00FFDE  70                 	db	112	;'p'
   522  00FFDF  6C                 	db	108	;'l'
   523  00FFE0  69                 	db	105	;'i'
   524  00FFE1  65                 	db	101	;'e'
   525  00FFE2  64                 	db	100	;'d'
   526  00FFE3  00                 	db	0
   527  00FFE4                     STR_19:
   528  00FFE4  25                 	db	37
   529  00FFE5  64                 	db	100	;'d'
   530  00FFE6  20                 	db	32
   531  00FFE7  62                 	db	98	;'b'
   532  00FFE8  61                 	db	97	;'a'
   533  00FFE9  6C                 	db	108	;'l'
   534  00FFEA  6C                 	db	108	;'l'
   535  00FFEB  73                 	db	115	;'s'
   536  00FFEC  00                 	db	0
   537  00FFED                     STR_2:
   538  00FFED  74                 	db	116	;'t'
   539  00FFEE  6F                 	db	111	;'o'
   540  00FFEF  20                 	db	32
   541  00FFF0  73                 	db	115	;'s'
   542  00FFF1  74                 	db	116	;'t'
   543  00FFF2  61                 	db	97	;'a'
   544  00FFF3  72                 	db	114	;'r'
   545  00FFF4  74                 	db	116	;'t'
   546  00FFF5  00                 	db	0
   547  00FFF6                     STR_1:
   548  00FFF6  50                 	db	80	;'P'
   549  00FFF7  72                 	db	114	;'r'
   550  00FFF8  65                 	db	101	;'e'
   551  00FFF9  73                 	db	115	;'s'
   552  00FFFA  73                 	db	115	;'s'
   553  00FFFB  20                 	db	32
   554  00FFFC  41                 	db	65	;'A'
   555  00FFFD  00                 	db	0
   556  0000                     
   557                           ; #config settings
   558  00FFFE  00                 	db	0	; dummy byte at the end
   559  0000                     
   560                           	psect	cinit
   561  00105E                     __pcinit:
   562                           	opt callstack 0
   563  00105E                     start_initialization:
   564                           	opt callstack 0
   565  00105E                     __initialization:
   566                           	opt callstack 0
   567                           
   568                           ; Initialize objects allocated to BANK0 (66 bytes)
   569                           ; load TBLPTR registers with __pidataBANK0
   570  00105E  0EA4               	movlw	low __pidataBANK0
   571  001060  6EF6               	movwf	tblptrl,c
   572  001062  0E10               	movlw	high __pidataBANK0
   573  001064  6EF7               	movwf	tblptrh,c
   574  001066  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   575  001068  6EF8               	movwf	tblptru,c
   576  00106A  EE00  F080         	lfsr	0,__pdataBANK0
   577  00106E  EE10 F042          	lfsr	1,66
   578  001072                     copy_data0:
   579  001072  0009               	tblrd		*+
   580  001074  CFF5 FFEE          	movff	tablat,postinc0
   581  001078  50E5               	movf	postdec1,w,c
   582  00107A  50E1               	movf	fsr1l,w,c
   583  00107C  E1FA               	bnz	copy_data0
   584                           
   585                           ; Clear objects allocated to BANK0 (35 bytes)
   586  00107E  EE00  F0C2         	lfsr	0,__pbssBANK0
   587  001082  0E23               	movlw	35
   588  001084                     clear_0:
   589  001084  6AEE               	clrf	postinc0,c
   590  001086  06E8               	decf	wreg,f,c
   591  001088  E1FD               	bnz	clear_0
   592                           
   593                           ; Clear objects allocated to COMRAM (8 bytes)
   594  00108A  EE00  F06C         	lfsr	0,__pbssCOMRAM
   595  00108E  0E08               	movlw	8
   596  001090                     clear_1:
   597  001090  6AEE               	clrf	postinc0,c
   598  001092  06E8               	decf	wreg,f,c
   599  001094  E1FD               	bnz	clear_1
   600  001096                     end_of_initialization:
   601                           	opt callstack 0
   602  001096                     __end_of__initialization:
   603                           	opt callstack 0
   604  001096  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   605  001098  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   606  00109A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   607  00109C  6EF8               	movwf	tblptru,c
   608  00109E  0100               	movlb	0
   609  0010A0  EF09  F000         	goto	_main	;jump to C main() function
   610                           
   611                           	psect	bssCOMRAM
   612  00006C                     __pbssCOMRAM:
   613                           	opt callstack 0
   614  00006C                     _nout:
   615                           	opt callstack 0
   616  00006C                     	ds	2
   617  00006E                     _width:
   618                           	opt callstack 0
   619  00006E                     	ds	2
   620  000070                     _prec:
   621                           	opt callstack 0
   622  000070                     	ds	2
   623  000072                     _flags:
   624                           	opt callstack 0
   625  000072                     	ds	2
   626                           
   627                           	psect	bssBANK0
   628  0000C2                     __pbssBANK0:
   629                           	opt callstack 0
   630  0000C2                     _start:
   631                           	opt callstack 0
   632  0000C2                     	ds	1
   633  0000C3                     _exit_key:
   634                           	opt callstack 0
   635  0000C3                     	ds	1
   636  0000C4                     _key_was_pressed:
   637                           	opt callstack 0
   638  0000C4                     	ds	1
   639  0000C5                     _dbuf:
   640                           	opt callstack 0
   641  0000C5                     	ds	32
   642                           
   643                           	psect	dataBANK0
   644  000080                     __pdataBANK0:
   645                           	opt callstack 0
   646  000080                     _BallDispensed:
   647                           	opt callstack 0
   648  000080                     	ds	20
   649  000094                     _DistanceCanister:
   650                           	opt callstack 0
   651  000094                     	ds	20
   652  0000A8                     _State:
   653                           	opt callstack 0
   654  0000A8                     	ds	20
   655  0000BC                     _balls:
   656                           	opt callstack 0
   657  0000BC                     	ds	2
   658  0000BE                     _Canister:
   659                           	opt callstack 0
   660  0000BE                     	ds	2
   661  0000C0                     _time:
   662                           	opt callstack 0
   663  0000C0                     	ds	2
   664                           
   665                           	psect	cstackBANK0
   666  0000E5                     __pcstackBANK0:
   667                           	opt callstack 0
   668  0000E5                     	ds	2
   669  0000E7                     printf@ap:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x2
   673  0000E7                     	ds	2
   674  0000E9                     ??_main:
   675                           
   676                           ; 1 bytes @ 0x4
   677  0000E9                     	ds	2
   678  0000EB                     main@tick:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x6
   682  0000EB                     	ds	2
   683  0000ED                     main@miniTick:
   684                           	opt callstack 0
   685                           
   686                           ; 2 bytes @ 0x8
   687  0000ED                     	ds	2
   688  0000EF                     main@number_pressed:
   689                           	opt callstack 0
   690                           
   691                           ; 2 bytes @ 0xA
   692  0000EF                     	ds	2
   693  0000F1                     main@miniClear:
   694                           	opt callstack 0
   695                           
   696                           ; 2 bytes @ 0xC
   697  0000F1                     	ds	2
   698  0000F3                     main@keypress:
   699                           	opt callstack 0
   700                           
   701                           ; 1 bytes @ 0xE
   702  0000F3                     	ds	1
   703  0000F4                     main@miniState:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0xF
   707  0000F4                     	ds	2
   708  0000F6                     main@clear:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x11
   712  0000F6                     	ds	2
   713  0000F8                     main@state:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x13
   717  0000F8                     	ds	2
   718                           
   719                           	psect	cstackCOMRAM
   720  000001                     __pcstackCOMRAM:
   721                           	opt callstack 0
   722  000001                     ??_interruptHandler:
   723                           
   724                           ; 1 bytes @ 0x0
   725  000001                     	ds	8
   726  000009                     interruptHandler@i:
   727                           	opt callstack 0
   728                           
   729                           ; 2 bytes @ 0x8
   730  000009                     	ds	2
   731  00000B                     interruptHandler@keypress:
   732                           	opt callstack 0
   733                           
   734                           ; 1 bytes @ 0xA
   735  00000B                     	ds	1
   736  00000C                     ?_strlen:
   737                           	opt callstack 0
   738  00000C                     ?___awmod:
   739                           	opt callstack 0
   740  00000C                     ?___aodiv:
   741                           	opt callstack 0
   742  00000C                     ?___aomod:
   743                           	opt callstack 0
   744  00000C                     pulse_e@interruptState:
   745                           	opt callstack 0
   746  00000C                     ___awmod@dividend:
   747                           	opt callstack 0
   748  00000C                     strlen@s:
   749                           	opt callstack 0
   750  00000C                     ___aodiv@dividend:
   751                           	opt callstack 0
   752  00000C                     ___aomod@dividend:
   753                           	opt callstack 0
   754                           
   755                           ; 8 bytes @ 0xB
   756  00000C                     	ds	1
   757  00000D                     send_nibble@data:
   758                           	opt callstack 0
   759                           
   760                           ; 1 bytes @ 0xC
   761  00000D                     	ds	1
   762  00000E                     send_byte@data:
   763                           	opt callstack 0
   764  00000E                     ___awmod@divisor:
   765                           	opt callstack 0
   766  00000E                     strlen@a:
   767                           	opt callstack 0
   768                           
   769                           ; 2 bytes @ 0xD
   770  00000E                     	ds	1
   771  00000F                     lcdInst@data:
   772                           	opt callstack 0
   773  00000F                     putch@data:
   774                           	opt callstack 0
   775                           
   776                           ; 1 bytes @ 0xE
   777  00000F                     	ds	1
   778  000010                     ??_initLCD:
   779  000010                     ___awmod@counter:
   780                           	opt callstack 0
   781  000010                     fputc@c:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0xF
   785  000010                     	ds	1
   786  000011                     ___awmod@sign:
   787                           	opt callstack 0
   788                           
   789                           ; 1 bytes @ 0x10
   790  000011                     	ds	1
   791  000012                     fputc@fp:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x11
   795  000012                     	ds	2
   796  000014                     ??_fputc:
   797  000014                     ___aodiv@divisor:
   798                           	opt callstack 0
   799  000014                     ___aomod@divisor:
   800                           	opt callstack 0
   801                           
   802                           ; 8 bytes @ 0x13
   803  000014                     	ds	5
   804  000019                     fputs@s:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x18
   808  000019                     	ds	2
   809  00001B                     fputs@fp:
   810                           	opt callstack 0
   811                           
   812                           ; 2 bytes @ 0x1A
   813  00001B                     	ds	1
   814  00001C                     ___aodiv@counter:
   815                           	opt callstack 0
   816  00001C                     ___aomod@counter:
   817                           	opt callstack 0
   818                           
   819                           ; 1 bytes @ 0x1B
   820  00001C                     	ds	1
   821  00001D                     ___aodiv@sign:
   822                           	opt callstack 0
   823  00001D                     ___aomod@sign:
   824                           	opt callstack 0
   825  00001D                     fputs@c:
   826                           	opt callstack 0
   827                           
   828                           ; 1 bytes @ 0x1C
   829  00001D                     	ds	1
   830  00001E                     ?_abs:
   831                           	opt callstack 0
   832  00001E                     abs@a:
   833                           	opt callstack 0
   834  00001E                     fputs@i:
   835                           	opt callstack 0
   836  00001E                     ___aodiv@quotient:
   837                           	opt callstack 0
   838                           
   839                           ; 8 bytes @ 0x1D
   840  00001E                     	ds	2
   841  000020                     ??_abs:
   842  000020                     ?_pad:
   843                           	opt callstack 0
   844  000020                     pad@fp:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x1F
   848  000020                     	ds	2
   849  000022                     pad@buf:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x21
   853  000022                     	ds	2
   854  000024                     pad@p:
   855                           	opt callstack 0
   856                           
   857                           ; 2 bytes @ 0x23
   858  000024                     	ds	2
   859  000026                     ??_pad:
   860                           
   861                           ; 1 bytes @ 0x25
   862  000026                     	ds	1
   863  000027                     pad@i:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x26
   867  000027                     	ds	2
   868  000029                     pad@w:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x28
   872  000029                     	ds	2
   873  00002B                     ?_ctoa:
   874                           	opt callstack 0
   875  00002B                     ?_dtoa:
   876                           	opt callstack 0
   877  00002B                     ctoa@fp:
   878                           	opt callstack 0
   879  00002B                     dtoa@fp:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x2A
   883  00002B                     	ds	2
   884  00002D                     ctoa@c:
   885                           	opt callstack 0
   886  00002D                     dtoa@d:
   887                           	opt callstack 0
   888                           
   889                           ; 8 bytes @ 0x2C
   890  00002D                     	ds	1
   891  00002E                     ctoa@w:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0x2D
   895  00002E                     	ds	7
   896  000035                     ??_dtoa:
   897                           
   898                           ; 1 bytes @ 0x34
   899  000035                     	ds	8
   900  00003D                     _dtoa$332:
   901                           	opt callstack 0
   902                           
   903                           ; 2 bytes @ 0x3C
   904  00003D                     	ds	2
   905  00003F                     dtoa@p:
   906                           	opt callstack 0
   907                           
   908                           ; 2 bytes @ 0x3E
   909  00003F                     	ds	2
   910  000041                     dtoa@w:
   911                           	opt callstack 0
   912                           
   913                           ; 2 bytes @ 0x40
   914  000041                     	ds	2
   915  000043                     dtoa@s:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x42
   919  000043                     	ds	2
   920  000045                     dtoa@n:
   921                           	opt callstack 0
   922                           
   923                           ; 8 bytes @ 0x44
   924  000045                     	ds	8
   925  00004D                     dtoa@i:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x4C
   929  00004D                     	ds	2
   930  00004F                     ?_vfpfcnvrt:
   931                           	opt callstack 0
   932  00004F                     vfpfcnvrt@fp:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x4E
   936  00004F                     	ds	2
   937  000051                     vfpfcnvrt@fmt:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0x50
   941  000051                     	ds	2
   942  000053                     vfpfcnvrt@ap:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x52
   946  000053                     	ds	2
   947  000055                     ??_vfpfcnvrt:
   948                           
   949                           ; 1 bytes @ 0x54
   950  000055                     	ds	2
   951  000057                     vfpfcnvrt@ll:
   952                           	opt callstack 0
   953                           
   954                           ; 8 bytes @ 0x56
   955  000057                     	ds	8
   956  00005F                     vfpfcnvrt@c:
   957                           	opt callstack 0
   958                           
   959                           ; 1 bytes @ 0x5E
   960  00005F                     	ds	1
   961  000060                     ?_vfprintf:
   962                           	opt callstack 0
   963  000060                     vfprintf@fp:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x5F
   967  000060                     	ds	2
   968  000062                     vfprintf@fmt:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x61
   972  000062                     	ds	2
   973  000064                     vfprintf@ap:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x63
   977  000064                     	ds	2
   978  000066                     vfprintf@cfmt:
   979                           	opt callstack 0
   980                           
   981                           ; 2 bytes @ 0x65
   982  000066                     	ds	2
   983  000068                     ?_printf:
   984                           	opt callstack 0
   985  000068                     printf@fmt:
   986                           	opt callstack 0
   987                           
   988                           ; 2 bytes @ 0x67
   989  000068                     	ds	4
   990  00006C                     
   991                           ; 1 bytes @ 0x6B
   992 ;;
   993 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   994 ;;
   995 ;; *************** function _main *****************
   996 ;; Defined at:
   997 ;;		line 37 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  miniState       2   15[BANK0 ] int 
  1002 ;;  miniClear       2   12[BANK0 ] int 
  1003 ;;  number_press    2   10[BANK0 ] int 
  1004 ;;  miniTick        2    8[BANK0 ] int 
  1005 ;;  keypress        1   14[BANK0 ] unsigned char 
  1006 ;;  state           2   19[BANK0 ] int 
  1007 ;;  clear           2   17[BANK0 ] int 
  1008 ;;  tick            2    6[BANK0 ] int 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;Total ram usage:       17 bytes
  1023 ;; Hardware stack levels required when called:   12
  1024 ;; This function calls:
  1025 ;;		___awmod
  1026 ;;		_initLCD
  1027 ;;		_lcdInst
  1028 ;;		_printf
  1029 ;; This function is called by:
  1030 ;;		Startup code after reset
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text0
  1035  000012                     __ptext0:
  1036                           	opt callstack 0
  1037  000012                     _main:
  1038                           	opt callstack 19
  1039                           
  1040                           ;main.c: 41:     LATD = 0x00;
  1041                           
  1042                           ;incstack = 0
  1043  000012  0E00               	movlw	0
  1044  000014  6E8C               	movwf	3980,c	;volatile
  1045                           
  1046                           ;main.c: 42:     TRISD = 0x00;
  1047  000016  0E00               	movlw	0
  1048  000018  6E95               	movwf	3989,c	;volatile
  1049                           
  1050                           ;main.c: 45:     ADCON1 = 0b00001111;
  1051  00001A  0E0F               	movlw	15
  1052  00001C  6EC1               	movwf	4033,c	;volatile
  1053                           
  1054                           ;main.c: 48:     INT1IE = 1;
  1055  00001E  86F0               	bsf	4080,3,c	;volatile
  1056                           
  1057                           ;main.c: 51:     initLCD();
  1058  000020  ECAA  F007         	call	_initLCD	;wreg free
  1059                           
  1060                           ;main.c: 54:     (INTCONbits.GIE = 1);
  1061  000024  8EF2               	bsf	4082,7,c	;volatile
  1062                           
  1063                           ;main.c: 57:     int state = 0;
  1064  000026  0E00               	movlw	0
  1065  000028  0100               	movlb	0	; () banked
  1066  00002A  6FF9               	movwf	(main@state+1)& (0+255),b
  1067  00002C  0E00               	movlw	0
  1068  00002E  6FF8               	movwf	main@state& (0+255),b
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;main.c: 58:     int tick = 0;
  1072  000030  0E00               	movlw	0
  1073  000032  6FEC               	movwf	(main@tick+1)& (0+255),b
  1074  000034  0E00               	movlw	0
  1075  000036  6FEB               	movwf	main@tick& (0+255),b
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;main.c: 59:     int clear = 1;
  1079  000038  0E00               	movlw	0
  1080  00003A  6FF7               	movwf	(main@clear+1)& (0+255),b
  1081  00003C  0E01               	movlw	1
  1082  00003E  6FF6               	movwf	main@clear& (0+255),b
  1083                           
  1084                           ;main.c: 64:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  1085  000040  0E0C               	movlw	12
  1086  000042  EC00  F009         	call	_lcdInst
  1087                           
  1088                           ;main.c: 65:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1089  000046  0E01               	movlw	1
  1090  000048  EC00  F009         	call	_lcdInst
  1091  00004C  0E11               	movlw	17
  1092  00004E  0100               	movlb	0	; () banked
  1093  000050  6FE9               	movwf	??_main& (0+255),b
  1094  000052  0E3A               	movlw	58
  1095  000054                     u2367:
  1096  000054  2EE8               	decfsz	wreg,f,c
  1097  000056  D7FE               	bra	u2367
  1098  000058  2FE9               	decfsz	??_main& (0+255),f,b
  1099  00005A  D7FC               	bra	u2367
  1100  00005C  F000               	nop	
  1101                           
  1102                           ;main.c: 66:     printf("Press A");
  1103  00005E  0EF6               	movlw	low STR_1
  1104  000060  6E68               	movwf	printf@fmt,c
  1105  000062  0EFF               	movlw	high STR_1
  1106  000064  6E69               	movwf	printf@fmt+1,c
  1107  000066  ECD2  F008         	call	_printf	;wreg free
  1108  00006A  0EC0               	movlw	192
  1109  00006C  EC00  F009         	call	_lcdInst
  1110                           
  1111                           ;main.c: 68:     printf("to start");
  1112  000070  0EED               	movlw	low STR_2
  1113  000072  6E68               	movwf	printf@fmt,c
  1114  000074  0EFF               	movlw	high STR_2
  1115  000076  6E69               	movwf	printf@fmt+1,c
  1116  000078  ECD2  F008         	call	_printf	;wreg free
  1117  00007C  0ED0               	movlw	208
  1118  00007E  EC00  F009         	call	_lcdInst
  1119                           
  1120                           ;main.c: 70:     printf("A for Ali ;)");
  1121  000082  0E46               	movlw	low STR_3
  1122  000084  6E68               	movwf	printf@fmt,c
  1123  000086  0EFF               	movlw	high STR_3
  1124  000088  6E69               	movwf	printf@fmt+1,c
  1125  00008A  ECD2  F008         	call	_printf	;wreg free
  1126  00008E                     l2683:
  1127  00008E  0100               	movlb	0	; () banked
  1128  000090  51C2               	movf	_start& (0+255),w,b	;volatile
  1129  000092  B4D8               	btfsc	status,2,c
  1130  000094  D7FC               	goto	l2683
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;main.c: 74:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1134  000096  0E01               	movlw	1
  1135  000098  EC00  F009         	call	_lcdInst
  1136  00009C  0E11               	movlw	17
  1137  00009E  0100               	movlb	0	; () banked
  1138  0000A0  6FE9               	movwf	??_main& (0+255),b
  1139  0000A2  0E3A               	movlw	58
  1140  0000A4                     u2377:
  1141  0000A4  2EE8               	decfsz	wreg,f,c
  1142  0000A6  D7FE               	bra	u2377
  1143  0000A8  2FE9               	decfsz	??_main& (0+255),f,b
  1144  0000AA  D7FC               	bra	u2377
  1145  0000AC  F000               	nop	
  1146                           
  1147                           ;main.c: 75:     printf("It's ya boy Ali!");
  1148  0000AE  0EA0               	movlw	low STR_4
  1149  0000B0  6E68               	movwf	printf@fmt,c
  1150  0000B2  0EFE               	movlw	high STR_4
  1151  0000B4  6E69               	movwf	printf@fmt+1,c
  1152  0000B6  ECD2  F008         	call	_printf	;wreg free
  1153                           
  1154                           ;main.c: 76:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1155  0000BA  0E33               	movlw	51
  1156  0000BC  0100               	movlb	0	; () banked
  1157  0000BE  6FEA               	movwf	(??_main+1)& (0+255),b
  1158  0000C0  0EBB               	movlw	187
  1159  0000C2  6FE9               	movwf	??_main& (0+255),b
  1160  0000C4  0EDF               	movlw	223
  1161  0000C6                     u2387:
  1162  0000C6  2EE8               	decfsz	wreg,f,c
  1163  0000C8  D7FE               	bra	u2387
  1164  0000CA  2FE9               	decfsz	??_main& (0+255),f,b
  1165  0000CC  D7FC               	bra	u2387
  1166  0000CE  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1167  0000D0  D7FA               	bra	u2387
  1168  0000D2  D000               	nop2	
  1169  0000D4  0E90               	movlw	144
  1170  0000D6  EC00  F009         	call	_lcdInst
  1171                           
  1172                           ;main.c: 78:     printf("He gettin hot ");
  1173  0000DA  0ED0               	movlw	low STR_5
  1174  0000DC  6E68               	movwf	printf@fmt,c
  1175  0000DE  0EFE               	movlw	high STR_5
  1176  0000E0  6E69               	movwf	printf@fmt+1,c
  1177  0000E2  ECD2  F008         	call	_printf	;wreg free
  1178                           
  1179                           ;main.c: 79:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1180  0000E6  0E33               	movlw	51
  1181  0000E8  0100               	movlb	0	; () banked
  1182  0000EA  6FEA               	movwf	(??_main+1)& (0+255),b
  1183  0000EC  0EBB               	movlw	187
  1184  0000EE  6FE9               	movwf	??_main& (0+255),b
  1185  0000F0  0EDF               	movlw	223
  1186  0000F2                     u2397:
  1187  0000F2  2EE8               	decfsz	wreg,f,c
  1188  0000F4  D7FE               	bra	u2397
  1189  0000F6  2FE9               	decfsz	??_main& (0+255),f,b
  1190  0000F8  D7FC               	bra	u2397
  1191  0000FA  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1192  0000FC  D7FA               	bra	u2397
  1193  0000FE  D000               	nop2	
  1194                           
  1195                           ;main.c: 81:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1196  000100  0E01               	movlw	1
  1197  000102  EC00  F009         	call	_lcdInst
  1198  000106  0E11               	movlw	17
  1199  000108  0100               	movlb	0	; () banked
  1200  00010A  6FE9               	movwf	??_main& (0+255),b
  1201  00010C  0E3A               	movlw	58
  1202  00010E                     u2407:
  1203  00010E  2EE8               	decfsz	wreg,f,c
  1204  000110  D7FE               	bra	u2407
  1205  000112  2FE9               	decfsz	??_main& (0+255),f,b
  1206  000114  D7FC               	bra	u2407
  1207  000116  F000               	nop	
  1208                           
  1209                           ;main.c: 82:     printf("Hi Cull !");
  1210  000118  0EBE               	movlw	low STR_6
  1211  00011A  6E68               	movwf	printf@fmt,c
  1212  00011C  0EFF               	movlw	high STR_6
  1213  00011E  6E69               	movwf	printf@fmt+1,c
  1214  000120  ECD2  F008         	call	_printf	;wreg free
  1215                           
  1216                           ;main.c: 83:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1217  000124  0E33               	movlw	51
  1218  000126  0100               	movlb	0	; () banked
  1219  000128  6FEA               	movwf	(??_main+1)& (0+255),b
  1220  00012A  0EBB               	movlw	187
  1221  00012C  6FE9               	movwf	??_main& (0+255),b
  1222  00012E  0EDF               	movlw	223
  1223  000130                     u2417:
  1224  000130  2EE8               	decfsz	wreg,f,c
  1225  000132  D7FE               	bra	u2417
  1226  000134  2FE9               	decfsz	??_main& (0+255),f,b
  1227  000136  D7FC               	bra	u2417
  1228  000138  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1229  00013A  D7FA               	bra	u2417
  1230  00013C  D000               	nop2	
  1231  00013E  0E90               	movlw	144
  1232  000140  EC00  F009         	call	_lcdInst
  1233                           
  1234                           ;main.c: 85:     printf("Almost done");
  1235  000144  0E85               	movlw	low STR_7
  1236  000146  6E68               	movwf	printf@fmt,c
  1237  000148  0EFF               	movlw	high STR_7
  1238  00014A  6E69               	movwf	printf@fmt+1,c
  1239  00014C  ECD2  F008         	call	_printf	;wreg free
  1240  000150  0ED0               	movlw	208
  1241  000152  EC00  F009         	call	_lcdInst
  1242                           
  1243                           ;main.c: 87:     _delay((unsigned long)((2000)*(10000000/4000.0)));
  1244  000156  0E1A               	movlw	26
  1245  000158  0100               	movlb	0	; () banked
  1246  00015A  6FEA               	movwf	(??_main+1)& (0+255),b
  1247  00015C  0E5E               	movlw	94
  1248  00015E  6FE9               	movwf	??_main& (0+255),b
  1249  000160  0E6E               	movlw	110
  1250  000162                     u2427:
  1251  000162  2EE8               	decfsz	wreg,f,c
  1252  000164  D7FE               	bra	u2427
  1253  000166  2FE9               	decfsz	??_main& (0+255),f,b
  1254  000168  D7FC               	bra	u2427
  1255  00016A  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1256  00016C  D7FA               	bra	u2427
  1257  00016E  F000               	nop	
  1258                           
  1259                           ;main.c: 88:     printf("AND DONE");
  1260  000170  0ED2               	movlw	low STR_8
  1261  000172  6E68               	movwf	printf@fmt,c
  1262  000174  0EFF               	movlw	high STR_8
  1263  000176  6E69               	movwf	printf@fmt+1,c
  1264  000178  ECD2  F008         	call	_printf	;wreg free
  1265                           
  1266                           ;main.c: 89:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1267  00017C  0E33               	movlw	51
  1268  00017E  0100               	movlb	0	; () banked
  1269  000180  6FEA               	movwf	(??_main+1)& (0+255),b
  1270  000182  0EBB               	movlw	187
  1271  000184  6FE9               	movwf	??_main& (0+255),b
  1272  000186  0EDF               	movlw	223
  1273  000188                     u2437:
  1274  000188  2EE8               	decfsz	wreg,f,c
  1275  00018A  D7FE               	bra	u2437
  1276  00018C  2FE9               	decfsz	??_main& (0+255),f,b
  1277  00018E  D7FC               	bra	u2437
  1278  000190  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1279  000192  D7FA               	bra	u2437
  1280  000194  D000               	nop2	
  1281                           
  1282                           ;main.c: 91:     start = 0;
  1283  000196  0E00               	movlw	0
  1284  000198  0100               	movlb	0	; () banked
  1285  00019A  6FC2               	movwf	_start& (0+255),b	;volatile
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;main.c: 93:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1289  00019C  0E01               	movlw	1
  1290  00019E  EC00  F009         	call	_lcdInst
  1291  0001A2  0E11               	movlw	17
  1292  0001A4  0100               	movlb	0	; () banked
  1293  0001A6  6FE9               	movwf	??_main& (0+255),b
  1294  0001A8  0E3A               	movlw	58
  1295  0001AA                     u2447:
  1296  0001AA  2EE8               	decfsz	wreg,f,c
  1297  0001AC  D7FE               	bra	u2447
  1298  0001AE  2FE9               	decfsz	??_main& (0+255),f,b
  1299  0001B0  D7FC               	bra	u2447
  1300  0001B2  F000               	nop	
  1301                           
  1302                           ;main.c: 94:     printf("Press A to");
  1303  0001B4  0E9D               	movlw	low STR_9
  1304  0001B6  6E68               	movwf	printf@fmt,c
  1305  0001B8  0EFF               	movlw	high STR_9
  1306  0001BA  6E69               	movwf	printf@fmt+1,c
  1307  0001BC  ECD2  F008         	call	_printf	;wreg free
  1308  0001C0  0E90               	movlw	144
  1309  0001C2  EC00  F009         	call	_lcdInst
  1310                           
  1311                           ;main.c: 96:     printf("view results");
  1312  0001C6  0E60               	movlw	low STR_10
  1313  0001C8  6E68               	movwf	printf@fmt,c
  1314  0001CA  0EFF               	movlw	high STR_10
  1315  0001CC  6E69               	movwf	printf@fmt+1,c
  1316  0001CE  ECD2  F008         	call	_printf	;wreg free
  1317  0001D2                     l2729:
  1318  0001D2  0100               	movlb	0	; () banked
  1319  0001D4  51C2               	movf	_start& (0+255),w,b	;volatile
  1320  0001D6  B4D8               	btfsc	status,2,c
  1321  0001D8  D7FC               	goto	l2729
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;main.c: 101:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1325  0001DA  0E01               	movlw	1
  1326  0001DC  EC00  F009         	call	_lcdInst
  1327  0001E0  0E11               	movlw	17
  1328  0001E2  0100               	movlb	0	; () banked
  1329  0001E4  6FE9               	movwf	??_main& (0+255),b
  1330  0001E6  0E3A               	movlw	58
  1331  0001E8                     u2457:
  1332  0001E8  2EE8               	decfsz	wreg,f,c
  1333  0001EA  D7FE               	bra	u2457
  1334  0001EC  2FE9               	decfsz	??_main& (0+255),f,b
  1335  0001EE  D7FC               	bra	u2457
  1336  0001F0  F000               	nop	
  1337                           
  1338                           ;main.c: 102:     printf("Canister Index");
  1339  0001F2  0E0C               	movlw	low STR_11
  1340  0001F4  6E68               	movwf	printf@fmt,c
  1341  0001F6  0EFF               	movlw	high STR_11
  1342  0001F8  6E69               	movwf	printf@fmt+1,c
  1343  0001FA  ECD2  F008         	call	_printf	;wreg free
  1344  0001FE  0E90               	movlw	144
  1345  000200  EC00  F009         	call	_lcdInst
  1346                           
  1347                           ;main.c: 104:     printf("starts at 0");
  1348  000204  0E6D               	movlw	low STR_12
  1349  000206  6E68               	movwf	printf@fmt,c
  1350  000208  0EFF               	movlw	high STR_12
  1351  00020A  6E69               	movwf	printf@fmt+1,c
  1352  00020C  ECD2  F008         	call	_printf	;wreg free
  1353                           
  1354                           ;main.c: 105:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1355  000210  0E33               	movlw	51
  1356  000212  0100               	movlb	0	; () banked
  1357  000214  6FEA               	movwf	(??_main+1)& (0+255),b
  1358  000216  0EBB               	movlw	187
  1359  000218  6FE9               	movwf	??_main& (0+255),b
  1360  00021A  0EDF               	movlw	223
  1361  00021C                     u2467:
  1362  00021C  2EE8               	decfsz	wreg,f,c
  1363  00021E  D7FE               	bra	u2467
  1364  000220  2FE9               	decfsz	??_main& (0+255),f,b
  1365  000222  D7FC               	bra	u2467
  1366  000224  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1367  000226  D7FA               	bra	u2467
  1368  000228  D000               	nop2	
  1369                           
  1370                           ;main.c: 107:     key_was_pressed = 1;
  1371  00022A  0E01               	movlw	1
  1372  00022C  0100               	movlb	0	; () banked
  1373  00022E  6FC4               	movwf	_key_was_pressed& (0+255),b	;volatile
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;main.c: 108:     exit_key = 1;
  1377  000230  0E01               	movlw	1
  1378  000232  6FC3               	movwf	_exit_key& (0+255),b	;volatile
  1379  000234                     l2745:
  1380                           
  1381                           ;main.c: 113:         if (state == 0 & clear == 1) {
  1382  000234  0100               	movlb	0	; () banked
  1383  000236  51F8               	movf	main@state& (0+255),w,b
  1384  000238  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1385  00023A  A4D8               	btfss	status,2,c
  1386  00023C  D028               	goto	l2761
  1387                           
  1388                           ; BSR set to: 0
  1389  00023E  05F6               	decf	main@clear& (0+255),w,b
  1390  000240  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1391  000242  A4D8               	btfss	status,2,c
  1392  000244  D024               	goto	l2761
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;main.c: 114:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1396  000246  0E01               	movlw	1
  1397  000248  EC00  F009         	call	_lcdInst
  1398  00024C  0E11               	movlw	17
  1399  00024E  0100               	movlb	0	; () banked
  1400  000250  6FE9               	movwf	??_main& (0+255),b
  1401  000252  0E3A               	movlw	58
  1402  000254                     u2477:
  1403  000254  2EE8               	decfsz	wreg,f,c
  1404  000256  D7FE               	bra	u2477
  1405  000258  2FE9               	decfsz	??_main& (0+255),f,b
  1406  00025A  D7FC               	bra	u2477
  1407  00025C  F000               	nop	
  1408                           
  1409                           ;main.c: 115:         printf("Operation Time");
  1410  00025E  0EDF               	movlw	low STR_13
  1411  000260  6E68               	movwf	printf@fmt,c
  1412  000262  0EFE               	movlw	high STR_13
  1413  000264  6E69               	movwf	printf@fmt+1,c
  1414  000266  ECD2  F008         	call	_printf	;wreg free
  1415  00026A  0E90               	movlw	144
  1416  00026C  EC00  F009         	call	_lcdInst
  1417                           
  1418                           ;main.c: 117:         printf("%d seconds", time);
  1419  000270  0EA8               	movlw	low STR_14
  1420  000272  6E68               	movwf	printf@fmt,c
  1421  000274  0EFF               	movlw	high STR_14
  1422  000276  6E69               	movwf	printf@fmt+1,c
  1423  000278  0E00               	movlw	0
  1424  00027A  6E6B               	movwf	?_printf+3,c
  1425  00027C  0E1E               	movlw	30
  1426  00027E  6E6A               	movwf	?_printf+2,c
  1427  000280  ECD2  F008         	call	_printf	;wreg free
  1428                           
  1429                           ;main.c: 118:         clear = 0;
  1430  000284  0E00               	movlw	0
  1431  000286  0100               	movlb	0	; () banked
  1432  000288  6FF7               	movwf	(main@clear+1)& (0+255),b
  1433  00028A  0E00               	movlw	0
  1434  00028C  6FF6               	movwf	main@clear& (0+255),b
  1435  00028E                     l2761:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 122:         if (state == 1 & clear == 1) {
  1439  00028E  05F8               	decf	main@state& (0+255),w,b
  1440  000290  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1441  000292  A4D8               	btfss	status,2,c
  1442  000294  D02C               	goto	l2779
  1443                           
  1444                           ; BSR set to: 0
  1445  000296  05F6               	decf	main@clear& (0+255),w,b
  1446  000298  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1447  00029A  A4D8               	btfss	status,2,c
  1448  00029C  D028               	goto	l2779
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;main.c: 124:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1452  00029E  0E01               	movlw	1
  1453  0002A0  EC00  F009         	call	_lcdInst
  1454  0002A4  0E11               	movlw	17
  1455  0002A6  0100               	movlb	0	; () banked
  1456  0002A8  6FE9               	movwf	??_main& (0+255),b
  1457  0002AA  0E3A               	movlw	58
  1458  0002AC                     u2487:
  1459  0002AC  2EE8               	decfsz	wreg,f,c
  1460  0002AE  D7FE               	bra	u2487
  1461  0002B0  2FE9               	decfsz	??_main& (0+255),f,b
  1462  0002B2  D7FC               	bra	u2487
  1463  0002B4  F000               	nop	
  1464                           
  1465                           ;main.c: 125:             { lcdInst(0x80 | LCD_LINE1_ADDR);};
  1466  0002B6  0E80               	movlw	128
  1467  0002B8  EC00  F009         	call	_lcdInst
  1468                           
  1469                           ;main.c: 126:             printf("# of Canisters");
  1470  0002BC  0EFD               	movlw	low STR_15
  1471  0002BE  6E68               	movwf	printf@fmt,c
  1472  0002C0  0EFE               	movlw	high STR_15
  1473  0002C2  6E69               	movwf	printf@fmt+1,c
  1474  0002C4  ECD2  F008         	call	_printf	;wreg free
  1475  0002C8  0E90               	movlw	144
  1476  0002CA  EC00  F009         	call	_lcdInst
  1477                           
  1478                           ;main.c: 128:             printf("%d Canisters", Canister);
  1479  0002CE  0E53               	movlw	low STR_16
  1480  0002D0  6E68               	movwf	printf@fmt,c
  1481  0002D2  0EFF               	movlw	high STR_16
  1482  0002D4  6E69               	movwf	printf@fmt+1,c
  1483  0002D6  C0BE  F06A         	movff	_Canister,?_printf+2
  1484  0002DA  C0BF  F06B         	movff	_Canister+1,?_printf+3
  1485  0002DE  ECD2  F008         	call	_printf	;wreg free
  1486  0002E2                     l2777:
  1487                           
  1488                           ;main.c: 129:             clear = 0;
  1489  0002E2  0E00               	movlw	0
  1490  0002E4  0100               	movlb	0	; () banked
  1491  0002E6  6FF7               	movwf	(main@clear+1)& (0+255),b
  1492  0002E8  0E00               	movlw	0
  1493  0002EA  6FF6               	movwf	main@clear& (0+255),b
  1494                           
  1495                           ;main.c: 131:         }
  1496  0002EC  D067               	goto	l2819
  1497  0002EE                     l2779:
  1498                           
  1499                           ; BSR set to: 0
  1500  0002EE  0E02               	movlw	2
  1501  0002F0  19F8               	xorwf	main@state& (0+255),w,b
  1502  0002F2  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1503  0002F4  A4D8               	btfss	status,2,c
  1504  0002F6  D02D               	goto	l2799
  1505                           
  1506                           ; BSR set to: 0
  1507  0002F8  05F6               	decf	main@clear& (0+255),w,b
  1508  0002FA  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1509  0002FC  A4D8               	btfss	status,2,c
  1510  0002FE  D029               	goto	l2799
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;main.c: 135:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1514  000300  0E01               	movlw	1
  1515  000302  EC00  F009         	call	_lcdInst
  1516  000306  0E11               	movlw	17
  1517  000308  0100               	movlb	0	; () banked
  1518  00030A  6FE9               	movwf	??_main& (0+255),b
  1519  00030C  0E3A               	movlw	58
  1520  00030E                     u2497:
  1521  00030E  2EE8               	decfsz	wreg,f,c
  1522  000310  D7FE               	bra	u2497
  1523  000312  2FE9               	decfsz	??_main& (0+255),f,b
  1524  000314  D7FC               	bra	u2497
  1525  000316  F000               	nop	
  1526                           
  1527                           ;main.c: 136:             printf("# of Balls");
  1528  000318  0EB3               	movlw	low STR_17
  1529  00031A  6E68               	movwf	printf@fmt,c
  1530  00031C  0EFF               	movlw	high STR_17
  1531  00031E  6E69               	movwf	printf@fmt+1,c
  1532  000320  ECD2  F008         	call	_printf	;wreg free
  1533  000324  0EC0               	movlw	192
  1534  000326  EC00  F009         	call	_lcdInst
  1535                           
  1536                           ;main.c: 138:             printf("supplied");
  1537  00032A  0EDB               	movlw	low STR_18
  1538  00032C  6E68               	movwf	printf@fmt,c
  1539  00032E  0EFF               	movlw	high STR_18
  1540  000330  6E69               	movwf	printf@fmt+1,c
  1541  000332  ECD2  F008         	call	_printf	;wreg free
  1542  000336  0ED0               	movlw	208
  1543  000338  EC00  F009         	call	_lcdInst
  1544                           
  1545                           ;main.c: 140:             printf("%d balls", balls);
  1546  00033C  0EE4               	movlw	low STR_19
  1547  00033E  6E68               	movwf	printf@fmt,c
  1548  000340  0EFF               	movlw	high STR_19
  1549  000342  6E69               	movwf	printf@fmt+1,c
  1550  000344  0E00               	movlw	0
  1551  000346  6E6B               	movwf	?_printf+3,c
  1552  000348  0E05               	movlw	5
  1553  00034A  6E6A               	movwf	?_printf+2,c
  1554  00034C  ECD2  F008         	call	_printf	;wreg free
  1555  000350  D7C8               	goto	l2777
  1556  000352                     l2799:
  1557                           
  1558                           ; BSR set to: 0
  1559  000352  0E03               	movlw	3
  1560  000354  19F8               	xorwf	main@state& (0+255),w,b
  1561  000356  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1562  000358  A4D8               	btfss	status,2,c
  1563  00035A  D030               	goto	l2819
  1564                           
  1565                           ; BSR set to: 0
  1566  00035C  05F6               	decf	main@clear& (0+255),w,b
  1567  00035E  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1568  000360  A4D8               	btfss	status,2,c
  1569  000362  D02C               	goto	l2819
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;main.c: 147:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1573  000364  0E01               	movlw	1
  1574  000366  EC00  F009         	call	_lcdInst
  1575  00036A  0E11               	movlw	17
  1576  00036C  0100               	movlb	0	; () banked
  1577  00036E  6FE9               	movwf	??_main& (0+255),b
  1578  000370  0E3A               	movlw	58
  1579  000372                     u2507:
  1580  000372  2EE8               	decfsz	wreg,f,c
  1581  000374  D7FE               	bra	u2507
  1582  000376  2FE9               	decfsz	??_main& (0+255),f,b
  1583  000378  D7FC               	bra	u2507
  1584  00037A  F000               	nop	
  1585                           
  1586                           ;main.c: 148:             printf("Individual Info");
  1587  00037C  0EB1               	movlw	low STR_20
  1588  00037E  6E68               	movwf	printf@fmt,c
  1589  000380  0EFE               	movlw	high STR_20
  1590  000382  6E69               	movwf	printf@fmt+1,c
  1591  000384  ECD2  F008         	call	_printf	;wreg free
  1592  000388  0EC0               	movlw	192
  1593  00038A  EC00  F009         	call	_lcdInst
  1594                           
  1595                           ;main.c: 150:             printf("of Canister");
  1596  00038E  0E91               	movlw	low STR_21
  1597  000390  6E68               	movwf	printf@fmt,c
  1598  000392  0EFF               	movlw	high STR_21
  1599  000394  6E69               	movwf	printf@fmt+1,c
  1600  000396  ECD2  F008         	call	_printf	;wreg free
  1601  00039A  0ED0               	movlw	208
  1602  00039C  EC00  F009         	call	_lcdInst
  1603                           
  1604                           ;main.c: 152:             printf("Press 0 to %d ", Canister-1);
  1605  0003A0  0EC1               	movlw	low STR_22
  1606  0003A2  6E68               	movwf	printf@fmt,c
  1607  0003A4  0EFE               	movlw	high STR_22
  1608  0003A6  6E69               	movwf	printf@fmt+1,c
  1609  0003A8  0EFF               	movlw	255
  1610  0003AA  0100               	movlb	0	; () banked
  1611  0003AC  25BE               	addwf	_Canister& (0+255),w,b
  1612  0003AE  6E6A               	movwf	?_printf+2,c
  1613  0003B0  0EFF               	movlw	255
  1614  0003B2  21BF               	addwfc	(_Canister+1)& (0+255),w,b
  1615  0003B4  6E6B               	movwf	?_printf+3,c
  1616  0003B6  ECD2  F008         	call	_printf	;wreg free
  1617  0003BA  D793               	goto	l2777
  1618  0003BC                     l2819:
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;main.c: 157:         if(key_was_pressed){
  1622  0003BC  51C4               	movf	_key_was_pressed& (0+255),w,b	;volatile
  1623  0003BE  B4D8               	btfsc	status,2,c
  1624  0003C0  D140               	goto	l2917
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 159:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1628  0003C2  3881               	swapf	3969,w,c	;volatile
  1629  0003C4  0B0F               	andlw	15
  1630  0003C6  0B0F               	andlw	15
  1631  0003C8  6FF3               	movwf	main@keypress& (0+255),b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;main.c: 160:             int miniTick = 0;
  1635  0003CA  0E00               	movlw	0
  1636  0003CC  6FEE               	movwf	(main@miniTick+1)& (0+255),b
  1637  0003CE  0E00               	movlw	0
  1638  0003D0  6FED               	movwf	main@miniTick& (0+255),b
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;main.c: 161:             int miniState = 0;
  1642  0003D2  0E00               	movlw	0
  1643  0003D4  6FF5               	movwf	(main@miniState+1)& (0+255),b
  1644  0003D6  0E00               	movlw	0
  1645  0003D8  6FF4               	movwf	main@miniState& (0+255),b
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 162:             int miniClear = 1;
  1649  0003DA  0E00               	movlw	0
  1650  0003DC  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1651  0003DE  0E01               	movlw	1
  1652  0003E0  6FF1               	movwf	main@miniClear& (0+255),b
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 164:             int number_pressed = (int) (keys[keypress] - '0');
  1656  0003E2  0E89               	movlw	low _keys
  1657  0003E4  25F3               	addwf	main@keypress& (0+255),w,b
  1658  0003E6  6EF6               	movwf	tblptrl,c
  1659  0003E8  6AF7               	clrf	tblptrh,c
  1660  0003EA  0EFE               	movlw	high _keys
  1661  0003EC  22F7               	addwfc	tblptrh,f,c
  1662  0003EE                     	if	0	;There are less than 3 active tblptr bytes
  1663  0003EE                     	endif
  1664  0003EE  0008               	tblrd		*
  1665  0003F0  CFF5 F0E9          	movff	tablat,??_main
  1666  0003F4  0ED0               	movlw	208
  1667  0003F6  25E9               	addwf	??_main& (0+255),w,b
  1668  0003F8  6FEF               	movwf	main@number_pressed& (0+255),b
  1669  0003FA  6BF0               	clrf	(main@number_pressed+1)& (0+255),b
  1670  0003FC  0EFF               	movlw	255
  1671  0003FE  23F0               	addwfc	(main@number_pressed+1)& (0+255),f,b
  1672                           
  1673                           ;main.c: 166:             while(!exit_key) {
  1674  000400  D118               	goto	l2913
  1675  000402                     l2831:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 168:                 if (miniState == 0 & miniClear == 1) {
  1679  000402  51F4               	movf	main@miniState& (0+255),w,b
  1680  000404  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1681  000406  A4D8               	btfss	status,2,c
  1682  000408  D046               	goto	l2851
  1683                           
  1684                           ; BSR set to: 0
  1685  00040A  05F1               	decf	main@miniClear& (0+255),w,b
  1686  00040C  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1687  00040E  A4D8               	btfss	status,2,c
  1688  000410  D042               	goto	l2851
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;main.c: 170:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1692  000412  0E01               	movlw	1
  1693  000414  EC00  F009         	call	_lcdInst
  1694  000418  0E11               	movlw	17
  1695  00041A  0100               	movlb	0	; () banked
  1696  00041C  6FE9               	movwf	??_main& (0+255),b
  1697  00041E  0E3A               	movlw	58
  1698  000420                     u2517:
  1699  000420  2EE8               	decfsz	wreg,f,c
  1700  000422  D7FE               	bra	u2517
  1701  000424  2FE9               	decfsz	??_main& (0+255),f,b
  1702  000426  D7FC               	bra	u2517
  1703  000428  F000               	nop	
  1704                           
  1705                           ;main.c: 171:                     printf("Cansiter %c", keys[keypress]);
  1706  00042A  0E79               	movlw	low STR_23
  1707  00042C  6E68               	movwf	printf@fmt,c
  1708  00042E  0EFF               	movlw	high STR_23
  1709  000430  6E69               	movwf	printf@fmt+1,c
  1710  000432  0E89               	movlw	low _keys
  1711  000434  0100               	movlb	0	; () banked
  1712  000436  25F3               	addwf	main@keypress& (0+255),w,b
  1713  000438  6EF6               	movwf	tblptrl,c
  1714  00043A  6AF7               	clrf	tblptrh,c
  1715  00043C  0EFE               	movlw	high _keys
  1716  00043E  22F7               	addwfc	tblptrh,f,c
  1717  000440                     	if	0	;There are less than 3 active tblptr bytes
  1718  000440                     	endif
  1719  000440  0008               	tblrd		*
  1720  000442  50F5               	movf	tablat,w,c
  1721  000444  6E6A               	movwf	?_printf+2,c
  1722  000446  6A6B               	clrf	?_printf+3,c
  1723  000448  ECD2  F008         	call	_printf	;wreg free
  1724  00044C  0E90               	movlw	144
  1725  00044E  EC00  F009         	call	_lcdInst
  1726                           
  1727                           ;main.c: 173:                     printf("Distance %d cm", DistanceCanister[number_press
      +                          ed] );
  1728  000452  0EEE               	movlw	low STR_24
  1729  000454  6E68               	movwf	printf@fmt,c
  1730  000456  0EFE               	movlw	high STR_24
  1731  000458  6E69               	movwf	printf@fmt+1,c
  1732  00045A  90D8               	bcf	status,0,c
  1733  00045C  0100               	movlb	0	; () banked
  1734  00045E  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1735  000460  6ED9               	movwf	fsr2l,c
  1736  000462  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1737  000464  6EDA               	movwf	fsr2h,c
  1738  000466  0E94               	movlw	low _DistanceCanister
  1739  000468  26D9               	addwf	fsr2l,f,c
  1740  00046A  0E00               	movlw	high _DistanceCanister
  1741  00046C  22DA               	addwfc	fsr2h,f,c
  1742  00046E  CFDE F06A          	movff	postinc2,?_printf+2
  1743  000472  CFDD F06B          	movff	postdec2,?_printf+3
  1744  000476  ECD2  F008         	call	_printf	;wreg free
  1745  00047A  0ED0               	movlw	208
  1746  00047C  EC00  F009         	call	_lcdInst
  1747                           
  1748                           ;main.c: 175:                     printf("* to exit");
  1749  000480  0EC8               	movlw	low STR_25
  1750  000482  6E68               	movwf	printf@fmt,c
  1751  000484  0EFF               	movlw	high STR_25
  1752  000486  6E69               	movwf	printf@fmt+1,c
  1753  000488  ECD2  F008         	call	_printf	;wreg free
  1754                           
  1755                           ;main.c: 176:                     miniClear = 0;
  1756  00048C  0E00               	movlw	0
  1757  00048E  0100               	movlb	0	; () banked
  1758  000490  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1759  000492  0E00               	movlw	0
  1760  000494  6FF1               	movwf	main@miniClear& (0+255),b
  1761  000496                     l2851:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;main.c: 179:                 if (miniState == 1 & miniClear == 1) {
  1765  000496  05F4               	decf	main@miniState& (0+255),w,b
  1766  000498  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1767  00049A  A4D8               	btfss	status,2,c
  1768  00049C  D04D               	goto	l2875
  1769                           
  1770                           ; BSR set to: 0
  1771  00049E  05F1               	decf	main@miniClear& (0+255),w,b
  1772  0004A0  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1773  0004A2  A4D8               	btfss	status,2,c
  1774  0004A4  D049               	goto	l2875
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;main.c: 181:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1778  0004A6  0E01               	movlw	1
  1779  0004A8  EC00  F009         	call	_lcdInst
  1780  0004AC  0E11               	movlw	17
  1781  0004AE  0100               	movlb	0	; () banked
  1782  0004B0  6FE9               	movwf	??_main& (0+255),b
  1783  0004B2  0E3A               	movlw	58
  1784  0004B4                     u2527:
  1785  0004B4  2EE8               	decfsz	wreg,f,c
  1786  0004B6  D7FE               	bra	u2527
  1787  0004B8  2FE9               	decfsz	??_main& (0+255),f,b
  1788  0004BA  D7FC               	bra	u2527
  1789  0004BC  F000               	nop	
  1790                           
  1791                           ;main.c: 182:                     printf("Cansiter %c", keys[keypress]);
  1792  0004BE  0E79               	movlw	low STR_23
  1793  0004C0  6E68               	movwf	printf@fmt,c
  1794  0004C2  0EFF               	movlw	high STR_23
  1795  0004C4  6E69               	movwf	printf@fmt+1,c
  1796  0004C6  0E89               	movlw	low _keys
  1797  0004C8  0100               	movlb	0	; () banked
  1798  0004CA  25F3               	addwf	main@keypress& (0+255),w,b
  1799  0004CC  6EF6               	movwf	tblptrl,c
  1800  0004CE  6AF7               	clrf	tblptrh,c
  1801  0004D0  0EFE               	movlw	high _keys
  1802  0004D2  22F7               	addwfc	tblptrh,f,c
  1803  0004D4                     	if	0	;There are less than 3 active tblptr bytes
  1804  0004D4                     	endif
  1805  0004D4  0008               	tblrd		*
  1806  0004D6  50F5               	movf	tablat,w,c
  1807  0004D8  6E6A               	movwf	?_printf+2,c
  1808  0004DA  6A6B               	clrf	?_printf+3,c
  1809  0004DC  ECD2  F008         	call	_printf	;wreg free
  1810  0004E0  0E90               	movlw	144
  1811  0004E2  EC00  F009         	call	_lcdInst
  1812                           
  1813                           ;main.c: 184:                     if (State[number_pressed] == 1)
  1814  0004E6  90D8               	bcf	status,0,c
  1815  0004E8  0100               	movlb	0	; () banked
  1816  0004EA  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1817  0004EC  6ED9               	movwf	fsr2l,c
  1818  0004EE  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1819  0004F0  6EDA               	movwf	fsr2h,c
  1820  0004F2  0EA8               	movlw	low _State
  1821  0004F4  26D9               	addwf	fsr2l,f,c
  1822  0004F6  0E00               	movlw	high _State
  1823  0004F8  22DA               	addwfc	fsr2h,f,c
  1824  0004FA  04DE               	decf	postinc2,w,c
  1825  0004FC  10DE               	iorwf	postinc2,w,c
  1826  0004FE  A4D8               	btfss	status,2,c
  1827  000500  D007               	goto	l2867
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;main.c: 185:                         printf("Canister Full");
  1831  000502  0E38               	movlw	low STR_27
  1832  000504  6E68               	movwf	printf@fmt,c
  1833  000506  0EFF               	movlw	high STR_27
  1834  000508  6E69               	movwf	printf@fmt+1,c
  1835  00050A  ECD2  F008         	call	_printf	;wreg free
  1836  00050E  D006               	goto	l2869
  1837  000510                     l2867:
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;main.c: 187:                         printf("Canister Empty");
  1841  000510  0E1B               	movlw	low STR_28
  1842  000512  6E68               	movwf	printf@fmt,c
  1843  000514  0EFF               	movlw	high STR_28
  1844  000516  6E69               	movwf	printf@fmt+1,c
  1845  000518  ECD2  F008         	call	_printf	;wreg free
  1846  00051C                     l2869:
  1847  00051C  0ED0               	movlw	208
  1848  00051E  EC00  F009         	call	_lcdInst
  1849                           
  1850                           ;main.c: 189:                     printf("* to exit");
  1851  000522  0EC8               	movlw	low STR_25
  1852  000524  6E68               	movwf	printf@fmt,c
  1853  000526  0EFF               	movlw	high STR_25
  1854  000528  6E69               	movwf	printf@fmt+1,c
  1855  00052A  ECD2  F008         	call	_printf	;wreg free
  1856                           
  1857                           ;main.c: 190:                     miniClear = 0;
  1858  00052E  0E00               	movlw	0
  1859  000530  0100               	movlb	0	; () banked
  1860  000532  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1861  000534  0E00               	movlw	0
  1862  000536  6FF1               	movwf	main@miniClear& (0+255),b
  1863  000538                     l2875:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 193:                 if (miniState == 2 & miniClear == 1) {
  1867  000538  0E02               	movlw	2
  1868  00053A  19F4               	xorwf	main@miniState& (0+255),w,b
  1869  00053C  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1870  00053E  A4D8               	btfss	status,2,c
  1871  000540  D04D               	goto	l2899
  1872                           
  1873                           ; BSR set to: 0
  1874  000542  05F1               	decf	main@miniClear& (0+255),w,b
  1875  000544  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1876  000546  A4D8               	btfss	status,2,c
  1877  000548  D049               	goto	l2899
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;main.c: 195:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1881  00054A  0E01               	movlw	1
  1882  00054C  EC00  F009         	call	_lcdInst
  1883  000550  0E11               	movlw	17
  1884  000552  0100               	movlb	0	; () banked
  1885  000554  6FE9               	movwf	??_main& (0+255),b
  1886  000556  0E3A               	movlw	58
  1887  000558                     u2537:
  1888  000558  2EE8               	decfsz	wreg,f,c
  1889  00055A  D7FE               	bra	u2537
  1890  00055C  2FE9               	decfsz	??_main& (0+255),f,b
  1891  00055E  D7FC               	bra	u2537
  1892  000560  F000               	nop	
  1893                           
  1894                           ;main.c: 196:                     printf("Cansiter %c", keys[keypress]);
  1895  000562  0E79               	movlw	low STR_23
  1896  000564  6E68               	movwf	printf@fmt,c
  1897  000566  0EFF               	movlw	high STR_23
  1898  000568  6E69               	movwf	printf@fmt+1,c
  1899  00056A  0E89               	movlw	low _keys
  1900  00056C  0100               	movlb	0	; () banked
  1901  00056E  25F3               	addwf	main@keypress& (0+255),w,b
  1902  000570  6EF6               	movwf	tblptrl,c
  1903  000572  6AF7               	clrf	tblptrh,c
  1904  000574  0EFE               	movlw	high _keys
  1905  000576  22F7               	addwfc	tblptrh,f,c
  1906  000578                     	if	0	;There are less than 3 active tblptr bytes
  1907  000578                     	endif
  1908  000578  0008               	tblrd		*
  1909  00057A  50F5               	movf	tablat,w,c
  1910  00057C  6E6A               	movwf	?_printf+2,c
  1911  00057E  6A6B               	clrf	?_printf+3,c
  1912  000580  ECD2  F008         	call	_printf	;wreg free
  1913  000584  0E90               	movlw	144
  1914  000586  EC00  F009         	call	_lcdInst
  1915                           
  1916                           ;main.c: 198:                     if (BallDispensed[number_pressed] == 1)
  1917  00058A  90D8               	bcf	status,0,c
  1918  00058C  0100               	movlb	0	; () banked
  1919  00058E  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1920  000590  6ED9               	movwf	fsr2l,c
  1921  000592  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1922  000594  6EDA               	movwf	fsr2h,c
  1923  000596  0E80               	movlw	low _BallDispensed
  1924  000598  26D9               	addwf	fsr2l,f,c
  1925  00059A  0E00               	movlw	high _BallDispensed
  1926  00059C  22DA               	addwfc	fsr2h,f,c
  1927  00059E  04DE               	decf	postinc2,w,c
  1928  0005A0  10DE               	iorwf	postinc2,w,c
  1929  0005A2  A4D8               	btfss	status,2,c
  1930  0005A4  D007               	goto	l2891
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 199:                         printf("Ball Added");
  1934  0005A6  0E2D               	movlw	low (STR_32+3)
  1935  0005A8  6E68               	movwf	printf@fmt,c
  1936  0005AA  0EFF               	movlw	high (STR_32+3)
  1937  0005AC  6E69               	movwf	printf@fmt+1,c
  1938  0005AE  ECD2  F008         	call	_printf	;wreg free
  1939  0005B2  D006               	goto	l2893
  1940  0005B4                     l2891:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 201:                         printf("No Ball Added");
  1944  0005B4  0E2A               	movlw	low STR_32
  1945  0005B6  6E68               	movwf	printf@fmt,c
  1946  0005B8  0EFF               	movlw	high STR_32
  1947  0005BA  6E69               	movwf	printf@fmt+1,c
  1948  0005BC  ECD2  F008         	call	_printf	;wreg free
  1949  0005C0                     l2893:
  1950  0005C0  0ED0               	movlw	208
  1951  0005C2  EC00  F009         	call	_lcdInst
  1952                           
  1953                           ;main.c: 203:                     printf("* to exit");
  1954  0005C6  0EC8               	movlw	low STR_25
  1955  0005C8  6E68               	movwf	printf@fmt,c
  1956  0005CA  0EFF               	movlw	high STR_25
  1957  0005CC  6E69               	movwf	printf@fmt+1,c
  1958  0005CE  ECD2  F008         	call	_printf	;wreg free
  1959                           
  1960                           ;main.c: 206:                     miniClear = 0;
  1961  0005D2  0E00               	movlw	0
  1962  0005D4  0100               	movlb	0	; () banked
  1963  0005D6  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1964  0005D8  0E00               	movlw	0
  1965  0005DA  6FF1               	movwf	main@miniClear& (0+255),b
  1966  0005DC                     l2899:
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;main.c: 209:                 if (miniTick == 3000) {
  1970  0005DC  0EB8               	movlw	184
  1971  0005DE  19ED               	xorwf	main@miniTick& (0+255),w,b
  1972  0005E0  E11D               	bnz	l2909
  1973  0005E2  0E0B               	movlw	11
  1974  0005E4  19EE               	xorwf	(main@miniTick+1)& (0+255),w,b
  1975  0005E6  A4D8               	btfss	status,2,c
  1976  0005E8  D019               	goto	l2909
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;main.c: 210:                     miniClear = 1;
  1980  0005EA  0E00               	movlw	0
  1981  0005EC  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1982  0005EE  0E01               	movlw	1
  1983  0005F0  6FF1               	movwf	main@miniClear& (0+255),b
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;main.c: 211:                     miniState++;
  1987  0005F2  4BF4               	infsnz	main@miniState& (0+255),f,b
  1988  0005F4  2BF5               	incf	(main@miniState+1)& (0+255),f,b
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 212:                     miniState = miniState % 3;
  1992  0005F6  C0F4  F00C         	movff	main@miniState,___awmod@dividend
  1993  0005FA  C0F5  F00D         	movff	main@miniState+1,___awmod@dividend+1
  1994  0005FE  0E00               	movlw	0
  1995  000600  6E0F               	movwf	___awmod@divisor+1,c
  1996  000602  0E03               	movlw	3
  1997  000604  6E0E               	movwf	___awmod@divisor,c
  1998  000606  EC3C  F007         	call	___awmod	;wreg free
  1999  00060A  C00C  F0F4         	movff	?___awmod,main@miniState
  2000  00060E  C00D  F0F5         	movff	?___awmod+1,main@miniState+1
  2001                           
  2002                           ;main.c: 213:                     miniTick = 0;
  2003  000612  0E00               	movlw	0
  2004  000614  0100               	movlb	0	; () banked
  2005  000616  6FEE               	movwf	(main@miniTick+1)& (0+255),b
  2006  000618  0E00               	movlw	0
  2007  00061A  6FED               	movwf	main@miniTick& (0+255),b
  2008  00061C                     l2909:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 216:                 miniTick++;
  2012  00061C  4BED               	infsnz	main@miniTick& (0+255),f,b
  2013  00061E  2BEE               	incf	(main@miniTick+1)& (0+255),f,b
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;main.c: 217:                 _delay((unsigned long)((1)*(10000000/4000.0)));
  2017  000620  0E04               	movlw	4
  2018  000622  0100               	movlb	0	; () banked
  2019  000624  6FE9               	movwf	??_main& (0+255),b
  2020  000626  0E3D               	movlw	61
  2021  000628                     u2547:
  2022  000628  2EE8               	decfsz	wreg,f,c
  2023  00062A  D7FE               	bra	u2547
  2024  00062C  2FE9               	decfsz	??_main& (0+255),f,b
  2025  00062E  D7FC               	bra	u2547
  2026  000630  D000               	nop2	
  2027  000632                     l2913:
  2028                           
  2029                           ;main.c: 166:             while(!exit_key) {
  2030  000632  0100               	movlb	0	; () banked
  2031  000634  51C3               	movf	_exit_key& (0+255),w,b	;volatile
  2032  000636  B4D8               	btfsc	status,2,c
  2033  000638  D6E4               	goto	l2831
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 222:             key_was_pressed = 0;
  2037  00063A  0E00               	movlw	0
  2038  00063C  6FC4               	movwf	_key_was_pressed& (0+255),b	;volatile
  2039                           
  2040                           ;main.c: 223:             exit_key = 0;
  2041  00063E  0E00               	movlw	0
  2042  000640  6FC3               	movwf	_exit_key& (0+255),b	;volatile
  2043  000642                     l2917:
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;main.c: 227:         if (tick == 2000) {
  2047  000642  0ED0               	movlw	208
  2048  000644  19EB               	xorwf	main@tick& (0+255),w,b
  2049  000646  E112               	bnz	l2927
  2050  000648  0E07               	movlw	7
  2051  00064A  19EC               	xorwf	(main@tick+1)& (0+255),w,b
  2052  00064C  A4D8               	btfss	status,2,c
  2053  00064E  D00E               	goto	l2927
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;main.c: 228:             clear = 1;
  2057  000650  0E00               	movlw	0
  2058  000652  6FF7               	movwf	(main@clear+1)& (0+255),b
  2059  000654  0E01               	movlw	1
  2060  000656  6FF6               	movwf	main@clear& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;main.c: 229:             state++;
  2064  000658  4BF8               	infsnz	main@state& (0+255),f,b
  2065  00065A  2BF9               	incf	(main@state+1)& (0+255),f,b
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;main.c: 230:             state = state % 4;
  2069  00065C  0E03               	movlw	3
  2070  00065E  15F8               	andwf	main@state& (0+255),w,b
  2071  000660  6FF8               	movwf	main@state& (0+255),b
  2072  000662  6BF9               	clrf	(main@state+1)& (0+255),b
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 231:             tick = 0;
  2076  000664  0E00               	movlw	0
  2077  000666  6FEC               	movwf	(main@tick+1)& (0+255),b
  2078  000668  0E00               	movlw	0
  2079  00066A  6FEB               	movwf	main@tick& (0+255),b
  2080  00066C                     l2927:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;main.c: 234:         tick++;
  2084  00066C  4BEB               	infsnz	main@tick& (0+255),f,b
  2085  00066E  2BEC               	incf	(main@tick+1)& (0+255),f,b
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;main.c: 235:         _delay((unsigned long)((1)*(10000000/4000.0)));
  2089  000670  0E04               	movlw	4
  2090  000672  0100               	movlb	0	; () banked
  2091  000674  6FE9               	movwf	??_main& (0+255),b
  2092  000676  0E3D               	movlw	61
  2093  000678                     u2557:
  2094  000678  2EE8               	decfsz	wreg,f,c
  2095  00067A  D7FE               	bra	u2557
  2096  00067C  2FE9               	decfsz	??_main& (0+255),f,b
  2097  00067E  D7FC               	bra	u2557
  2098  000680  D000               	nop2	
  2099  000682  D5D8               	goto	l2745
  2100  000684                     __end_of_main:
  2101                           	opt callstack 0
  2102                           
  2103 ;; *************** function _printf *****************
  2104 ;; Defined at:
  2105 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  fmt             2  103[COMRAM] PTR const unsigned char 
  2108 ;;		 -> STR_33(10), STR_32(14), STR_31(11), STR_30(12), 
  2109 ;;		 -> STR_29(10), STR_28(15), STR_27(14), STR_26(12), 
  2110 ;;		 -> STR_25(10), STR_24(15), STR_23(12), STR_22(15), 
  2111 ;;		 -> STR_21(12), STR_20(16), STR_19(9), STR_18(9), 
  2112 ;;		 -> STR_17(11), STR_16(13), STR_15(15), STR_14(11), 
  2113 ;;		 -> STR_13(15), STR_12(12), STR_11(15), STR_10(13), 
  2114 ;;		 -> STR_9(11), STR_8(9), STR_7(12), STR_6(10), 
  2115 ;;		 -> STR_5(15), STR_4(17), STR_3(13), STR_2(9), 
  2116 ;;		 -> STR_1(8), 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  ap              2    2[BANK0 ] PTR void [1]
  2119 ;;		 -> ?_printf(2), 
  2120 ;;  ret             2    0        int 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  2  103[COMRAM] int 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;Total ram usage:        8 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:   11
  2137 ;; This function calls:
  2138 ;;		_vfprintf
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text1
  2145  0011A4                     __ptext1:
  2146                           	opt callstack 0
  2147  0011A4                     _printf:
  2148                           	opt callstack 19
  2149                           
  2150                           ;incstack = 0
  2151  0011A4  0E6A               	movlw	low (?_printf+2)
  2152  0011A6  0100               	movlb	0	; () banked
  2153  0011A8  6FE7               	movwf	printf@ap& (0+255),b
  2154  0011AA  0E00               	movlw	high (?_printf+2)
  2155  0011AC  6FE8               	movwf	(printf@ap+1)& (0+255),b
  2156                           
  2157                           ; BSR set to: 0
  2158  0011AE  0E00               	movlw	0
  2159  0011B0  6E60               	movwf	vfprintf@fp,c
  2160  0011B2  0E00               	movlw	0
  2161  0011B4  6E61               	movwf	vfprintf@fp+1,c
  2162  0011B6  C068  F062         	movff	printf@fmt,vfprintf@fmt
  2163  0011BA  C069  F063         	movff	printf@fmt+1,vfprintf@fmt+1
  2164  0011BE  0EE7               	movlw	low printf@ap
  2165  0011C0  6E64               	movwf	vfprintf@ap,c
  2166  0011C2  0E00               	movlw	high printf@ap
  2167  0011C4  6E65               	movwf	vfprintf@ap+1,c
  2168  0011C6  ECDF  F007         	call	_vfprintf	;wreg free
  2169  0011CA  0012               	return		;funcret
  2170  0011CC                     __end_of_printf:
  2171                           	opt callstack 0
  2172                           
  2173 ;; *************** function _vfprintf *****************
  2174 ;; Defined at:
  2175 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  fp              2   95[COMRAM] PTR struct _IO_FILE
  2178 ;;		 -> NULL(0), 
  2179 ;;  fmt             2   97[COMRAM] PTR const unsigned char 
  2180 ;;		 -> STR_33(10), STR_32(14), STR_31(11), STR_30(12), 
  2181 ;;		 -> STR_29(10), STR_28(15), STR_27(14), STR_26(12), 
  2182 ;;		 -> STR_25(10), STR_24(15), STR_23(12), STR_22(15), 
  2183 ;;		 -> STR_21(12), STR_20(16), STR_19(9), STR_18(9), 
  2184 ;;		 -> STR_17(11), STR_16(13), STR_15(15), STR_14(11), 
  2185 ;;		 -> STR_13(15), STR_12(12), STR_11(15), STR_10(13), 
  2186 ;;		 -> STR_9(11), STR_8(9), STR_7(12), STR_6(10), 
  2187 ;;		 -> STR_5(15), STR_4(17), STR_3(13), STR_2(9), 
  2188 ;;		 -> STR_1(8), 
  2189 ;;  ap              2   99[COMRAM] PTR PTR void 
  2190 ;;		 -> printf@ap(2), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  cfmt            2  101[COMRAM] PTR unsigned char 
  2193 ;;		 -> STR_33(10), STR_32(14), STR_31(11), STR_30(12), 
  2194 ;;		 -> STR_29(10), STR_28(15), STR_27(14), STR_26(12), 
  2195 ;;		 -> STR_25(10), STR_24(15), STR_23(12), STR_22(15), 
  2196 ;;		 -> STR_21(12), STR_20(16), STR_19(9), STR_18(9), 
  2197 ;;		 -> STR_17(11), STR_16(13), STR_15(15), STR_14(11), 
  2198 ;;		 -> STR_13(15), STR_12(12), STR_11(15), STR_10(13), 
  2199 ;;		 -> STR_9(11), STR_8(9), STR_7(12), STR_6(10), 
  2200 ;;		 -> STR_5(15), STR_4(17), STR_3(13), STR_2(9), 
  2201 ;;		 -> STR_1(8), 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  2   95[COMRAM] int 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:        8 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:   10
  2218 ;; This function calls:
  2219 ;;		_vfpfcnvrt
  2220 ;; This function is called by:
  2221 ;;		_printf
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text2
  2226  000FBE                     __ptext2:
  2227                           	opt callstack 0
  2228  000FBE                     _vfprintf:
  2229                           	opt callstack 19
  2230                           
  2231                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  2232                           
  2233                           ;incstack = 0
  2234  000FBE  C062  F066         	movff	vfprintf@fmt,vfprintf@cfmt
  2235  000FC2  C063  F067         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2236                           
  2237                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2238  000FC6  0E00               	movlw	0
  2239  000FC8  6E6D               	movwf	_nout+1,c
  2240  000FCA  0E00               	movlw	0
  2241  000FCC  6E6C               	movwf	_nout,c
  2242                           
  2243                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2244  000FCE  D012               	goto	l2605
  2245  000FD0                     l2603:
  2246                           
  2247                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2248  000FD0  C060  F04F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2249  000FD4  C061  F050         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2250  000FD8  0E66               	movlw	low vfprintf@cfmt
  2251  000FDA  6E51               	movwf	vfpfcnvrt@fmt,c
  2252  000FDC  0E00               	movlw	high vfprintf@cfmt
  2253  000FDE  6E52               	movwf	vfpfcnvrt@fmt+1,c
  2254  000FE0  C064  F053         	movff	vfprintf@ap,vfpfcnvrt@ap
  2255  000FE4  C065  F054         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2256  000FE8  EC63  F004         	call	_vfpfcnvrt	;wreg free
  2257  000FEC  504F               	movf	?_vfpfcnvrt,w,c
  2258  000FEE  266C               	addwf	_nout,f,c
  2259  000FF0  5050               	movf	?_vfpfcnvrt+1,w,c
  2260  000FF2  226D               	addwfc	_nout+1,f,c
  2261  000FF4                     l2605:
  2262                           
  2263                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2264  000FF4  C066  FFF6         	movff	vfprintf@cfmt,tblptrl
  2265  000FF8  C067  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2266  000FFC                     	if	0	;tblptru may be non-zero
  2267  000FFC                     	endif
  2268  000FFC                     	if	0	;tblptru may be non-zero
  2269  000FFC                     	endif
  2270  000FFC  0008               	tblrd		*
  2271  000FFE  50F5               	movf	tablat,w,c
  2272  001000  0900               	iorlw	0
  2273  001002  A4D8               	btfss	status,2,c
  2274  001004  D7E5               	goto	l2603
  2275                           
  2276                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  2277  001006  C06C  F060         	movff	_nout,?_vfprintf
  2278  00100A  C06D  F061         	movff	_nout+1,?_vfprintf+1
  2279  00100E  0012               	return		;funcret
  2280  001010                     __end_of_vfprintf:
  2281                           	opt callstack 0
  2282                           
  2283 ;; *************** function _vfpfcnvrt *****************
  2284 ;; Defined at:
  2285 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  2288 ;;		 -> NULL(0), 
  2289 ;;  fmt             2   80[COMRAM] PTR PTR unsigned char 
  2290 ;;		 -> vfprintf@cfmt(2), 
  2291 ;;  ap              2   82[COMRAM] PTR PTR void 
  2292 ;;		 -> printf@ap(2), 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  ll              8   86[COMRAM] long long 
  2295 ;;  llu             8    0        unsigned long long 
  2296 ;;  f               4    0        unsigned long long 
  2297 ;;  vp              3    0        PTR void 
  2298 ;;  ct              3    0        unsigned char [3]
  2299 ;;  cp              3    0        PTR unsigned char 
  2300 ;;  i               2    0        int 
  2301 ;;  done            2    0        int 
  2302 ;;  c               1   94[COMRAM] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  2   78[COMRAM] int 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2312 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;Total ram usage:       17 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    9
  2319 ;; This function calls:
  2320 ;;		_ctoa
  2321 ;;		_dtoa
  2322 ;;		_fputc
  2323 ;; This function is called by:
  2324 ;;		_vfprintf
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text3
  2329  0008C6                     __ptext3:
  2330                           	opt callstack 0
  2331  0008C6                     _vfpfcnvrt:
  2332                           	opt callstack 19
  2333                           
  2334                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  2335                           
  2336                           ;incstack = 0
  2337  0008C6  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  0008CA  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  0008CE  CFDE FFF6          	movff	postinc2,tblptrl
  2340  0008D2  CFDD FFF7          	movff	postdec2,tblptrh
  2341  0008D6                     	if	0	;tblptru may be non-zero
  2342  0008D6                     	endif
  2343  0008D6                     	if	0	;tblptru may be non-zero
  2344  0008D6                     	endif
  2345  0008D6  0008               	tblrd		*
  2346  0008D8  50F5               	movf	tablat,w,c
  2347  0008DA  0A25               	xorlw	37
  2348  0008DC  A4D8               	btfss	status,2,c
  2349  0008DE  D0CC               	goto	l2587
  2350                           
  2351                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2352  0008E0  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2353  0008E4  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2354  0008E8  2ADE               	incf	postinc2,f,c
  2355  0008EA  0E00               	movlw	0
  2356  0008EC  22DD               	addwfc	postdec2,f,c
  2357                           
  2358                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  2359  0008EE  0E00               	movlw	0
  2360  0008F0  6E6F               	movwf	_width+1,c
  2361  0008F2  0E00               	movlw	0
  2362  0008F4  6E6E               	movwf	_width,c
  2363  0008F6  C06E  F072         	movff	_width,_flags
  2364  0008FA  C06F  F073         	movff	_width+1,_flags+1
  2365                           
  2366                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  2367  0008FE  6870               	setf	_prec,c
  2368  000900  6871               	setf	_prec+1,c
  2369                           
  2370                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
  2371  000902  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2372  000906  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2373  00090A  CFDE FFF6          	movff	postinc2,tblptrl
  2374  00090E  CFDD FFF7          	movff	postdec2,tblptrh
  2375  000912                     	if	0	;tblptru may be non-zero
  2376  000912                     	endif
  2377  000912                     	if	0	;tblptru may be non-zero
  2378  000912                     	endif
  2379  000912  0008               	tblrd		*
  2380  000914  50F5               	movf	tablat,w,c
  2381  000916  0A63               	xorlw	99
  2382  000918  A4D8               	btfss	status,2,c
  2383  00091A  D026               	goto	l2561
  2384                           
  2385                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
  2386  00091C  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2387  000920  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2388  000924  2ADE               	incf	postinc2,f,c
  2389  000926  0E00               	movlw	0
  2390  000928  22DD               	addwfc	postdec2,f,c
  2391                           
  2392                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2393  00092A  C053  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2394  00092E  C054  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2395  000932  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2396  000936  0E02               	movlw	2
  2397  000938  26DE               	addwf	postinc2,f,c
  2398  00093A  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2399  00093E  0E00               	movlw	0
  2400  000940  22DD               	addwfc	postdec2,f,c
  2401  000942  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2402  000946  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2403  00094A  50DF               	movf	indf2,w,c
  2404  00094C  6E5F               	movwf	vfpfcnvrt@c,c
  2405                           
  2406                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
  2407  00094E  C04F  F02B         	movff	vfpfcnvrt@fp,ctoa@fp
  2408  000952  C050  F02C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2409  000956  C05F  F02D         	movff	vfpfcnvrt@c,ctoa@c
  2410  00095A  EC08  F008         	call	_ctoa	;wreg free
  2411  00095E  C02B  F04F         	movff	?_ctoa,?_vfpfcnvrt
  2412  000962  C02C  F050         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2413  000966  0012               	return	
  2414  000968                     l2561:
  2415                           
  2416                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  2417  000968  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418  00096C  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419  000970  CFDE FFF6          	movff	postinc2,tblptrl
  2420  000974  CFDD FFF7          	movff	postdec2,tblptrh
  2421  000978                     	if	0	;tblptru may be non-zero
  2422  000978                     	endif
  2423  000978                     	if	0	;tblptru may be non-zero
  2424  000978                     	endif
  2425  000978  0008               	tblrd		*
  2426  00097A  50F5               	movf	tablat,w,c
  2427  00097C  0A64               	xorlw	100
  2428  00097E  B4D8               	btfsc	status,2,c
  2429  000980  D00D               	goto	u2090
  2430  000982  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2431  000986  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2432  00098A  CFDE FFF6          	movff	postinc2,tblptrl
  2433  00098E  CFDD FFF7          	movff	postdec2,tblptrh
  2434  000992                     	if	0	;tblptru may be non-zero
  2435  000992                     	endif
  2436  000992                     	if	0	;tblptru may be non-zero
  2437  000992                     	endif
  2438  000992  0008               	tblrd		*
  2439  000994  50F5               	movf	tablat,w,c
  2440  000996  0A69               	xorlw	105
  2441  000998  A4D8               	btfss	status,2,c
  2442  00099A  D03F               	goto	l2571
  2443  00099C                     u2090:
  2444                           
  2445                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  2446  00099C  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2447  0009A0  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2448  0009A4  2ADE               	incf	postinc2,f,c
  2449  0009A6  0E00               	movlw	0
  2450  0009A8  22DD               	addwfc	postdec2,f,c
  2451                           
  2452                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2453  0009AA  C053  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2454  0009AE  C054  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2455  0009B2  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2456  0009B6  0E02               	movlw	2
  2457  0009B8  26DE               	addwf	postinc2,f,c
  2458  0009BA  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2459  0009BE  0E00               	movlw	0
  2460  0009C0  22DD               	addwfc	postdec2,f,c
  2461  0009C2  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2462  0009C6  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2463  0009CA  CFDE F057          	movff	postinc2,vfpfcnvrt@ll
  2464  0009CE  CFDD F058          	movff	postdec2,vfpfcnvrt@ll+1
  2465  0009D2  0E00               	movlw	0
  2466  0009D4  BE58               	btfsc	vfpfcnvrt@ll+1,7,c
  2467  0009D6  0EFF               	movlw	-1
  2468  0009D8  6E59               	movwf	vfpfcnvrt@ll+2,c
  2469  0009DA  6E5A               	movwf	vfpfcnvrt@ll+3,c
  2470  0009DC  6E5B               	movwf	vfpfcnvrt@ll+4,c
  2471  0009DE  6E5C               	movwf	vfpfcnvrt@ll+5,c
  2472  0009E0  6E5D               	movwf	vfpfcnvrt@ll+6,c
  2473  0009E2  6E5E               	movwf	vfpfcnvrt@ll+7,c
  2474                           
  2475                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  2476  0009E4  C04F  F02B         	movff	vfpfcnvrt@fp,dtoa@fp
  2477  0009E8  C050  F02C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2478  0009EC  C057  F02D         	movff	vfpfcnvrt@ll,dtoa@d
  2479  0009F0  C058  F02E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2480  0009F4  C059  F02F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2481  0009F8  C05A  F030         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2482  0009FC  C05B  F031         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2483  000A00  C05C  F032         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2484  000A04  C05D  F033         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2485  000A08  C05E  F034         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2486  000A0C  EC42  F003         	call	_dtoa	;wreg free
  2487  000A10  C02B  F04F         	movff	?_dtoa,?_vfpfcnvrt
  2488  000A14  C02C  F050         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2489  000A18  0012               	return	
  2490  000A1A                     l2571:
  2491                           
  2492                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  2493  000A1A  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2494  000A1E  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2495  000A22  CFDE FFF6          	movff	postinc2,tblptrl
  2496  000A26  CFDD FFF7          	movff	postdec2,tblptrh
  2497  000A2A                     	if	0	;tblptru may be non-zero
  2498  000A2A                     	endif
  2499  000A2A                     	if	0	;tblptru may be non-zero
  2500  000A2A                     	endif
  2501  000A2A  0008               	tblrd		*
  2502  000A2C  50F5               	movf	tablat,w,c
  2503  000A2E  0A25               	xorlw	37
  2504  000A30  A4D8               	btfss	status,2,c
  2505  000A32  D016               	goto	l2581
  2506                           
  2507                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  2508  000A34  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2509  000A38  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2510  000A3C  2ADE               	incf	postinc2,f,c
  2511  000A3E  0E00               	movlw	0
  2512  000A40  22DD               	addwfc	postdec2,f,c
  2513                           
  2514                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  2515  000A42  0E00               	movlw	0
  2516  000A44  6E11               	movwf	fputc@c+1,c
  2517  000A46  0E25               	movlw	37
  2518  000A48  6E10               	movwf	fputc@c,c
  2519  000A4A  C04F  F012         	movff	vfpfcnvrt@fp,fputc@fp
  2520  000A4E  C050  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2521  000A52  EC74  F007         	call	_fputc	;wreg free
  2522  000A56                     l2577:
  2523                           
  2524                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  2525  000A56  0E00               	movlw	0
  2526  000A58  6E50               	movwf	?_vfpfcnvrt+1,c
  2527  000A5A  0E01               	movlw	1
  2528  000A5C  6E4F               	movwf	?_vfpfcnvrt,c
  2529  000A5E  0012               	return	
  2530  000A60                     l2581:
  2531                           
  2532                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  2533  000A60  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2534  000A64  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2535  000A68  2ADE               	incf	postinc2,f,c
  2536  000A6A  0E00               	movlw	0
  2537  000A6C  22DD               	addwfc	postdec2,f,c
  2538                           
  2539                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  2540  000A6E  0E00               	movlw	0
  2541  000A70  6E50               	movwf	?_vfpfcnvrt+1,c
  2542  000A72  0E00               	movlw	0
  2543  000A74  6E4F               	movwf	?_vfpfcnvrt,c
  2544  000A76  0012               	return	
  2545  000A78                     l2587:
  2546                           
  2547                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  2548  000A78  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2549  000A7C  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2550  000A80  CFDE FFF6          	movff	postinc2,tblptrl
  2551  000A84  CFDD FFF7          	movff	postdec2,tblptrh
  2552  000A88                     	if	0	;tblptru may be non-zero
  2553  000A88                     	endif
  2554  000A88                     	if	0	;tblptru may be non-zero
  2555  000A88                     	endif
  2556  000A88  0008               	tblrd		*
  2557  000A8A  50F5               	movf	tablat,w,c
  2558  000A8C  6E10               	movwf	fputc@c,c
  2559  000A8E  6A11               	clrf	fputc@c+1,c
  2560  000A90  C04F  F012         	movff	vfpfcnvrt@fp,fputc@fp
  2561  000A94  C050  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2562  000A98  EC74  F007         	call	_fputc	;wreg free
  2563                           
  2564                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2565  000A9C  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2566  000AA0  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2567  000AA4  2ADE               	incf	postinc2,f,c
  2568  000AA6  0E00               	movlw	0
  2569  000AA8  22DD               	addwfc	postdec2,f,c
  2570  000AAA  D7D5               	goto	l2577
  2571  000AAC                     __end_of_vfpfcnvrt:
  2572                           	opt callstack 0
  2573                           
  2574 ;; *************** function _dtoa *****************
  2575 ;; Defined at:
  2576 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  2579 ;;		 -> NULL(0), 
  2580 ;;  d               8   44[COMRAM] long long 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  n               8   68[COMRAM] long long 
  2583 ;;  i               2   76[COMRAM] int 
  2584 ;;  s               2   66[COMRAM] int 
  2585 ;;  w               2   64[COMRAM] int 
  2586 ;;  p               2   62[COMRAM] int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2   42[COMRAM] int 
  2589 ;; Registers used:
  2590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:       36 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    8
  2603 ;; This function calls:
  2604 ;;		___aodiv
  2605 ;;		___aomod
  2606 ;;		_abs
  2607 ;;		_pad
  2608 ;; This function is called by:
  2609 ;;		_vfpfcnvrt
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text4
  2614  000684                     __ptext4:
  2615                           	opt callstack 0
  2616  000684                     _dtoa:
  2617                           	opt callstack 19
  2618                           
  2619                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  2620                           
  2621                           ;incstack = 0
  2622  000684  C02D  F045         	movff	dtoa@d,dtoa@n
  2623  000688  C02E  F046         	movff	dtoa@d+1,dtoa@n+1
  2624  00068C  C02F  F047         	movff	dtoa@d+2,dtoa@n+2
  2625  000690  C030  F048         	movff	dtoa@d+3,dtoa@n+3
  2626  000694  C031  F049         	movff	dtoa@d+4,dtoa@n+4
  2627  000698  C032  F04A         	movff	dtoa@d+5,dtoa@n+5
  2628  00069C  C033  F04B         	movff	dtoa@d+6,dtoa@n+6
  2629  0006A0  C034  F04C         	movff	dtoa@d+7,dtoa@n+7
  2630                           
  2631                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  2632  0006A4  AE4C               	btfss	dtoa@n+7,7,c
  2633  0006A6  D002               	goto	u1910
  2634  0006A8  0E01               	movlw	1
  2635  0006AA  D001               	goto	u1920
  2636  0006AC                     u1910:
  2637  0006AC  0E00               	movlw	0
  2638  0006AE                     u1920:
  2639  0006AE  6E43               	movwf	dtoa@s,c
  2640  0006B0  6A44               	clrf	dtoa@s+1,c
  2641                           
  2642                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  2643  0006B2  5043               	movf	dtoa@s,w,c
  2644  0006B4  1044               	iorwf	dtoa@s+1,w,c
  2645  0006B6  B4D8               	btfsc	status,2,c
  2646  0006B8  D010               	goto	l2489
  2647                           
  2648                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  2649  0006BA  1E4C               	comf	dtoa@n+7,f,c
  2650  0006BC  1E4B               	comf	dtoa@n+6,f,c
  2651  0006BE  1E4A               	comf	dtoa@n+5,f,c
  2652  0006C0  1E49               	comf	dtoa@n+4,f,c
  2653  0006C2  1E48               	comf	dtoa@n+3,f,c
  2654  0006C4  1E47               	comf	dtoa@n+2,f,c
  2655  0006C6  1E46               	comf	dtoa@n+1,f,c
  2656  0006C8  6C45               	negf	dtoa@n,c
  2657  0006CA  0E00               	movlw	0
  2658  0006CC  2246               	addwfc	dtoa@n+1,f,c
  2659  0006CE  2247               	addwfc	dtoa@n+2,f,c
  2660  0006D0  2248               	addwfc	dtoa@n+3,f,c
  2661  0006D2  2249               	addwfc	dtoa@n+4,f,c
  2662  0006D4  224A               	addwfc	dtoa@n+5,f,c
  2663  0006D6  224B               	addwfc	dtoa@n+6,f,c
  2664  0006D8  224C               	addwfc	dtoa@n+7,f,c
  2665  0006DA                     l2489:
  2666                           
  2667                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  2668  0006DA  AE71               	btfss	_prec+1,7,c
  2669                           
  2670                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  2671  0006DC  9272               	bcf	_flags,1,c
  2672                           
  2673                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  2674  0006DE  BE71               	btfsc	_prec+1,7,c
  2675  0006E0  D005               	goto	u1950
  2676  0006E2  5071               	movf	_prec+1,w,c
  2677  0006E4  E108               	bnz	l188
  2678  0006E6  0470               	decf	_prec,w,c
  2679  0006E8  B0D8               	btfsc	status,0,c
  2680  0006EA  D005               	goto	l188
  2681  0006EC                     u1950:
  2682  0006EC  0E00               	movlw	0
  2683  0006EE  6E40               	movwf	dtoa@p+1,c
  2684  0006F0  0E01               	movlw	1
  2685  0006F2  6E3F               	movwf	dtoa@p,c
  2686  0006F4  D004               	goto	l190
  2687  0006F6                     l188:
  2688  0006F6  C070  F03F         	movff	_prec,dtoa@p
  2689  0006FA  C071  F040         	movff	_prec+1,dtoa@p+1
  2690  0006FE                     l190:
  2691                           
  2692                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  2693  0006FE  C06E  F041         	movff	_width,dtoa@w
  2694  000702  C06F  F042         	movff	_width+1,dtoa@w+1
  2695                           
  2696                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  2697  000706  5043               	movf	dtoa@s,w,c
  2698  000708  1044               	iorwf	dtoa@s+1,w,c
  2699  00070A  A4D8               	btfss	status,2,c
  2700  00070C  D002               	goto	u1970
  2701  00070E  A472               	btfss	_flags,2,c
  2702  000710  D003               	goto	l2503
  2703  000712                     u1970:
  2704                           
  2705                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  2706  000712  0641               	decf	dtoa@w,f,c
  2707  000714  A0D8               	btfss	status,0,c
  2708  000716  0642               	decf	dtoa@w+1,f,c
  2709  000718                     l2503:
  2710                           
  2711                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  2712  000718  0E00               	movlw	0
  2713  00071A  6E4E               	movwf	dtoa@i+1,c
  2714  00071C  0E1F               	movlw	31
  2715  00071E  6E4D               	movwf	dtoa@i,c
  2716                           
  2717                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  2718  000720  0E00               	movlw	0
  2719  000722  0100               	movlb	0	; () banked
  2720  000724  6FE4               	movwf	(_dbuf+31)& (0+255),b
  2721                           
  2722                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2723  000726  D07C               	goto	l2517
  2724  000728                     l2507:
  2725                           
  2726                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  2727  000728  064D               	decf	dtoa@i,f,c
  2728  00072A  A0D8               	btfss	status,0,c
  2729  00072C  064E               	decf	dtoa@i+1,f,c
  2730                           
  2731                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  2732  00072E  0EC5               	movlw	low _dbuf
  2733  000730  244D               	addwf	dtoa@i,w,c
  2734  000732  6ED9               	movwf	fsr2l,c
  2735  000734  0E00               	movlw	high _dbuf
  2736  000736  204E               	addwfc	dtoa@i+1,w,c
  2737  000738  6EDA               	movwf	fsr2h,c
  2738  00073A  C045  F00C         	movff	dtoa@n,___aomod@dividend
  2739  00073E  C046  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  2740  000742  C047  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  2741  000746  C048  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  2742  00074A  C049  F010         	movff	dtoa@n+4,___aomod@dividend+4
  2743  00074E  C04A  F011         	movff	dtoa@n+5,___aomod@dividend+5
  2744  000752  C04B  F012         	movff	dtoa@n+6,___aomod@dividend+6
  2745  000756  C04C  F013         	movff	dtoa@n+7,___aomod@dividend+7
  2746  00075A  0E0A               	movlw	10
  2747  00075C  6E14               	movwf	___aomod@divisor,c
  2748  00075E  0E00               	movlw	0
  2749  000760  6E15               	movwf	___aomod@divisor+1,c
  2750  000762  0E00               	movlw	0
  2751  000764  6E16               	movwf	___aomod@divisor+2,c
  2752  000766  0E00               	movlw	0
  2753  000768  6E17               	movwf	___aomod@divisor+3,c
  2754  00076A  0E00               	movlw	0
  2755  00076C  6E18               	movwf	___aomod@divisor+4,c
  2756  00076E  0E00               	movlw	0
  2757  000770  6E19               	movwf	___aomod@divisor+5,c
  2758  000772  0E00               	movlw	0
  2759  000774  6E1A               	movwf	___aomod@divisor+6,c
  2760  000776  0E00               	movlw	0
  2761  000778  6E1B               	movwf	___aomod@divisor+7,c
  2762  00077A  ECFA  F005         	call	___aomod	;wreg free
  2763  00077E  C00C  F035         	movff	?___aomod,??_dtoa
  2764  000782  C00D  F036         	movff	?___aomod+1,??_dtoa+1
  2765  000786  C00E  F037         	movff	?___aomod+2,??_dtoa+2
  2766  00078A  C00F  F038         	movff	?___aomod+3,??_dtoa+3
  2767  00078E  C010  F039         	movff	?___aomod+4,??_dtoa+4
  2768  000792  C011  F03A         	movff	?___aomod+5,??_dtoa+5
  2769  000796  C012  F03B         	movff	?___aomod+6,??_dtoa+6
  2770  00079A  C013  F03C         	movff	?___aomod+7,??_dtoa+7
  2771  00079E  C035  F01E         	movff	??_dtoa,abs@a
  2772  0007A2  C037  F01F         	movff	??_dtoa+2,abs@a+1
  2773  0007A6  EC8F  F008         	call	_abs	;wreg free
  2774  0007AA  501E               	movf	?_abs,w,c
  2775  0007AC  0F30               	addlw	48
  2776  0007AE  6EDF               	movwf	indf2,c
  2777                           
  2778                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  2779  0007B0  063F               	decf	dtoa@p,f,c
  2780  0007B2  A0D8               	btfss	status,0,c
  2781  0007B4  0640               	decf	dtoa@p+1,f,c
  2782                           
  2783                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  2784  0007B6  0641               	decf	dtoa@w,f,c
  2785  0007B8  A0D8               	btfss	status,0,c
  2786  0007BA  0642               	decf	dtoa@w+1,f,c
  2787                           
  2788                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  2789  0007BC  C045  F00C         	movff	dtoa@n,___aodiv@dividend
  2790  0007C0  C046  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  2791  0007C4  C047  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  2792  0007C8  C048  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  2793  0007CC  C049  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  2794  0007D0  C04A  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  2795  0007D4  C04B  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  2796  0007D8  C04C  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  2797  0007DC  0E0A               	movlw	10
  2798  0007DE  6E14               	movwf	___aodiv@divisor,c
  2799  0007E0  0E00               	movlw	0
  2800  0007E2  6E15               	movwf	___aodiv@divisor+1,c
  2801  0007E4  0E00               	movlw	0
  2802  0007E6  6E16               	movwf	___aodiv@divisor+2,c
  2803  0007E8  0E00               	movlw	0
  2804  0007EA  6E17               	movwf	___aodiv@divisor+3,c
  2805  0007EC  0E00               	movlw	0
  2806  0007EE  6E18               	movwf	___aodiv@divisor+4,c
  2807  0007F0  0E00               	movlw	0
  2808  0007F2  6E19               	movwf	___aodiv@divisor+5,c
  2809  0007F4  0E00               	movlw	0
  2810  0007F6  6E1A               	movwf	___aodiv@divisor+6,c
  2811  0007F8  0E00               	movlw	0
  2812  0007FA  6E1B               	movwf	___aodiv@divisor+7,c
  2813  0007FC  EC56  F005         	call	___aodiv	;wreg free
  2814  000800  C00C  F045         	movff	?___aodiv,dtoa@n
  2815  000804  C00D  F046         	movff	?___aodiv+1,dtoa@n+1
  2816  000808  C00E  F047         	movff	?___aodiv+2,dtoa@n+2
  2817  00080C  C00F  F048         	movff	?___aodiv+3,dtoa@n+3
  2818  000810  C010  F049         	movff	?___aodiv+4,dtoa@n+4
  2819  000814  C011  F04A         	movff	?___aodiv+5,dtoa@n+5
  2820  000818  C012  F04B         	movff	?___aodiv+6,dtoa@n+6
  2821  00081C  C013  F04C         	movff	?___aodiv+7,dtoa@n+7
  2822  000820                     l2517:
  2823                           
  2824                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2825  000820  BE4E               	btfsc	dtoa@i+1,7,c
  2826  000822  D01F               	goto	u2020
  2827  000824  504E               	movf	dtoa@i+1,w,c
  2828  000826  E103               	bnz	u1980
  2829  000828  044D               	decf	dtoa@i,w,c
  2830  00082A  A0D8               	btfss	status,0,c
  2831  00082C  D01A               	goto	u2020
  2832  00082E                     u1980:
  2833  00082E  5045               	movf	dtoa@n,w,c
  2834  000830  1046               	iorwf	dtoa@n+1,w,c
  2835  000832  1047               	iorwf	dtoa@n+2,w,c
  2836  000834  1048               	iorwf	dtoa@n+3,w,c
  2837  000836  1049               	iorwf	dtoa@n+4,w,c
  2838  000838  104A               	iorwf	dtoa@n+5,w,c
  2839  00083A  104B               	iorwf	dtoa@n+6,w,c
  2840  00083C  104C               	iorwf	dtoa@n+7,w,c
  2841  00083E  A4D8               	btfss	status,2,c
  2842  000840  D773               	goto	l2507
  2843  000842  BE40               	btfsc	dtoa@p+1,7,c
  2844  000844  D005               	goto	u2000
  2845  000846  5040               	movf	dtoa@p+1,w,c
  2846  000848  E102               	bnz	u2001
  2847  00084A  043F               	decf	dtoa@p,w,c
  2848  00084C  B0D8               	btfsc	status,0,c
  2849  00084E                     u2001:
  2850  00084E  D76C               	goto	l2507
  2851  000850                     u2000:
  2852  000850  BE42               	btfsc	dtoa@w+1,7,c
  2853  000852  D007               	goto	u2020
  2854  000854  5042               	movf	dtoa@w+1,w,c
  2855  000856  E103               	bnz	u2010
  2856  000858  0441               	decf	dtoa@w,w,c
  2857  00085A  A0D8               	btfss	status,0,c
  2858  00085C  D002               	goto	u2020
  2859  00085E                     u2010:
  2860  00085E  B272               	btfsc	_flags,1,c
  2861  000860  D763               	goto	l2507
  2862  000862                     u2020:
  2863                           
  2864                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  2865  000862  5043               	movf	dtoa@s,w,c
  2866  000864  1044               	iorwf	dtoa@s+1,w,c
  2867  000866  A4D8               	btfss	status,2,c
  2868  000868  D002               	goto	u2040
  2869  00086A  A472               	btfss	_flags,2,c
  2870  00086C  D017               	goto	l2541
  2871  00086E                     u2040:
  2872                           
  2873                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  2874  00086E  064D               	decf	dtoa@i,f,c
  2875  000870  A0D8               	btfss	status,0,c
  2876  000872  064E               	decf	dtoa@i+1,f,c
  2877                           
  2878                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  2879  000874  5043               	movf	dtoa@s,w,c
  2880  000876  1044               	iorwf	dtoa@s+1,w,c
  2881  000878  A4D8               	btfss	status,2,c
  2882  00087A  D004               	goto	l2537
  2883  00087C  0E00               	movlw	0
  2884  00087E  6E3E               	movwf	_dtoa$332+1,c
  2885  000880  0E2B               	movlw	43
  2886  000882  D003               	goto	L1
  2887  000884                     l2537:
  2888  000884  0E00               	movlw	0
  2889  000886  6E3E               	movwf	_dtoa$332+1,c
  2890  000888  0E2D               	movlw	45
  2891  00088A                     L1:
  2892  00088A  6E3D               	movwf	_dtoa$332,c
  2893  00088C  0EC5               	movlw	low _dbuf
  2894  00088E  244D               	addwf	dtoa@i,w,c
  2895  000890  6ED9               	movwf	fsr2l,c
  2896  000892  0E00               	movlw	high _dbuf
  2897  000894  204E               	addwfc	dtoa@i+1,w,c
  2898  000896  6EDA               	movwf	fsr2h,c
  2899  000898  C03D  FFDF         	movff	_dtoa$332,indf2
  2900  00089C                     l2541:
  2901                           
  2902                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  2903  00089C  C02B  F020         	movff	dtoa@fp,pad@fp
  2904  0008A0  C02C  F021         	movff	dtoa@fp+1,pad@fp+1
  2905  0008A4  0EC5               	movlw	low _dbuf
  2906  0008A6  244D               	addwf	dtoa@i,w,c
  2907  0008A8  6E22               	movwf	pad@buf,c
  2908  0008AA  0E00               	movlw	high _dbuf
  2909  0008AC  204E               	addwfc	dtoa@i+1,w,c
  2910  0008AE  6E23               	movwf	pad@buf+1,c
  2911  0008B0  C041  F024         	movff	dtoa@w,pad@p
  2912  0008B4  C042  F025         	movff	dtoa@w+1,pad@p+1
  2913  0008B8  ECF1  F006         	call	_pad	;wreg free
  2914  0008BC  C020  F02B         	movff	?_pad,?_dtoa
  2915  0008C0  C021  F02C         	movff	?_pad+1,?_dtoa+1
  2916  0008C4  0012               	return		;funcret
  2917  0008C6                     __end_of_dtoa:
  2918                           	opt callstack 0
  2919                           
  2920 ;; *************** function _abs *****************
  2921 ;; Defined at:
  2922 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  a               2   29[COMRAM] int 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  2   29[COMRAM] int 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;Total ram usage:        4 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_dtoa
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text5
  2951  00111E                     __ptext5:
  2952                           	opt callstack 0
  2953  00111E                     _abs:
  2954                           	opt callstack 25
  2955                           
  2956                           ;incstack = 0
  2957  00111E  BE1F               	btfsc	abs@a+1,7,c
  2958  001120  D005               	goto	u1760
  2959  001122  501F               	movf	abs@a+1,w,c
  2960  001124  E110               	bnz	l901
  2961  001126  041E               	decf	abs@a,w,c
  2962  001128  B0D8               	btfsc	status,0,c
  2963  00112A  D00D               	goto	l901
  2964  00112C                     u1760:
  2965  00112C  C01E  F020         	movff	abs@a,??_abs
  2966  001130  C01F  F021         	movff	abs@a+1,??_abs+1
  2967  001134  1E20               	comf	??_abs,f,c
  2968  001136  1E21               	comf	??_abs+1,f,c
  2969  001138  4A20               	infsnz	??_abs,f,c
  2970  00113A  2A21               	incf	??_abs+1,f,c
  2971  00113C  C020  F01E         	movff	??_abs,?_abs
  2972  001140  C021  F01F         	movff	??_abs+1,?_abs+1
  2973  001144  0012               	return	
  2974  001146                     l901:
  2975  001146  C01E  F01E         	movff	abs@a,?_abs
  2976  00114A  C01F  F01F         	movff	abs@a+1,?_abs+1
  2977  00114E  0012               	return		;funcret
  2978  001150                     __end_of_abs:
  2979                           	opt callstack 0
  2980                           
  2981 ;; *************** function ___aomod *****************
  2982 ;; Defined at:
  2983 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  dividend        8   11[COMRAM] long long 
  2986 ;;  divisor         8   19[COMRAM] long long 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  sign            1   28[COMRAM] unsigned char 
  2989 ;;  counter         1   27[COMRAM] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  8   11[COMRAM] long long 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2999 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;Total ram usage:       18 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    1
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_dtoa
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text6
  3014  000BF4                     __ptext6:
  3015                           	opt callstack 0
  3016  000BF4                     ___aomod:
  3017                           	opt callstack 25
  3018                           
  3019                           ;incstack = 0
  3020  000BF4  0E00               	movlw	0
  3021  000BF6  6E1D               	movwf	___aomod@sign,c
  3022  000BF8  AE13               	btfss	___aomod@dividend+7,7,c
  3023  000BFA  D012               	goto	l2441
  3024  000BFC  1E13               	comf	___aomod@dividend+7,f,c
  3025  000BFE  1E12               	comf	___aomod@dividend+6,f,c
  3026  000C00  1E11               	comf	___aomod@dividend+5,f,c
  3027  000C02  1E10               	comf	___aomod@dividend+4,f,c
  3028  000C04  1E0F               	comf	___aomod@dividend+3,f,c
  3029  000C06  1E0E               	comf	___aomod@dividend+2,f,c
  3030  000C08  1E0D               	comf	___aomod@dividend+1,f,c
  3031  000C0A  6C0C               	negf	___aomod@dividend,c
  3032  000C0C  0E00               	movlw	0
  3033  000C0E  220D               	addwfc	___aomod@dividend+1,f,c
  3034  000C10  220E               	addwfc	___aomod@dividend+2,f,c
  3035  000C12  220F               	addwfc	___aomod@dividend+3,f,c
  3036  000C14  2210               	addwfc	___aomod@dividend+4,f,c
  3037  000C16  2211               	addwfc	___aomod@dividend+5,f,c
  3038  000C18  2212               	addwfc	___aomod@dividend+6,f,c
  3039  000C1A  2213               	addwfc	___aomod@dividend+7,f,c
  3040  000C1C  0E01               	movlw	1
  3041  000C1E  6E1D               	movwf	___aomod@sign,c
  3042  000C20                     l2441:
  3043  000C20  AE1B               	btfss	___aomod@divisor+7,7,c
  3044  000C22  D010               	goto	l2445
  3045  000C24  1E1B               	comf	___aomod@divisor+7,f,c
  3046  000C26  1E1A               	comf	___aomod@divisor+6,f,c
  3047  000C28  1E19               	comf	___aomod@divisor+5,f,c
  3048  000C2A  1E18               	comf	___aomod@divisor+4,f,c
  3049  000C2C  1E17               	comf	___aomod@divisor+3,f,c
  3050  000C2E  1E16               	comf	___aomod@divisor+2,f,c
  3051  000C30  1E15               	comf	___aomod@divisor+1,f,c
  3052  000C32  6C14               	negf	___aomod@divisor,c
  3053  000C34  0E00               	movlw	0
  3054  000C36  2215               	addwfc	___aomod@divisor+1,f,c
  3055  000C38  2216               	addwfc	___aomod@divisor+2,f,c
  3056  000C3A  2217               	addwfc	___aomod@divisor+3,f,c
  3057  000C3C  2218               	addwfc	___aomod@divisor+4,f,c
  3058  000C3E  2219               	addwfc	___aomod@divisor+5,f,c
  3059  000C40  221A               	addwfc	___aomod@divisor+6,f,c
  3060  000C42  221B               	addwfc	___aomod@divisor+7,f,c
  3061  000C44                     l2445:
  3062  000C44  5014               	movf	___aomod@divisor,w,c
  3063  000C46  1015               	iorwf	___aomod@divisor+1,w,c
  3064  000C48  1016               	iorwf	___aomod@divisor+2,w,c
  3065  000C4A  1017               	iorwf	___aomod@divisor+3,w,c
  3066  000C4C  1018               	iorwf	___aomod@divisor+4,w,c
  3067  000C4E  1019               	iorwf	___aomod@divisor+5,w,c
  3068  000C50  101A               	iorwf	___aomod@divisor+6,w,c
  3069  000C52  101B               	iorwf	___aomod@divisor+7,w,c
  3070  000C54  B4D8               	btfsc	status,2,c
  3071  000C56  D03C               	goto	l2461
  3072  000C58  0E01               	movlw	1
  3073  000C5A  6E1C               	movwf	___aomod@counter,c
  3074  000C5C  D00A               	goto	l2451
  3075  000C5E                     l2449:
  3076  000C5E  90D8               	bcf	status,0,c
  3077  000C60  3614               	rlcf	___aomod@divisor,f,c
  3078  000C62  3615               	rlcf	___aomod@divisor+1,f,c
  3079  000C64  3616               	rlcf	___aomod@divisor+2,f,c
  3080  000C66  3617               	rlcf	___aomod@divisor+3,f,c
  3081  000C68  3618               	rlcf	___aomod@divisor+4,f,c
  3082  000C6A  3619               	rlcf	___aomod@divisor+5,f,c
  3083  000C6C  361A               	rlcf	___aomod@divisor+6,f,c
  3084  000C6E  361B               	rlcf	___aomod@divisor+7,f,c
  3085  000C70  2A1C               	incf	___aomod@counter,f,c
  3086  000C72                     l2451:
  3087  000C72  AE1B               	btfss	___aomod@divisor+7,7,c
  3088  000C74  D7F4               	goto	l2449
  3089  000C76                     u1870:
  3090  000C76  5014               	movf	___aomod@divisor,w,c
  3091  000C78  5C0C               	subwf	___aomod@dividend,w,c
  3092  000C7A  5015               	movf	___aomod@divisor+1,w,c
  3093  000C7C  580D               	subwfb	___aomod@dividend+1,w,c
  3094  000C7E  5016               	movf	___aomod@divisor+2,w,c
  3095  000C80  580E               	subwfb	___aomod@dividend+2,w,c
  3096  000C82  5017               	movf	___aomod@divisor+3,w,c
  3097  000C84  580F               	subwfb	___aomod@dividend+3,w,c
  3098  000C86  5018               	movf	___aomod@divisor+4,w,c
  3099  000C88  5810               	subwfb	___aomod@dividend+4,w,c
  3100  000C8A  5019               	movf	___aomod@divisor+5,w,c
  3101  000C8C  5811               	subwfb	___aomod@dividend+5,w,c
  3102  000C8E  501A               	movf	___aomod@divisor+6,w,c
  3103  000C90  5812               	subwfb	___aomod@dividend+6,w,c
  3104  000C92  501B               	movf	___aomod@divisor+7,w,c
  3105  000C94  5813               	subwfb	___aomod@dividend+7,w,c
  3106  000C96  A0D8               	btfss	status,0,c
  3107  000C98  D010               	goto	l2457
  3108  000C9A  5014               	movf	___aomod@divisor,w,c
  3109  000C9C  5E0C               	subwf	___aomod@dividend,f,c
  3110  000C9E  5015               	movf	___aomod@divisor+1,w,c
  3111  000CA0  5A0D               	subwfb	___aomod@dividend+1,f,c
  3112  000CA2  5016               	movf	___aomod@divisor+2,w,c
  3113  000CA4  5A0E               	subwfb	___aomod@dividend+2,f,c
  3114  000CA6  5017               	movf	___aomod@divisor+3,w,c
  3115  000CA8  5A0F               	subwfb	___aomod@dividend+3,f,c
  3116  000CAA  5018               	movf	___aomod@divisor+4,w,c
  3117  000CAC  5A10               	subwfb	___aomod@dividend+4,f,c
  3118  000CAE  5019               	movf	___aomod@divisor+5,w,c
  3119  000CB0  5A11               	subwfb	___aomod@dividend+5,f,c
  3120  000CB2  501A               	movf	___aomod@divisor+6,w,c
  3121  000CB4  5A12               	subwfb	___aomod@dividend+6,f,c
  3122  000CB6  501B               	movf	___aomod@divisor+7,w,c
  3123  000CB8  5A13               	subwfb	___aomod@dividend+7,f,c
  3124  000CBA                     l2457:
  3125  000CBA  90D8               	bcf	status,0,c
  3126  000CBC  321B               	rrcf	___aomod@divisor+7,f,c
  3127  000CBE  321A               	rrcf	___aomod@divisor+6,f,c
  3128  000CC0  3219               	rrcf	___aomod@divisor+5,f,c
  3129  000CC2  3218               	rrcf	___aomod@divisor+4,f,c
  3130  000CC4  3217               	rrcf	___aomod@divisor+3,f,c
  3131  000CC6  3216               	rrcf	___aomod@divisor+2,f,c
  3132  000CC8  3215               	rrcf	___aomod@divisor+1,f,c
  3133  000CCA  3214               	rrcf	___aomod@divisor,f,c
  3134  000CCC  2E1C               	decfsz	___aomod@counter,f,c
  3135  000CCE  D7D3               	goto	u1870
  3136  000CD0                     l2461:
  3137  000CD0  501D               	movf	___aomod@sign,w,c
  3138  000CD2  B4D8               	btfsc	status,2,c
  3139  000CD4  D010               	goto	l2465
  3140  000CD6  1E13               	comf	___aomod@dividend+7,f,c
  3141  000CD8  1E12               	comf	___aomod@dividend+6,f,c
  3142  000CDA  1E11               	comf	___aomod@dividend+5,f,c
  3143  000CDC  1E10               	comf	___aomod@dividend+4,f,c
  3144  000CDE  1E0F               	comf	___aomod@dividend+3,f,c
  3145  000CE0  1E0E               	comf	___aomod@dividend+2,f,c
  3146  000CE2  1E0D               	comf	___aomod@dividend+1,f,c
  3147  000CE4  6C0C               	negf	___aomod@dividend,c
  3148  000CE6  0E00               	movlw	0
  3149  000CE8  220D               	addwfc	___aomod@dividend+1,f,c
  3150  000CEA  220E               	addwfc	___aomod@dividend+2,f,c
  3151  000CEC  220F               	addwfc	___aomod@dividend+3,f,c
  3152  000CEE  2210               	addwfc	___aomod@dividend+4,f,c
  3153  000CF0  2211               	addwfc	___aomod@dividend+5,f,c
  3154  000CF2  2212               	addwfc	___aomod@dividend+6,f,c
  3155  000CF4  2213               	addwfc	___aomod@dividend+7,f,c
  3156  000CF6                     l2465:
  3157  000CF6  C00C  F00C         	movff	___aomod@dividend,?___aomod
  3158  000CFA  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  3159  000CFE  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  3160  000D02  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  3161  000D06  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  3162  000D0A  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  3163  000D0E  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  3164  000D12  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  3165  000D16  0012               	return		;funcret
  3166  000D18                     __end_of___aomod:
  3167                           	opt callstack 0
  3168                           
  3169 ;; *************** function ___aodiv *****************
  3170 ;; Defined at:
  3171 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  dividend        8   11[COMRAM] long long 
  3174 ;;  divisor         8   19[COMRAM] long long 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  quotient        8   29[COMRAM] long long 
  3177 ;;  sign            1   28[COMRAM] unsigned char 
  3178 ;;  counter         1   27[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  8   11[COMRAM] long long 
  3181 ;; Registers used:
  3182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:       26 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_dtoa
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text7
  3203  000AAC                     __ptext7:
  3204                           	opt callstack 0
  3205  000AAC                     ___aodiv:
  3206                           	opt callstack 25
  3207                           
  3208                           ;incstack = 0
  3209  000AAC  0E00               	movlw	0
  3210  000AAE  6E1D               	movwf	___aodiv@sign,c
  3211  000AB0  AE1B               	btfss	___aodiv@divisor+7,7,c
  3212  000AB2  D012               	goto	l2397
  3213  000AB4  1E1B               	comf	___aodiv@divisor+7,f,c
  3214  000AB6  1E1A               	comf	___aodiv@divisor+6,f,c
  3215  000AB8  1E19               	comf	___aodiv@divisor+5,f,c
  3216  000ABA  1E18               	comf	___aodiv@divisor+4,f,c
  3217  000ABC  1E17               	comf	___aodiv@divisor+3,f,c
  3218  000ABE  1E16               	comf	___aodiv@divisor+2,f,c
  3219  000AC0  1E15               	comf	___aodiv@divisor+1,f,c
  3220  000AC2  6C14               	negf	___aodiv@divisor,c
  3221  000AC4  0E00               	movlw	0
  3222  000AC6  2215               	addwfc	___aodiv@divisor+1,f,c
  3223  000AC8  2216               	addwfc	___aodiv@divisor+2,f,c
  3224  000ACA  2217               	addwfc	___aodiv@divisor+3,f,c
  3225  000ACC  2218               	addwfc	___aodiv@divisor+4,f,c
  3226  000ACE  2219               	addwfc	___aodiv@divisor+5,f,c
  3227  000AD0  221A               	addwfc	___aodiv@divisor+6,f,c
  3228  000AD2  221B               	addwfc	___aodiv@divisor+7,f,c
  3229  000AD4  0E01               	movlw	1
  3230  000AD6  6E1D               	movwf	___aodiv@sign,c
  3231  000AD8                     l2397:
  3232  000AD8  AE13               	btfss	___aodiv@dividend+7,7,c
  3233  000ADA  D012               	goto	l2403
  3234  000ADC  1E13               	comf	___aodiv@dividend+7,f,c
  3235  000ADE  1E12               	comf	___aodiv@dividend+6,f,c
  3236  000AE0  1E11               	comf	___aodiv@dividend+5,f,c
  3237  000AE2  1E10               	comf	___aodiv@dividend+4,f,c
  3238  000AE4  1E0F               	comf	___aodiv@dividend+3,f,c
  3239  000AE6  1E0E               	comf	___aodiv@dividend+2,f,c
  3240  000AE8  1E0D               	comf	___aodiv@dividend+1,f,c
  3241  000AEA  6C0C               	negf	___aodiv@dividend,c
  3242  000AEC  0E00               	movlw	0
  3243  000AEE  220D               	addwfc	___aodiv@dividend+1,f,c
  3244  000AF0  220E               	addwfc	___aodiv@dividend+2,f,c
  3245  000AF2  220F               	addwfc	___aodiv@dividend+3,f,c
  3246  000AF4  2210               	addwfc	___aodiv@dividend+4,f,c
  3247  000AF6  2211               	addwfc	___aodiv@dividend+5,f,c
  3248  000AF8  2212               	addwfc	___aodiv@dividend+6,f,c
  3249  000AFA  2213               	addwfc	___aodiv@dividend+7,f,c
  3250  000AFC  0E01               	movlw	1
  3251  000AFE  1A1D               	xorwf	___aodiv@sign,f,c
  3252  000B00                     l2403:
  3253  000B00  EE20  F01E         	lfsr	2,___aodiv@quotient
  3254  000B04  0E07               	movlw	7
  3255  000B06                     u1791:
  3256  000B06  6ADE               	clrf	postinc2,c
  3257  000B08  06E8               	decf	wreg,f,c
  3258  000B0A  E2FD               	bc	u1791
  3259  000B0C  5014               	movf	___aodiv@divisor,w,c
  3260  000B0E  1015               	iorwf	___aodiv@divisor+1,w,c
  3261  000B10  1016               	iorwf	___aodiv@divisor+2,w,c
  3262  000B12  1017               	iorwf	___aodiv@divisor+3,w,c
  3263  000B14  1018               	iorwf	___aodiv@divisor+4,w,c
  3264  000B16  1019               	iorwf	___aodiv@divisor+5,w,c
  3265  000B18  101A               	iorwf	___aodiv@divisor+6,w,c
  3266  000B1A  101B               	iorwf	___aodiv@divisor+7,w,c
  3267  000B1C  B4D8               	btfsc	status,2,c
  3268  000B1E  D046               	goto	l2425
  3269  000B20  0E01               	movlw	1
  3270  000B22  6E1C               	movwf	___aodiv@counter,c
  3271  000B24  D00A               	goto	l2411
  3272  000B26                     l2409:
  3273  000B26  90D8               	bcf	status,0,c
  3274  000B28  3614               	rlcf	___aodiv@divisor,f,c
  3275  000B2A  3615               	rlcf	___aodiv@divisor+1,f,c
  3276  000B2C  3616               	rlcf	___aodiv@divisor+2,f,c
  3277  000B2E  3617               	rlcf	___aodiv@divisor+3,f,c
  3278  000B30  3618               	rlcf	___aodiv@divisor+4,f,c
  3279  000B32  3619               	rlcf	___aodiv@divisor+5,f,c
  3280  000B34  361A               	rlcf	___aodiv@divisor+6,f,c
  3281  000B36  361B               	rlcf	___aodiv@divisor+7,f,c
  3282  000B38  2A1C               	incf	___aodiv@counter,f,c
  3283  000B3A                     l2411:
  3284  000B3A  AE1B               	btfss	___aodiv@divisor+7,7,c
  3285  000B3C  D7F4               	goto	l2409
  3286  000B3E                     u1810:
  3287  000B3E  90D8               	bcf	status,0,c
  3288  000B40  361E               	rlcf	___aodiv@quotient,f,c
  3289  000B42  361F               	rlcf	___aodiv@quotient+1,f,c
  3290  000B44  3620               	rlcf	___aodiv@quotient+2,f,c
  3291  000B46  3621               	rlcf	___aodiv@quotient+3,f,c
  3292  000B48  3622               	rlcf	___aodiv@quotient+4,f,c
  3293  000B4A  3623               	rlcf	___aodiv@quotient+5,f,c
  3294  000B4C  3624               	rlcf	___aodiv@quotient+6,f,c
  3295  000B4E  3625               	rlcf	___aodiv@quotient+7,f,c
  3296  000B50  5014               	movf	___aodiv@divisor,w,c
  3297  000B52  5C0C               	subwf	___aodiv@dividend,w,c
  3298  000B54  5015               	movf	___aodiv@divisor+1,w,c
  3299  000B56  580D               	subwfb	___aodiv@dividend+1,w,c
  3300  000B58  5016               	movf	___aodiv@divisor+2,w,c
  3301  000B5A  580E               	subwfb	___aodiv@dividend+2,w,c
  3302  000B5C  5017               	movf	___aodiv@divisor+3,w,c
  3303  000B5E  580F               	subwfb	___aodiv@dividend+3,w,c
  3304  000B60  5018               	movf	___aodiv@divisor+4,w,c
  3305  000B62  5810               	subwfb	___aodiv@dividend+4,w,c
  3306  000B64  5019               	movf	___aodiv@divisor+5,w,c
  3307  000B66  5811               	subwfb	___aodiv@dividend+5,w,c
  3308  000B68  501A               	movf	___aodiv@divisor+6,w,c
  3309  000B6A  5812               	subwfb	___aodiv@dividend+6,w,c
  3310  000B6C  501B               	movf	___aodiv@divisor+7,w,c
  3311  000B6E  5813               	subwfb	___aodiv@dividend+7,w,c
  3312  000B70  A0D8               	btfss	status,0,c
  3313  000B72  D011               	goto	l2421
  3314  000B74  5014               	movf	___aodiv@divisor,w,c
  3315  000B76  5E0C               	subwf	___aodiv@dividend,f,c
  3316  000B78  5015               	movf	___aodiv@divisor+1,w,c
  3317  000B7A  5A0D               	subwfb	___aodiv@dividend+1,f,c
  3318  000B7C  5016               	movf	___aodiv@divisor+2,w,c
  3319  000B7E  5A0E               	subwfb	___aodiv@dividend+2,f,c
  3320  000B80  5017               	movf	___aodiv@divisor+3,w,c
  3321  000B82  5A0F               	subwfb	___aodiv@dividend+3,f,c
  3322  000B84  5018               	movf	___aodiv@divisor+4,w,c
  3323  000B86  5A10               	subwfb	___aodiv@dividend+4,f,c
  3324  000B88  5019               	movf	___aodiv@divisor+5,w,c
  3325  000B8A  5A11               	subwfb	___aodiv@dividend+5,f,c
  3326  000B8C  501A               	movf	___aodiv@divisor+6,w,c
  3327  000B8E  5A12               	subwfb	___aodiv@dividend+6,f,c
  3328  000B90  501B               	movf	___aodiv@divisor+7,w,c
  3329  000B92  5A13               	subwfb	___aodiv@dividend+7,f,c
  3330  000B94  801E               	bsf	___aodiv@quotient,0,c
  3331  000B96                     l2421:
  3332  000B96  90D8               	bcf	status,0,c
  3333  000B98  321B               	rrcf	___aodiv@divisor+7,f,c
  3334  000B9A  321A               	rrcf	___aodiv@divisor+6,f,c
  3335  000B9C  3219               	rrcf	___aodiv@divisor+5,f,c
  3336  000B9E  3218               	rrcf	___aodiv@divisor+4,f,c
  3337  000BA0  3217               	rrcf	___aodiv@divisor+3,f,c
  3338  000BA2  3216               	rrcf	___aodiv@divisor+2,f,c
  3339  000BA4  3215               	rrcf	___aodiv@divisor+1,f,c
  3340  000BA6  3214               	rrcf	___aodiv@divisor,f,c
  3341  000BA8  2E1C               	decfsz	___aodiv@counter,f,c
  3342  000BAA  D7C9               	goto	u1810
  3343  000BAC                     l2425:
  3344  000BAC  501D               	movf	___aodiv@sign,w,c
  3345  000BAE  B4D8               	btfsc	status,2,c
  3346  000BB0  D010               	goto	l2429
  3347  000BB2  1E25               	comf	___aodiv@quotient+7,f,c
  3348  000BB4  1E24               	comf	___aodiv@quotient+6,f,c
  3349  000BB6  1E23               	comf	___aodiv@quotient+5,f,c
  3350  000BB8  1E22               	comf	___aodiv@quotient+4,f,c
  3351  000BBA  1E21               	comf	___aodiv@quotient+3,f,c
  3352  000BBC  1E20               	comf	___aodiv@quotient+2,f,c
  3353  000BBE  1E1F               	comf	___aodiv@quotient+1,f,c
  3354  000BC0  6C1E               	negf	___aodiv@quotient,c
  3355  000BC2  0E00               	movlw	0
  3356  000BC4  221F               	addwfc	___aodiv@quotient+1,f,c
  3357  000BC6  2220               	addwfc	___aodiv@quotient+2,f,c
  3358  000BC8  2221               	addwfc	___aodiv@quotient+3,f,c
  3359  000BCA  2222               	addwfc	___aodiv@quotient+4,f,c
  3360  000BCC  2223               	addwfc	___aodiv@quotient+5,f,c
  3361  000BCE  2224               	addwfc	___aodiv@quotient+6,f,c
  3362  000BD0  2225               	addwfc	___aodiv@quotient+7,f,c
  3363  000BD2                     l2429:
  3364  000BD2  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  3365  000BD6  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  3366  000BDA  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  3367  000BDE  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  3368  000BE2  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  3369  000BE6  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  3370  000BEA  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  3371  000BEE  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  3372  000BF2  0012               	return		;funcret
  3373  000BF4                     __end_of___aodiv:
  3374                           	opt callstack 0
  3375                           
  3376 ;; *************** function _ctoa *****************
  3377 ;; Defined at:
  3378 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  3381 ;;		 -> NULL(0), 
  3382 ;;  c               1   44[COMRAM] unsigned char 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  w               2   45[COMRAM] int 
  3385 ;;  l               2    0        int 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  2   42[COMRAM] int 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3395 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;Total ram usage:        5 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    8
  3402 ;; This function calls:
  3403 ;;		_pad
  3404 ;; This function is called by:
  3405 ;;		_vfpfcnvrt
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text8
  3410  001010                     __ptext8:
  3411                           	opt callstack 0
  3412  001010                     _ctoa:
  3413                           	opt callstack 19
  3414                           
  3415                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  3416                           
  3417                           ;incstack = 0
  3418  001010  506E               	movf	_width,w,c
  3419  001012  106F               	iorwf	_width+1,w,c
  3420  001014  A4D8               	btfss	status,2,c
  3421  001016  D005               	goto	l2473
  3422  001018  C06E  F02E         	movff	_width,ctoa@w
  3423  00101C  C06F  F02F         	movff	_width+1,ctoa@w+1
  3424  001020  D006               	goto	l2475
  3425  001022                     l2473:
  3426  001022  0EFF               	movlw	255
  3427  001024  246E               	addwf	_width,w,c
  3428  001026  6E2E               	movwf	ctoa@w,c
  3429  001028  0EFF               	movlw	255
  3430  00102A  206F               	addwfc	_width+1,w,c
  3431  00102C  6E2F               	movwf	ctoa@w+1,c
  3432  00102E                     l2475:
  3433                           
  3434                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
  3435  00102E  C02D  F0C5         	movff	ctoa@c,_dbuf
  3436                           
  3437                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
  3438  001032  0E00               	movlw	0
  3439  001034  0100               	movlb	0	; () banked
  3440  001036  6FC6               	movwf	(_dbuf+1)& (0+255),b
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
  3444  001038  C02B  F020         	movff	ctoa@fp,pad@fp
  3445  00103C  C02C  F021         	movff	ctoa@fp+1,pad@fp+1
  3446  001040  0EC5               	movlw	low _dbuf
  3447  001042  6E22               	movwf	pad@buf,c
  3448  001044  0E00               	movlw	high _dbuf
  3449  001046  6E23               	movwf	pad@buf+1,c
  3450  001048  C02E  F024         	movff	ctoa@w,pad@p
  3451  00104C  C02F  F025         	movff	ctoa@w+1,pad@p+1
  3452  001050  ECF1  F006         	call	_pad	;wreg free
  3453  001054  C020  F02B         	movff	?_pad,?_ctoa
  3454  001058  C021  F02C         	movff	?_pad+1,?_ctoa+1
  3455  00105C  0012               	return		;funcret
  3456  00105E                     __end_of_ctoa:
  3457                           	opt callstack 0
  3458                           
  3459 ;; *************** function _pad *****************
  3460 ;; Defined at:
  3461 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3464 ;;		 -> NULL(0), 
  3465 ;;  buf             2   33[COMRAM] PTR unsigned char 
  3466 ;;		 -> dbuf(32), 
  3467 ;;  p               2   35[COMRAM] int 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  w               2   40[COMRAM] int 
  3470 ;;  i               2   38[COMRAM] int 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  2   31[COMRAM] int 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;Total ram usage:       11 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    7
  3487 ;; This function calls:
  3488 ;;		_fputc
  3489 ;;		_fputs
  3490 ;;		_strlen
  3491 ;; This function is called by:
  3492 ;;		_ctoa
  3493 ;;		_dtoa
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text9
  3498  000DE2                     __ptext9:
  3499                           	opt callstack 0
  3500  000DE2                     _pad:
  3501                           	opt callstack 19
  3502                           
  3503                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  3504                           
  3505                           ;incstack = 0
  3506  000DE2  A072               	btfss	_flags,0,c
  3507  000DE4  D00A               	goto	l2367
  3508                           
  3509                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  3510  000DE6  C022  F019         	movff	pad@buf,fputs@s
  3511  000DEA  C023  F01A         	movff	pad@buf+1,fputs@s+1
  3512  000DEE  C020  F01B         	movff	pad@fp,fputs@fp
  3513  000DF2  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  3514  000DF6  EC73  F008         	call	_fputs	;wreg free
  3515  000DFA                     l2367:
  3516                           
  3517                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  3518  000DFA  BE25               	btfsc	pad@p+1,7,c
  3519  000DFC  D005               	goto	l2371
  3520  000DFE  C024  F029         	movff	pad@p,pad@w
  3521  000E02  C025  F02A         	movff	pad@p+1,pad@w+1
  3522  000E06  D004               	goto	l170
  3523  000E08                     l2371:
  3524  000E08  0E00               	movlw	0
  3525  000E0A  6E2A               	movwf	pad@w+1,c
  3526  000E0C  0E00               	movlw	0
  3527  000E0E  6E29               	movwf	pad@w,c
  3528  000E10                     l170:
  3529                           
  3530                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3531  000E10  0E00               	movlw	0
  3532  000E12  6E28               	movwf	pad@i+1,c
  3533  000E14  0E00               	movlw	0
  3534  000E16  6E27               	movwf	pad@i,c
  3535                           
  3536                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3537  000E18  D00C               	goto	l2377
  3538  000E1A                     l2373:
  3539                           
  3540                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  3541  000E1A  0E00               	movlw	0
  3542  000E1C  6E11               	movwf	fputc@c+1,c
  3543  000E1E  0E20               	movlw	32
  3544  000E20  6E10               	movwf	fputc@c,c
  3545  000E22  C020  F012         	movff	pad@fp,fputc@fp
  3546  000E26  C021  F013         	movff	pad@fp+1,fputc@fp+1
  3547  000E2A  EC74  F007         	call	_fputc	;wreg free
  3548                           
  3549                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3550  000E2E  4A27               	infsnz	pad@i,f,c
  3551  000E30  2A28               	incf	pad@i+1,f,c
  3552  000E32                     l2377:
  3553                           
  3554                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3555  000E32  5029               	movf	pad@w,w,c
  3556  000E34  5C27               	subwf	pad@i,w,c
  3557  000E36  5028               	movf	pad@i+1,w,c
  3558  000E38  0A80               	xorlw	128
  3559  000E3A  6E26               	movwf	??_pad& (0+255),c
  3560  000E3C  502A               	movf	pad@w+1,w,c
  3561  000E3E  0A80               	xorlw	128
  3562  000E40  5826               	subwfb	??_pad& (0+255),w,c
  3563  000E42  A0D8               	btfss	status,0,c
  3564  000E44  D7EA               	goto	l2373
  3565                           
  3566                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  3567  000E46  B072               	btfsc	_flags,0,c
  3568  000E48  D00A               	goto	l2381
  3569                           
  3570                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  3571  000E4A  C022  F019         	movff	pad@buf,fputs@s
  3572  000E4E  C023  F01A         	movff	pad@buf+1,fputs@s+1
  3573  000E52  C020  F01B         	movff	pad@fp,fputs@fp
  3574  000E56  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  3575  000E5A  EC73  F008         	call	_fputs	;wreg free
  3576  000E5E                     l2381:
  3577                           
  3578                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  3579  000E5E  C022  F00C         	movff	pad@buf,strlen@s
  3580  000E62  C023  F00D         	movff	pad@buf+1,strlen@s+1
  3581  000E66  ECA8  F008         	call	_strlen	;wreg free
  3582  000E6A  5029               	movf	pad@w,w,c
  3583  000E6C  240C               	addwf	?_strlen,w,c
  3584  000E6E  6E20               	movwf	?_pad,c
  3585  000E70  502A               	movf	pad@w+1,w,c
  3586  000E72  200D               	addwfc	?_strlen+1,w,c
  3587  000E74  6E21               	movwf	?_pad+1,c
  3588  000E76  0012               	return		;funcret
  3589  000E78                     __end_of_pad:
  3590                           	opt callstack 0
  3591                           
  3592 ;; *************** function _strlen *****************
  3593 ;; Defined at:
  3594 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3597 ;;		 -> dbuf(32), 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3600 ;;		 -> dbuf(32), 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2   11[COMRAM] unsigned int 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;Total ram usage:        4 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    1
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_pad
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text10
  3625  001150                     __ptext10:
  3626                           	opt callstack 0
  3627  001150                     _strlen:
  3628                           	opt callstack 24
  3629                           
  3630                           ;incstack = 0
  3631  001150  C00C  F00E         	movff	strlen@s,strlen@a
  3632  001154  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3633  001158  D002               	goto	l2357
  3634  00115A                     l2355:
  3635  00115A  4A0C               	infsnz	strlen@s,f,c
  3636  00115C  2A0D               	incf	strlen@s+1,f,c
  3637  00115E                     l2357:
  3638  00115E  C00C  FFD9         	movff	strlen@s,fsr2l
  3639  001162  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3640  001166  50DF               	movf	indf2,w,c
  3641  001168  A4D8               	btfss	status,2,c
  3642  00116A  D7F7               	goto	l2355
  3643  00116C  500E               	movf	strlen@a,w,c
  3644  00116E  5C0C               	subwf	strlen@s,w,c
  3645  001170  6E0C               	movwf	?_strlen,c
  3646  001172  500F               	movf	strlen@a+1,w,c
  3647  001174  580D               	subwfb	strlen@s+1,w,c
  3648  001176  6E0D               	movwf	?_strlen+1,c
  3649  001178  0012               	return		;funcret
  3650  00117A                     __end_of_strlen:
  3651                           	opt callstack 0
  3652                           
  3653 ;; *************** function _fputs *****************
  3654 ;; Defined at:
  3655 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  s               2   24[COMRAM] PTR const unsigned char 
  3658 ;;		 -> dbuf(32), 
  3659 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  3660 ;;		 -> NULL(0), 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  i               2   29[COMRAM] int 
  3663 ;;  c               1   28[COMRAM] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  2   24[COMRAM] int 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;Total ram usage:        7 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    6
  3680 ;; This function calls:
  3681 ;;		_fputc
  3682 ;; This function is called by:
  3683 ;;		_pad
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text11
  3688  0010E6                     __ptext11:
  3689                           	opt callstack 0
  3690  0010E6                     _fputs:
  3691                           	opt callstack 19
  3692                           
  3693                           ;incstack = 0
  3694  0010E6  0E00               	movlw	0
  3695  0010E8  6E1F               	movwf	fputs@i+1,c
  3696  0010EA  0E00               	movlw	0
  3697  0010EC  6E1E               	movwf	fputs@i,c
  3698  0010EE  D00B               	goto	l2351
  3699  0010F0                     l2347:
  3700  0010F0  C01D  F010         	movff	fputs@c,fputc@c
  3701  0010F4  6A11               	clrf	fputc@c+1,c
  3702  0010F6  C01B  F012         	movff	fputs@fp,fputc@fp
  3703  0010FA  C01C  F013         	movff	fputs@fp+1,fputc@fp+1
  3704  0010FE  EC74  F007         	call	_fputc	;wreg free
  3705  001102  4A1E               	infsnz	fputs@i,f,c
  3706  001104  2A1F               	incf	fputs@i+1,f,c
  3707  001106                     l2351:
  3708  001106  501E               	movf	fputs@i,w,c
  3709  001108  2419               	addwf	fputs@s,w,c
  3710  00110A  6ED9               	movwf	fsr2l,c
  3711  00110C  501F               	movf	fputs@i+1,w,c
  3712  00110E  201A               	addwfc	fputs@s+1,w,c
  3713  001110  6EDA               	movwf	fsr2h,c
  3714  001112  50DF               	movf	indf2,w,c
  3715  001114  6E1D               	movwf	fputs@c,c
  3716  001116  501D               	movf	fputs@c,w,c
  3717  001118  B4D8               	btfsc	status,2,c
  3718  00111A  0012               	return	
  3719  00111C  D7E9               	goto	l2347
  3720  00111E                     __end_of_fputs:
  3721                           	opt callstack 0
  3722                           
  3723 ;; *************** function _fputc *****************
  3724 ;; Defined at:
  3725 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  c               2   15[COMRAM] int 
  3728 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3729 ;;		 -> NULL(0), 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  2   15[COMRAM] int 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;Total ram usage:        9 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    5
  3748 ;; This function calls:
  3749 ;;		_putch
  3750 ;; This function is called by:
  3751 ;;		_pad
  3752 ;;		_vfpfcnvrt
  3753 ;;		_fputs
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text12
  3758  000EE8                     __ptext12:
  3759                           	opt callstack 0
  3760  000EE8                     _fputc:
  3761                           	opt callstack 22
  3762                           
  3763                           ;incstack = 0
  3764  000EE8  5012               	movf	fputc@fp,w,c
  3765  000EEA  1013               	iorwf	fputc@fp+1,w,c
  3766  000EEC  B4D8               	btfsc	status,2,c
  3767  000EEE  D004               	goto	u1670
  3768  000EF0  5012               	movf	fputc@fp,w,c
  3769  000EF2  1013               	iorwf	fputc@fp+1,w,c
  3770  000EF4  A4D8               	btfss	status,2,c
  3771  000EF6  D004               	goto	l2337
  3772  000EF8                     u1670:
  3773  000EF8  5010               	movf	fputc@c,w,c
  3774  000EFA  ECFA  F008         	call	_putch
  3775  000EFE  0012               	return	
  3776  000F00                     l2337:
  3777  000F00  EE20 F004          	lfsr	2,4
  3778  000F04  5012               	movf	fputc@fp,w,c
  3779  000F06  26D9               	addwf	fsr2l,f,c
  3780  000F08  5013               	movf	fputc@fp+1,w,c
  3781  000F0A  22DA               	addwfc	fsr2h,f,c
  3782  000F0C  50DE               	movf	postinc2,w,c
  3783  000F0E  10DE               	iorwf	postinc2,w,c
  3784  000F10  B4D8               	btfsc	status,2,c
  3785  000F12  D016               	goto	u1690
  3786  000F14  EE20 F004          	lfsr	2,4
  3787  000F18  5012               	movf	fputc@fp,w,c
  3788  000F1A  26D9               	addwf	fsr2l,f,c
  3789  000F1C  5013               	movf	fputc@fp+1,w,c
  3790  000F1E  22DA               	addwfc	fsr2h,f,c
  3791  000F20  EE10 F002          	lfsr	1,2
  3792  000F24  5012               	movf	fputc@fp,w,c
  3793  000F26  26E1               	addwf	fsr1l,f,c
  3794  000F28  5013               	movf	fputc@fp+1,w,c
  3795  000F2A  22E2               	addwfc	fsr1h,f,c
  3796  000F2C  50DE               	movf	postinc2,w,c
  3797  000F2E  5CE6               	subwf	postinc1,w,c
  3798  000F30  50E6               	movf	postinc1,w,c
  3799  000F32  0A80               	xorlw	128
  3800  000F34  6E18               	movwf	(??_fputc+4)& (0+255),c
  3801  000F36  50DE               	movf	postinc2,w,c
  3802  000F38  0A80               	xorlw	128
  3803  000F3A  5818               	subwfb	(??_fputc+4)& (0+255),w,c
  3804  000F3C  B0D8               	btfsc	status,0,c
  3805  000F3E  0012               	return	
  3806  000F40                     u1690:
  3807  000F40  EE20 F002          	lfsr	2,2
  3808  000F44  5012               	movf	fputc@fp,w,c
  3809  000F46  26D9               	addwf	fsr2l,f,c
  3810  000F48  5013               	movf	fputc@fp+1,w,c
  3811  000F4A  22DA               	addwfc	fsr2h,f,c
  3812  000F4C  2ADE               	incf	postinc2,f,c
  3813  000F4E  0E00               	movlw	0
  3814  000F50  22DD               	addwfc	postdec2,f,c
  3815  000F52  0012               	return		;funcret
  3816  000F54                     __end_of_fputc:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function _putch *****************
  3820 ;; Defined at:
  3821 ;;		line 102 in file "lcd.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  data            1    wreg     unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  data            1   14[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;Total ram usage:        1 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    4
  3842 ;; This function calls:
  3843 ;;		_send_byte
  3844 ;; This function is called by:
  3845 ;;		_fputc
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text13
  3850  0011F4                     __ptext13:
  3851                           	opt callstack 0
  3852  0011F4                     _putch:
  3853                           	opt callstack 22
  3854                           
  3855                           ;incstack = 0
  3856                           ;putch@data stored from wreg
  3857  0011F4  6E0F               	movwf	putch@data,c
  3858                           
  3859                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  3860  0011F6  848C               	bsf	3980,2,c	;volatile
  3861                           
  3862                           ;lcd.c: 104:     send_byte((unsigned char)data);
  3863  0011F8  500F               	movf	putch@data,w,c
  3864  0011FA  ECF1  F008         	call	_send_byte
  3865  0011FE  0012               	return		;funcret
  3866  001200                     __end_of_putch:
  3867                           	opt callstack 0
  3868                           
  3869 ;; *************** function _initLCD *****************
  3870 ;; Defined at:
  3871 ;;		line 69 in file "lcd.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;Total ram usage:        1 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    5
  3892 ;; This function calls:
  3893 ;;		_lcdInst
  3894 ;;		_send_byte
  3895 ;;		_send_nibble
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text14
  3902  000F54                     __ptext14:
  3903                           	opt callstack 0
  3904  000F54                     _initLCD:
  3905                           	opt callstack 25
  3906                           
  3907                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  3908                           
  3909                           ;incstack = 0
  3910  000F54  0E31               	movlw	49
  3911  000F56  6E10               	movwf	??_initLCD& (0+255),c
  3912  000F58  0EB2               	movlw	178
  3913  000F5A                     u2567:
  3914  000F5A  2EE8               	decfsz	wreg,f,c
  3915  000F5C  D7FE               	bra	u2567
  3916  000F5E  2E10               	decfsz	??_initLCD& (0+255),f,c
  3917  000F60  D7FC               	bra	u2567
  3918  000F62  D000               	nop2	
  3919                           
  3920                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  3921  000F64  948C               	bcf	3980,2,c	;volatile
  3922                           
  3923                           ;lcd.c: 74:     send_nibble(0b0011);
  3924  000F66  0E03               	movlw	3
  3925  000F68  ECE6  F008         	call	_send_nibble
  3926                           
  3927                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3928  000F6C  0E11               	movlw	17
  3929  000F6E  6E10               	movwf	??_initLCD& (0+255),c
  3930  000F70  0E3A               	movlw	58
  3931  000F72                     u2577:
  3932  000F72  2EE8               	decfsz	wreg,f,c
  3933  000F74  D7FE               	bra	u2577
  3934  000F76  2E10               	decfsz	??_initLCD& (0+255),f,c
  3935  000F78  D7FC               	bra	u2577
  3936  000F7A  D000               	nop2	
  3937                           
  3938                           ;lcd.c: 76:     send_nibble(0b0011);
  3939  000F7C  0E03               	movlw	3
  3940  000F7E  ECE6  F008         	call	_send_nibble
  3941                           
  3942                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  3943  000F82  0E7D               	movlw	125
  3944  000F84                     u2587:
  3945  000F84  2EE8               	decfsz	wreg,f,c
  3946  000F86  D7FE               	bra	u2587
  3947                           
  3948                           ;lcd.c: 78:     send_byte(0b00110010);
  3949  000F88  0E32               	movlw	50
  3950  000F8A  ECF1  F008         	call	_send_byte
  3951                           
  3952                           ;lcd.c: 80:     send_byte(0b00101000);
  3953  000F8E  0E28               	movlw	40
  3954  000F90  ECF1  F008         	call	_send_byte
  3955                           
  3956                           ;lcd.c: 81:     send_byte(0b00001000);
  3957  000F94  0E08               	movlw	8
  3958  000F96  ECF1  F008         	call	_send_byte
  3959                           
  3960                           ;lcd.c: 82:     send_byte(0b00000001);
  3961  000F9A  0E01               	movlw	1
  3962  000F9C  ECF1  F008         	call	_send_byte
  3963                           
  3964                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3965  000FA0  0E11               	movlw	17
  3966  000FA2  6E10               	movwf	??_initLCD& (0+255),c
  3967  000FA4  0E3A               	movlw	58
  3968  000FA6                     u2597:
  3969  000FA6  2EE8               	decfsz	wreg,f,c
  3970  000FA8  D7FE               	bra	u2597
  3971  000FAA  2E10               	decfsz	??_initLCD& (0+255),f,c
  3972  000FAC  D7FC               	bra	u2597
  3973  000FAE  D000               	nop2	
  3974                           
  3975                           ;lcd.c: 84:     send_byte(0b00000110);
  3976  000FB0  0E06               	movlw	6
  3977  000FB2  ECF1  F008         	call	_send_byte
  3978                           
  3979                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  3980  000FB6  0E0F               	movlw	15
  3981  000FB8  EC00  F009         	call	_lcdInst
  3982  000FBC  0012               	return		;funcret
  3983  000FBE                     __end_of_initLCD:
  3984                           	opt callstack 0
  3985                           
  3986 ;; *************** function _lcdInst *****************
  3987 ;; Defined at:
  3988 ;;		line 64 in file "lcd.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  data            1    wreg     unsigned char 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  data            1   14[COMRAM] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      void 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;Total ram usage:        1 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    4
  4009 ;; This function calls:
  4010 ;;		_send_byte
  4011 ;; This function is called by:
  4012 ;;		_initLCD
  4013 ;;		_main
  4014 ;;		_lcd_shift_cursor
  4015 ;;		_lcd_shift_display
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text15
  4020  001200                     __ptext15:
  4021                           	opt callstack 0
  4022  001200                     _lcdInst:
  4023                           	opt callstack 26
  4024                           
  4025                           ;incstack = 0
  4026                           ;lcdInst@data stored from wreg
  4027  001200  6E0F               	movwf	lcdInst@data,c
  4028                           
  4029                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  4030  001202  948C               	bcf	3980,2,c	;volatile
  4031                           
  4032                           ;lcd.c: 66:     send_byte(data);
  4033  001204  500F               	movf	lcdInst@data,w,c
  4034  001206  ECF1  F008         	call	_send_byte
  4035  00120A  0012               	return		;funcret
  4036  00120C                     __end_of_lcdInst:
  4037                           	opt callstack 0
  4038                           
  4039 ;; *************** function _send_byte *****************
  4040 ;; Defined at:
  4041 ;;		line 55 in file "lcd.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  data            1    wreg     unsigned char 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  data            1   13[COMRAM] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;Total ram usage:        1 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    3
  4062 ;; This function calls:
  4063 ;;		_send_nibble
  4064 ;; This function is called by:
  4065 ;;		_lcdInst
  4066 ;;		_initLCD
  4067 ;;		_putch
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text16
  4072  0011E2                     __ptext16:
  4073                           	opt callstack 0
  4074  0011E2                     _send_byte:
  4075                           	opt callstack 22
  4076                           
  4077                           ;incstack = 0
  4078                           ;send_byte@data stored from wreg
  4079  0011E2  6E0E               	movwf	send_byte@data,c
  4080                           
  4081                           ;lcd.c: 57:     send_nibble(data >> 4);
  4082  0011E4  380E               	swapf	send_byte@data,w,c
  4083  0011E6  0B0F               	andlw	15
  4084  0011E8  ECE6  F008         	call	_send_nibble
  4085                           
  4086                           ;lcd.c: 60:     send_nibble(data);
  4087  0011EC  500E               	movf	send_byte@data,w,c
  4088  0011EE  ECE6  F008         	call	_send_nibble
  4089  0011F2  0012               	return		;funcret
  4090  0011F4                     __end_of_send_byte:
  4091                           	opt callstack 0
  4092                           
  4093 ;; *************** function _send_nibble *****************
  4094 ;; Defined at:
  4095 ;;		line 44 in file "lcd.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  data            1    wreg     unsigned char 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  data            1   12[COMRAM] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;Total ram usage:        1 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    2
  4116 ;; This function calls:
  4117 ;;		_pulse_e
  4118 ;; This function is called by:
  4119 ;;		_send_byte
  4120 ;;		_initLCD
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text17
  4125  0011CC                     __ptext17:
  4126                           	opt callstack 0
  4127  0011CC                     _send_nibble:
  4128                           	opt callstack 22
  4129                           
  4130                           ;incstack = 0
  4131                           ;send_nibble@data stored from wreg
  4132  0011CC  6E0D               	movwf	send_nibble@data,c
  4133                           
  4134                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  4135  0011CE  508C               	movf	3980,w,c	;volatile
  4136  0011D0  0B0F               	andlw	15
  4137  0011D2  6E8C               	movwf	3980,c	;volatile
  4138                           
  4139                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  4140  0011D4  380D               	swapf	send_nibble@data,w,c
  4141  0011D6  0BF0               	andlw	240
  4142  0011D8  108C               	iorwf	3980,w,c	;volatile
  4143  0011DA  6E8C               	movwf	3980,c	;volatile
  4144                           
  4145                           ;lcd.c: 48:     pulse_e();
  4146  0011DC  ECBD  F008         	call	_pulse_e	;wreg free
  4147  0011E0  0012               	return		;funcret
  4148  0011E2                     __end_of_send_nibble:
  4149                           	opt callstack 0
  4150                           
  4151 ;; *************** function _pulse_e *****************
  4152 ;; Defined at:
  4153 ;;		line 28 in file "lcd.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  interruptSta    1   11[COMRAM] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;Total ram usage:        1 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_send_nibble
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text18
  4182  00117A                     __ptext18:
  4183                           	opt callstack 0
  4184  00117A                     _pulse_e:
  4185                           	opt callstack 22
  4186                           
  4187                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  4188                           
  4189                           ;incstack = 0
  4190  00117A  0E00               	movlw	0
  4191  00117C  BEF2               	btfsc	4082,7,c	;volatile
  4192  00117E  0E01               	movlw	1
  4193  001180  6E0C               	movwf	pulse_e@interruptState,c
  4194                           
  4195                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  4196  001182  9EF2               	bcf	4082,7,c	;volatile
  4197                           
  4198                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  4199  001184  868C               	bsf	3980,3,c	;volatile
  4200                           
  4201                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  4202  001186  0E14               	movlw	20
  4203  001188                     u2607:
  4204  001188  2EE8               	decfsz	wreg,f,c
  4205  00118A  D7FE               	bra	u2607
  4206  00118C  D000               	nop2	
  4207                           
  4208                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  4209  00118E  968C               	bcf	3980,3,c	;volatile
  4210                           
  4211                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  4212  001190  0E53               	movlw	83
  4213  001192                     u2617:
  4214  001192  2EE8               	decfsz	wreg,f,c
  4215  001194  D7FE               	bra	u2617
  4216  001196  F000               	nop	
  4217                           
  4218                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  4219  001198  B00C               	btfsc	pulse_e@interruptState,0,c
  4220  00119A  D002               	bra	u1655
  4221  00119C  9EF2               	bcf	4082,7,c	;volatile
  4222  00119E  D001               	bra	u1656
  4223  0011A0                     u1655:
  4224  0011A0  8EF2               	bsf	4082,7,c	;volatile
  4225  0011A2                     u1656:
  4226  0011A2  0012               	return		;funcret
  4227  0011A4                     __end_of_pulse_e:
  4228                           	opt callstack 0
  4229                           
  4230 ;; *************** function ___awmod *****************
  4231 ;; Defined at:
  4232 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  dividend        2   11[COMRAM] int 
  4235 ;;  divisor         2   13[COMRAM] int 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  sign            1   16[COMRAM] unsigned char 
  4238 ;;  counter         1   15[COMRAM] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2   11[COMRAM] int 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;Total ram usage:        6 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_main
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text19
  4263  000E78                     __ptext19:
  4264                           	opt callstack 0
  4265  000E78                     ___awmod:
  4266                           	opt callstack 29
  4267                           
  4268                           ;incstack = 0
  4269  000E78  0E00               	movlw	0
  4270  000E7A  6E11               	movwf	___awmod@sign,c
  4271  000E7C  AE0D               	btfss	___awmod@dividend+1,7,c
  4272  000E7E  D006               	goto	l1955
  4273  000E80  6C0C               	negf	___awmod@dividend,c
  4274  000E82  1E0D               	comf	___awmod@dividend+1,f,c
  4275  000E84  B0D8               	btfsc	status,0,c
  4276  000E86  2A0D               	incf	___awmod@dividend+1,f,c
  4277  000E88  0E01               	movlw	1
  4278  000E8A  6E11               	movwf	___awmod@sign,c
  4279  000E8C                     l1955:
  4280  000E8C  AE0F               	btfss	___awmod@divisor+1,7,c
  4281  000E8E  D004               	goto	l1959
  4282  000E90  6C0E               	negf	___awmod@divisor,c
  4283  000E92  1E0F               	comf	___awmod@divisor+1,f,c
  4284  000E94  B0D8               	btfsc	status,0,c
  4285  000E96  2A0F               	incf	___awmod@divisor+1,f,c
  4286  000E98                     l1959:
  4287  000E98  500E               	movf	___awmod@divisor,w,c
  4288  000E9A  100F               	iorwf	___awmod@divisor+1,w,c
  4289  000E9C  B4D8               	btfsc	status,2,c
  4290  000E9E  D018               	goto	l1975
  4291  000EA0  0E01               	movlw	1
  4292  000EA2  6E10               	movwf	___awmod@counter,c
  4293  000EA4  D004               	goto	l1965
  4294  000EA6                     l1963:
  4295  000EA6  90D8               	bcf	status,0,c
  4296  000EA8  360E               	rlcf	___awmod@divisor,f,c
  4297  000EAA  360F               	rlcf	___awmod@divisor+1,f,c
  4298  000EAC  2A10               	incf	___awmod@counter,f,c
  4299  000EAE                     l1965:
  4300  000EAE  AE0F               	btfss	___awmod@divisor+1,7,c
  4301  000EB0  D7FA               	goto	l1963
  4302  000EB2                     u1330:
  4303  000EB2  500E               	movf	___awmod@divisor,w,c
  4304  000EB4  5C0C               	subwf	___awmod@dividend,w,c
  4305  000EB6  500F               	movf	___awmod@divisor+1,w,c
  4306  000EB8  580D               	subwfb	___awmod@dividend+1,w,c
  4307  000EBA  A0D8               	btfss	status,0,c
  4308  000EBC  D004               	goto	l1971
  4309  000EBE  500E               	movf	___awmod@divisor,w,c
  4310  000EC0  5E0C               	subwf	___awmod@dividend,f,c
  4311  000EC2  500F               	movf	___awmod@divisor+1,w,c
  4312  000EC4  5A0D               	subwfb	___awmod@dividend+1,f,c
  4313  000EC6                     l1971:
  4314  000EC6  90D8               	bcf	status,0,c
  4315  000EC8  320F               	rrcf	___awmod@divisor+1,f,c
  4316  000ECA  320E               	rrcf	___awmod@divisor,f,c
  4317  000ECC  2E10               	decfsz	___awmod@counter,f,c
  4318  000ECE  D7F1               	goto	u1330
  4319  000ED0                     l1975:
  4320  000ED0  5011               	movf	___awmod@sign,w,c
  4321  000ED2  B4D8               	btfsc	status,2,c
  4322  000ED4  D004               	goto	l1979
  4323  000ED6  6C0C               	negf	___awmod@dividend,c
  4324  000ED8  1E0D               	comf	___awmod@dividend+1,f,c
  4325  000EDA  B0D8               	btfsc	status,0,c
  4326  000EDC  2A0D               	incf	___awmod@dividend+1,f,c
  4327  000EDE                     l1979:
  4328  000EDE  C00C  F00C         	movff	___awmod@dividend,?___awmod
  4329  000EE2  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  4330  000EE6  0012               	return		;funcret
  4331  000EE8                     __end_of___awmod:
  4332                           	opt callstack 0
  4333                           
  4334 ;; *************** function _interruptHandler *****************
  4335 ;; Defined at:
  4336 ;;		line 243 in file "main.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  i               2    8[COMRAM] int 
  4341 ;;  keypress        1   10[COMRAM] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;Total ram usage:       11 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		Interrupt level 2
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	intcode
  4365  000008                     __pintcode:
  4366                           	opt callstack 0
  4367  000008                     _interruptHandler:
  4368                           	opt callstack 19
  4369                           
  4370                           ;incstack = 0
  4371  000008  8274               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4372  00000A  ED8C  F006         	call	int_func,f	;refresh shadow registers
  4373                           
  4374                           	psect	intcode_body
  4375  000D18                     __pintcode_body:
  4376                           	opt callstack 19
  4377  000D18                     int_func:
  4378                           	opt callstack 19
  4379  000D18  0006               	pop		; remove dummy address from shadow register refresh
  4380  000D1A  CFF6 F005          	movff	tblptrl,??_interruptHandler+4
  4381  000D1E  CFF7 F006          	movff	tblptrh,??_interruptHandler+5
  4382  000D22  CFF8 F007          	movff	tblptru,??_interruptHandler+6
  4383  000D26  CFF5 F008          	movff	tablat,??_interruptHandler+7
  4384                           
  4385                           ;main.c: 245:     if(INT1IF){
  4386  000D2A  A0F0               	btfss	4080,0,c	;volatile
  4387  000D2C  D050               	goto	i2u164_40
  4388                           
  4389                           ;main.c: 249:         INT1IF = 0;
  4390  000D2E  90F0               	bcf	4080,0,c	;volatile
  4391                           
  4392                           ;main.c: 251:         unsigned char keypress = (PORTB & 0xF0) >> 4;
  4393  000D30  3881               	swapf	3969,w,c	;volatile
  4394  000D32  0B0F               	andlw	15
  4395  000D34  0B0F               	andlw	15
  4396  000D36  6E0B               	movwf	interruptHandler@keypress,c
  4397                           
  4398                           ;main.c: 253:         if (keys[keypress] == 'A') {
  4399  000D38  0E89               	movlw	low _keys
  4400  000D3A  240B               	addwf	interruptHandler@keypress,w,c
  4401  000D3C  6EF6               	movwf	tblptrl,c
  4402  000D3E  6AF7               	clrf	tblptrh,c
  4403  000D40  0EFE               	movlw	high _keys
  4404  000D42  22F7               	addwfc	tblptrh,f,c
  4405  000D44                     	if	0	;There are less than 3 active tblptr bytes
  4406  000D44                     	endif
  4407  000D44  0008               	tblrd		*
  4408  000D46  50F5               	movf	tablat,w,c
  4409  000D48  0A41               	xorlw	65
  4410  000D4A  A4D8               	btfss	status,2,c
  4411  000D4C  D004               	goto	i2l2293
  4412                           
  4413                           ;main.c: 255:             start = 1;
  4414  000D4E  0E01               	movlw	1
  4415  000D50  0100               	movlb	0	; () banked
  4416  000D52  6FC2               	movwf	_start& (0+255),b	;volatile
  4417  000D54  D03C               	goto	i2u164_40
  4418  000D56                     i2l2293:
  4419                           
  4420                           ;main.c: 259:         if (keys[keypress] == '*') {
  4421  000D56  0E89               	movlw	low _keys
  4422  000D58  240B               	addwf	interruptHandler@keypress,w,c
  4423  000D5A  6EF6               	movwf	tblptrl,c
  4424  000D5C  6AF7               	clrf	tblptrh,c
  4425  000D5E  0EFE               	movlw	high _keys
  4426  000D60  22F7               	addwfc	tblptrh,f,c
  4427  000D62                     	if	0	;There are less than 3 active tblptr bytes
  4428  000D62                     	endif
  4429  000D62  0008               	tblrd		*
  4430  000D64  50F5               	movf	tablat,w,c
  4431  000D66  0A2A               	xorlw	42
  4432  000D68  A4D8               	btfss	status,2,c
  4433  000D6A  D004               	goto	i2l2299
  4434                           
  4435                           ;main.c: 261:             exit_key = 1;
  4436  000D6C  0E01               	movlw	1
  4437  000D6E  0100               	movlb	0	; () banked
  4438  000D70  6FC3               	movwf	_exit_key& (0+255),b	;volatile
  4439  000D72  D02D               	goto	i2u164_40
  4440  000D74                     i2l2299:
  4441                           
  4442                           ;main.c: 265:         for ( int i = 0; i < Canister; i++ ) {
  4443  000D74  0E00               	movlw	0
  4444  000D76  6E0A               	movwf	interruptHandler@i+1,c
  4445  000D78  0E00               	movlw	0
  4446  000D7A  6E09               	movwf	interruptHandler@i,c
  4447  000D7C  D01D               	goto	i2l2309
  4448  000D7E                     i2l2301:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;main.c: 267:             if ((char)i + '0' == keys[keypress]) {
  4452  000D7E  0E89               	movlw	low _keys
  4453  000D80  240B               	addwf	interruptHandler@keypress,w,c
  4454  000D82  6EF6               	movwf	tblptrl,c
  4455  000D84  6AF7               	clrf	tblptrh,c
  4456  000D86  0EFE               	movlw	high _keys
  4457  000D88  22F7               	addwfc	tblptrh,f,c
  4458  000D8A                     	if	0	;There are less than 3 active tblptr bytes
  4459  000D8A                     	endif
  4460  000D8A  0008               	tblrd		*
  4461  000D8C  50F5               	movf	tablat,w,c
  4462  000D8E  6E01               	movwf	??_interruptHandler& (0+255),c
  4463  000D90  6A02               	clrf	(??_interruptHandler+1)& (0+255),c
  4464  000D92  5009               	movf	interruptHandler@i,w,c
  4465  000D94  6E03               	movwf	(??_interruptHandler+2)& (0+255),c
  4466  000D96  6A04               	clrf	(??_interruptHandler+3)& (0+255),c
  4467  000D98  0E30               	movlw	48
  4468  000D9A  2603               	addwf	??_interruptHandler+2,f,c
  4469  000D9C  0E00               	movlw	0
  4470  000D9E  2204               	addwfc	??_interruptHandler+3,f,c
  4471  000DA0  5001               	movf	??_interruptHandler,w,c
  4472  000DA2  1803               	xorwf	??_interruptHandler+2,w,c
  4473  000DA4  E107               	bnz	i2l2307
  4474  000DA6  5002               	movf	??_interruptHandler+1,w,c
  4475  000DA8  1804               	xorwf	??_interruptHandler+3,w,c
  4476  000DAA  A4D8               	btfss	status,2,c
  4477  000DAC  D003               	goto	i2l2307
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;main.c: 268:                 key_was_pressed = 1;
  4481  000DAE  0E01               	movlw	1
  4482  000DB0  6FC4               	movwf	_key_was_pressed& (0+255),b	;volatile
  4483  000DB2  D00D               	goto	i2u164_40
  4484  000DB4                     i2l2307:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;main.c: 272:         }
  4488  000DB4  4A09               	infsnz	interruptHandler@i,f,c
  4489  000DB6  2A0A               	incf	interruptHandler@i+1,f,c
  4490  000DB8                     i2l2309:
  4491  000DB8  0100               	movlb	0	; () banked
  4492  000DBA  51BE               	movf	_Canister& (0+255),w,b
  4493  000DBC  5C09               	subwf	interruptHandler@i,w,c
  4494  000DBE  500A               	movf	interruptHandler@i+1,w,c
  4495  000DC0  0A80               	xorlw	128
  4496  000DC2  6E01               	movwf	??_interruptHandler& (0+255),c
  4497  000DC4  51BF               	movf	(_Canister+1)& (0+255),w,b
  4498  000DC6  0A80               	xorlw	128
  4499  000DC8  5801               	subwfb	??_interruptHandler& (0+255),w,c
  4500  000DCA  A0D8               	btfss	status,0,c
  4501  000DCC  D7D8               	goto	i2l2301
  4502  000DCE                     i2u164_40:
  4503  000DCE  C008  FFF5         	movff	??_interruptHandler+7,tablat
  4504  000DD2  C007  FFF8         	movff	??_interruptHandler+6,tblptru
  4505  000DD6  C006  FFF7         	movff	??_interruptHandler+5,tblptrh
  4506  000DDA  C005  FFF6         	movff	??_interruptHandler+4,tblptrl
  4507  000DDE  9274               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4508  000DE0  0011               	retfie		f
  4509  000DE2                     __end_of_interruptHandler:
  4510                           	opt callstack 0
  4511                           
  4512                           	psect	rparam
  4513  0000                     
  4514                           	psect	temp
  4515  000074                     btemp:
  4516                           	opt callstack 0
  4517  000074                     	ds	1
  4518  0000                     int$flags	set	btemp
  4519  0000                     wtemp8	set	btemp+1
  4520  0000                     ttemp5	set	btemp+1
  4521  0000                     ttemp6	set	btemp+4
  4522  0000                     ttemp7	set	btemp+8
  4523                           tosu	equ	0xFFF
  4524                           tosh	equ	0xFFE
  4525                           tosl	equ	0xFFD
  4526                           stkptr	equ	0xFFC
  4527                           pclatu	equ	0xFFB
  4528                           pclath	equ	0xFFA
  4529                           pcl	equ	0xFF9
  4530                           tblptru	equ	0xFF8
  4531                           tblptrh	equ	0xFF7
  4532                           tblptrl	equ	0xFF6
  4533                           tablat	equ	0xFF5
  4534                           prodh	equ	0xFF4
  4535                           prodl	equ	0xFF3
  4536                           indf0	equ	0xFEF
  4537                           postinc0	equ	0xFEE
  4538                           postdec0	equ	0xFED
  4539                           preinc0	equ	0xFEC
  4540                           plusw0	equ	0xFEB
  4541                           fsr0h	equ	0xFEA
  4542                           fsr0l	equ	0xFE9
  4543                           wreg	equ	0xFE8
  4544                           indf1	equ	0xFE7
  4545                           postinc1	equ	0xFE6
  4546                           postdec1	equ	0xFE5
  4547                           preinc1	equ	0xFE4
  4548                           plusw1	equ	0xFE3
  4549                           fsr1h	equ	0xFE2
  4550                           fsr1l	equ	0xFE1
  4551                           bsr	equ	0xFE0
  4552                           indf2	equ	0xFDF
  4553                           postinc2	equ	0xFDE
  4554                           postdec2	equ	0xFDD
  4555                           preinc2	equ	0xFDC
  4556                           plusw2	equ	0xFDB
  4557                           fsr2h	equ	0xFDA
  4558                           fsr2l	equ	0xFD9
  4559                           status	equ	0xFD8


Data Sizes:
    Strings     350
    Constant    23
    Data        66
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    107     115
    BANK0           128     21     122
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[10]), STR_32(CODE[14]), STR_31(CODE[11]), STR_30(CODE[12]), 
		 -> STR_29(CODE[10]), STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[12]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[16]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[11]), STR_16(CODE[13]), STR_15(CODE[15]), STR_14(CODE[11]), 
		 -> STR_13(CODE[15]), STR_12(CODE[12]), STR_11(CODE[15]), STR_10(CODE[13]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[12]), STR_6(CODE[10]), 
		 -> STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[9]), 
		 -> STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S793_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[10]), STR_32(CODE[14]), STR_31(CODE[11]), STR_30(CODE[12]), 
		 -> STR_29(CODE[10]), STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[12]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[16]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[11]), STR_16(CODE[13]), STR_15(CODE[15]), STR_14(CODE[11]), 
		 -> STR_13(CODE[15]), STR_12(CODE[12]), STR_11(CODE[15]), STR_10(CODE[13]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[12]), STR_6(CODE[10]), 
		 -> STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[9]), 
		 -> STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[10]), STR_32(CODE[14]), STR_31(CODE[11]), STR_30(CODE[12]), 
		 -> STR_29(CODE[10]), STR_28(CODE[15]), STR_27(CODE[14]), STR_26(CODE[12]), 
		 -> STR_25(CODE[10]), STR_24(CODE[15]), STR_23(CODE[12]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[16]), STR_19(CODE[9]), STR_18(CODE[9]), 
		 -> STR_17(CODE[11]), STR_16(CODE[13]), STR_15(CODE[15]), STR_14(CODE[11]), 
		 -> STR_13(CODE[15]), STR_12(CODE[12]), STR_11(CODE[15]), STR_10(CODE[13]), 
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[12]), STR_6(CODE[10]), 
		 -> STR_5(CODE[15]), STR_4(CODE[17]), STR_3(CODE[13]), STR_2(CODE[9]), 
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   17522
                                              4 BANK0     17    17      0
                            ___awmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   15716
                                            103 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12659
                                             95 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   12177
                                             78 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6083
                                             42 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4096
                                             42 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3817
                                             31 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1602
                                             24 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1102
                                             15 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     158
                                             14 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                             15 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     158
                                             14 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0     127
                                             13 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      65
                                             12 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      34
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _interruptHandler                                   11    11      0     113
                                              0 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     15      7A       5       95.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6B      73       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      ED      34        0.0%
DATA                 0      0      ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb  6 12:17:51 2019

              __CFG_CPD$ON 000000                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000                        l170 0E10                        l190 06FE  
                      l188 06F6                        l901 1146               __CFG_CPB$OFF 000000  
                      _abs 111E                        _pad 0DE2               ___awmod@sign 0011  
                      wreg 000FE8               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     ?_abs 001E                       l2411 0B3A                       l2403 0B00  
                     l2421 0B96                       l2351 1106                       l2503 0718  
                     l2337 0F00                       l2409 0B26                       l2425 0BAC  
                     l2441 0C20                       l2347 10F0                       l2355 115A  
                     l2371 0E08                       l2451 0C72                       l2507 0728  
                     l2603 0FD0                       l2357 115E                       l2381 0E5E  
                     l2373 0E1A                       l2429 0BD2                       l2461 0CD0  
                     l2445 0C44                       l2541 089C                       l2517 0820  
                     l2605 0FF4                       l2367 0DFA                       l2377 0E32  
                     l2473 1022                       l2465 0CF6                       l2457 0CBA  
                     l2449 0C5E                       l2537 0884                       l2561 0968  
                     l2475 102E                       l2571 0A1A                       l2397 0AD8  
                     l2581 0A60                       l2831 0402                       l2489 06DA  
                     l2577 0A56                       l2913 0632                       l2761 028E  
                     l2745 0234                       l2729 01D2                       l1971 0EC6  
                     l1963 0EA6                       l1955 0E8C                       l2587 0A78  
                     l2851 0496                       l2819 03BC                       l2683 008E  
                     l1965 0EAE                       l2909 061C                       l2917 0642  
                     ?_pad 0020                       l1975 0ED0                       l1959 0E98  
                     l2927 066C                       l2777 02E2                       l1979 0EDE  
                     l2891 05B4                       l2867 0510                       l2875 0538  
                     l2779 02EE                       l2893 05C0                       l2869 051C  
                     l2799 0352                       l2899 05DC                       STR_1 FFF6  
                     STR_2 FFED                       STR_3 FF46                       STR_4 FEA0  
                     STR_5 FED0                       STR_6 FFBE                       STR_7 FF85  
                     STR_8 FFD2                       STR_9 FF9D                       u2000 0850  
                     u2001 084E                       u2010 085E                       u2020 0862  
                     u2040 086E                       u1330 0EB2                       _LATD 000F8C  
                     u2090 099C                       u2407 010E                       u2417 0130  
                     u1810 0B3E                       u2507 0372                       u2427 0162  
                     u2517 0420                       u2437 0188                       u1670 0EF8  
                     u1910 06AC                       u1655 11A0                       u2607 1188  
                     u2527 04B4                       u2447 01AA                       u2367 0054  
                     u1656 11A2                       u1760 112C                       u1920 06AE  
                     u2617 1192                       u2537 0558                       u2457 01E8  
                     u2377 00A4                       u1690 0F40                       u2547 0628  
                     u2467 021C                       u2387 00C6                       u2557 0678  
                     u2477 0254                       u2397 00F2                       u1870 0C76  
                     u1950 06EC                       u2567 0F5A                       u1791 0B06  
                     u2487 02AC                       u2577 0F72                       u2497 030E  
                     u1970 0712                       u2587 0F84                       u1980 082E  
                     u2597 0FA6                       abs@a 001E                       _dbuf 00C5  
                     _ctoa 1010                       _main 0012                       _dtoa 0684  
 __end_of_interruptHandler 0DE2                       _keys FE89                       _prec 0070  
                     _time 00C0                       _nout 006C                       pad@i 0027  
                     pad@p 0024                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 0029  
                     fsr2l 000FD9                       btemp 0074                       start 000E  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000               ___param_bank 000000  
                    ??_abs 0020                      ??_pad 0026            __end_of___aodiv 0BF4  
                    ?_ctoa 002B                      ?_main 0001                      ?_dtoa 002B  
          __end_of___aomod 0D18                      STR_10 FF60                      STR_11 FF0C  
                    STR_12 FF6D                      STR_20 FEB1                      STR_21 FF91  
                    STR_13 FEDF                      STR_30 FF79                      STR_14 FFA8  
                    STR_22 FEC1                      STR_31 FF2D                      STR_23 FF79  
                    STR_15 FEFD                      STR_16 FF53                      STR_32 FF2A  
                    STR_24 FEEE                      STR_33 FFC8                      STR_25 FFC8  
                    STR_17 FFB3                      STR_26 FF79                      STR_18 FFDB  
                    STR_19 FFE4                      STR_27 FF38                      STR_28 FF1B  
          __end_of___awmod 0EE8                      STR_29 FFC8               vfpfcnvrt@fmt 0051  
                    _PORTB 000F81                      _TRISD 000F95              __CFG_PWRT$OFF 000000  
             main@miniTick 00ED              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000            __end_of_lcdInst 120C  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000               main@keypress 00F3             __CFG_EBTR3$OFF 000000  
                    _State 00A8              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000                      _balls 00BC            __end_of_initLCD 0FBE  
           __CFG_EBTRB$OFF 000000                      _flags 0072              _BallDispensed 0080  
                    _fputc 0EE8                      _fputs 10E6                      pad@fp 0020  
                    _width 006E                      ctoa@c 002D                      _putch 11F4  
                    _start 00C2                      ctoa@w 002E                      dtoa@d 002D  
                    dtoa@i 004D                      dtoa@n 0045                      dtoa@p 003F  
                    dtoa@s 0043                      dtoa@w 0041                      tablat 000FF5  
          send_nibble@data 000D            __end_of_pulse_e 11A4                      ttemp5 0075  
                    ttemp6 0078                      ttemp7 007C                      status 000FD8  
                    wtemp8 0075             __CFG_PBADEN$ON 000000         main@number_pressed 00EF  
          __initialization 105E               __end_of_ctoa 105E               __end_of_main 0684  
             __end_of_dtoa 08C6               __end_of_keys FE9A                     ??_ctoa 002E  
                   ??_main 00E9                     ??_dtoa 0035              __activetblptr 000002  
                   _ADCON1 000FC1               ?_send_nibble 0001                     ?_fputc 0010  
                   ?_fputs 0019                     ?_putch 0001                     _INT1IE 007F83  
                   _INT1IF 007F80                     i2l2301 0D7E                     i2l2307 0DB4  
                   i2l2309 0DB8                     i2l2293 0D56                     i2l2299 0D74  
            main@miniClear 00F1              main@miniState 00F4             __CFG_XINST$OFF 000000  
             vfprintf@cfmt 0066                  ??___aodiv 001C                  ??___aomod 001C  
           __CFG_STVREN$ON 000000                  ??___awmod 0010                     clear_0 1084  
                   clear_1 1090            ___awmod@divisor 000E            ___awmod@counter 0010  
                ??_lcdInst 000F                     _printf 11A4                     pad@buf 0022  
                   ctoa@fp 002B                     dtoa@fp 002B                     _strlen 1150  
                ??_initLCD 0010                     fputc@c 0010                     fputs@c 001D  
                   fputs@i 001E                     fputs@s 0019               __mediumconst FE88  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
         __end_of_vfprintf 1010                  ??_pulse_e 000C      pulse_e@interruptState 000C  
               __accesstop 0080    __end_of__initialization 1096              ___rparam_used 000001  
           __pcstackCOMRAM 0001               __pidataBANK0 10A4              __end_of_fputc 0F54  
            __end_of_fputs 111E              __end_of_putch 1200            _key_was_pressed 00C4  
                  ??_fputc 0014                    ??_fputs 001D                    ??_putch 000F  
               __pbssBANK0 00C2          ?_interruptHandler 0001         ??_interruptHandler 0001  
       __size_of_send_byte 0012                    ?_printf 0068                    ?_strlen 000C  
       __size_of_vfpfcnvrt 01E6       __size_of_send_nibble 0016           _DistanceCanister 0094  
                  __Hparam 0000                    __Lparam 0000                    ___aodiv 0AAC  
                  ___aomod 0BF4                    ___awmod 0E78                  ?_vfprintf 0060  
 interruptHandler@keypress 000B                    __pcinit 105E                    __ramtop 1000  
                  _lcdInst 1200                    __ptext0 0012                    __ptext1 11A4  
                  __ptext2 0FBE                    __ptext3 08C6                    __ptext4 0684  
                  __ptext5 111E                    __ptext6 0BF4                    __ptext7 0AAC  
                  __ptext8 1010                    __ptext9 0DE2            __size_of_printf 0028  
          __size_of_strlen 002A                    _initLCD 0F54               __size_of_abs 0032  
             __size_of_pad 0096           ___awmod@dividend 000C                    _pulse_e 117A  
           __pintcode_body 0D18       end_of_initialization 1096      __end_of_LCD_SIZE_HORZ FEA0  
        __end_of_send_byte 11F4      __end_of_LCD_SIZE_VERT FE9F                    fputc@fp 0012  
            __Lmediumconst FE88                    int_func 0D18                    fputs@fp 001B  
        __end_of_vfpfcnvrt 0AAC                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 0066                    strlen@a 000E                    strlen@s 000C  
            send_byte@data 000E                vfpfcnvrt@ap 0053                vfpfcnvrt@fp 004F  
              vfpfcnvrt@ll 0057             __end_of_printf 11CC             __end_of_strlen 117A  
      start_initialization 105E                __end_of_abs 1150                __end_of_pad 0E78  
        interruptHandler@i 0009                vfprintf@fmt 0062                __pdataBANK0 0080  
         __CFG_LPT1OSC$OFF 000000                   ??_printf 006C  __size_of_interruptHandler 0DDA  
                 ??_strlen 000E                __pbssCOMRAM 006C              __pcstackBANK0 00E5  
         ___aodiv@dividend 000C          __CFG_CCP2MX$PORTC 000000                  __pintcode 0008  
            __pmediumconst FE88                   ?___aodiv 000C                   ?___aomod 000C  
         ___aodiv@quotient 001E                   ?___awmod 000C                   ?_lcdInst 0001  
        __size_of_vfprintf 0052                   ?_initLCD 0001              ??_send_nibble 000D  
                 ?_pulse_e 0001             __size_of_fputc 006C             __size_of_fputs 0038  
           __size_of_putch 000C                   _LATDbits 000F8C                  _send_byte 11E2  
           _LCD_LINE1_ADDR FE9D             _LCD_LINE2_ADDR FE9C             _LCD_LINE3_ADDR FE9B  
           _LCD_LINE4_ADDR FE9A                   i2u164_40 0DCE           __CFG_WDTPS$32768 000000  
                _vfpfcnvrt 08C6                  main@clear 00F6                   _Canister 00BE  
                main@state 00F8                 vfpfcnvrt@c 005F                  copy_data0 1072  
   __end_of_LCD_LINE1_ADDR FE9E     __end_of_LCD_LINE2_ADDR FE9D     __end_of_LCD_LINE3_ADDR FE9C  
   __end_of_LCD_LINE4_ADDR FE9B        __end_of_send_nibble 11E2                 ?_send_byte 0001  
                 __Hrparam 0000                 vfprintf@ap 0064                   __Lrparam 0000  
               vfprintf@fp 0060         __CFG_BOREN$SBORDIS 000000           __size_of___aodiv 0148  
         __size_of___aomod 0124           __size_of___awmod 0070                 ?_vfpfcnvrt 004F  
          ___aodiv@divisor 0014           _interruptHandler 0008            ___aodiv@counter 001C  
         __size_of_lcdInst 000C           __size_of_initLCD 006A                   _dtoa$332 003D  
                 __ptext10 1150                   __ptext11 10E6                   __ptext12 0EE8  
                 __ptext13 11F4                   __ptext14 0F54                   __ptext15 1200  
                 __ptext16 11E2                   __ptext17 11CC                   __ptext18 117A  
                 __ptext19 0E78           __size_of_pulse_e 002A              __size_of_ctoa 004E  
            __size_of_main 0672              __size_of_dtoa 0242                   _exit_key 00C3  
                 int$flags 0074                   _vfprintf 0FBE                  printf@fmt 0068  
                 main@tick 00EB           ___aomod@dividend 000C                  putch@data 000F  
               _INTCONbits 000FF2                _send_nibble 11CC                   intlevel2 0000  
            _LCD_SIZE_HORZ FE9F              _LCD_SIZE_VERT FE9E                ??_send_byte 000E  
                 printf@ap 00E7            ___aomod@divisor 0014                ??_vfpfcnvrt 0055  
              lcdInst@data 000F            ___aomod@counter 001C               ___aodiv@sign 001D  
             ___aomod@sign 001D  
