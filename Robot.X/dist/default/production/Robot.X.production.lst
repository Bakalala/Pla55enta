

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Feb  2 21:22:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataBANK0
    75  001000                     __pidataBANK0:
    76                           	opt callstack 0
    77                           
    78                           ;initializer for _BallDispensed
    79  001000  0001               	dw	1
    80  001002  0001               	dw	1
    81  001004  0001               	dw	1
    82  001006  0000               	dw	0
    83  001008  0000               	dw	0
    84  00100A  0001               	dw	1
    85  00100C  0001               	dw	1
    86  00100E  0000               	dw	0
    87  001010  FFFF               	dw	65535
    88  001012  FFFF               	dw	65535
    89                           
    90                           ;initializer for _DistanceCanister
    91  001014  0014               	dw	20
    92  001016  001E               	dw	30
    93  001018  0028               	dw	40
    94  00101A  003B               	dw	59
    95  00101C  007B               	dw	123
    96  00101E  00D4               	dw	212
    97  001020  014C               	dw	332
    98  001022  0190               	dw	400
    99  001024  FFFF               	dw	65535
   100  001026  FFFF               	dw	65535
   101                           
   102                           ;initializer for _State
   103  001028  0001               	dw	1
   104  00102A  0001               	dw	1
   105  00102C  0001               	dw	1
   106  00102E  0000               	dw	0
   107  001030  0000               	dw	0
   108  001032  0001               	dw	1
   109  001034  0001               	dw	1
   110  001036  0000               	dw	0
   111  001038  FFFF               	dw	65535
   112  00103A  FFFF               	dw	65535
   113                           
   114                           ;initializer for _balls
   115  00103C  0005               	dw	5
   116                           
   117                           ;initializer for _Canister
   118  00103E  0008               	dw	8
   119                           
   120                           ;initializer for _time
   121  001040  001E               	dw	30
   122                           
   123                           	psect	mediumconst
   124  00FEC2                     __pmediumconst:
   125                           	opt callstack 0
   126  00FEC2  00                 	db	0
   127  00FEC3                     _keys:
   128                           	opt callstack 0
   129  00FEC3  31                 	db	49
   130  00FEC4  32                 	db	50
   131  00FEC5  33                 	db	51
   132  00FEC6  41                 	db	65
   133  00FEC7  34                 	db	52
   134  00FEC8  35                 	db	53
   135  00FEC9  36                 	db	54
   136  00FECA  42                 	db	66
   137  00FECB  37                 	db	55
   138  00FECC  38                 	db	56
   139  00FECD  39                 	db	57
   140  00FECE  43                 	db	67
   141  00FECF  2A                 	db	42
   142  00FED0  30                 	db	48
   143  00FED1  23                 	db	35
   144  00FED2  44                 	db	68
   145  00FED3  00                 	db	0
   146  00FED4                     __end_of_keys:
   147                           	opt callstack 0
   148  00FED4  50                 	db	80
   149  00FED5                     __end_of_LCD_LINE4_ADDR:
   150                           	opt callstack 0
   151  00FED5  10                 	db	16
   152  00FED6                     __end_of_LCD_LINE3_ADDR:
   153                           	opt callstack 0
   154  00FED6  40                 	db	64
   155  00FED7                     __end_of_LCD_LINE2_ADDR:
   156                           	opt callstack 0
   157  00FED7  00                 	db	0
   158  00FED8                     __end_of_LCD_LINE1_ADDR:
   159                           	opt callstack 0
   160  00FED8                     _LCD_SIZE_VERT:
   161                           	opt callstack 0
   162  00FED8  04                 	db	4
   163  00FED9                     __end_of_LCD_SIZE_VERT:
   164                           	opt callstack 0
   165  00FED9                     _LCD_SIZE_HORZ:
   166                           	opt callstack 0
   167  00FED9  10                 	db	16
   168  00FEDA                     __end_of_LCD_SIZE_HORZ:
   169                           	opt callstack 0
   170  0000                     _PORTB	set	3969
   171  0000                     _ADCON1	set	4033
   172  0000                     _TRISD	set	3989
   173  0000                     _LATD	set	3980
   174  0000                     _LATDbits	set	3980
   175  0000                     _INTCONbits	set	4082
   176  0000                     _INT1IF	set	32640
   177  0000                     _INT1IE	set	32643
   178  00FEDA                     STR_3:
   179  00FEDA  49                 	db	73	;'I'
   180  00FEDB  74                 	db	116	;'t'
   181  00FEDC  27                 	db	39
   182  00FEDD  73                 	db	115	;'s'
   183  00FEDE  20                 	db	32
   184  00FEDF  79                 	db	121	;'y'
   185  00FEE0  61                 	db	97	;'a'
   186  00FEE1  20                 	db	32
   187  00FEE2  62                 	db	98	;'b'
   188  00FEE3  6F                 	db	111	;'o'
   189  00FEE4  79                 	db	121	;'y'
   190  00FEE5  20                 	db	32
   191  00FEE6  41                 	db	65	;'A'
   192  00FEE7  6C                 	db	108	;'l'
   193  00FEE8  69                 	db	105	;'i'
   194  00FEE9  21                 	db	33
   195  00FEEA  00                 	db	0
   196  00FEEB                     STR_15:
   197  00FEEB  49                 	db	73	;'I'
   198  00FEEC  6E                 	db	110	;'n'
   199  00FEED  64                 	db	100	;'d'
   200  00FEEE  69                 	db	105	;'i'
   201  00FEEF  76                 	db	118	;'v'
   202  00FEF0  69                 	db	105	;'i'
   203  00FEF1  64                 	db	100	;'d'
   204  00FEF2  75                 	db	117	;'u'
   205  00FEF3  61                 	db	97	;'a'
   206  00FEF4  6C                 	db	108	;'l'
   207  00FEF5  20                 	db	32
   208  00FEF6  49                 	db	73	;'I'
   209  00FEF7  6E                 	db	110	;'n'
   210  00FEF8  66                 	db	102	;'f'
   211  00FEF9  6F                 	db	111	;'o'
   212  00FEFA  00                 	db	0
   213  00FEFB                     STR_17:
   214  00FEFB  50                 	db	80	;'P'
   215  00FEFC  72                 	db	114	;'r'
   216  00FEFD  65                 	db	101	;'e'
   217  00FEFE  73                 	db	115	;'s'
   218  00FEFF  73                 	db	115	;'s'
   219  00FF00  20                 	db	32
   220  00FF01  30                 	db	48	;'0'
   221  00FF02  20                 	db	32
   222  00FF03  74                 	db	116	;'t'
   223  00FF04  6F                 	db	111	;'o'
   224  00FF05  20                 	db	32
   225  00FF06  25                 	db	37
   226  00FF07  64                 	db	100	;'d'
   227  00FF08  20                 	db	32
   228  00FF09  00                 	db	0
   229  00FF0A                     STR_4:
   230  00FF0A  48                 	db	72	;'H'
   231  00FF0B  65                 	db	101	;'e'
   232  00FF0C  20                 	db	32
   233  00FF0D  67                 	db	103	;'g'
   234  00FF0E  65                 	db	101	;'e'
   235  00FF0F  74                 	db	116	;'t'
   236  00FF10  74                 	db	116	;'t'
   237  00FF11  69                 	db	105	;'i'
   238  00FF12  6E                 	db	110	;'n'
   239  00FF13  20                 	db	32
   240  00FF14  68                 	db	104	;'h'
   241  00FF15  6F                 	db	111	;'o'
   242  00FF16  74                 	db	116	;'t'
   243  00FF17  20                 	db	32
   244  00FF18  00                 	db	0
   245  00FF19                     STR_8:
   246  00FF19  4F                 	db	79	;'O'
   247  00FF1A  70                 	db	112	;'p'
   248  00FF1B  65                 	db	101	;'e'
   249  00FF1C  72                 	db	114	;'r'
   250  00FF1D  61                 	db	97	;'a'
   251  00FF1E  74                 	db	116	;'t'
   252  00FF1F  69                 	db	105	;'i'
   253  00FF20  6F                 	db	111	;'o'
   254  00FF21  6E                 	db	110	;'n'
   255  00FF22  20                 	db	32
   256  00FF23  54                 	db	84	;'T'
   257  00FF24  69                 	db	105	;'i'
   258  00FF25  6D                 	db	109	;'m'
   259  00FF26  65                 	db	101	;'e'
   260  00FF27  00                 	db	0
   261  00FF28                     STR_19:
   262  00FF28  44                 	db	68	;'D'
   263  00FF29  69                 	db	105	;'i'
   264  00FF2A  73                 	db	115	;'s'
   265  00FF2B  74                 	db	116	;'t'
   266  00FF2C  61                 	db	97	;'a'
   267  00FF2D  6E                 	db	110	;'n'
   268  00FF2E  63                 	db	99	;'c'
   269  00FF2F  65                 	db	101	;'e'
   270  00FF30  20                 	db	32
   271  00FF31  25                 	db	37
   272  00FF32  64                 	db	100	;'d'
   273  00FF33  20                 	db	32
   274  00FF34  63                 	db	99	;'c'
   275  00FF35  6D                 	db	109	;'m'
   276  00FF36  00                 	db	0
   277  00FF37                     STR_10:
   278  00FF37  23                 	db	35
   279  00FF38  20                 	db	32
   280  00FF39  6F                 	db	111	;'o'
   281  00FF3A  66                 	db	102	;'f'
   282  00FF3B  20                 	db	32
   283  00FF3C  43                 	db	67	;'C'
   284  00FF3D  61                 	db	97	;'a'
   285  00FF3E  6E                 	db	110	;'n'
   286  00FF3F  69                 	db	105	;'i'
   287  00FF40  73                 	db	115	;'s'
   288  00FF41  74                 	db	116	;'t'
   289  00FF42  65                 	db	101	;'e'
   290  00FF43  72                 	db	114	;'r'
   291  00FF44  73                 	db	115	;'s'
   292  00FF45  00                 	db	0
   293  00FF46                     STR_23:
   294  00FF46  43                 	db	67	;'C'
   295  00FF47  61                 	db	97	;'a'
   296  00FF48  6E                 	db	110	;'n'
   297  00FF49  69                 	db	105	;'i'
   298  00FF4A  73                 	db	115	;'s'
   299  00FF4B  74                 	db	116	;'t'
   300  00FF4C  65                 	db	101	;'e'
   301  00FF4D  72                 	db	114	;'r'
   302  00FF4E  20                 	db	32
   303  00FF4F  45                 	db	69	;'E'
   304  00FF50  6D                 	db	109	;'m'
   305  00FF51  70                 	db	112	;'p'
   306  00FF52  74                 	db	116	;'t'
   307  00FF53  79                 	db	121	;'y'
   308  00FF54  00                 	db	0
   309  00FF55                     STR_27:
   310  00FF55  4E                 	db	78	;'N'
   311  00FF56  6F                 	db	111	;'o'
   312  00FF57  20                 	db	32
   313  00FF58  42                 	db	66	;'B'
   314  00FF59  61                 	db	97	;'a'
   315  00FF5A  6C                 	db	108	;'l'
   316  00FF5B  6C                 	db	108	;'l'
   317  00FF5C  20                 	db	32
   318  00FF5D  41                 	db	65	;'A'
   319  00FF5E  64                 	db	100	;'d'
   320  00FF5F  64                 	db	100	;'d'
   321  00FF60  65                 	db	101	;'e'
   322  00FF61  64                 	db	100	;'d'
   323  00FF62  00                 	db	0
   324  00FF63                     STR_22:
   325  00FF63  43                 	db	67	;'C'
   326  00FF64  61                 	db	97	;'a'
   327  00FF65  6E                 	db	110	;'n'
   328  00FF66  69                 	db	105	;'i'
   329  00FF67  73                 	db	115	;'s'
   330  00FF68  74                 	db	116	;'t'
   331  00FF69  65                 	db	101	;'e'
   332  00FF6A  72                 	db	114	;'r'
   333  00FF6B  20                 	db	32
   334  00FF6C  46                 	db	70	;'F'
   335  00FF6D  75                 	db	117	;'u'
   336  00FF6E  6C                 	db	108	;'l'
   337  00FF6F  6C                 	db	108	;'l'
   338  00FF70  00                 	db	0
   339  00FF71                     STR_2:
   340  00FF71  41                 	db	65	;'A'
   341  00FF72  20                 	db	32
   342  00FF73  66                 	db	102	;'f'
   343  00FF74  6F                 	db	111	;'o'
   344  00FF75  72                 	db	114	;'r'
   345  00FF76  20                 	db	32
   346  00FF77  41                 	db	65	;'A'
   347  00FF78  6C                 	db	108	;'l'
   348  00FF79  69                 	db	105	;'i'
   349  00FF7A  20                 	db	32
   350  00FF7B  3B                 	db	59	;';'
   351  00FF7C  29                 	db	41
   352  00FF7D  00                 	db	0
   353  00FF7E                     STR_11:
   354  00FF7E  25                 	db	37
   355  00FF7F  64                 	db	100	;'d'
   356  00FF80  20                 	db	32
   357  00FF81  43                 	db	67	;'C'
   358  00FF82  61                 	db	97	;'a'
   359  00FF83  6E                 	db	110	;'n'
   360  00FF84  69                 	db	105	;'i'
   361  00FF85  73                 	db	115	;'s'
   362  00FF86  74                 	db	116	;'t'
   363  00FF87  65                 	db	101	;'e'
   364  00FF88  72                 	db	114	;'r'
   365  00FF89  73                 	db	115	;'s'
   366  00FF8A  00                 	db	0
   367  00FF8B                     STR_18:
   368  00FF8B  43                 	db	67	;'C'
   369  00FF8C  61                 	db	97	;'a'
   370  00FF8D  6E                 	db	110	;'n'
   371  00FF8E  73                 	db	115	;'s'
   372  00FF8F  69                 	db	105	;'i'
   373  00FF90  74                 	db	116	;'t'
   374  00FF91  65                 	db	101	;'e'
   375  00FF92  72                 	db	114	;'r'
   376  00FF93  20                 	db	32
   377  00FF94  25                 	db	37
   378  00FF95  63                 	db	99	;'c'
   379  00FF96  00                 	db	0
   380  00FF97                     STR_6:
   381  00FF97  41                 	db	65	;'A'
   382  00FF98  6C                 	db	108	;'l'
   383  00FF99  6D                 	db	109	;'m'
   384  00FF9A  6F                 	db	111	;'o'
   385  00FF9B  73                 	db	115	;'s'
   386  00FF9C  74                 	db	116	;'t'
   387  00FF9D  20                 	db	32
   388  00FF9E  64                 	db	100	;'d'
   389  00FF9F  6F                 	db	111	;'o'
   390  00FFA0  6E                 	db	110	;'n'
   391  00FFA1  65                 	db	101	;'e'
   392  00FFA2  00                 	db	0
   393  00FFA3                     STR_16:
   394  00FFA3  6F                 	db	111	;'o'
   395  00FFA4  66                 	db	102	;'f'
   396  00FFA5  20                 	db	32
   397  00FFA6  43                 	db	67	;'C'
   398  00FFA7  61                 	db	97	;'a'
   399  00FFA8  6E                 	db	110	;'n'
   400  00FFA9  69                 	db	105	;'i'
   401  00FFAA  73                 	db	115	;'s'
   402  00FFAB  74                 	db	116	;'t'
   403  00FFAC  65                 	db	101	;'e'
   404  00FFAD  72                 	db	114	;'r'
   405  00FFAE  00                 	db	0
   406  00FFAF                     STR_9:
   407  00FFAF  25                 	db	37
   408  00FFB0  64                 	db	100	;'d'
   409  00FFB1  20                 	db	32
   410  00FFB2  73                 	db	115	;'s'
   411  00FFB3  65                 	db	101	;'e'
   412  00FFB4  63                 	db	99	;'c'
   413  00FFB5  6F                 	db	111	;'o'
   414  00FFB6  6E                 	db	110	;'n'
   415  00FFB7  64                 	db	100	;'d'
   416  00FFB8  73                 	db	115	;'s'
   417  00FFB9  00                 	db	0
   418  00FFBA                     STR_12:
   419  00FFBA  23                 	db	35
   420  00FFBB  20                 	db	32
   421  00FFBC  6F                 	db	111	;'o'
   422  00FFBD  66                 	db	102	;'f'
   423  00FFBE  20                 	db	32
   424  00FFBF  42                 	db	66	;'B'
   425  00FFC0  61                 	db	97	;'a'
   426  00FFC1  6C                 	db	108	;'l'
   427  00FFC2  6C                 	db	108	;'l'
   428  00FFC3  73                 	db	115	;'s'
   429  00FFC4  00                 	db	0
   430  00FFC5                     STR_1:
   431  00FFC5  41                 	db	65	;'A'
   432  00FFC6  20                 	db	32
   433  00FFC7  74                 	db	116	;'t'
   434  00FFC8  6F                 	db	111	;'o'
   435  00FFC9  20                 	db	32
   436  00FFCA  73                 	db	115	;'s'
   437  00FFCB  74                 	db	116	;'t'
   438  00FFCC  61                 	db	97	;'a'
   439  00FFCD  72                 	db	114	;'r'
   440  00FFCE  74                 	db	116	;'t'
   441  00FFCF  00                 	db	0
   442  00FFD0                     STR_5:
   443  00FFD0  48                 	db	72	;'H'
   444  00FFD1  69                 	db	105	;'i'
   445  00FFD2  20                 	db	32
   446  00FFD3  43                 	db	67	;'C'
   447  00FFD4  75                 	db	117	;'u'
   448  00FFD5  6C                 	db	108	;'l'
   449  00FFD6  6C                 	db	108	;'l'
   450  00FFD7  20                 	db	32
   451  00FFD8  21                 	db	33
   452  00FFD9  00                 	db	0
   453  00FFDA                     STR_20:
   454  00FFDA  2A                 	db	42
   455  00FFDB  20                 	db	32
   456  00FFDC  74                 	db	116	;'t'
   457  00FFDD  6F                 	db	111	;'o'
   458  00FFDE  20                 	db	32
   459  00FFDF  65                 	db	101	;'e'
   460  00FFE0  78                 	db	120	;'x'
   461  00FFE1  69                 	db	105	;'i'
   462  00FFE2  74                 	db	116	;'t'
   463  00FFE3  00                 	db	0
   464  00FFE4                     STR_7:
   465  00FFE4  41                 	db	65	;'A'
   466  00FFE5  4E                 	db	78	;'N'
   467  00FFE6  44                 	db	68	;'D'
   468  00FFE7  20                 	db	32
   469  00FFE8  44                 	db	68	;'D'
   470  00FFE9  4F                 	db	79	;'O'
   471  00FFEA  4E                 	db	78	;'N'
   472  00FFEB  45                 	db	69	;'E'
   473  00FFEC  00                 	db	0
   474  00FFED                     STR_13:
   475  00FFED  73                 	db	115	;'s'
   476  00FFEE  75                 	db	117	;'u'
   477  00FFEF  70                 	db	112	;'p'
   478  00FFF0  70                 	db	112	;'p'
   479  00FFF1  6C                 	db	108	;'l'
   480  00FFF2  69                 	db	105	;'i'
   481  00FFF3  65                 	db	101	;'e'
   482  00FFF4  64                 	db	100	;'d'
   483  00FFF5  00                 	db	0
   484  00FFF6                     STR_14:
   485  00FFF6  25                 	db	37
   486  00FFF7  64                 	db	100	;'d'
   487  00FFF8  20                 	db	32
   488  00FFF9  62                 	db	98	;'b'
   489  00FFFA  61                 	db	97	;'a'
   490  00FFFB  6C                 	db	108	;'l'
   491  00FFFC  6C                 	db	108	;'l'
   492  00FFFD  73                 	db	115	;'s'
   493  00FFFE  00                 	db	0
   494  0000                     
   495                           ; #config settings
   496  00FFFF  00                 	db	0	; dummy byte at the end
   497  0000                     
   498                           	psect	cinit
   499  000FBA                     __pcinit:
   500                           	opt callstack 0
   501  000FBA                     start_initialization:
   502                           	opt callstack 0
   503  000FBA                     __initialization:
   504                           	opt callstack 0
   505                           
   506                           ; Initialize objects allocated to BANK0 (66 bytes)
   507                           ; load TBLPTR registers with __pidataBANK0
   508  000FBA  0E00               	movlw	low __pidataBANK0
   509  000FBC  6EF6               	movwf	tblptrl,c
   510  000FBE  0E10               	movlw	high __pidataBANK0
   511  000FC0  6EF7               	movwf	tblptrh,c
   512  000FC2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   513  000FC4  6EF8               	movwf	tblptru,c
   514  000FC6  EE00  F080         	lfsr	0,__pdataBANK0
   515  000FCA  EE10 F042          	lfsr	1,66
   516  000FCE                     copy_data0:
   517  000FCE  0009               	tblrd		*+
   518  000FD0  CFF5 FFEE          	movff	tablat,postinc0
   519  000FD4  50E5               	movf	postdec1,w,c
   520  000FD6  50E1               	movf	fsr1l,w,c
   521  000FD8  E1FA               	bnz	copy_data0
   522                           
   523                           ; Clear objects allocated to BANK0 (35 bytes)
   524  000FDA  EE00  F0C2         	lfsr	0,__pbssBANK0
   525  000FDE  0E23               	movlw	35
   526  000FE0                     clear_0:
   527  000FE0  6AEE               	clrf	postinc0,c
   528  000FE2  06E8               	decf	wreg,f,c
   529  000FE4  E1FD               	bnz	clear_0
   530                           
   531                           ; Clear objects allocated to COMRAM (8 bytes)
   532  000FE6  EE00  F06C         	lfsr	0,__pbssCOMRAM
   533  000FEA  0E08               	movlw	8
   534  000FEC                     clear_1:
   535  000FEC  6AEE               	clrf	postinc0,c
   536  000FEE  06E8               	decf	wreg,f,c
   537  000FF0  E1FD               	bnz	clear_1
   538  000FF2                     end_of_initialization:
   539                           	opt callstack 0
   540  000FF2                     __end_of__initialization:
   541                           	opt callstack 0
   542  000FF2  9074               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   543  000FF4  9274               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   544  000FF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   545  000FF8  6EF8               	movwf	tblptru,c
   546  000FFA  0100               	movlb	0
   547  000FFC  EF09  F000         	goto	_main	;jump to C main() function
   548                           
   549                           	psect	bssCOMRAM
   550  00006C                     __pbssCOMRAM:
   551                           	opt callstack 0
   552  00006C                     _nout:
   553                           	opt callstack 0
   554  00006C                     	ds	2
   555  00006E                     _width:
   556                           	opt callstack 0
   557  00006E                     	ds	2
   558  000070                     _prec:
   559                           	opt callstack 0
   560  000070                     	ds	2
   561  000072                     _flags:
   562                           	opt callstack 0
   563  000072                     	ds	2
   564                           
   565                           	psect	bssBANK0
   566  0000C2                     __pbssBANK0:
   567                           	opt callstack 0
   568  0000C2                     _start:
   569                           	opt callstack 0
   570  0000C2                     	ds	1
   571  0000C3                     _exit_key:
   572                           	opt callstack 0
   573  0000C3                     	ds	1
   574  0000C4                     _key_was_pressed:
   575                           	opt callstack 0
   576  0000C4                     	ds	1
   577  0000C5                     _dbuf:
   578                           	opt callstack 0
   579  0000C5                     	ds	32
   580                           
   581                           	psect	dataBANK0
   582  000080                     __pdataBANK0:
   583                           	opt callstack 0
   584  000080                     _BallDispensed:
   585                           	opt callstack 0
   586  000080                     	ds	20
   587  000094                     _DistanceCanister:
   588                           	opt callstack 0
   589  000094                     	ds	20
   590  0000A8                     _State:
   591                           	opt callstack 0
   592  0000A8                     	ds	20
   593  0000BC                     _balls:
   594                           	opt callstack 0
   595  0000BC                     	ds	2
   596  0000BE                     _Canister:
   597                           	opt callstack 0
   598  0000BE                     	ds	2
   599  0000C0                     _time:
   600                           	opt callstack 0
   601  0000C0                     	ds	2
   602                           
   603                           	psect	cstackBANK0
   604  0000E5                     __pcstackBANK0:
   605                           	opt callstack 0
   606  0000E5                     	ds	2
   607  0000E7                     printf@ap:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x2
   611  0000E7                     	ds	2
   612  0000E9                     ??_main:
   613                           
   614                           ; 1 bytes @ 0x4
   615  0000E9                     	ds	2
   616  0000EB                     main@tick:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x6
   620  0000EB                     	ds	2
   621  0000ED                     main@miniTick:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x8
   625  0000ED                     	ds	2
   626  0000EF                     main@number_pressed:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0xA
   630  0000EF                     	ds	2
   631  0000F1                     main@miniClear:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0xC
   635  0000F1                     	ds	2
   636  0000F3                     main@keypress:
   637                           	opt callstack 0
   638                           
   639                           ; 1 bytes @ 0xE
   640  0000F3                     	ds	1
   641  0000F4                     main@miniState:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0xF
   645  0000F4                     	ds	2
   646  0000F6                     main@clear:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x11
   650  0000F6                     	ds	2
   651  0000F8                     main@state:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x13
   655  0000F8                     	ds	2
   656                           
   657                           	psect	cstackCOMRAM
   658  000001                     __pcstackCOMRAM:
   659                           	opt callstack 0
   660  000001                     ??_interruptHandler:
   661                           
   662                           ; 1 bytes @ 0x0
   663  000001                     	ds	8
   664  000009                     interruptHandler@i:
   665                           	opt callstack 0
   666                           
   667                           ; 2 bytes @ 0x8
   668  000009                     	ds	2
   669  00000B                     interruptHandler@keypress:
   670                           	opt callstack 0
   671                           
   672                           ; 1 bytes @ 0xA
   673  00000B                     	ds	1
   674  00000C                     ?_strlen:
   675                           	opt callstack 0
   676  00000C                     ?___awmod:
   677                           	opt callstack 0
   678  00000C                     ?___aodiv:
   679                           	opt callstack 0
   680  00000C                     ?___aomod:
   681                           	opt callstack 0
   682  00000C                     pulse_e@interruptState:
   683                           	opt callstack 0
   684  00000C                     ___awmod@dividend:
   685                           	opt callstack 0
   686  00000C                     strlen@s:
   687                           	opt callstack 0
   688  00000C                     ___aodiv@dividend:
   689                           	opt callstack 0
   690  00000C                     ___aomod@dividend:
   691                           	opt callstack 0
   692                           
   693                           ; 8 bytes @ 0xB
   694  00000C                     	ds	1
   695  00000D                     send_nibble@data:
   696                           	opt callstack 0
   697                           
   698                           ; 1 bytes @ 0xC
   699  00000D                     	ds	1
   700  00000E                     send_byte@data:
   701                           	opt callstack 0
   702  00000E                     ___awmod@divisor:
   703                           	opt callstack 0
   704  00000E                     strlen@a:
   705                           	opt callstack 0
   706                           
   707                           ; 2 bytes @ 0xD
   708  00000E                     	ds	1
   709  00000F                     lcdInst@data:
   710                           	opt callstack 0
   711  00000F                     putch@data:
   712                           	opt callstack 0
   713                           
   714                           ; 1 bytes @ 0xE
   715  00000F                     	ds	1
   716  000010                     ??_initLCD:
   717  000010                     ___awmod@counter:
   718                           	opt callstack 0
   719  000010                     fputc@c:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0xF
   723  000010                     	ds	1
   724  000011                     ___awmod@sign:
   725                           	opt callstack 0
   726                           
   727                           ; 1 bytes @ 0x10
   728  000011                     	ds	1
   729  000012                     fputc@fp:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x11
   733  000012                     	ds	2
   734  000014                     ??_fputc:
   735  000014                     ___aodiv@divisor:
   736                           	opt callstack 0
   737  000014                     ___aomod@divisor:
   738                           	opt callstack 0
   739                           
   740                           ; 8 bytes @ 0x13
   741  000014                     	ds	5
   742  000019                     fputs@s:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x18
   746  000019                     	ds	2
   747  00001B                     fputs@fp:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x1A
   751  00001B                     	ds	1
   752  00001C                     ___aodiv@counter:
   753                           	opt callstack 0
   754  00001C                     ___aomod@counter:
   755                           	opt callstack 0
   756                           
   757                           ; 1 bytes @ 0x1B
   758  00001C                     	ds	1
   759  00001D                     ___aodiv@sign:
   760                           	opt callstack 0
   761  00001D                     ___aomod@sign:
   762                           	opt callstack 0
   763  00001D                     fputs@c:
   764                           	opt callstack 0
   765                           
   766                           ; 1 bytes @ 0x1C
   767  00001D                     	ds	1
   768  00001E                     ?_abs:
   769                           	opt callstack 0
   770  00001E                     abs@a:
   771                           	opt callstack 0
   772  00001E                     fputs@i:
   773                           	opt callstack 0
   774  00001E                     ___aodiv@quotient:
   775                           	opt callstack 0
   776                           
   777                           ; 8 bytes @ 0x1D
   778  00001E                     	ds	2
   779  000020                     ??_abs:
   780  000020                     ?_pad:
   781                           	opt callstack 0
   782  000020                     pad@fp:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x1F
   786  000020                     	ds	2
   787  000022                     pad@buf:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x21
   791  000022                     	ds	2
   792  000024                     pad@p:
   793                           	opt callstack 0
   794                           
   795                           ; 2 bytes @ 0x23
   796  000024                     	ds	2
   797  000026                     ??_pad:
   798                           
   799                           ; 1 bytes @ 0x25
   800  000026                     	ds	1
   801  000027                     pad@i:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0x26
   805  000027                     	ds	2
   806  000029                     pad@w:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x28
   810  000029                     	ds	2
   811  00002B                     ?_ctoa:
   812                           	opt callstack 0
   813  00002B                     ?_dtoa:
   814                           	opt callstack 0
   815  00002B                     ctoa@fp:
   816                           	opt callstack 0
   817  00002B                     dtoa@fp:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x2A
   821  00002B                     	ds	2
   822  00002D                     ctoa@c:
   823                           	opt callstack 0
   824  00002D                     dtoa@d:
   825                           	opt callstack 0
   826                           
   827                           ; 8 bytes @ 0x2C
   828  00002D                     	ds	1
   829  00002E                     ctoa@w:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x2D
   833  00002E                     	ds	7
   834  000035                     ??_dtoa:
   835                           
   836                           ; 1 bytes @ 0x34
   837  000035                     	ds	8
   838  00003D                     _dtoa$327:
   839                           	opt callstack 0
   840                           
   841                           ; 2 bytes @ 0x3C
   842  00003D                     	ds	2
   843  00003F                     dtoa@p:
   844                           	opt callstack 0
   845                           
   846                           ; 2 bytes @ 0x3E
   847  00003F                     	ds	2
   848  000041                     dtoa@w:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x40
   852  000041                     	ds	2
   853  000043                     dtoa@s:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x42
   857  000043                     	ds	2
   858  000045                     dtoa@n:
   859                           	opt callstack 0
   860                           
   861                           ; 8 bytes @ 0x44
   862  000045                     	ds	8
   863  00004D                     dtoa@i:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x4C
   867  00004D                     	ds	2
   868  00004F                     ?_vfpfcnvrt:
   869                           	opt callstack 0
   870  00004F                     vfpfcnvrt@fp:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x4E
   874  00004F                     	ds	2
   875  000051                     vfpfcnvrt@fmt:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x50
   879  000051                     	ds	2
   880  000053                     vfpfcnvrt@ap:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x52
   884  000053                     	ds	2
   885  000055                     ??_vfpfcnvrt:
   886                           
   887                           ; 1 bytes @ 0x54
   888  000055                     	ds	2
   889  000057                     vfpfcnvrt@ll:
   890                           	opt callstack 0
   891                           
   892                           ; 8 bytes @ 0x56
   893  000057                     	ds	8
   894  00005F                     vfpfcnvrt@c:
   895                           	opt callstack 0
   896                           
   897                           ; 1 bytes @ 0x5E
   898  00005F                     	ds	1
   899  000060                     ?_vfprintf:
   900                           	opt callstack 0
   901  000060                     vfprintf@fp:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x5F
   905  000060                     	ds	2
   906  000062                     vfprintf@fmt:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x61
   910  000062                     	ds	2
   911  000064                     vfprintf@ap:
   912                           	opt callstack 0
   913                           
   914                           ; 2 bytes @ 0x63
   915  000064                     	ds	2
   916  000066                     vfprintf@cfmt:
   917                           	opt callstack 0
   918                           
   919                           ; 2 bytes @ 0x65
   920  000066                     	ds	2
   921  000068                     ?_printf:
   922                           	opt callstack 0
   923  000068                     printf@fmt:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0x67
   927  000068                     	ds	4
   928  00006C                     
   929                           ; 1 bytes @ 0x6B
   930 ;;
   931 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   932 ;;
   933 ;; *************** function _main *****************
   934 ;; Defined at:
   935 ;;		line 37 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  miniState       2   15[BANK0 ] int 
   940 ;;  miniClear       2   12[BANK0 ] int 
   941 ;;  number_press    2   10[BANK0 ] int 
   942 ;;  miniTick        2    8[BANK0 ] int 
   943 ;;  keypress        1   14[BANK0 ] unsigned char 
   944 ;;  state           2   19[BANK0 ] int 
   945 ;;  clear           2   17[BANK0 ] int 
   946 ;;  tick            2    6[BANK0 ] int 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;Total ram usage:       17 bytes
   961 ;; Hardware stack levels required when called:   12
   962 ;; This function calls:
   963 ;;		___awmod
   964 ;;		_initLCD
   965 ;;		_lcdInst
   966 ;;		_printf
   967 ;; This function is called by:
   968 ;;		Startup code after reset
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text0
   973  000012                     __ptext0:
   974                           	opt callstack 0
   975  000012                     _main:
   976                           	opt callstack 19
   977                           
   978                           ;main.c: 41:     LATD = 0x00;
   979                           
   980                           ;incstack = 0
   981  000012  0E00               	movlw	0
   982  000014  6E8C               	movwf	3980,c	;volatile
   983                           
   984                           ;main.c: 42:     TRISD = 0x00;
   985  000016  0E00               	movlw	0
   986  000018  6E95               	movwf	3989,c	;volatile
   987                           
   988                           ;main.c: 45:     ADCON1 = 0b00001111;
   989  00001A  0E0F               	movlw	15
   990  00001C  6EC1               	movwf	4033,c	;volatile
   991                           
   992                           ;main.c: 48:     INT1IE = 1;
   993  00001E  86F0               	bsf	4080,3,c	;volatile
   994                           
   995                           ;main.c: 51:     initLCD();
   996  000020  EC58  F007         	call	_initLCD	;wreg free
   997                           
   998                           ;main.c: 54:     (INTCONbits.GIE = 1);
   999  000024  8EF2               	bsf	4082,7,c	;volatile
  1000                           
  1001                           ;main.c: 57:     int state = 0;
  1002  000026  0E00               	movlw	0
  1003  000028  0100               	movlb	0	; () banked
  1004  00002A  6FF9               	movwf	(main@state+1)& (0+255),b
  1005  00002C  0E00               	movlw	0
  1006  00002E  6FF8               	movwf	main@state& (0+255),b
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;main.c: 58:     int tick = 0;
  1010  000030  0E00               	movlw	0
  1011  000032  6FEC               	movwf	(main@tick+1)& (0+255),b
  1012  000034  0E00               	movlw	0
  1013  000036  6FEB               	movwf	main@tick& (0+255),b
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;main.c: 59:     int clear = 1;
  1017  000038  0E00               	movlw	0
  1018  00003A  6FF7               	movwf	(main@clear+1)& (0+255),b
  1019  00003C  0E01               	movlw	1
  1020  00003E  6FF6               	movwf	main@clear& (0+255),b
  1021                           
  1022                           ;main.c: 64:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  1023  000040  0E0C               	movlw	12
  1024  000042  ECAE  F008         	call	_lcdInst
  1025                           
  1026                           ;main.c: 65:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1027  000046  0E01               	movlw	1
  1028  000048  ECAE  F008         	call	_lcdInst
  1029  00004C  0E11               	movlw	17
  1030  00004E  0100               	movlb	0	; () banked
  1031  000050  6FE9               	movwf	??_main& (0+255),b
  1032  000052  0E3A               	movlw	58
  1033  000054                     u2337:
  1034  000054  2EE8               	decfsz	wreg,f,c
  1035  000056  D7FE               	bra	u2337
  1036  000058  2FE9               	decfsz	??_main& (0+255),f,b
  1037  00005A  D7FC               	bra	u2337
  1038  00005C  F000               	nop	
  1039                           
  1040                           ;main.c: 66:     printf("A to start");
  1041  00005E  0EC5               	movlw	low STR_1
  1042  000060  6E68               	movwf	printf@fmt,c
  1043  000062  0EFF               	movlw	high STR_1
  1044  000064  6E69               	movwf	printf@fmt+1,c
  1045  000066  EC80  F008         	call	_printf	;wreg free
  1046  00006A  0E90               	movlw	144
  1047  00006C  ECAE  F008         	call	_lcdInst
  1048                           
  1049                           ;main.c: 68:     printf("A for Ali ;)");
  1050  000070  0E71               	movlw	low STR_2
  1051  000072  6E68               	movwf	printf@fmt,c
  1052  000074  0EFF               	movlw	high STR_2
  1053  000076  6E69               	movwf	printf@fmt+1,c
  1054  000078  EC80  F008         	call	_printf	;wreg free
  1055  00007C                     l2610:
  1056  00007C  0100               	movlb	0	; () banked
  1057  00007E  51C2               	movf	_start& (0+255),w,b	;volatile
  1058  000080  B4D8               	btfsc	status,2,c
  1059  000082  D7FC               	goto	l2610
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;main.c: 72:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1063  000084  0E01               	movlw	1
  1064  000086  ECAE  F008         	call	_lcdInst
  1065  00008A  0E11               	movlw	17
  1066  00008C  0100               	movlb	0	; () banked
  1067  00008E  6FE9               	movwf	??_main& (0+255),b
  1068  000090  0E3A               	movlw	58
  1069  000092                     u2347:
  1070  000092  2EE8               	decfsz	wreg,f,c
  1071  000094  D7FE               	bra	u2347
  1072  000096  2FE9               	decfsz	??_main& (0+255),f,b
  1073  000098  D7FC               	bra	u2347
  1074  00009A  F000               	nop	
  1075                           
  1076                           ;main.c: 73:     printf("It's ya boy Ali!");
  1077  00009C  0EDA               	movlw	low STR_3
  1078  00009E  6E68               	movwf	printf@fmt,c
  1079  0000A0  0EFE               	movlw	high STR_3
  1080  0000A2  6E69               	movwf	printf@fmt+1,c
  1081  0000A4  EC80  F008         	call	_printf	;wreg free
  1082                           
  1083                           ;main.c: 74:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1084  0000A8  0E33               	movlw	51
  1085  0000AA  0100               	movlb	0	; () banked
  1086  0000AC  6FEA               	movwf	(??_main+1)& (0+255),b
  1087  0000AE  0EBB               	movlw	187
  1088  0000B0  6FE9               	movwf	??_main& (0+255),b
  1089  0000B2  0EDF               	movlw	223
  1090  0000B4                     u2357:
  1091  0000B4  2EE8               	decfsz	wreg,f,c
  1092  0000B6  D7FE               	bra	u2357
  1093  0000B8  2FE9               	decfsz	??_main& (0+255),f,b
  1094  0000BA  D7FC               	bra	u2357
  1095  0000BC  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1096  0000BE  D7FA               	bra	u2357
  1097  0000C0  D000               	nop2	
  1098  0000C2  0E90               	movlw	144
  1099  0000C4  ECAE  F008         	call	_lcdInst
  1100                           
  1101                           ;main.c: 76:     printf("He gettin hot ");
  1102  0000C8  0E0A               	movlw	low STR_4
  1103  0000CA  6E68               	movwf	printf@fmt,c
  1104  0000CC  0EFF               	movlw	high STR_4
  1105  0000CE  6E69               	movwf	printf@fmt+1,c
  1106  0000D0  EC80  F008         	call	_printf	;wreg free
  1107                           
  1108                           ;main.c: 77:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1109  0000D4  0E33               	movlw	51
  1110  0000D6  0100               	movlb	0	; () banked
  1111  0000D8  6FEA               	movwf	(??_main+1)& (0+255),b
  1112  0000DA  0EBB               	movlw	187
  1113  0000DC  6FE9               	movwf	??_main& (0+255),b
  1114  0000DE  0EDF               	movlw	223
  1115  0000E0                     u2367:
  1116  0000E0  2EE8               	decfsz	wreg,f,c
  1117  0000E2  D7FE               	bra	u2367
  1118  0000E4  2FE9               	decfsz	??_main& (0+255),f,b
  1119  0000E6  D7FC               	bra	u2367
  1120  0000E8  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1121  0000EA  D7FA               	bra	u2367
  1122  0000EC  D000               	nop2	
  1123                           
  1124                           ;main.c: 79:     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1125  0000EE  0E01               	movlw	1
  1126  0000F0  ECAE  F008         	call	_lcdInst
  1127  0000F4  0E11               	movlw	17
  1128  0000F6  0100               	movlb	0	; () banked
  1129  0000F8  6FE9               	movwf	??_main& (0+255),b
  1130  0000FA  0E3A               	movlw	58
  1131  0000FC                     u2377:
  1132  0000FC  2EE8               	decfsz	wreg,f,c
  1133  0000FE  D7FE               	bra	u2377
  1134  000100  2FE9               	decfsz	??_main& (0+255),f,b
  1135  000102  D7FC               	bra	u2377
  1136  000104  F000               	nop	
  1137                           
  1138                           ;main.c: 80:     printf("Hi Cull !");
  1139  000106  0ED0               	movlw	low STR_5
  1140  000108  6E68               	movwf	printf@fmt,c
  1141  00010A  0EFF               	movlw	high STR_5
  1142  00010C  6E69               	movwf	printf@fmt+1,c
  1143  00010E  EC80  F008         	call	_printf	;wreg free
  1144                           
  1145                           ;main.c: 81:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1146  000112  0E33               	movlw	51
  1147  000114  0100               	movlb	0	; () banked
  1148  000116  6FEA               	movwf	(??_main+1)& (0+255),b
  1149  000118  0EBB               	movlw	187
  1150  00011A  6FE9               	movwf	??_main& (0+255),b
  1151  00011C  0EDF               	movlw	223
  1152  00011E                     u2387:
  1153  00011E  2EE8               	decfsz	wreg,f,c
  1154  000120  D7FE               	bra	u2387
  1155  000122  2FE9               	decfsz	??_main& (0+255),f,b
  1156  000124  D7FC               	bra	u2387
  1157  000126  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1158  000128  D7FA               	bra	u2387
  1159  00012A  D000               	nop2	
  1160  00012C  0E90               	movlw	144
  1161  00012E  ECAE  F008         	call	_lcdInst
  1162                           
  1163                           ;main.c: 83:     printf("Almost done");
  1164  000132  0E97               	movlw	low STR_6
  1165  000134  6E68               	movwf	printf@fmt,c
  1166  000136  0EFF               	movlw	high STR_6
  1167  000138  6E69               	movwf	printf@fmt+1,c
  1168  00013A  EC80  F008         	call	_printf	;wreg free
  1169  00013E  0ED0               	movlw	208
  1170  000140  ECAE  F008         	call	_lcdInst
  1171                           
  1172                           ;main.c: 85:     _delay((unsigned long)((2000)*(10000000/4000.0)));
  1173  000144  0E1A               	movlw	26
  1174  000146  0100               	movlb	0	; () banked
  1175  000148  6FEA               	movwf	(??_main+1)& (0+255),b
  1176  00014A  0E5E               	movlw	94
  1177  00014C  6FE9               	movwf	??_main& (0+255),b
  1178  00014E  0E6E               	movlw	110
  1179  000150                     u2397:
  1180  000150  2EE8               	decfsz	wreg,f,c
  1181  000152  D7FE               	bra	u2397
  1182  000154  2FE9               	decfsz	??_main& (0+255),f,b
  1183  000156  D7FC               	bra	u2397
  1184  000158  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1185  00015A  D7FA               	bra	u2397
  1186  00015C  F000               	nop	
  1187                           
  1188                           ;main.c: 86:     printf("AND DONE");
  1189  00015E  0EE4               	movlw	low STR_7
  1190  000160  6E68               	movwf	printf@fmt,c
  1191  000162  0EFF               	movlw	high STR_7
  1192  000164  6E69               	movwf	printf@fmt+1,c
  1193  000166  EC80  F008         	call	_printf	;wreg free
  1194                           
  1195                           ;main.c: 87:     _delay((unsigned long)((4000)*(10000000/4000.0)));
  1196  00016A  0E33               	movlw	51
  1197  00016C  0100               	movlb	0	; () banked
  1198  00016E  6FEA               	movwf	(??_main+1)& (0+255),b
  1199  000170  0EBB               	movlw	187
  1200  000172  6FE9               	movwf	??_main& (0+255),b
  1201  000174  0EDF               	movlw	223
  1202  000176                     u2407:
  1203  000176  2EE8               	decfsz	wreg,f,c
  1204  000178  D7FE               	bra	u2407
  1205  00017A  2FE9               	decfsz	??_main& (0+255),f,b
  1206  00017C  D7FC               	bra	u2407
  1207  00017E  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1208  000180  D7FA               	bra	u2407
  1209  000182  D000               	nop2	
  1210                           
  1211                           ;main.c: 97:         if (state == 0 & clear == 1) {
  1212  000184  0100               	movlb	0	; () banked
  1213  000186  51F8               	movf	main@state& (0+255),w,b
  1214  000188  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1215  00018A  A4D8               	btfss	status,2,c
  1216  00018C  D028               	goto	l2660
  1217                           
  1218                           ; BSR set to: 0
  1219  00018E  05F6               	decf	main@clear& (0+255),w,b
  1220  000190  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1221  000192  A4D8               	btfss	status,2,c
  1222  000194  D024               	goto	l2660
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;main.c: 98:         { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  1226  000196  0E01               	movlw	1
  1227  000198  ECAE  F008         	call	_lcdInst
  1228  00019C  0E11               	movlw	17
  1229  00019E  0100               	movlb	0	; () banked
  1230  0001A0  6FE9               	movwf	??_main& (0+255),b
  1231  0001A2  0E3A               	movlw	58
  1232  0001A4                     u2417:
  1233  0001A4  2EE8               	decfsz	wreg,f,c
  1234  0001A6  D7FE               	bra	u2417
  1235  0001A8  2FE9               	decfsz	??_main& (0+255),f,b
  1236  0001AA  D7FC               	bra	u2417
  1237  0001AC  F000               	nop	
  1238                           
  1239                           ;main.c: 99:         printf("Operation Time");
  1240  0001AE  0E19               	movlw	low STR_8
  1241  0001B0  6E68               	movwf	printf@fmt,c
  1242  0001B2  0EFF               	movlw	high STR_8
  1243  0001B4  6E69               	movwf	printf@fmt+1,c
  1244  0001B6  EC80  F008         	call	_printf	;wreg free
  1245  0001BA  0E90               	movlw	144
  1246  0001BC  ECAE  F008         	call	_lcdInst
  1247                           
  1248                           ;main.c: 101:         printf("%d seconds", time);
  1249  0001C0  0EAF               	movlw	low STR_9
  1250  0001C2  6E68               	movwf	printf@fmt,c
  1251  0001C4  0EFF               	movlw	high STR_9
  1252  0001C6  6E69               	movwf	printf@fmt+1,c
  1253  0001C8  0E00               	movlw	0
  1254  0001CA  6E6B               	movwf	?_printf+3,c
  1255  0001CC  0E1E               	movlw	30
  1256  0001CE  6E6A               	movwf	?_printf+2,c
  1257  0001D0  EC80  F008         	call	_printf	;wreg free
  1258                           
  1259                           ;main.c: 102:         clear = 0;
  1260  0001D4  0E00               	movlw	0
  1261  0001D6  0100               	movlb	0	; () banked
  1262  0001D8  6FF7               	movwf	(main@clear+1)& (0+255),b
  1263  0001DA  0E00               	movlw	0
  1264  0001DC  6FF6               	movwf	main@clear& (0+255),b
  1265  0001DE                     l2660:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;main.c: 106:         if (state == 1 & clear == 1) {
  1269  0001DE  05F8               	decf	main@state& (0+255),w,b
  1270  0001E0  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1271  0001E2  A4D8               	btfss	status,2,c
  1272  0001E4  D02B               	goto	l2678
  1273                           
  1274                           ; BSR set to: 0
  1275  0001E6  05F6               	decf	main@clear& (0+255),w,b
  1276  0001E8  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1277  0001EA  A4D8               	btfss	status,2,c
  1278  0001EC  D027               	goto	l2678
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;main.c: 108:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1282  0001EE  0E01               	movlw	1
  1283  0001F0  ECAE  F008         	call	_lcdInst
  1284  0001F4  0E11               	movlw	17
  1285  0001F6  0100               	movlb	0	; () banked
  1286  0001F8  6FE9               	movwf	??_main& (0+255),b
  1287  0001FA  0E3A               	movlw	58
  1288  0001FC                     u2427:
  1289  0001FC  2EE8               	decfsz	wreg,f,c
  1290  0001FE  D7FE               	bra	u2427
  1291  000200  2FE9               	decfsz	??_main& (0+255),f,b
  1292  000202  D7FC               	bra	u2427
  1293  000204  F000               	nop	
  1294                           
  1295                           ;main.c: 109:             { lcdInst(0x80 | LCD_LINE1_ADDR);};
  1296  000206  0E80               	movlw	128
  1297  000208  ECAE  F008         	call	_lcdInst
  1298                           
  1299                           ;main.c: 110:             printf("# of Canisters");
  1300  00020C  0E37               	movlw	low STR_10
  1301  00020E  6E68               	movwf	printf@fmt,c
  1302  000210  0EFF               	movlw	high STR_10
  1303  000212  6E69               	movwf	printf@fmt+1,c
  1304  000214  EC80  F008         	call	_printf	;wreg free
  1305  000218  0E90               	movlw	144
  1306  00021A  ECAE  F008         	call	_lcdInst
  1307                           
  1308                           ;main.c: 112:             printf("%d Canisters", Canister);
  1309  00021E  0E7E               	movlw	low STR_11
  1310  000220  6E68               	movwf	printf@fmt,c
  1311  000222  0EFF               	movlw	high STR_11
  1312  000224  6E69               	movwf	printf@fmt+1,c
  1313  000226  C0BE  F06A         	movff	_Canister,?_printf+2
  1314  00022A  C0BF  F06B         	movff	_Canister+1,?_printf+3
  1315  00022E  EC80  F008         	call	_printf	;wreg free
  1316                           
  1317                           ;main.c: 113:             clear = 0;
  1318  000232  0E00               	movlw	0
  1319  000234  0100               	movlb	0	; () banked
  1320  000236  6FF7               	movwf	(main@clear+1)& (0+255),b
  1321  000238  0E00               	movlw	0
  1322  00023A  6FF6               	movwf	main@clear& (0+255),b
  1323  00023C                     l2678:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 117:         if (state == 2 & clear == 1) {
  1327  00023C  0E02               	movlw	2
  1328  00023E  19F8               	xorwf	main@state& (0+255),w,b
  1329  000240  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1330  000242  A4D8               	btfss	status,2,c
  1331  000244  D031               	goto	l2698
  1332                           
  1333                           ; BSR set to: 0
  1334  000246  05F6               	decf	main@clear& (0+255),w,b
  1335  000248  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1336  00024A  A4D8               	btfss	status,2,c
  1337  00024C  D02D               	goto	l2698
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;main.c: 119:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1341  00024E  0E01               	movlw	1
  1342  000250  ECAE  F008         	call	_lcdInst
  1343  000254  0E11               	movlw	17
  1344  000256  0100               	movlb	0	; () banked
  1345  000258  6FE9               	movwf	??_main& (0+255),b
  1346  00025A  0E3A               	movlw	58
  1347  00025C                     u2437:
  1348  00025C  2EE8               	decfsz	wreg,f,c
  1349  00025E  D7FE               	bra	u2437
  1350  000260  2FE9               	decfsz	??_main& (0+255),f,b
  1351  000262  D7FC               	bra	u2437
  1352  000264  F000               	nop	
  1353                           
  1354                           ;main.c: 120:             printf("# of Balls");
  1355  000266  0EBA               	movlw	low STR_12
  1356  000268  6E68               	movwf	printf@fmt,c
  1357  00026A  0EFF               	movlw	high STR_12
  1358  00026C  6E69               	movwf	printf@fmt+1,c
  1359  00026E  EC80  F008         	call	_printf	;wreg free
  1360  000272  0EC0               	movlw	192
  1361  000274  ECAE  F008         	call	_lcdInst
  1362                           
  1363                           ;main.c: 122:             printf("supplied");
  1364  000278  0EED               	movlw	low STR_13
  1365  00027A  6E68               	movwf	printf@fmt,c
  1366  00027C  0EFF               	movlw	high STR_13
  1367  00027E  6E69               	movwf	printf@fmt+1,c
  1368  000280  EC80  F008         	call	_printf	;wreg free
  1369  000284  0ED0               	movlw	208
  1370  000286  ECAE  F008         	call	_lcdInst
  1371                           
  1372                           ;main.c: 124:             printf("%d balls", balls);
  1373  00028A  0EF6               	movlw	low STR_14
  1374  00028C  6E68               	movwf	printf@fmt,c
  1375  00028E  0EFF               	movlw	high STR_14
  1376  000290  6E69               	movwf	printf@fmt+1,c
  1377  000292  0E00               	movlw	0
  1378  000294  6E6B               	movwf	?_printf+3,c
  1379  000296  0E05               	movlw	5
  1380  000298  6E6A               	movwf	?_printf+2,c
  1381  00029A  EC80  F008         	call	_printf	;wreg free
  1382                           
  1383                           ;main.c: 125:             clear = 0;
  1384  00029E  0E00               	movlw	0
  1385  0002A0  0100               	movlb	0	; () banked
  1386  0002A2  6FF7               	movwf	(main@clear+1)& (0+255),b
  1387  0002A4  0E00               	movlw	0
  1388  0002A6  6FF6               	movwf	main@clear& (0+255),b
  1389  0002A8                     l2698:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;main.c: 129:         if (state == 3 & clear == 1) {
  1393  0002A8  0E03               	movlw	3
  1394  0002AA  19F8               	xorwf	main@state& (0+255),w,b
  1395  0002AC  11F9               	iorwf	(main@state+1)& (0+255),w,b
  1396  0002AE  A4D8               	btfss	status,2,c
  1397  0002B0  D034               	goto	l2718
  1398                           
  1399                           ; BSR set to: 0
  1400  0002B2  05F6               	decf	main@clear& (0+255),w,b
  1401  0002B4  11F7               	iorwf	(main@clear+1)& (0+255),w,b
  1402  0002B6  A4D8               	btfss	status,2,c
  1403  0002B8  D030               	goto	l2718
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;main.c: 131:             { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
  1407  0002BA  0E01               	movlw	1
  1408  0002BC  ECAE  F008         	call	_lcdInst
  1409  0002C0  0E11               	movlw	17
  1410  0002C2  0100               	movlb	0	; () banked
  1411  0002C4  6FE9               	movwf	??_main& (0+255),b
  1412  0002C6  0E3A               	movlw	58
  1413  0002C8                     u2447:
  1414  0002C8  2EE8               	decfsz	wreg,f,c
  1415  0002CA  D7FE               	bra	u2447
  1416  0002CC  2FE9               	decfsz	??_main& (0+255),f,b
  1417  0002CE  D7FC               	bra	u2447
  1418  0002D0  F000               	nop	
  1419                           
  1420                           ;main.c: 132:             printf("Individual Info");
  1421  0002D2  0EEB               	movlw	low STR_15
  1422  0002D4  6E68               	movwf	printf@fmt,c
  1423  0002D6  0EFE               	movlw	high STR_15
  1424  0002D8  6E69               	movwf	printf@fmt+1,c
  1425  0002DA  EC80  F008         	call	_printf	;wreg free
  1426  0002DE  0EC0               	movlw	192
  1427  0002E0  ECAE  F008         	call	_lcdInst
  1428                           
  1429                           ;main.c: 134:             printf("of Canister");
  1430  0002E4  0EA3               	movlw	low STR_16
  1431  0002E6  6E68               	movwf	printf@fmt,c
  1432  0002E8  0EFF               	movlw	high STR_16
  1433  0002EA  6E69               	movwf	printf@fmt+1,c
  1434  0002EC  EC80  F008         	call	_printf	;wreg free
  1435  0002F0  0ED0               	movlw	208
  1436  0002F2  ECAE  F008         	call	_lcdInst
  1437                           
  1438                           ;main.c: 136:             printf("Press 0 to %d ", Canister-1);
  1439  0002F6  0EFB               	movlw	low STR_17
  1440  0002F8  6E68               	movwf	printf@fmt,c
  1441  0002FA  0EFE               	movlw	high STR_17
  1442  0002FC  6E69               	movwf	printf@fmt+1,c
  1443  0002FE  0EFF               	movlw	255
  1444  000300  0100               	movlb	0	; () banked
  1445  000302  25BE               	addwf	_Canister& (0+255),w,b
  1446  000304  6E6A               	movwf	?_printf+2,c
  1447  000306  0EFF               	movlw	255
  1448  000308  21BF               	addwfc	(_Canister+1)& (0+255),w,b
  1449  00030A  6E6B               	movwf	?_printf+3,c
  1450  00030C  EC80  F008         	call	_printf	;wreg free
  1451                           
  1452                           ;main.c: 137:             clear = 0;
  1453  000310  0E00               	movlw	0
  1454  000312  0100               	movlb	0	; () banked
  1455  000314  6FF7               	movwf	(main@clear+1)& (0+255),b
  1456  000316  0E00               	movlw	0
  1457  000318  6FF6               	movwf	main@clear& (0+255),b
  1458  00031A                     l2718:
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 141:         if(key_was_pressed){
  1462  00031A  51C4               	movf	_key_was_pressed& (0+255),w,b	;volatile
  1463  00031C  B4D8               	btfsc	status,2,c
  1464  00031E  D140               	goto	l2816
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;main.c: 143:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  1468  000320  3881               	swapf	3969,w,c	;volatile
  1469  000322  0B0F               	andlw	15
  1470  000324  0B0F               	andlw	15
  1471  000326  6FF3               	movwf	main@keypress& (0+255),b
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;main.c: 144:             int miniTick = 0;
  1475  000328  0E00               	movlw	0
  1476  00032A  6FEE               	movwf	(main@miniTick+1)& (0+255),b
  1477  00032C  0E00               	movlw	0
  1478  00032E  6FED               	movwf	main@miniTick& (0+255),b
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;main.c: 145:             int miniState = 0;
  1482  000330  0E00               	movlw	0
  1483  000332  6FF5               	movwf	(main@miniState+1)& (0+255),b
  1484  000334  0E00               	movlw	0
  1485  000336  6FF4               	movwf	main@miniState& (0+255),b
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;main.c: 146:             int miniClear = 1;
  1489  000338  0E00               	movlw	0
  1490  00033A  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1491  00033C  0E01               	movlw	1
  1492  00033E  6FF1               	movwf	main@miniClear& (0+255),b
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 148:             int number_pressed = (int) (keys[keypress] - '0');
  1496  000340  0EC3               	movlw	low _keys
  1497  000342  25F3               	addwf	main@keypress& (0+255),w,b
  1498  000344  6EF6               	movwf	tblptrl,c
  1499  000346  6AF7               	clrf	tblptrh,c
  1500  000348  0EFE               	movlw	high _keys
  1501  00034A  22F7               	addwfc	tblptrh,f,c
  1502  00034C                     	if	0	;There are less than 3 active tblptr bytes
  1503  00034C                     	endif
  1504  00034C  0008               	tblrd		*
  1505  00034E  CFF5 F0E9          	movff	tablat,??_main
  1506  000352  0ED0               	movlw	208
  1507  000354  25E9               	addwf	??_main& (0+255),w,b
  1508  000356  6FEF               	movwf	main@number_pressed& (0+255),b
  1509  000358  6BF0               	clrf	(main@number_pressed+1)& (0+255),b
  1510  00035A  0EFF               	movlw	255
  1511  00035C  23F0               	addwfc	(main@number_pressed+1)& (0+255),f,b
  1512                           
  1513                           ;main.c: 150:             while(!exit_key) {
  1514  00035E  D118               	goto	l2812
  1515  000360                     l2730:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;main.c: 152:                 if (miniState == 0 & miniClear == 1) {
  1519  000360  51F4               	movf	main@miniState& (0+255),w,b
  1520  000362  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1521  000364  A4D8               	btfss	status,2,c
  1522  000366  D046               	goto	l2750
  1523                           
  1524                           ; BSR set to: 0
  1525  000368  05F1               	decf	main@miniClear& (0+255),w,b
  1526  00036A  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1527  00036C  A4D8               	btfss	status,2,c
  1528  00036E  D042               	goto	l2750
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;main.c: 154:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1532  000370  0E01               	movlw	1
  1533  000372  ECAE  F008         	call	_lcdInst
  1534  000376  0E11               	movlw	17
  1535  000378  0100               	movlb	0	; () banked
  1536  00037A  6FE9               	movwf	??_main& (0+255),b
  1537  00037C  0E3A               	movlw	58
  1538  00037E                     u2457:
  1539  00037E  2EE8               	decfsz	wreg,f,c
  1540  000380  D7FE               	bra	u2457
  1541  000382  2FE9               	decfsz	??_main& (0+255),f,b
  1542  000384  D7FC               	bra	u2457
  1543  000386  F000               	nop	
  1544                           
  1545                           ;main.c: 155:                     printf("Cansiter %c", keys[keypress]);
  1546  000388  0E8B               	movlw	low STR_18
  1547  00038A  6E68               	movwf	printf@fmt,c
  1548  00038C  0EFF               	movlw	high STR_18
  1549  00038E  6E69               	movwf	printf@fmt+1,c
  1550  000390  0EC3               	movlw	low _keys
  1551  000392  0100               	movlb	0	; () banked
  1552  000394  25F3               	addwf	main@keypress& (0+255),w,b
  1553  000396  6EF6               	movwf	tblptrl,c
  1554  000398  6AF7               	clrf	tblptrh,c
  1555  00039A  0EFE               	movlw	high _keys
  1556  00039C  22F7               	addwfc	tblptrh,f,c
  1557  00039E                     	if	0	;There are less than 3 active tblptr bytes
  1558  00039E                     	endif
  1559  00039E  0008               	tblrd		*
  1560  0003A0  50F5               	movf	tablat,w,c
  1561  0003A2  6E6A               	movwf	?_printf+2,c
  1562  0003A4  6A6B               	clrf	?_printf+3,c
  1563  0003A6  EC80  F008         	call	_printf	;wreg free
  1564  0003AA  0E90               	movlw	144
  1565  0003AC  ECAE  F008         	call	_lcdInst
  1566                           
  1567                           ;main.c: 157:                     printf("Distance %d cm", DistanceCanister[number_press
      +                          ed] );
  1568  0003B0  0E28               	movlw	low STR_19
  1569  0003B2  6E68               	movwf	printf@fmt,c
  1570  0003B4  0EFF               	movlw	high STR_19
  1571  0003B6  6E69               	movwf	printf@fmt+1,c
  1572  0003B8  90D8               	bcf	status,0,c
  1573  0003BA  0100               	movlb	0	; () banked
  1574  0003BC  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1575  0003BE  6ED9               	movwf	fsr2l,c
  1576  0003C0  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1577  0003C2  6EDA               	movwf	fsr2h,c
  1578  0003C4  0E94               	movlw	low _DistanceCanister
  1579  0003C6  26D9               	addwf	fsr2l,f,c
  1580  0003C8  0E00               	movlw	high _DistanceCanister
  1581  0003CA  22DA               	addwfc	fsr2h,f,c
  1582  0003CC  CFDE F06A          	movff	postinc2,?_printf+2
  1583  0003D0  CFDD F06B          	movff	postdec2,?_printf+3
  1584  0003D4  EC80  F008         	call	_printf	;wreg free
  1585  0003D8  0ED0               	movlw	208
  1586  0003DA  ECAE  F008         	call	_lcdInst
  1587                           
  1588                           ;main.c: 159:                     printf("* to exit");
  1589  0003DE  0EDA               	movlw	low STR_20
  1590  0003E0  6E68               	movwf	printf@fmt,c
  1591  0003E2  0EFF               	movlw	high STR_20
  1592  0003E4  6E69               	movwf	printf@fmt+1,c
  1593  0003E6  EC80  F008         	call	_printf	;wreg free
  1594                           
  1595                           ;main.c: 160:                     miniClear = 0;
  1596  0003EA  0E00               	movlw	0
  1597  0003EC  0100               	movlb	0	; () banked
  1598  0003EE  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1599  0003F0  0E00               	movlw	0
  1600  0003F2  6FF1               	movwf	main@miniClear& (0+255),b
  1601  0003F4                     l2750:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;main.c: 163:                 if (miniState == 1 & miniClear == 1) {
  1605  0003F4  05F4               	decf	main@miniState& (0+255),w,b
  1606  0003F6  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1607  0003F8  A4D8               	btfss	status,2,c
  1608  0003FA  D04D               	goto	l2774
  1609                           
  1610                           ; BSR set to: 0
  1611  0003FC  05F1               	decf	main@miniClear& (0+255),w,b
  1612  0003FE  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1613  000400  A4D8               	btfss	status,2,c
  1614  000402  D049               	goto	l2774
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 165:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1618  000404  0E01               	movlw	1
  1619  000406  ECAE  F008         	call	_lcdInst
  1620  00040A  0E11               	movlw	17
  1621  00040C  0100               	movlb	0	; () banked
  1622  00040E  6FE9               	movwf	??_main& (0+255),b
  1623  000410  0E3A               	movlw	58
  1624  000412                     u2467:
  1625  000412  2EE8               	decfsz	wreg,f,c
  1626  000414  D7FE               	bra	u2467
  1627  000416  2FE9               	decfsz	??_main& (0+255),f,b
  1628  000418  D7FC               	bra	u2467
  1629  00041A  F000               	nop	
  1630                           
  1631                           ;main.c: 166:                     printf("Cansiter %c", keys[keypress]);
  1632  00041C  0E8B               	movlw	low STR_18
  1633  00041E  6E68               	movwf	printf@fmt,c
  1634  000420  0EFF               	movlw	high STR_18
  1635  000422  6E69               	movwf	printf@fmt+1,c
  1636  000424  0EC3               	movlw	low _keys
  1637  000426  0100               	movlb	0	; () banked
  1638  000428  25F3               	addwf	main@keypress& (0+255),w,b
  1639  00042A  6EF6               	movwf	tblptrl,c
  1640  00042C  6AF7               	clrf	tblptrh,c
  1641  00042E  0EFE               	movlw	high _keys
  1642  000430  22F7               	addwfc	tblptrh,f,c
  1643  000432                     	if	0	;There are less than 3 active tblptr bytes
  1644  000432                     	endif
  1645  000432  0008               	tblrd		*
  1646  000434  50F5               	movf	tablat,w,c
  1647  000436  6E6A               	movwf	?_printf+2,c
  1648  000438  6A6B               	clrf	?_printf+3,c
  1649  00043A  EC80  F008         	call	_printf	;wreg free
  1650  00043E  0E90               	movlw	144
  1651  000440  ECAE  F008         	call	_lcdInst
  1652                           
  1653                           ;main.c: 168:                     if (State[number_pressed] == 1)
  1654  000444  90D8               	bcf	status,0,c
  1655  000446  0100               	movlb	0	; () banked
  1656  000448  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1657  00044A  6ED9               	movwf	fsr2l,c
  1658  00044C  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1659  00044E  6EDA               	movwf	fsr2h,c
  1660  000450  0EA8               	movlw	low _State
  1661  000452  26D9               	addwf	fsr2l,f,c
  1662  000454  0E00               	movlw	high _State
  1663  000456  22DA               	addwfc	fsr2h,f,c
  1664  000458  04DE               	decf	postinc2,w,c
  1665  00045A  10DE               	iorwf	postinc2,w,c
  1666  00045C  A4D8               	btfss	status,2,c
  1667  00045E  D007               	goto	l2766
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;main.c: 169:                         printf("Canister Full");
  1671  000460  0E63               	movlw	low STR_22
  1672  000462  6E68               	movwf	printf@fmt,c
  1673  000464  0EFF               	movlw	high STR_22
  1674  000466  6E69               	movwf	printf@fmt+1,c
  1675  000468  EC80  F008         	call	_printf	;wreg free
  1676  00046C  D006               	goto	l2768
  1677  00046E                     l2766:
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;main.c: 171:                         printf("Canister Empty");
  1681  00046E  0E46               	movlw	low STR_23
  1682  000470  6E68               	movwf	printf@fmt,c
  1683  000472  0EFF               	movlw	high STR_23
  1684  000474  6E69               	movwf	printf@fmt+1,c
  1685  000476  EC80  F008         	call	_printf	;wreg free
  1686  00047A                     l2768:
  1687  00047A  0ED0               	movlw	208
  1688  00047C  ECAE  F008         	call	_lcdInst
  1689                           
  1690                           ;main.c: 173:                     printf("* to exit");
  1691  000480  0EDA               	movlw	low STR_20
  1692  000482  6E68               	movwf	printf@fmt,c
  1693  000484  0EFF               	movlw	high STR_20
  1694  000486  6E69               	movwf	printf@fmt+1,c
  1695  000488  EC80  F008         	call	_printf	;wreg free
  1696                           
  1697                           ;main.c: 174:                     miniClear = 0;
  1698  00048C  0E00               	movlw	0
  1699  00048E  0100               	movlb	0	; () banked
  1700  000490  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1701  000492  0E00               	movlw	0
  1702  000494  6FF1               	movwf	main@miniClear& (0+255),b
  1703  000496                     l2774:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;main.c: 177:                 if (miniState == 2 & miniClear == 1) {
  1707  000496  0E02               	movlw	2
  1708  000498  19F4               	xorwf	main@miniState& (0+255),w,b
  1709  00049A  11F5               	iorwf	(main@miniState+1)& (0+255),w,b
  1710  00049C  A4D8               	btfss	status,2,c
  1711  00049E  D04D               	goto	l2798
  1712                           
  1713                           ; BSR set to: 0
  1714  0004A0  05F1               	decf	main@miniClear& (0+255),w,b
  1715  0004A2  11F2               	iorwf	(main@miniClear+1)& (0+255),w,b
  1716  0004A4  A4D8               	btfss	status,2,c
  1717  0004A6  D049               	goto	l2798
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 179:                     { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/
      +                          4000.0)));};
  1721  0004A8  0E01               	movlw	1
  1722  0004AA  ECAE  F008         	call	_lcdInst
  1723  0004AE  0E11               	movlw	17
  1724  0004B0  0100               	movlb	0	; () banked
  1725  0004B2  6FE9               	movwf	??_main& (0+255),b
  1726  0004B4  0E3A               	movlw	58
  1727  0004B6                     u2477:
  1728  0004B6  2EE8               	decfsz	wreg,f,c
  1729  0004B8  D7FE               	bra	u2477
  1730  0004BA  2FE9               	decfsz	??_main& (0+255),f,b
  1731  0004BC  D7FC               	bra	u2477
  1732  0004BE  F000               	nop	
  1733                           
  1734                           ;main.c: 180:                     printf("Cansiter %c", keys[keypress]);
  1735  0004C0  0E8B               	movlw	low STR_18
  1736  0004C2  6E68               	movwf	printf@fmt,c
  1737  0004C4  0EFF               	movlw	high STR_18
  1738  0004C6  6E69               	movwf	printf@fmt+1,c
  1739  0004C8  0EC3               	movlw	low _keys
  1740  0004CA  0100               	movlb	0	; () banked
  1741  0004CC  25F3               	addwf	main@keypress& (0+255),w,b
  1742  0004CE  6EF6               	movwf	tblptrl,c
  1743  0004D0  6AF7               	clrf	tblptrh,c
  1744  0004D2  0EFE               	movlw	high _keys
  1745  0004D4  22F7               	addwfc	tblptrh,f,c
  1746  0004D6                     	if	0	;There are less than 3 active tblptr bytes
  1747  0004D6                     	endif
  1748  0004D6  0008               	tblrd		*
  1749  0004D8  50F5               	movf	tablat,w,c
  1750  0004DA  6E6A               	movwf	?_printf+2,c
  1751  0004DC  6A6B               	clrf	?_printf+3,c
  1752  0004DE  EC80  F008         	call	_printf	;wreg free
  1753  0004E2  0E90               	movlw	144
  1754  0004E4  ECAE  F008         	call	_lcdInst
  1755                           
  1756                           ;main.c: 182:                     if (BallDispensed[number_pressed] == 1)
  1757  0004E8  90D8               	bcf	status,0,c
  1758  0004EA  0100               	movlb	0	; () banked
  1759  0004EC  35EF               	rlcf	main@number_pressed& (0+255),w,b
  1760  0004EE  6ED9               	movwf	fsr2l,c
  1761  0004F0  35F0               	rlcf	(main@number_pressed+1)& (0+255),w,b
  1762  0004F2  6EDA               	movwf	fsr2h,c
  1763  0004F4  0E80               	movlw	low _BallDispensed
  1764  0004F6  26D9               	addwf	fsr2l,f,c
  1765  0004F8  0E00               	movlw	high _BallDispensed
  1766  0004FA  22DA               	addwfc	fsr2h,f,c
  1767  0004FC  04DE               	decf	postinc2,w,c
  1768  0004FE  10DE               	iorwf	postinc2,w,c
  1769  000500  A4D8               	btfss	status,2,c
  1770  000502  D007               	goto	l2790
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;main.c: 183:                         printf("Ball Added");
  1774  000504  0E58               	movlw	low (STR_27+3)
  1775  000506  6E68               	movwf	printf@fmt,c
  1776  000508  0EFF               	movlw	high (STR_27+3)
  1777  00050A  6E69               	movwf	printf@fmt+1,c
  1778  00050C  EC80  F008         	call	_printf	;wreg free
  1779  000510  D006               	goto	l2792
  1780  000512                     l2790:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 185:                         printf("No Ball Added");
  1784  000512  0E55               	movlw	low STR_27
  1785  000514  6E68               	movwf	printf@fmt,c
  1786  000516  0EFF               	movlw	high STR_27
  1787  000518  6E69               	movwf	printf@fmt+1,c
  1788  00051A  EC80  F008         	call	_printf	;wreg free
  1789  00051E                     l2792:
  1790  00051E  0ED0               	movlw	208
  1791  000520  ECAE  F008         	call	_lcdInst
  1792                           
  1793                           ;main.c: 187:                     printf("* to exit");
  1794  000524  0EDA               	movlw	low STR_20
  1795  000526  6E68               	movwf	printf@fmt,c
  1796  000528  0EFF               	movlw	high STR_20
  1797  00052A  6E69               	movwf	printf@fmt+1,c
  1798  00052C  EC80  F008         	call	_printf	;wreg free
  1799                           
  1800                           ;main.c: 190:                     miniClear = 0;
  1801  000530  0E00               	movlw	0
  1802  000532  0100               	movlb	0	; () banked
  1803  000534  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1804  000536  0E00               	movlw	0
  1805  000538  6FF1               	movwf	main@miniClear& (0+255),b
  1806  00053A                     l2798:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;main.c: 193:                 if (miniTick == 3000) {
  1810  00053A  0EB8               	movlw	184
  1811  00053C  19ED               	xorwf	main@miniTick& (0+255),w,b
  1812  00053E  E11D               	bnz	l2808
  1813  000540  0E0B               	movlw	11
  1814  000542  19EE               	xorwf	(main@miniTick+1)& (0+255),w,b
  1815  000544  A4D8               	btfss	status,2,c
  1816  000546  D019               	goto	l2808
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;main.c: 194:                     miniClear = 1;
  1820  000548  0E00               	movlw	0
  1821  00054A  6FF2               	movwf	(main@miniClear+1)& (0+255),b
  1822  00054C  0E01               	movlw	1
  1823  00054E  6FF1               	movwf	main@miniClear& (0+255),b
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;main.c: 195:                     miniState++;
  1827  000550  4BF4               	infsnz	main@miniState& (0+255),f,b
  1828  000552  2BF5               	incf	(main@miniState+1)& (0+255),f,b
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 196:                     miniState = miniState % 3;
  1832  000554  C0F4  F00C         	movff	main@miniState,___awmod@dividend
  1833  000558  C0F5  F00D         	movff	main@miniState+1,___awmod@dividend+1
  1834  00055C  0E00               	movlw	0
  1835  00055E  6E0F               	movwf	___awmod@divisor+1,c
  1836  000560  0E03               	movlw	3
  1837  000562  6E0E               	movwf	___awmod@divisor,c
  1838  000564  ECEA  F006         	call	___awmod	;wreg free
  1839  000568  C00C  F0F4         	movff	?___awmod,main@miniState
  1840  00056C  C00D  F0F5         	movff	?___awmod+1,main@miniState+1
  1841                           
  1842                           ;main.c: 197:                     miniTick = 0;
  1843  000570  0E00               	movlw	0
  1844  000572  0100               	movlb	0	; () banked
  1845  000574  6FEE               	movwf	(main@miniTick+1)& (0+255),b
  1846  000576  0E00               	movlw	0
  1847  000578  6FED               	movwf	main@miniTick& (0+255),b
  1848  00057A                     l2808:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;main.c: 200:                 miniTick++;
  1852  00057A  4BED               	infsnz	main@miniTick& (0+255),f,b
  1853  00057C  2BEE               	incf	(main@miniTick+1)& (0+255),f,b
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;main.c: 201:                 _delay((unsigned long)((1)*(10000000/4000.0)));
  1857  00057E  0E04               	movlw	4
  1858  000580  0100               	movlb	0	; () banked
  1859  000582  6FE9               	movwf	??_main& (0+255),b
  1860  000584  0E3D               	movlw	61
  1861  000586                     u2487:
  1862  000586  2EE8               	decfsz	wreg,f,c
  1863  000588  D7FE               	bra	u2487
  1864  00058A  2FE9               	decfsz	??_main& (0+255),f,b
  1865  00058C  D7FC               	bra	u2487
  1866  00058E  D000               	nop2	
  1867  000590                     l2812:
  1868                           
  1869                           ;main.c: 150:             while(!exit_key) {
  1870  000590  0100               	movlb	0	; () banked
  1871  000592  51C3               	movf	_exit_key& (0+255),w,b	;volatile
  1872  000594  B4D8               	btfsc	status,2,c
  1873  000596  D6E4               	goto	l2730
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;main.c: 206:             key_was_pressed = 0;
  1877  000598  0E00               	movlw	0
  1878  00059A  6FC4               	movwf	_key_was_pressed& (0+255),b	;volatile
  1879                           
  1880                           ;main.c: 207:             exit_key = 0;
  1881  00059C  0E00               	movlw	0
  1882  00059E  6FC3               	movwf	_exit_key& (0+255),b	;volatile
  1883  0005A0                     l2816:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 211:         if (tick == 2000) {
  1887  0005A0  0ED0               	movlw	208
  1888  0005A2  19EB               	xorwf	main@tick& (0+255),w,b
  1889  0005A4  E112               	bnz	l2826
  1890  0005A6  0E07               	movlw	7
  1891  0005A8  19EC               	xorwf	(main@tick+1)& (0+255),w,b
  1892  0005AA  A4D8               	btfss	status,2,c
  1893  0005AC  D00E               	goto	l2826
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;main.c: 212:             clear = 1;
  1897  0005AE  0E00               	movlw	0
  1898  0005B0  6FF7               	movwf	(main@clear+1)& (0+255),b
  1899  0005B2  0E01               	movlw	1
  1900  0005B4  6FF6               	movwf	main@clear& (0+255),b
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;main.c: 213:             state++;
  1904  0005B6  4BF8               	infsnz	main@state& (0+255),f,b
  1905  0005B8  2BF9               	incf	(main@state+1)& (0+255),f,b
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;main.c: 214:             state = state % 4;
  1909  0005BA  0E03               	movlw	3
  1910  0005BC  15F8               	andwf	main@state& (0+255),w,b
  1911  0005BE  6FF8               	movwf	main@state& (0+255),b
  1912  0005C0  6BF9               	clrf	(main@state+1)& (0+255),b
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 215:             tick = 0;
  1916  0005C2  0E00               	movlw	0
  1917  0005C4  6FEC               	movwf	(main@tick+1)& (0+255),b
  1918  0005C6  0E00               	movlw	0
  1919  0005C8  6FEB               	movwf	main@tick& (0+255),b
  1920  0005CA                     l2826:
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;main.c: 218:         tick++;
  1924  0005CA  4BEB               	infsnz	main@tick& (0+255),f,b
  1925  0005CC  2BEC               	incf	(main@tick+1)& (0+255),f,b
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;main.c: 219:         _delay((unsigned long)((1)*(10000000/4000.0)));
  1929  0005CE  0E04               	movlw	4
  1930  0005D0  0100               	movlb	0	; () banked
  1931  0005D2  6FE9               	movwf	??_main& (0+255),b
  1932  0005D4  0E3D               	movlw	61
  1933  0005D6                     u2497:
  1934  0005D6  2EE8               	decfsz	wreg,f,c
  1935  0005D8  D7FE               	bra	u2497
  1936  0005DA  2FE9               	decfsz	??_main& (0+255),f,b
  1937  0005DC  D7FC               	bra	u2497
  1938  0005DE  D5D1               	goto	L1
  1939  0005E0                     __end_of_main:
  1940                           	opt callstack 0
  1941                           
  1942 ;; *************** function _printf *****************
  1943 ;; Defined at:
  1944 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  fmt             2  103[COMRAM] PTR const unsigned char 
  1947 ;;		 -> STR_28(10), STR_27(14), STR_26(11), STR_25(12), 
  1948 ;;		 -> STR_24(10), STR_23(15), STR_22(14), STR_21(12), 
  1949 ;;		 -> STR_20(10), STR_19(15), STR_18(12), STR_17(15), 
  1950 ;;		 -> STR_16(12), STR_15(16), STR_14(9), STR_13(9), 
  1951 ;;		 -> STR_12(11), STR_11(13), STR_10(15), STR_9(11), 
  1952 ;;		 -> STR_8(15), STR_7(9), STR_6(12), STR_5(10), 
  1953 ;;		 -> STR_4(15), STR_3(17), STR_2(13), STR_1(11), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  ap              2    2[BANK0 ] PTR void [1]
  1956 ;;		 -> ?_printf(2), 
  1957 ;;  ret             2    0        int 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2  103[COMRAM] int 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;Total ram usage:        8 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:   11
  1974 ;; This function calls:
  1975 ;;		_vfprintf
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text1
  1982  001100                     __ptext1:
  1983                           	opt callstack 0
  1984  001100                     _printf:
  1985                           	opt callstack 19
  1986                           
  1987                           ;incstack = 0
  1988  001100  0E6A               	movlw	low (?_printf+2)
  1989  001102  0100               	movlb	0	; () banked
  1990  001104  6FE7               	movwf	printf@ap& (0+255),b
  1991  001106  0E00               	movlw	high (?_printf+2)
  1992  001108  6FE8               	movwf	(printf@ap+1)& (0+255),b
  1993                           
  1994                           ; BSR set to: 0
  1995  00110A  0E00               	movlw	0
  1996  00110C  6E60               	movwf	vfprintf@fp,c
  1997  00110E  0E00               	movlw	0
  1998  001110  6E61               	movwf	vfprintf@fp+1,c
  1999  001112  C068  F062         	movff	printf@fmt,vfprintf@fmt
  2000  001116  C069  F063         	movff	printf@fmt+1,vfprintf@fmt+1
  2001  00111A  0EE7               	movlw	low printf@ap
  2002  00111C  6E64               	movwf	vfprintf@ap,c
  2003  00111E  0E00               	movlw	high printf@ap
  2004  001120  6E65               	movwf	vfprintf@ap+1,c
  2005  001122  EC8D  F007         	call	_vfprintf	;wreg free
  2006  001126  0012               	return		;funcret
  2007  001128                     __end_of_printf:
  2008                           	opt callstack 0
  2009                           
  2010 ;; *************** function _vfprintf *****************
  2011 ;; Defined at:
  2012 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  fp              2   95[COMRAM] PTR struct _IO_FILE
  2015 ;;		 -> NULL(0), 
  2016 ;;  fmt             2   97[COMRAM] PTR const unsigned char 
  2017 ;;		 -> STR_28(10), STR_27(14), STR_26(11), STR_25(12), 
  2018 ;;		 -> STR_24(10), STR_23(15), STR_22(14), STR_21(12), 
  2019 ;;		 -> STR_20(10), STR_19(15), STR_18(12), STR_17(15), 
  2020 ;;		 -> STR_16(12), STR_15(16), STR_14(9), STR_13(9), 
  2021 ;;		 -> STR_12(11), STR_11(13), STR_10(15), STR_9(11), 
  2022 ;;		 -> STR_8(15), STR_7(9), STR_6(12), STR_5(10), 
  2023 ;;		 -> STR_4(15), STR_3(17), STR_2(13), STR_1(11), 
  2024 ;;  ap              2   99[COMRAM] PTR PTR void 
  2025 ;;		 -> printf@ap(2), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  cfmt            2  101[COMRAM] PTR unsigned char 
  2028 ;;		 -> STR_28(10), STR_27(14), STR_26(11), STR_25(12), 
  2029 ;;		 -> STR_24(10), STR_23(15), STR_22(14), STR_21(12), 
  2030 ;;		 -> STR_20(10), STR_19(15), STR_18(12), STR_17(15), 
  2031 ;;		 -> STR_16(12), STR_15(16), STR_14(9), STR_13(9), 
  2032 ;;		 -> STR_12(11), STR_11(13), STR_10(15), STR_9(11), 
  2033 ;;		 -> STR_8(15), STR_7(9), STR_6(12), STR_5(10), 
  2034 ;;		 -> STR_4(15), STR_3(17), STR_2(13), STR_1(11), 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  2   95[COMRAM] int 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2044 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;Total ram usage:        8 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:   10
  2051 ;; This function calls:
  2052 ;;		_vfpfcnvrt
  2053 ;; This function is called by:
  2054 ;;		_printf
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text2
  2059  000F1A                     __ptext2:
  2060                           	opt callstack 0
  2061  000F1A                     _vfprintf:
  2062                           	opt callstack 19
  2063                           
  2064                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  2065                           
  2066                           ;incstack = 0
  2067  000F1A  C062  F066         	movff	vfprintf@fmt,vfprintf@cfmt
  2068  000F1E  C063  F067         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2069                           
  2070                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  2071  000F22  0E00               	movlw	0
  2072  000F24  6E6D               	movwf	_nout+1,c
  2073  000F26  0E00               	movlw	0
  2074  000F28  6E6C               	movwf	_nout,c
  2075                           
  2076                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2077  000F2A  D012               	goto	l2536
  2078  000F2C                     l2534:
  2079                           
  2080                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  2081  000F2C  C060  F04F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2082  000F30  C061  F050         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2083  000F34  0E66               	movlw	low vfprintf@cfmt
  2084  000F36  6E51               	movwf	vfpfcnvrt@fmt,c
  2085  000F38  0E00               	movlw	high vfprintf@cfmt
  2086  000F3A  6E52               	movwf	vfpfcnvrt@fmt+1,c
  2087  000F3C  C064  F053         	movff	vfprintf@ap,vfpfcnvrt@ap
  2088  000F40  C065  F054         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2089  000F44  EC11  F004         	call	_vfpfcnvrt	;wreg free
  2090  000F48  504F               	movf	?_vfpfcnvrt,w,c
  2091  000F4A  266C               	addwf	_nout,f,c
  2092  000F4C  5050               	movf	?_vfpfcnvrt+1,w,c
  2093  000F4E  226D               	addwfc	_nout+1,f,c
  2094  000F50                     l2536:
  2095                           
  2096                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  2097  000F50  C066  FFF6         	movff	vfprintf@cfmt,tblptrl
  2098  000F54  C067  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2099  000F58                     	if	0	;tblptru may be non-zero
  2100  000F58                     	endif
  2101  000F58                     	if	0	;tblptru may be non-zero
  2102  000F58                     	endif
  2103  000F58  0008               	tblrd		*
  2104  000F5A  50F5               	movf	tablat,w,c
  2105  000F5C  0900               	iorlw	0
  2106  000F5E  A4D8               	btfss	status,2,c
  2107  000F60  D7E5               	goto	l2534
  2108                           
  2109                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  2110  000F62  C06C  F060         	movff	_nout,?_vfprintf
  2111  000F66  C06D  F061         	movff	_nout+1,?_vfprintf+1
  2112  000F6A  0012               	return		;funcret
  2113  000F6C                     __end_of_vfprintf:
  2114                           	opt callstack 0
  2115                           
  2116 ;; *************** function _vfpfcnvrt *****************
  2117 ;; Defined at:
  2118 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  2121 ;;		 -> NULL(0), 
  2122 ;;  fmt             2   80[COMRAM] PTR PTR unsigned char 
  2123 ;;		 -> vfprintf@cfmt(2), 
  2124 ;;  ap              2   82[COMRAM] PTR PTR void 
  2125 ;;		 -> printf@ap(2), 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  ll              8   86[COMRAM] long long 
  2128 ;;  llu             8    0        unsigned long long 
  2129 ;;  f               4    0        unsigned long long 
  2130 ;;  vp              3    0        PTR void 
  2131 ;;  ct              3    0        unsigned char [3]
  2132 ;;  cp              3    0        PTR unsigned char 
  2133 ;;  i               2    0        int 
  2134 ;;  done            2    0        int 
  2135 ;;  c               1   94[COMRAM] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2   78[COMRAM] int 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2145 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;Total ram usage:       17 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    9
  2152 ;; This function calls:
  2153 ;;		_ctoa
  2154 ;;		_dtoa
  2155 ;;		_fputc
  2156 ;; This function is called by:
  2157 ;;		_vfprintf
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text3
  2162  000822                     __ptext3:
  2163                           	opt callstack 0
  2164  000822                     _vfpfcnvrt:
  2165                           	opt callstack 19
  2166                           
  2167                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  2168                           
  2169                           ;incstack = 0
  2170  000822  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2171  000826  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2172  00082A  CFDE FFF6          	movff	postinc2,tblptrl
  2173  00082E  CFDD FFF7          	movff	postdec2,tblptrh
  2174  000832                     	if	0	;tblptru may be non-zero
  2175  000832                     	endif
  2176  000832                     	if	0	;tblptru may be non-zero
  2177  000832                     	endif
  2178  000832  0008               	tblrd		*
  2179  000834  50F5               	movf	tablat,w,c
  2180  000836  0A25               	xorlw	37
  2181  000838  A4D8               	btfss	status,2,c
  2182  00083A  D0CC               	goto	l2518
  2183                           
  2184                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2185  00083C  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2186  000840  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2187  000844  2ADE               	incf	postinc2,f,c
  2188  000846  0E00               	movlw	0
  2189  000848  22DD               	addwfc	postdec2,f,c
  2190                           
  2191                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  2192  00084A  0E00               	movlw	0
  2193  00084C  6E6F               	movwf	_width+1,c
  2194  00084E  0E00               	movlw	0
  2195  000850  6E6E               	movwf	_width,c
  2196  000852  C06E  F072         	movff	_width,_flags
  2197  000856  C06F  F073         	movff	_width+1,_flags+1
  2198                           
  2199                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  2200  00085A  6870               	setf	_prec,c
  2201  00085C  6871               	setf	_prec+1,c
  2202                           
  2203                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fm
      +                          t[0] == 'c') {
  2204  00085E  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2205  000862  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2206  000866  CFDE FFF6          	movff	postinc2,tblptrl
  2207  00086A  CFDD FFF7          	movff	postdec2,tblptrh
  2208  00086E                     	if	0	;tblptru may be non-zero
  2209  00086E                     	endif
  2210  00086E                     	if	0	;tblptru may be non-zero
  2211  00086E                     	endif
  2212  00086E  0008               	tblrd		*
  2213  000870  50F5               	movf	tablat,w,c
  2214  000872  0A63               	xorlw	99
  2215  000874  A4D8               	btfss	status,2,c
  2216  000876  D026               	goto	l2492
  2217                           
  2218                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*
      +                          fmt;
  2219  000878  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2220  00087C  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2221  000880  2ADE               	incf	postinc2,f,c
  2222  000882  0E00               	movlw	0
  2223  000884  22DD               	addwfc	postdec2,f,c
  2224                           
  2225                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c =
      +                           (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2226  000886  C053  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2227  00088A  C054  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2228  00088E  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2229  000892  0E02               	movlw	2
  2230  000894  26DE               	addwf	postinc2,f,c
  2231  000896  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2232  00089A  0E00               	movlw	0
  2233  00089C  22DD               	addwfc	postdec2,f,c
  2234  00089E  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2235  0008A2  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2236  0008A6  50DF               	movf	indf2,w,c
  2237  0008A8  6E5F               	movwf	vfpfcnvrt@c,c
  2238                           
  2239                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             ret
      +                          urn ctoa(fp, c);
  2240  0008AA  C04F  F02B         	movff	vfpfcnvrt@fp,ctoa@fp
  2241  0008AE  C050  F02C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2242  0008B2  C05F  F02D         	movff	vfpfcnvrt@c,ctoa@c
  2243  0008B6  ECB6  F007         	call	_ctoa	;wreg free
  2244  0008BA  C02B  F04F         	movff	?_ctoa,?_vfpfcnvrt
  2245  0008BE  C02C  F050         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2246  0008C2  0012               	return	
  2247  0008C4                     l2492:
  2248                           
  2249                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  2250  0008C4  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2251  0008C8  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2252  0008CC  CFDE FFF6          	movff	postinc2,tblptrl
  2253  0008D0  CFDD FFF7          	movff	postdec2,tblptrh
  2254  0008D4                     	if	0	;tblptru may be non-zero
  2255  0008D4                     	endif
  2256  0008D4                     	if	0	;tblptru may be non-zero
  2257  0008D4                     	endif
  2258  0008D4  0008               	tblrd		*
  2259  0008D6  50F5               	movf	tablat,w,c
  2260  0008D8  0A64               	xorlw	100
  2261  0008DA  B4D8               	btfsc	status,2,c
  2262  0008DC  D00D               	goto	u2070
  2263  0008DE  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2264  0008E2  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2265  0008E6  CFDE FFF6          	movff	postinc2,tblptrl
  2266  0008EA  CFDD FFF7          	movff	postdec2,tblptrh
  2267  0008EE                     	if	0	;tblptru may be non-zero
  2268  0008EE                     	endif
  2269  0008EE                     	if	0	;tblptru may be non-zero
  2270  0008EE                     	endif
  2271  0008EE  0008               	tblrd		*
  2272  0008F0  50F5               	movf	tablat,w,c
  2273  0008F2  0A69               	xorlw	105
  2274  0008F4  A4D8               	btfss	status,2,c
  2275  0008F6  D03F               	goto	l2502
  2276  0008F8                     u2070:
  2277                           
  2278                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  2279  0008F8  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2280  0008FC  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2281  000900  2ADE               	incf	postinc2,f,c
  2282  000902  0E00               	movlw	0
  2283  000904  22DD               	addwfc	postdec2,f,c
  2284                           
  2285                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2286  000906  C053  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2287  00090A  C054  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2288  00090E  CFDF F055          	movff	indf2,??_vfpfcnvrt
  2289  000912  0E02               	movlw	2
  2290  000914  26DE               	addwf	postinc2,f,c
  2291  000916  CFDF F056          	movff	indf2,??_vfpfcnvrt+1
  2292  00091A  0E00               	movlw	0
  2293  00091C  22DD               	addwfc	postdec2,f,c
  2294  00091E  C055  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2295  000922  C056  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2296  000926  CFDE F057          	movff	postinc2,vfpfcnvrt@ll
  2297  00092A  CFDD F058          	movff	postdec2,vfpfcnvrt@ll+1
  2298  00092E  0E00               	movlw	0
  2299  000930  BE58               	btfsc	vfpfcnvrt@ll+1,7,c
  2300  000932  0EFF               	movlw	-1
  2301  000934  6E59               	movwf	vfpfcnvrt@ll+2,c
  2302  000936  6E5A               	movwf	vfpfcnvrt@ll+3,c
  2303  000938  6E5B               	movwf	vfpfcnvrt@ll+4,c
  2304  00093A  6E5C               	movwf	vfpfcnvrt@ll+5,c
  2305  00093C  6E5D               	movwf	vfpfcnvrt@ll+6,c
  2306  00093E  6E5E               	movwf	vfpfcnvrt@ll+7,c
  2307                           
  2308                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  2309  000940  C04F  F02B         	movff	vfpfcnvrt@fp,dtoa@fp
  2310  000944  C050  F02C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2311  000948  C057  F02D         	movff	vfpfcnvrt@ll,dtoa@d
  2312  00094C  C058  F02E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2313  000950  C059  F02F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2314  000954  C05A  F030         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2315  000958  C05B  F031         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2316  00095C  C05C  F032         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2317  000960  C05D  F033         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2318  000964  C05E  F034         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2319  000968  ECF0  F002         	call	_dtoa	;wreg free
  2320  00096C  C02B  F04F         	movff	?_dtoa,?_vfpfcnvrt
  2321  000970  C02C  F050         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2322  000974  0012               	return	
  2323  000976                     l2502:
  2324                           
  2325                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  2326  000976  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2327  00097A  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2328  00097E  CFDE FFF6          	movff	postinc2,tblptrl
  2329  000982  CFDD FFF7          	movff	postdec2,tblptrh
  2330  000986                     	if	0	;tblptru may be non-zero
  2331  000986                     	endif
  2332  000986                     	if	0	;tblptru may be non-zero
  2333  000986                     	endif
  2334  000986  0008               	tblrd		*
  2335  000988  50F5               	movf	tablat,w,c
  2336  00098A  0A25               	xorlw	37
  2337  00098C  A4D8               	btfss	status,2,c
  2338  00098E  D016               	goto	l2512
  2339                           
  2340                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  2341  000990  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2342  000994  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2343  000998  2ADE               	incf	postinc2,f,c
  2344  00099A  0E00               	movlw	0
  2345  00099C  22DD               	addwfc	postdec2,f,c
  2346                           
  2347                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  2348  00099E  0E00               	movlw	0
  2349  0009A0  6E11               	movwf	fputc@c+1,c
  2350  0009A2  0E25               	movlw	37
  2351  0009A4  6E10               	movwf	fputc@c,c
  2352  0009A6  C04F  F012         	movff	vfpfcnvrt@fp,fputc@fp
  2353  0009AA  C050  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2354  0009AE  EC22  F007         	call	_fputc	;wreg free
  2355  0009B2                     l2508:
  2356                           
  2357                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  2358  0009B2  0E00               	movlw	0
  2359  0009B4  6E50               	movwf	?_vfpfcnvrt+1,c
  2360  0009B6  0E01               	movlw	1
  2361  0009B8  6E4F               	movwf	?_vfpfcnvrt,c
  2362  0009BA  0012               	return	
  2363  0009BC                     l2512:
  2364                           
  2365                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  2366  0009BC  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2367  0009C0  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2368  0009C4  2ADE               	incf	postinc2,f,c
  2369  0009C6  0E00               	movlw	0
  2370  0009C8  22DD               	addwfc	postdec2,f,c
  2371                           
  2372                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  2373  0009CA  0E00               	movlw	0
  2374  0009CC  6E50               	movwf	?_vfpfcnvrt+1,c
  2375  0009CE  0E00               	movlw	0
  2376  0009D0  6E4F               	movwf	?_vfpfcnvrt,c
  2377  0009D2  0012               	return	
  2378  0009D4                     l2518:
  2379                           
  2380                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  2381  0009D4  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2382  0009D8  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2383  0009DC  CFDE FFF6          	movff	postinc2,tblptrl
  2384  0009E0  CFDD FFF7          	movff	postdec2,tblptrh
  2385  0009E4                     	if	0	;tblptru may be non-zero
  2386  0009E4                     	endif
  2387  0009E4                     	if	0	;tblptru may be non-zero
  2388  0009E4                     	endif
  2389  0009E4  0008               	tblrd		*
  2390  0009E6  50F5               	movf	tablat,w,c
  2391  0009E8  6E10               	movwf	fputc@c,c
  2392  0009EA  6A11               	clrf	fputc@c+1,c
  2393  0009EC  C04F  F012         	movff	vfpfcnvrt@fp,fputc@fp
  2394  0009F0  C050  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2395  0009F4  EC22  F007         	call	_fputc	;wreg free
  2396                           
  2397                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2398  0009F8  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2399  0009FC  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2400  000A00  2ADE               	incf	postinc2,f,c
  2401  000A02  0E00               	movlw	0
  2402  000A04  22DD               	addwfc	postdec2,f,c
  2403  000A06  D7D5               	goto	l2508
  2404  000A08                     __end_of_vfpfcnvrt:
  2405                           	opt callstack 0
  2406                           
  2407 ;; *************** function _dtoa *****************
  2408 ;; Defined at:
  2409 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  2412 ;;		 -> NULL(0), 
  2413 ;;  d               8   44[COMRAM] long long 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  n               8   68[COMRAM] long long 
  2416 ;;  i               2   76[COMRAM] int 
  2417 ;;  s               2   66[COMRAM] int 
  2418 ;;  w               2   64[COMRAM] int 
  2419 ;;  p               2   62[COMRAM] int 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  2   42[COMRAM] int 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:       36 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    8
  2436 ;; This function calls:
  2437 ;;		___aodiv
  2438 ;;		___aomod
  2439 ;;		_abs
  2440 ;;		_pad
  2441 ;; This function is called by:
  2442 ;;		_vfpfcnvrt
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text4
  2447  0005E0                     __ptext4:
  2448                           	opt callstack 0
  2449  0005E0                     _dtoa:
  2450                           	opt callstack 19
  2451                           
  2452                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  2453                           
  2454                           ;incstack = 0
  2455  0005E0  C02D  F045         	movff	dtoa@d,dtoa@n
  2456  0005E4  C02E  F046         	movff	dtoa@d+1,dtoa@n+1
  2457  0005E8  C02F  F047         	movff	dtoa@d+2,dtoa@n+2
  2458  0005EC  C030  F048         	movff	dtoa@d+3,dtoa@n+3
  2459  0005F0  C031  F049         	movff	dtoa@d+4,dtoa@n+4
  2460  0005F4  C032  F04A         	movff	dtoa@d+5,dtoa@n+5
  2461  0005F8  C033  F04B         	movff	dtoa@d+6,dtoa@n+6
  2462  0005FC  C034  F04C         	movff	dtoa@d+7,dtoa@n+7
  2463                           
  2464                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  2465  000600  AE4C               	btfss	dtoa@n+7,7,c
  2466  000602  D002               	goto	u1890
  2467  000604  0E01               	movlw	1
  2468  000606  D001               	goto	u1900
  2469  000608                     u1890:
  2470  000608  0E00               	movlw	0
  2471  00060A                     u1900:
  2472  00060A  6E43               	movwf	dtoa@s,c
  2473  00060C  6A44               	clrf	dtoa@s+1,c
  2474                           
  2475                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  2476  00060E  5043               	movf	dtoa@s,w,c
  2477  000610  1044               	iorwf	dtoa@s+1,w,c
  2478  000612  B4D8               	btfsc	status,2,c
  2479  000614  D010               	goto	l2420
  2480                           
  2481                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  2482  000616  1E4C               	comf	dtoa@n+7,f,c
  2483  000618  1E4B               	comf	dtoa@n+6,f,c
  2484  00061A  1E4A               	comf	dtoa@n+5,f,c
  2485  00061C  1E49               	comf	dtoa@n+4,f,c
  2486  00061E  1E48               	comf	dtoa@n+3,f,c
  2487  000620  1E47               	comf	dtoa@n+2,f,c
  2488  000622  1E46               	comf	dtoa@n+1,f,c
  2489  000624  6C45               	negf	dtoa@n,c
  2490  000626  0E00               	movlw	0
  2491  000628  2246               	addwfc	dtoa@n+1,f,c
  2492  00062A  2247               	addwfc	dtoa@n+2,f,c
  2493  00062C  2248               	addwfc	dtoa@n+3,f,c
  2494  00062E  2249               	addwfc	dtoa@n+4,f,c
  2495  000630  224A               	addwfc	dtoa@n+5,f,c
  2496  000632  224B               	addwfc	dtoa@n+6,f,c
  2497  000634  224C               	addwfc	dtoa@n+7,f,c
  2498  000636                     l2420:
  2499                           
  2500                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  2501  000636  AE71               	btfss	_prec+1,7,c
  2502                           
  2503                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  2504  000638  9272               	bcf	_flags,1,c
  2505                           
  2506                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  2507  00063A  BE71               	btfsc	_prec+1,7,c
  2508  00063C  D005               	goto	u1930
  2509  00063E  5071               	movf	_prec+1,w,c
  2510  000640  E108               	bnz	l183
  2511  000642  0470               	decf	_prec,w,c
  2512  000644  B0D8               	btfsc	status,0,c
  2513  000646  D005               	goto	l183
  2514  000648                     u1930:
  2515  000648  0E00               	movlw	0
  2516  00064A  6E40               	movwf	dtoa@p+1,c
  2517  00064C  0E01               	movlw	1
  2518  00064E  6E3F               	movwf	dtoa@p,c
  2519  000650  D004               	goto	l185
  2520  000652                     l183:
  2521  000652  C070  F03F         	movff	_prec,dtoa@p
  2522  000656  C071  F040         	movff	_prec+1,dtoa@p+1
  2523  00065A                     l185:
  2524                           
  2525                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  2526  00065A  C06E  F041         	movff	_width,dtoa@w
  2527  00065E  C06F  F042         	movff	_width+1,dtoa@w+1
  2528                           
  2529                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  2530  000662  5043               	movf	dtoa@s,w,c
  2531  000664  1044               	iorwf	dtoa@s+1,w,c
  2532  000666  A4D8               	btfss	status,2,c
  2533  000668  D002               	goto	u1950
  2534  00066A  A472               	btfss	_flags,2,c
  2535  00066C  D003               	goto	l2434
  2536  00066E                     u1950:
  2537                           
  2538                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  2539  00066E  0641               	decf	dtoa@w,f,c
  2540  000670  A0D8               	btfss	status,0,c
  2541  000672  0642               	decf	dtoa@w+1,f,c
  2542  000674                     l2434:
  2543                           
  2544                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  2545  000674  0E00               	movlw	0
  2546  000676  6E4E               	movwf	dtoa@i+1,c
  2547  000678  0E1F               	movlw	31
  2548  00067A  6E4D               	movwf	dtoa@i,c
  2549                           
  2550                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  2551  00067C  0E00               	movlw	0
  2552  00067E  0100               	movlb	0	; () banked
  2553  000680  6FE4               	movwf	(_dbuf+31)& (0+255),b
  2554                           
  2555                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2556  000682  D07C               	goto	l2448
  2557  000684                     l2438:
  2558                           
  2559                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  2560  000684  064D               	decf	dtoa@i,f,c
  2561  000686  A0D8               	btfss	status,0,c
  2562  000688  064E               	decf	dtoa@i+1,f,c
  2563                           
  2564                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  2565  00068A  0EC5               	movlw	low _dbuf
  2566  00068C  244D               	addwf	dtoa@i,w,c
  2567  00068E  6ED9               	movwf	fsr2l,c
  2568  000690  0E00               	movlw	high _dbuf
  2569  000692  204E               	addwfc	dtoa@i+1,w,c
  2570  000694  6EDA               	movwf	fsr2h,c
  2571  000696  C045  F00C         	movff	dtoa@n,___aomod@dividend
  2572  00069A  C046  F00D         	movff	dtoa@n+1,___aomod@dividend+1
  2573  00069E  C047  F00E         	movff	dtoa@n+2,___aomod@dividend+2
  2574  0006A2  C048  F00F         	movff	dtoa@n+3,___aomod@dividend+3
  2575  0006A6  C049  F010         	movff	dtoa@n+4,___aomod@dividend+4
  2576  0006AA  C04A  F011         	movff	dtoa@n+5,___aomod@dividend+5
  2577  0006AE  C04B  F012         	movff	dtoa@n+6,___aomod@dividend+6
  2578  0006B2  C04C  F013         	movff	dtoa@n+7,___aomod@dividend+7
  2579  0006B6  0E0A               	movlw	10
  2580  0006B8  6E14               	movwf	___aomod@divisor,c
  2581  0006BA  0E00               	movlw	0
  2582  0006BC  6E15               	movwf	___aomod@divisor+1,c
  2583  0006BE  0E00               	movlw	0
  2584  0006C0  6E16               	movwf	___aomod@divisor+2,c
  2585  0006C2  0E00               	movlw	0
  2586  0006C4  6E17               	movwf	___aomod@divisor+3,c
  2587  0006C6  0E00               	movlw	0
  2588  0006C8  6E18               	movwf	___aomod@divisor+4,c
  2589  0006CA  0E00               	movlw	0
  2590  0006CC  6E19               	movwf	___aomod@divisor+5,c
  2591  0006CE  0E00               	movlw	0
  2592  0006D0  6E1A               	movwf	___aomod@divisor+6,c
  2593  0006D2  0E00               	movlw	0
  2594  0006D4  6E1B               	movwf	___aomod@divisor+7,c
  2595  0006D6  ECA8  F005         	call	___aomod	;wreg free
  2596  0006DA  C00C  F035         	movff	?___aomod,??_dtoa
  2597  0006DE  C00D  F036         	movff	?___aomod+1,??_dtoa+1
  2598  0006E2  C00E  F037         	movff	?___aomod+2,??_dtoa+2
  2599  0006E6  C00F  F038         	movff	?___aomod+3,??_dtoa+3
  2600  0006EA  C010  F039         	movff	?___aomod+4,??_dtoa+4
  2601  0006EE  C011  F03A         	movff	?___aomod+5,??_dtoa+5
  2602  0006F2  C012  F03B         	movff	?___aomod+6,??_dtoa+6
  2603  0006F6  C013  F03C         	movff	?___aomod+7,??_dtoa+7
  2604  0006FA  C035  F01E         	movff	??_dtoa,abs@a
  2605  0006FE  C037  F01F         	movff	??_dtoa+2,abs@a+1
  2606  000702  EC3D  F008         	call	_abs	;wreg free
  2607  000706  501E               	movf	?_abs,w,c
  2608  000708  0F30               	addlw	48
  2609  00070A  6EDF               	movwf	indf2,c
  2610                           
  2611                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  2612  00070C  063F               	decf	dtoa@p,f,c
  2613  00070E  A0D8               	btfss	status,0,c
  2614  000710  0640               	decf	dtoa@p+1,f,c
  2615                           
  2616                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  2617  000712  0641               	decf	dtoa@w,f,c
  2618  000714  A0D8               	btfss	status,0,c
  2619  000716  0642               	decf	dtoa@w+1,f,c
  2620                           
  2621                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  2622  000718  C045  F00C         	movff	dtoa@n,___aodiv@dividend
  2623  00071C  C046  F00D         	movff	dtoa@n+1,___aodiv@dividend+1
  2624  000720  C047  F00E         	movff	dtoa@n+2,___aodiv@dividend+2
  2625  000724  C048  F00F         	movff	dtoa@n+3,___aodiv@dividend+3
  2626  000728  C049  F010         	movff	dtoa@n+4,___aodiv@dividend+4
  2627  00072C  C04A  F011         	movff	dtoa@n+5,___aodiv@dividend+5
  2628  000730  C04B  F012         	movff	dtoa@n+6,___aodiv@dividend+6
  2629  000734  C04C  F013         	movff	dtoa@n+7,___aodiv@dividend+7
  2630  000738  0E0A               	movlw	10
  2631  00073A  6E14               	movwf	___aodiv@divisor,c
  2632  00073C  0E00               	movlw	0
  2633  00073E  6E15               	movwf	___aodiv@divisor+1,c
  2634  000740  0E00               	movlw	0
  2635  000742  6E16               	movwf	___aodiv@divisor+2,c
  2636  000744  0E00               	movlw	0
  2637  000746  6E17               	movwf	___aodiv@divisor+3,c
  2638  000748  0E00               	movlw	0
  2639  00074A  6E18               	movwf	___aodiv@divisor+4,c
  2640  00074C  0E00               	movlw	0
  2641  00074E  6E19               	movwf	___aodiv@divisor+5,c
  2642  000750  0E00               	movlw	0
  2643  000752  6E1A               	movwf	___aodiv@divisor+6,c
  2644  000754  0E00               	movlw	0
  2645  000756  6E1B               	movwf	___aodiv@divisor+7,c
  2646  000758  EC04  F005         	call	___aodiv	;wreg free
  2647  00075C  C00C  F045         	movff	?___aodiv,dtoa@n
  2648  000760  C00D  F046         	movff	?___aodiv+1,dtoa@n+1
  2649  000764  C00E  F047         	movff	?___aodiv+2,dtoa@n+2
  2650  000768  C00F  F048         	movff	?___aodiv+3,dtoa@n+3
  2651  00076C  C010  F049         	movff	?___aodiv+4,dtoa@n+4
  2652  000770  C011  F04A         	movff	?___aodiv+5,dtoa@n+5
  2653  000774  C012  F04B         	movff	?___aodiv+6,dtoa@n+6
  2654  000778  C013  F04C         	movff	?___aodiv+7,dtoa@n+7
  2655  00077C                     l2448:
  2656                           
  2657                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2658  00077C  BE4E               	btfsc	dtoa@i+1,7,c
  2659  00077E  D01F               	goto	u2000
  2660  000780  504E               	movf	dtoa@i+1,w,c
  2661  000782  E103               	bnz	u1960
  2662  000784  044D               	decf	dtoa@i,w,c
  2663  000786  A0D8               	btfss	status,0,c
  2664  000788  D01A               	goto	u2000
  2665  00078A                     u1960:
  2666  00078A  5045               	movf	dtoa@n,w,c
  2667  00078C  1046               	iorwf	dtoa@n+1,w,c
  2668  00078E  1047               	iorwf	dtoa@n+2,w,c
  2669  000790  1048               	iorwf	dtoa@n+3,w,c
  2670  000792  1049               	iorwf	dtoa@n+4,w,c
  2671  000794  104A               	iorwf	dtoa@n+5,w,c
  2672  000796  104B               	iorwf	dtoa@n+6,w,c
  2673  000798  104C               	iorwf	dtoa@n+7,w,c
  2674  00079A  A4D8               	btfss	status,2,c
  2675  00079C  D773               	goto	l2438
  2676  00079E  BE40               	btfsc	dtoa@p+1,7,c
  2677  0007A0  D005               	goto	u1980
  2678  0007A2  5040               	movf	dtoa@p+1,w,c
  2679  0007A4  E102               	bnz	u1981
  2680  0007A6  043F               	decf	dtoa@p,w,c
  2681  0007A8  B0D8               	btfsc	status,0,c
  2682  0007AA                     u1981:
  2683  0007AA  D76C               	goto	l2438
  2684  0007AC                     u1980:
  2685  0007AC  BE42               	btfsc	dtoa@w+1,7,c
  2686  0007AE  D007               	goto	u2000
  2687  0007B0  5042               	movf	dtoa@w+1,w,c
  2688  0007B2  E103               	bnz	u1990
  2689  0007B4  0441               	decf	dtoa@w,w,c
  2690  0007B6  A0D8               	btfss	status,0,c
  2691  0007B8  D002               	goto	u2000
  2692  0007BA                     u1990:
  2693  0007BA  B272               	btfsc	_flags,1,c
  2694  0007BC  D763               	goto	l2438
  2695  0007BE                     u2000:
  2696                           
  2697                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  2698  0007BE  5043               	movf	dtoa@s,w,c
  2699  0007C0  1044               	iorwf	dtoa@s+1,w,c
  2700  0007C2  A4D8               	btfss	status,2,c
  2701  0007C4  D002               	goto	u2020
  2702  0007C6  A472               	btfss	_flags,2,c
  2703  0007C8  D017               	goto	l2472
  2704  0007CA                     u2020:
  2705                           
  2706                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  2707  0007CA  064D               	decf	dtoa@i,f,c
  2708  0007CC  A0D8               	btfss	status,0,c
  2709  0007CE  064E               	decf	dtoa@i+1,f,c
  2710                           
  2711                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  2712  0007D0  5043               	movf	dtoa@s,w,c
  2713  0007D2  1044               	iorwf	dtoa@s+1,w,c
  2714  0007D4  A4D8               	btfss	status,2,c
  2715  0007D6  D004               	goto	l2468
  2716  0007D8  0E00               	movlw	0
  2717  0007DA  6E3E               	movwf	_dtoa$327+1,c
  2718  0007DC  0E2B               	movlw	43
  2719  0007DE  D003               	goto	L2
  2720  0007E0                     l2468:
  2721  0007E0  0E00               	movlw	0
  2722  0007E2  6E3E               	movwf	_dtoa$327+1,c
  2723  0007E4  0E2D               	movlw	45
  2724  0007E6                     L2:
  2725  0007E6  6E3D               	movwf	_dtoa$327,c
  2726  0007E8  0EC5               	movlw	low _dbuf
  2727  0007EA  244D               	addwf	dtoa@i,w,c
  2728  0007EC  6ED9               	movwf	fsr2l,c
  2729  0007EE  0E00               	movlw	high _dbuf
  2730  0007F0  204E               	addwfc	dtoa@i+1,w,c
  2731  0007F2  6EDA               	movwf	fsr2h,c
  2732  0007F4  C03D  FFDF         	movff	_dtoa$327,indf2
  2733  0007F8                     l2472:
  2734                           
  2735                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  2736  0007F8  C02B  F020         	movff	dtoa@fp,pad@fp
  2737  0007FC  C02C  F021         	movff	dtoa@fp+1,pad@fp+1
  2738  000800  0EC5               	movlw	low _dbuf
  2739  000802  244D               	addwf	dtoa@i,w,c
  2740  000804  6E22               	movwf	pad@buf,c
  2741  000806  0E00               	movlw	high _dbuf
  2742  000808  204E               	addwfc	dtoa@i+1,w,c
  2743  00080A  6E23               	movwf	pad@buf+1,c
  2744  00080C  C041  F024         	movff	dtoa@w,pad@p
  2745  000810  C042  F025         	movff	dtoa@w+1,pad@p+1
  2746  000814  EC9F  F006         	call	_pad	;wreg free
  2747  000818  C020  F02B         	movff	?_pad,?_dtoa
  2748  00081C  C021  F02C         	movff	?_pad+1,?_dtoa+1
  2749  000820  0012               	return		;funcret
  2750  000822                     __end_of_dtoa:
  2751                           	opt callstack 0
  2752                           
  2753 ;; *************** function _abs *****************
  2754 ;; Defined at:
  2755 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  a               2   29[COMRAM] int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2   29[COMRAM] int 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;Total ram usage:        4 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    1
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_dtoa
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text5
  2784  00107A                     __ptext5:
  2785                           	opt callstack 0
  2786  00107A                     _abs:
  2787                           	opt callstack 25
  2788                           
  2789                           ;incstack = 0
  2790  00107A  BE1F               	btfsc	abs@a+1,7,c
  2791  00107C  D005               	goto	u1740
  2792  00107E  501F               	movf	abs@a+1,w,c
  2793  001080  E110               	bnz	l896
  2794  001082  041E               	decf	abs@a,w,c
  2795  001084  B0D8               	btfsc	status,0,c
  2796  001086  D00D               	goto	l896
  2797  001088                     u1740:
  2798  001088  C01E  F020         	movff	abs@a,??_abs
  2799  00108C  C01F  F021         	movff	abs@a+1,??_abs+1
  2800  001090  1E20               	comf	??_abs,f,c
  2801  001092  1E21               	comf	??_abs+1,f,c
  2802  001094  4A20               	infsnz	??_abs,f,c
  2803  001096  2A21               	incf	??_abs+1,f,c
  2804  001098  C020  F01E         	movff	??_abs,?_abs
  2805  00109C  C021  F01F         	movff	??_abs+1,?_abs+1
  2806  0010A0  0012               	return	
  2807  0010A2                     l896:
  2808  0010A2  C01E  F01E         	movff	abs@a,?_abs
  2809  0010A6  C01F  F01F         	movff	abs@a+1,?_abs+1
  2810  0010AA  0012               	return		;funcret
  2811  0010AC                     __end_of_abs:
  2812                           	opt callstack 0
  2813                           
  2814 ;; *************** function ___aomod *****************
  2815 ;; Defined at:
  2816 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  dividend        8   11[COMRAM] long long 
  2819 ;;  divisor         8   19[COMRAM] long long 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  sign            1   28[COMRAM] unsigned char 
  2822 ;;  counter         1   27[COMRAM] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  8   11[COMRAM] long long 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:       18 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    1
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_dtoa
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text6
  2847  000B50                     __ptext6:
  2848                           	opt callstack 0
  2849  000B50                     ___aomod:
  2850                           	opt callstack 25
  2851                           
  2852                           ;incstack = 0
  2853  000B50  0E00               	movlw	0
  2854  000B52  6E1D               	movwf	___aomod@sign,c
  2855  000B54  AE13               	btfss	___aomod@dividend+7,7,c
  2856  000B56  D012               	goto	l2372
  2857  000B58  1E13               	comf	___aomod@dividend+7,f,c
  2858  000B5A  1E12               	comf	___aomod@dividend+6,f,c
  2859  000B5C  1E11               	comf	___aomod@dividend+5,f,c
  2860  000B5E  1E10               	comf	___aomod@dividend+4,f,c
  2861  000B60  1E0F               	comf	___aomod@dividend+3,f,c
  2862  000B62  1E0E               	comf	___aomod@dividend+2,f,c
  2863  000B64  1E0D               	comf	___aomod@dividend+1,f,c
  2864  000B66  6C0C               	negf	___aomod@dividend,c
  2865  000B68  0E00               	movlw	0
  2866  000B6A  220D               	addwfc	___aomod@dividend+1,f,c
  2867  000B6C  220E               	addwfc	___aomod@dividend+2,f,c
  2868  000B6E  220F               	addwfc	___aomod@dividend+3,f,c
  2869  000B70  2210               	addwfc	___aomod@dividend+4,f,c
  2870  000B72  2211               	addwfc	___aomod@dividend+5,f,c
  2871  000B74  2212               	addwfc	___aomod@dividend+6,f,c
  2872  000B76  2213               	addwfc	___aomod@dividend+7,f,c
  2873  000B78  0E01               	movlw	1
  2874  000B7A  6E1D               	movwf	___aomod@sign,c
  2875  000B7C                     l2372:
  2876  000B7C  AE1B               	btfss	___aomod@divisor+7,7,c
  2877  000B7E  D010               	goto	l2376
  2878  000B80  1E1B               	comf	___aomod@divisor+7,f,c
  2879  000B82  1E1A               	comf	___aomod@divisor+6,f,c
  2880  000B84  1E19               	comf	___aomod@divisor+5,f,c
  2881  000B86  1E18               	comf	___aomod@divisor+4,f,c
  2882  000B88  1E17               	comf	___aomod@divisor+3,f,c
  2883  000B8A  1E16               	comf	___aomod@divisor+2,f,c
  2884  000B8C  1E15               	comf	___aomod@divisor+1,f,c
  2885  000B8E  6C14               	negf	___aomod@divisor,c
  2886  000B90  0E00               	movlw	0
  2887  000B92  2215               	addwfc	___aomod@divisor+1,f,c
  2888  000B94  2216               	addwfc	___aomod@divisor+2,f,c
  2889  000B96  2217               	addwfc	___aomod@divisor+3,f,c
  2890  000B98  2218               	addwfc	___aomod@divisor+4,f,c
  2891  000B9A  2219               	addwfc	___aomod@divisor+5,f,c
  2892  000B9C  221A               	addwfc	___aomod@divisor+6,f,c
  2893  000B9E  221B               	addwfc	___aomod@divisor+7,f,c
  2894  000BA0                     l2376:
  2895  000BA0  5014               	movf	___aomod@divisor,w,c
  2896  000BA2  1015               	iorwf	___aomod@divisor+1,w,c
  2897  000BA4  1016               	iorwf	___aomod@divisor+2,w,c
  2898  000BA6  1017               	iorwf	___aomod@divisor+3,w,c
  2899  000BA8  1018               	iorwf	___aomod@divisor+4,w,c
  2900  000BAA  1019               	iorwf	___aomod@divisor+5,w,c
  2901  000BAC  101A               	iorwf	___aomod@divisor+6,w,c
  2902  000BAE  101B               	iorwf	___aomod@divisor+7,w,c
  2903  000BB0  B4D8               	btfsc	status,2,c
  2904  000BB2  D03C               	goto	l2392
  2905  000BB4  0E01               	movlw	1
  2906  000BB6  6E1C               	movwf	___aomod@counter,c
  2907  000BB8  D00A               	goto	l2382
  2908  000BBA                     l2380:
  2909  000BBA  90D8               	bcf	status,0,c
  2910  000BBC  3614               	rlcf	___aomod@divisor,f,c
  2911  000BBE  3615               	rlcf	___aomod@divisor+1,f,c
  2912  000BC0  3616               	rlcf	___aomod@divisor+2,f,c
  2913  000BC2  3617               	rlcf	___aomod@divisor+3,f,c
  2914  000BC4  3618               	rlcf	___aomod@divisor+4,f,c
  2915  000BC6  3619               	rlcf	___aomod@divisor+5,f,c
  2916  000BC8  361A               	rlcf	___aomod@divisor+6,f,c
  2917  000BCA  361B               	rlcf	___aomod@divisor+7,f,c
  2918  000BCC  2A1C               	incf	___aomod@counter,f,c
  2919  000BCE                     l2382:
  2920  000BCE  AE1B               	btfss	___aomod@divisor+7,7,c
  2921  000BD0  D7F4               	goto	l2380
  2922  000BD2                     u1850:
  2923  000BD2  5014               	movf	___aomod@divisor,w,c
  2924  000BD4  5C0C               	subwf	___aomod@dividend,w,c
  2925  000BD6  5015               	movf	___aomod@divisor+1,w,c
  2926  000BD8  580D               	subwfb	___aomod@dividend+1,w,c
  2927  000BDA  5016               	movf	___aomod@divisor+2,w,c
  2928  000BDC  580E               	subwfb	___aomod@dividend+2,w,c
  2929  000BDE  5017               	movf	___aomod@divisor+3,w,c
  2930  000BE0  580F               	subwfb	___aomod@dividend+3,w,c
  2931  000BE2  5018               	movf	___aomod@divisor+4,w,c
  2932  000BE4  5810               	subwfb	___aomod@dividend+4,w,c
  2933  000BE6  5019               	movf	___aomod@divisor+5,w,c
  2934  000BE8  5811               	subwfb	___aomod@dividend+5,w,c
  2935  000BEA  501A               	movf	___aomod@divisor+6,w,c
  2936  000BEC  5812               	subwfb	___aomod@dividend+6,w,c
  2937  000BEE  501B               	movf	___aomod@divisor+7,w,c
  2938  000BF0  5813               	subwfb	___aomod@dividend+7,w,c
  2939  000BF2  A0D8               	btfss	status,0,c
  2940  000BF4  D010               	goto	l2388
  2941  000BF6  5014               	movf	___aomod@divisor,w,c
  2942  000BF8  5E0C               	subwf	___aomod@dividend,f,c
  2943  000BFA  5015               	movf	___aomod@divisor+1,w,c
  2944  000BFC  5A0D               	subwfb	___aomod@dividend+1,f,c
  2945  000BFE  5016               	movf	___aomod@divisor+2,w,c
  2946  000C00  5A0E               	subwfb	___aomod@dividend+2,f,c
  2947  000C02  5017               	movf	___aomod@divisor+3,w,c
  2948  000C04  5A0F               	subwfb	___aomod@dividend+3,f,c
  2949  000C06  5018               	movf	___aomod@divisor+4,w,c
  2950  000C08  5A10               	subwfb	___aomod@dividend+4,f,c
  2951  000C0A  5019               	movf	___aomod@divisor+5,w,c
  2952  000C0C  5A11               	subwfb	___aomod@dividend+5,f,c
  2953  000C0E  501A               	movf	___aomod@divisor+6,w,c
  2954  000C10  5A12               	subwfb	___aomod@dividend+6,f,c
  2955  000C12  501B               	movf	___aomod@divisor+7,w,c
  2956  000C14  5A13               	subwfb	___aomod@dividend+7,f,c
  2957  000C16                     l2388:
  2958  000C16  90D8               	bcf	status,0,c
  2959  000C18  321B               	rrcf	___aomod@divisor+7,f,c
  2960  000C1A  321A               	rrcf	___aomod@divisor+6,f,c
  2961  000C1C  3219               	rrcf	___aomod@divisor+5,f,c
  2962  000C1E  3218               	rrcf	___aomod@divisor+4,f,c
  2963  000C20  3217               	rrcf	___aomod@divisor+3,f,c
  2964  000C22  3216               	rrcf	___aomod@divisor+2,f,c
  2965  000C24  3215               	rrcf	___aomod@divisor+1,f,c
  2966  000C26  3214               	rrcf	___aomod@divisor,f,c
  2967  000C28  2E1C               	decfsz	___aomod@counter,f,c
  2968  000C2A  D7D3               	goto	u1850
  2969  000C2C                     l2392:
  2970  000C2C  501D               	movf	___aomod@sign,w,c
  2971  000C2E  B4D8               	btfsc	status,2,c
  2972  000C30  D010               	goto	l2396
  2973  000C32  1E13               	comf	___aomod@dividend+7,f,c
  2974  000C34  1E12               	comf	___aomod@dividend+6,f,c
  2975  000C36  1E11               	comf	___aomod@dividend+5,f,c
  2976  000C38  1E10               	comf	___aomod@dividend+4,f,c
  2977  000C3A  1E0F               	comf	___aomod@dividend+3,f,c
  2978  000C3C  1E0E               	comf	___aomod@dividend+2,f,c
  2979  000C3E  1E0D               	comf	___aomod@dividend+1,f,c
  2980  000C40  6C0C               	negf	___aomod@dividend,c
  2981  000C42  0E00               	movlw	0
  2982  000C44  220D               	addwfc	___aomod@dividend+1,f,c
  2983  000C46  220E               	addwfc	___aomod@dividend+2,f,c
  2984  000C48  220F               	addwfc	___aomod@dividend+3,f,c
  2985  000C4A  2210               	addwfc	___aomod@dividend+4,f,c
  2986  000C4C  2211               	addwfc	___aomod@dividend+5,f,c
  2987  000C4E  2212               	addwfc	___aomod@dividend+6,f,c
  2988  000C50  2213               	addwfc	___aomod@dividend+7,f,c
  2989  000C52                     l2396:
  2990  000C52  C00C  F00C         	movff	___aomod@dividend,?___aomod
  2991  000C56  C00D  F00D         	movff	___aomod@dividend+1,?___aomod+1
  2992  000C5A  C00E  F00E         	movff	___aomod@dividend+2,?___aomod+2
  2993  000C5E  C00F  F00F         	movff	___aomod@dividend+3,?___aomod+3
  2994  000C62  C010  F010         	movff	___aomod@dividend+4,?___aomod+4
  2995  000C66  C011  F011         	movff	___aomod@dividend+5,?___aomod+5
  2996  000C6A  C012  F012         	movff	___aomod@dividend+6,?___aomod+6
  2997  000C6E  C013  F013         	movff	___aomod@dividend+7,?___aomod+7
  2998  000C72  0012               	return		;funcret
  2999  000C74                     __end_of___aomod:
  3000                           	opt callstack 0
  3001                           
  3002 ;; *************** function ___aodiv *****************
  3003 ;; Defined at:
  3004 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  dividend        8   11[COMRAM] long long 
  3007 ;;  divisor         8   19[COMRAM] long long 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  quotient        8   29[COMRAM] long long 
  3010 ;;  sign            1   28[COMRAM] unsigned char 
  3011 ;;  counter         1   27[COMRAM] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  8   11[COMRAM] long long 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3021 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;Total ram usage:       26 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    1
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_dtoa
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text7
  3036  000A08                     __ptext7:
  3037                           	opt callstack 0
  3038  000A08                     ___aodiv:
  3039                           	opt callstack 25
  3040                           
  3041                           ;incstack = 0
  3042  000A08  0E00               	movlw	0
  3043  000A0A  6E1D               	movwf	___aodiv@sign,c
  3044  000A0C  AE1B               	btfss	___aodiv@divisor+7,7,c
  3045  000A0E  D012               	goto	l2328
  3046  000A10  1E1B               	comf	___aodiv@divisor+7,f,c
  3047  000A12  1E1A               	comf	___aodiv@divisor+6,f,c
  3048  000A14  1E19               	comf	___aodiv@divisor+5,f,c
  3049  000A16  1E18               	comf	___aodiv@divisor+4,f,c
  3050  000A18  1E17               	comf	___aodiv@divisor+3,f,c
  3051  000A1A  1E16               	comf	___aodiv@divisor+2,f,c
  3052  000A1C  1E15               	comf	___aodiv@divisor+1,f,c
  3053  000A1E  6C14               	negf	___aodiv@divisor,c
  3054  000A20  0E00               	movlw	0
  3055  000A22  2215               	addwfc	___aodiv@divisor+1,f,c
  3056  000A24  2216               	addwfc	___aodiv@divisor+2,f,c
  3057  000A26  2217               	addwfc	___aodiv@divisor+3,f,c
  3058  000A28  2218               	addwfc	___aodiv@divisor+4,f,c
  3059  000A2A  2219               	addwfc	___aodiv@divisor+5,f,c
  3060  000A2C  221A               	addwfc	___aodiv@divisor+6,f,c
  3061  000A2E  221B               	addwfc	___aodiv@divisor+7,f,c
  3062  000A30  0E01               	movlw	1
  3063  000A32  6E1D               	movwf	___aodiv@sign,c
  3064  000A34                     l2328:
  3065  000A34  AE13               	btfss	___aodiv@dividend+7,7,c
  3066  000A36  D012               	goto	l2334
  3067  000A38  1E13               	comf	___aodiv@dividend+7,f,c
  3068  000A3A  1E12               	comf	___aodiv@dividend+6,f,c
  3069  000A3C  1E11               	comf	___aodiv@dividend+5,f,c
  3070  000A3E  1E10               	comf	___aodiv@dividend+4,f,c
  3071  000A40  1E0F               	comf	___aodiv@dividend+3,f,c
  3072  000A42  1E0E               	comf	___aodiv@dividend+2,f,c
  3073  000A44  1E0D               	comf	___aodiv@dividend+1,f,c
  3074  000A46  6C0C               	negf	___aodiv@dividend,c
  3075  000A48  0E00               	movlw	0
  3076  000A4A  220D               	addwfc	___aodiv@dividend+1,f,c
  3077  000A4C  220E               	addwfc	___aodiv@dividend+2,f,c
  3078  000A4E  220F               	addwfc	___aodiv@dividend+3,f,c
  3079  000A50  2210               	addwfc	___aodiv@dividend+4,f,c
  3080  000A52  2211               	addwfc	___aodiv@dividend+5,f,c
  3081  000A54  2212               	addwfc	___aodiv@dividend+6,f,c
  3082  000A56  2213               	addwfc	___aodiv@dividend+7,f,c
  3083  000A58  0E01               	movlw	1
  3084  000A5A  1A1D               	xorwf	___aodiv@sign,f,c
  3085  000A5C                     l2334:
  3086  000A5C  EE20  F01E         	lfsr	2,___aodiv@quotient
  3087  000A60  0E07               	movlw	7
  3088  000A62                     u1771:
  3089  000A62  6ADE               	clrf	postinc2,c
  3090  000A64  06E8               	decf	wreg,f,c
  3091  000A66  E2FD               	bc	u1771
  3092  000A68  5014               	movf	___aodiv@divisor,w,c
  3093  000A6A  1015               	iorwf	___aodiv@divisor+1,w,c
  3094  000A6C  1016               	iorwf	___aodiv@divisor+2,w,c
  3095  000A6E  1017               	iorwf	___aodiv@divisor+3,w,c
  3096  000A70  1018               	iorwf	___aodiv@divisor+4,w,c
  3097  000A72  1019               	iorwf	___aodiv@divisor+5,w,c
  3098  000A74  101A               	iorwf	___aodiv@divisor+6,w,c
  3099  000A76  101B               	iorwf	___aodiv@divisor+7,w,c
  3100  000A78  B4D8               	btfsc	status,2,c
  3101  000A7A  D046               	goto	l2356
  3102  000A7C  0E01               	movlw	1
  3103  000A7E  6E1C               	movwf	___aodiv@counter,c
  3104  000A80  D00A               	goto	l2342
  3105  000A82                     l2340:
  3106  000A82  90D8               	bcf	status,0,c
  3107  000A84  3614               	rlcf	___aodiv@divisor,f,c
  3108  000A86  3615               	rlcf	___aodiv@divisor+1,f,c
  3109  000A88  3616               	rlcf	___aodiv@divisor+2,f,c
  3110  000A8A  3617               	rlcf	___aodiv@divisor+3,f,c
  3111  000A8C  3618               	rlcf	___aodiv@divisor+4,f,c
  3112  000A8E  3619               	rlcf	___aodiv@divisor+5,f,c
  3113  000A90  361A               	rlcf	___aodiv@divisor+6,f,c
  3114  000A92  361B               	rlcf	___aodiv@divisor+7,f,c
  3115  000A94  2A1C               	incf	___aodiv@counter,f,c
  3116  000A96                     l2342:
  3117  000A96  AE1B               	btfss	___aodiv@divisor+7,7,c
  3118  000A98  D7F4               	goto	l2340
  3119  000A9A                     u1790:
  3120  000A9A  90D8               	bcf	status,0,c
  3121  000A9C  361E               	rlcf	___aodiv@quotient,f,c
  3122  000A9E  361F               	rlcf	___aodiv@quotient+1,f,c
  3123  000AA0  3620               	rlcf	___aodiv@quotient+2,f,c
  3124  000AA2  3621               	rlcf	___aodiv@quotient+3,f,c
  3125  000AA4  3622               	rlcf	___aodiv@quotient+4,f,c
  3126  000AA6  3623               	rlcf	___aodiv@quotient+5,f,c
  3127  000AA8  3624               	rlcf	___aodiv@quotient+6,f,c
  3128  000AAA  3625               	rlcf	___aodiv@quotient+7,f,c
  3129  000AAC  5014               	movf	___aodiv@divisor,w,c
  3130  000AAE  5C0C               	subwf	___aodiv@dividend,w,c
  3131  000AB0  5015               	movf	___aodiv@divisor+1,w,c
  3132  000AB2  580D               	subwfb	___aodiv@dividend+1,w,c
  3133  000AB4  5016               	movf	___aodiv@divisor+2,w,c
  3134  000AB6  580E               	subwfb	___aodiv@dividend+2,w,c
  3135  000AB8  5017               	movf	___aodiv@divisor+3,w,c
  3136  000ABA  580F               	subwfb	___aodiv@dividend+3,w,c
  3137  000ABC  5018               	movf	___aodiv@divisor+4,w,c
  3138  000ABE  5810               	subwfb	___aodiv@dividend+4,w,c
  3139  000AC0  5019               	movf	___aodiv@divisor+5,w,c
  3140  000AC2  5811               	subwfb	___aodiv@dividend+5,w,c
  3141  000AC4  501A               	movf	___aodiv@divisor+6,w,c
  3142  000AC6  5812               	subwfb	___aodiv@dividend+6,w,c
  3143  000AC8  501B               	movf	___aodiv@divisor+7,w,c
  3144  000ACA  5813               	subwfb	___aodiv@dividend+7,w,c
  3145  000ACC  A0D8               	btfss	status,0,c
  3146  000ACE  D011               	goto	l2352
  3147  000AD0  5014               	movf	___aodiv@divisor,w,c
  3148  000AD2  5E0C               	subwf	___aodiv@dividend,f,c
  3149  000AD4  5015               	movf	___aodiv@divisor+1,w,c
  3150  000AD6  5A0D               	subwfb	___aodiv@dividend+1,f,c
  3151  000AD8  5016               	movf	___aodiv@divisor+2,w,c
  3152  000ADA  5A0E               	subwfb	___aodiv@dividend+2,f,c
  3153  000ADC  5017               	movf	___aodiv@divisor+3,w,c
  3154  000ADE  5A0F               	subwfb	___aodiv@dividend+3,f,c
  3155  000AE0  5018               	movf	___aodiv@divisor+4,w,c
  3156  000AE2  5A10               	subwfb	___aodiv@dividend+4,f,c
  3157  000AE4  5019               	movf	___aodiv@divisor+5,w,c
  3158  000AE6  5A11               	subwfb	___aodiv@dividend+5,f,c
  3159  000AE8  501A               	movf	___aodiv@divisor+6,w,c
  3160  000AEA  5A12               	subwfb	___aodiv@dividend+6,f,c
  3161  000AEC  501B               	movf	___aodiv@divisor+7,w,c
  3162  000AEE  5A13               	subwfb	___aodiv@dividend+7,f,c
  3163  000AF0  801E               	bsf	___aodiv@quotient,0,c
  3164  000AF2                     l2352:
  3165  000AF2  90D8               	bcf	status,0,c
  3166  000AF4  321B               	rrcf	___aodiv@divisor+7,f,c
  3167  000AF6  321A               	rrcf	___aodiv@divisor+6,f,c
  3168  000AF8  3219               	rrcf	___aodiv@divisor+5,f,c
  3169  000AFA  3218               	rrcf	___aodiv@divisor+4,f,c
  3170  000AFC  3217               	rrcf	___aodiv@divisor+3,f,c
  3171  000AFE  3216               	rrcf	___aodiv@divisor+2,f,c
  3172  000B00  3215               	rrcf	___aodiv@divisor+1,f,c
  3173  000B02  3214               	rrcf	___aodiv@divisor,f,c
  3174  000B04  2E1C               	decfsz	___aodiv@counter,f,c
  3175  000B06  D7C9               	goto	u1790
  3176  000B08                     l2356:
  3177  000B08  501D               	movf	___aodiv@sign,w,c
  3178  000B0A  B4D8               	btfsc	status,2,c
  3179  000B0C  D010               	goto	l2360
  3180  000B0E  1E25               	comf	___aodiv@quotient+7,f,c
  3181  000B10  1E24               	comf	___aodiv@quotient+6,f,c
  3182  000B12  1E23               	comf	___aodiv@quotient+5,f,c
  3183  000B14  1E22               	comf	___aodiv@quotient+4,f,c
  3184  000B16  1E21               	comf	___aodiv@quotient+3,f,c
  3185  000B18  1E20               	comf	___aodiv@quotient+2,f,c
  3186  000B1A  1E1F               	comf	___aodiv@quotient+1,f,c
  3187  000B1C  6C1E               	negf	___aodiv@quotient,c
  3188  000B1E  0E00               	movlw	0
  3189  000B20  221F               	addwfc	___aodiv@quotient+1,f,c
  3190  000B22  2220               	addwfc	___aodiv@quotient+2,f,c
  3191  000B24  2221               	addwfc	___aodiv@quotient+3,f,c
  3192  000B26  2222               	addwfc	___aodiv@quotient+4,f,c
  3193  000B28  2223               	addwfc	___aodiv@quotient+5,f,c
  3194  000B2A  2224               	addwfc	___aodiv@quotient+6,f,c
  3195  000B2C  2225               	addwfc	___aodiv@quotient+7,f,c
  3196  000B2E                     l2360:
  3197  000B2E  C01E  F00C         	movff	___aodiv@quotient,?___aodiv
  3198  000B32  C01F  F00D         	movff	___aodiv@quotient+1,?___aodiv+1
  3199  000B36  C020  F00E         	movff	___aodiv@quotient+2,?___aodiv+2
  3200  000B3A  C021  F00F         	movff	___aodiv@quotient+3,?___aodiv+3
  3201  000B3E  C022  F010         	movff	___aodiv@quotient+4,?___aodiv+4
  3202  000B42  C023  F011         	movff	___aodiv@quotient+5,?___aodiv+5
  3203  000B46  C024  F012         	movff	___aodiv@quotient+6,?___aodiv+6
  3204  000B4A  C025  F013         	movff	___aodiv@quotient+7,?___aodiv+7
  3205  000B4E  0012               	return		;funcret
  3206  000B50                     __end_of___aodiv:
  3207                           	opt callstack 0
  3208                           
  3209 ;; *************** function _ctoa *****************
  3210 ;; Defined at:
  3211 ;;		line 259 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  3214 ;;		 -> NULL(0), 
  3215 ;;  c               1   44[COMRAM] unsigned char 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  w               2   45[COMRAM] int 
  3218 ;;  l               2    0        int 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  2   42[COMRAM] int 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3228 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;Total ram usage:        5 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    8
  3235 ;; This function calls:
  3236 ;;		_pad
  3237 ;; This function is called by:
  3238 ;;		_vfpfcnvrt
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text8
  3243  000F6C                     __ptext8:
  3244                           	opt callstack 0
  3245  000F6C                     _ctoa:
  3246                           	opt callstack 19
  3247                           
  3248                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa
      +                          (FILE *fp, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 26
      +                          0: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, 
      +                          w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 264:     w = width
      +                           ? width - 1 : width;
  3249                           
  3250                           ;incstack = 0
  3251  000F6C  506E               	movf	_width,w,c
  3252  000F6E  106F               	iorwf	_width+1,w,c
  3253  000F70  A4D8               	btfss	status,2,c
  3254  000F72  D005               	goto	l2404
  3255  000F74  C06E  F02E         	movff	_width,ctoa@w
  3256  000F78  C06F  F02F         	movff	_width+1,ctoa@w+1
  3257  000F7C  D006               	goto	l2406
  3258  000F7E                     l2404:
  3259  000F7E  0EFF               	movlw	255
  3260  000F80  246E               	addwf	_width,w,c
  3261  000F82  6E2E               	movwf	ctoa@w,c
  3262  000F84  0EFF               	movlw	255
  3263  000F86  206F               	addwfc	_width+1,w,c
  3264  000F88  6E2F               	movwf	ctoa@w+1,c
  3265  000F8A                     l2406:
  3266                           
  3267                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c
      +                          ;
  3268  000F8A  C02D  F0C5         	movff	ctoa@c,_dbuf
  3269                           
  3270                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '
      +                          \0';
  3271  000F8E  0E00               	movlw	0
  3272  000F90  0100               	movlb	0	; () banked
  3273  000F92  6FC6               	movwf	(_dbuf+1)& (0+255),b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(
      +                          fp, &dbuf[0], w);
  3277  000F94  C02B  F020         	movff	ctoa@fp,pad@fp
  3278  000F98  C02C  F021         	movff	ctoa@fp+1,pad@fp+1
  3279  000F9C  0EC5               	movlw	low _dbuf
  3280  000F9E  6E22               	movwf	pad@buf,c
  3281  000FA0  0E00               	movlw	high _dbuf
  3282  000FA2  6E23               	movwf	pad@buf+1,c
  3283  000FA4  C02E  F024         	movff	ctoa@w,pad@p
  3284  000FA8  C02F  F025         	movff	ctoa@w+1,pad@p+1
  3285  000FAC  EC9F  F006         	call	_pad	;wreg free
  3286  000FB0  C020  F02B         	movff	?_pad,?_ctoa
  3287  000FB4  C021  F02C         	movff	?_pad+1,?_ctoa+1
  3288  000FB8  0012               	return		;funcret
  3289  000FBA                     __end_of_ctoa:
  3290                           	opt callstack 0
  3291                           
  3292 ;; *************** function _pad *****************
  3293 ;; Defined at:
  3294 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3297 ;;		 -> NULL(0), 
  3298 ;;  buf             2   33[COMRAM] PTR unsigned char 
  3299 ;;		 -> dbuf(32), 
  3300 ;;  p               2   35[COMRAM] int 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  w               2   40[COMRAM] int 
  3303 ;;  i               2   38[COMRAM] int 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  2   31[COMRAM] int 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3313 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;Total ram usage:       11 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    7
  3320 ;; This function calls:
  3321 ;;		_fputc
  3322 ;;		_fputs
  3323 ;;		_strlen
  3324 ;; This function is called by:
  3325 ;;		_ctoa
  3326 ;;		_dtoa
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text9
  3331  000D3E                     __ptext9:
  3332                           	opt callstack 0
  3333  000D3E                     _pad:
  3334                           	opt callstack 19
  3335                           
  3336                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  3337                           
  3338                           ;incstack = 0
  3339  000D3E  A072               	btfss	_flags,0,c
  3340  000D40  D00A               	goto	l2298
  3341                           
  3342                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  3343  000D42  C022  F019         	movff	pad@buf,fputs@s
  3344  000D46  C023  F01A         	movff	pad@buf+1,fputs@s+1
  3345  000D4A  C020  F01B         	movff	pad@fp,fputs@fp
  3346  000D4E  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  3347  000D52  EC21  F008         	call	_fputs	;wreg free
  3348  000D56                     l2298:
  3349                           
  3350                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  3351  000D56  BE25               	btfsc	pad@p+1,7,c
  3352  000D58  D005               	goto	l2302
  3353  000D5A  C024  F029         	movff	pad@p,pad@w
  3354  000D5E  C025  F02A         	movff	pad@p+1,pad@w+1
  3355  000D62  D004               	goto	l165
  3356  000D64                     l2302:
  3357  000D64  0E00               	movlw	0
  3358  000D66  6E2A               	movwf	pad@w+1,c
  3359  000D68  0E00               	movlw	0
  3360  000D6A  6E29               	movwf	pad@w,c
  3361  000D6C                     l165:
  3362                           
  3363                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3364  000D6C  0E00               	movlw	0
  3365  000D6E  6E28               	movwf	pad@i+1,c
  3366  000D70  0E00               	movlw	0
  3367  000D72  6E27               	movwf	pad@i,c
  3368                           
  3369                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3370  000D74  D00C               	goto	l2308
  3371  000D76                     l2304:
  3372                           
  3373                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  3374  000D76  0E00               	movlw	0
  3375  000D78  6E11               	movwf	fputc@c+1,c
  3376  000D7A  0E20               	movlw	32
  3377  000D7C  6E10               	movwf	fputc@c,c
  3378  000D7E  C020  F012         	movff	pad@fp,fputc@fp
  3379  000D82  C021  F013         	movff	pad@fp+1,fputc@fp+1
  3380  000D86  EC22  F007         	call	_fputc	;wreg free
  3381                           
  3382                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3383  000D8A  4A27               	infsnz	pad@i,f,c
  3384  000D8C  2A28               	incf	pad@i+1,f,c
  3385  000D8E                     l2308:
  3386                           
  3387                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3388  000D8E  5029               	movf	pad@w,w,c
  3389  000D90  5C27               	subwf	pad@i,w,c
  3390  000D92  5028               	movf	pad@i+1,w,c
  3391  000D94  0A80               	xorlw	128
  3392  000D96  6E26               	movwf	??_pad& (0+255),c
  3393  000D98  502A               	movf	pad@w+1,w,c
  3394  000D9A  0A80               	xorlw	128
  3395  000D9C  5826               	subwfb	??_pad& (0+255),w,c
  3396  000D9E  A0D8               	btfss	status,0,c
  3397  000DA0  D7EA               	goto	l2304
  3398                           
  3399                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  3400  000DA2  B072               	btfsc	_flags,0,c
  3401  000DA4  D00A               	goto	l2312
  3402                           
  3403                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  3404  000DA6  C022  F019         	movff	pad@buf,fputs@s
  3405  000DAA  C023  F01A         	movff	pad@buf+1,fputs@s+1
  3406  000DAE  C020  F01B         	movff	pad@fp,fputs@fp
  3407  000DB2  C021  F01C         	movff	pad@fp+1,fputs@fp+1
  3408  000DB6  EC21  F008         	call	_fputs	;wreg free
  3409  000DBA                     l2312:
  3410                           
  3411                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  3412  000DBA  C022  F00C         	movff	pad@buf,strlen@s
  3413  000DBE  C023  F00D         	movff	pad@buf+1,strlen@s+1
  3414  000DC2  EC56  F008         	call	_strlen	;wreg free
  3415  000DC6  5029               	movf	pad@w,w,c
  3416  000DC8  240C               	addwf	?_strlen,w,c
  3417  000DCA  6E20               	movwf	?_pad,c
  3418  000DCC  502A               	movf	pad@w+1,w,c
  3419  000DCE  200D               	addwfc	?_strlen+1,w,c
  3420  000DD0  6E21               	movwf	?_pad+1,c
  3421  000DD2  0012               	return		;funcret
  3422  000DD4                     __end_of_pad:
  3423                           	opt callstack 0
  3424                           
  3425 ;; *************** function _strlen *****************
  3426 ;; Defined at:
  3427 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3430 ;;		 -> dbuf(32), 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  a               2   13[COMRAM] PTR const unsigned char 
  3433 ;;		 -> dbuf(32), 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2   11[COMRAM] unsigned int 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;Total ram usage:        4 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_pad
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text10
  3458  0010AC                     __ptext10:
  3459                           	opt callstack 0
  3460  0010AC                     _strlen:
  3461                           	opt callstack 24
  3462                           
  3463                           ;incstack = 0
  3464  0010AC  C00C  F00E         	movff	strlen@s,strlen@a
  3465  0010B0  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  3466  0010B4  D002               	goto	l2288
  3467  0010B6                     l2286:
  3468  0010B6  4A0C               	infsnz	strlen@s,f,c
  3469  0010B8  2A0D               	incf	strlen@s+1,f,c
  3470  0010BA                     l2288:
  3471  0010BA  C00C  FFD9         	movff	strlen@s,fsr2l
  3472  0010BE  C00D  FFDA         	movff	strlen@s+1,fsr2h
  3473  0010C2  50DF               	movf	indf2,w,c
  3474  0010C4  A4D8               	btfss	status,2,c
  3475  0010C6  D7F7               	goto	l2286
  3476  0010C8  500E               	movf	strlen@a,w,c
  3477  0010CA  5C0C               	subwf	strlen@s,w,c
  3478  0010CC  6E0C               	movwf	?_strlen,c
  3479  0010CE  500F               	movf	strlen@a+1,w,c
  3480  0010D0  580D               	subwfb	strlen@s+1,w,c
  3481  0010D2  6E0D               	movwf	?_strlen+1,c
  3482  0010D4  0012               	return		;funcret
  3483  0010D6                     __end_of_strlen:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _fputs *****************
  3487 ;; Defined at:
  3488 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  s               2   24[COMRAM] PTR const unsigned char 
  3491 ;;		 -> dbuf(32), 
  3492 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  3493 ;;		 -> NULL(0), 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  i               2   29[COMRAM] int 
  3496 ;;  c               1   28[COMRAM] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2   24[COMRAM] int 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;Total ram usage:        7 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    6
  3513 ;; This function calls:
  3514 ;;		_fputc
  3515 ;; This function is called by:
  3516 ;;		_pad
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text11
  3521  001042                     __ptext11:
  3522                           	opt callstack 0
  3523  001042                     _fputs:
  3524                           	opt callstack 19
  3525                           
  3526                           ;incstack = 0
  3527  001042  0E00               	movlw	0
  3528  001044  6E1F               	movwf	fputs@i+1,c
  3529  001046  0E00               	movlw	0
  3530  001048  6E1E               	movwf	fputs@i,c
  3531  00104A  D00B               	goto	l2282
  3532  00104C                     l2278:
  3533  00104C  C01D  F010         	movff	fputs@c,fputc@c
  3534  001050  6A11               	clrf	fputc@c+1,c
  3535  001052  C01B  F012         	movff	fputs@fp,fputc@fp
  3536  001056  C01C  F013         	movff	fputs@fp+1,fputc@fp+1
  3537  00105A  EC22  F007         	call	_fputc	;wreg free
  3538  00105E  4A1E               	infsnz	fputs@i,f,c
  3539  001060  2A1F               	incf	fputs@i+1,f,c
  3540  001062                     l2282:
  3541  001062  501E               	movf	fputs@i,w,c
  3542  001064  2419               	addwf	fputs@s,w,c
  3543  001066  6ED9               	movwf	fsr2l,c
  3544  001068  501F               	movf	fputs@i+1,w,c
  3545  00106A  201A               	addwfc	fputs@s+1,w,c
  3546  00106C  6EDA               	movwf	fsr2h,c
  3547  00106E  50DF               	movf	indf2,w,c
  3548  001070  6E1D               	movwf	fputs@c,c
  3549  001072  501D               	movf	fputs@c,w,c
  3550  001074  B4D8               	btfsc	status,2,c
  3551  001076  0012               	return	
  3552  001078  D7E9               	goto	l2278
  3553  00107A                     __end_of_fputs:
  3554                           	opt callstack 0
  3555                           
  3556 ;; *************** function _fputc *****************
  3557 ;; Defined at:
  3558 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  c               2   15[COMRAM] int 
  3561 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3562 ;;		 -> NULL(0), 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  2   15[COMRAM] int 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;Total ram usage:        9 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    5
  3581 ;; This function calls:
  3582 ;;		_putch
  3583 ;; This function is called by:
  3584 ;;		_pad
  3585 ;;		_vfpfcnvrt
  3586 ;;		_fputs
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text12
  3591  000E44                     __ptext12:
  3592                           	opt callstack 0
  3593  000E44                     _fputc:
  3594                           	opt callstack 22
  3595                           
  3596                           ;incstack = 0
  3597  000E44  5012               	movf	fputc@fp,w,c
  3598  000E46  1013               	iorwf	fputc@fp+1,w,c
  3599  000E48  B4D8               	btfsc	status,2,c
  3600  000E4A  D004               	goto	u1650
  3601  000E4C  5012               	movf	fputc@fp,w,c
  3602  000E4E  1013               	iorwf	fputc@fp+1,w,c
  3603  000E50  A4D8               	btfss	status,2,c
  3604  000E52  D004               	goto	l2268
  3605  000E54                     u1650:
  3606  000E54  5010               	movf	fputc@c,w,c
  3607  000E56  ECA8  F008         	call	_putch
  3608  000E5A  0012               	return	
  3609  000E5C                     l2268:
  3610  000E5C  EE20 F004          	lfsr	2,4
  3611  000E60  5012               	movf	fputc@fp,w,c
  3612  000E62  26D9               	addwf	fsr2l,f,c
  3613  000E64  5013               	movf	fputc@fp+1,w,c
  3614  000E66  22DA               	addwfc	fsr2h,f,c
  3615  000E68  50DE               	movf	postinc2,w,c
  3616  000E6A  10DE               	iorwf	postinc2,w,c
  3617  000E6C  B4D8               	btfsc	status,2,c
  3618  000E6E  D016               	goto	u1670
  3619  000E70  EE20 F004          	lfsr	2,4
  3620  000E74  5012               	movf	fputc@fp,w,c
  3621  000E76  26D9               	addwf	fsr2l,f,c
  3622  000E78  5013               	movf	fputc@fp+1,w,c
  3623  000E7A  22DA               	addwfc	fsr2h,f,c
  3624  000E7C  EE10 F002          	lfsr	1,2
  3625  000E80  5012               	movf	fputc@fp,w,c
  3626  000E82  26E1               	addwf	fsr1l,f,c
  3627  000E84  5013               	movf	fputc@fp+1,w,c
  3628  000E86  22E2               	addwfc	fsr1h,f,c
  3629  000E88  50DE               	movf	postinc2,w,c
  3630  000E8A  5CE6               	subwf	postinc1,w,c
  3631  000E8C  50E6               	movf	postinc1,w,c
  3632  000E8E  0A80               	xorlw	128
  3633  000E90  6E18               	movwf	(??_fputc+4)& (0+255),c
  3634  000E92  50DE               	movf	postinc2,w,c
  3635  000E94  0A80               	xorlw	128
  3636  000E96  5818               	subwfb	(??_fputc+4)& (0+255),w,c
  3637  000E98  B0D8               	btfsc	status,0,c
  3638  000E9A  0012               	return	
  3639  000E9C                     u1670:
  3640  000E9C  EE20 F002          	lfsr	2,2
  3641  000EA0  5012               	movf	fputc@fp,w,c
  3642  000EA2  26D9               	addwf	fsr2l,f,c
  3643  000EA4  5013               	movf	fputc@fp+1,w,c
  3644  000EA6  22DA               	addwfc	fsr2h,f,c
  3645  000EA8  2ADE               	incf	postinc2,f,c
  3646  000EAA  0E00               	movlw	0
  3647  000EAC  22DD               	addwfc	postdec2,f,c
  3648  000EAE  0012               	return		;funcret
  3649  000EB0                     __end_of_fputc:
  3650                           	opt callstack 0
  3651                           
  3652 ;; *************** function _putch *****************
  3653 ;; Defined at:
  3654 ;;		line 102 in file "lcd.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  data            1    wreg     unsigned char 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  data            1   14[COMRAM] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0, cstack
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;Total ram usage:        1 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; Hardware stack levels required when called:    4
  3675 ;; This function calls:
  3676 ;;		_send_byte
  3677 ;; This function is called by:
  3678 ;;		_fputc
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text13
  3683  001150                     __ptext13:
  3684                           	opt callstack 0
  3685  001150                     _putch:
  3686                           	opt callstack 22
  3687                           
  3688                           ;incstack = 0
  3689                           ;putch@data stored from wreg
  3690  001150  6E0F               	movwf	putch@data,c
  3691                           
  3692                           ;lcd.c: 103:     LATDbits.LATD2 = 1;
  3693  001152  848C               	bsf	3980,2,c	;volatile
  3694                           
  3695                           ;lcd.c: 104:     send_byte((unsigned char)data);
  3696  001154  500F               	movf	putch@data,w,c
  3697  001156  EC9F  F008         	call	_send_byte
  3698  00115A  0012               	return		;funcret
  3699  00115C                     __end_of_putch:
  3700                           	opt callstack 0
  3701                           
  3702 ;; *************** function _initLCD *****************
  3703 ;; Defined at:
  3704 ;;		line 69 in file "lcd.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;Total ram usage:        1 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    5
  3725 ;; This function calls:
  3726 ;;		_lcdInst
  3727 ;;		_send_byte
  3728 ;;		_send_nibble
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text14
  3735  000EB0                     __ptext14:
  3736                           	opt callstack 0
  3737  000EB0                     _initLCD:
  3738                           	opt callstack 25
  3739                           
  3740                           ;lcd.c: 70:     _delay((unsigned long)((15)*(10000000/4000.0)));
  3741                           
  3742                           ;incstack = 0
  3743  000EB0  0E31               	movlw	49
  3744  000EB2  6E10               	movwf	??_initLCD& (0+255),c
  3745  000EB4  0EB2               	movlw	178
  3746  000EB6                     u2507:
  3747  000EB6  2EE8               	decfsz	wreg,f,c
  3748  000EB8  D7FE               	bra	u2507
  3749  000EBA  2E10               	decfsz	??_initLCD& (0+255),f,c
  3750  000EBC  D7FC               	bra	u2507
  3751  000EBE  D000               	nop2	
  3752                           
  3753                           ;lcd.c: 72:     LATDbits.LATD2 = 0;
  3754  000EC0  948C               	bcf	3980,2,c	;volatile
  3755                           
  3756                           ;lcd.c: 74:     send_nibble(0b0011);
  3757  000EC2  0E03               	movlw	3
  3758  000EC4  EC94  F008         	call	_send_nibble
  3759                           
  3760                           ;lcd.c: 75:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3761  000EC8  0E11               	movlw	17
  3762  000ECA  6E10               	movwf	??_initLCD& (0+255),c
  3763  000ECC  0E3A               	movlw	58
  3764  000ECE                     u2517:
  3765  000ECE  2EE8               	decfsz	wreg,f,c
  3766  000ED0  D7FE               	bra	u2517
  3767  000ED2  2E10               	decfsz	??_initLCD& (0+255),f,c
  3768  000ED4  D7FC               	bra	u2517
  3769  000ED6  D000               	nop2	
  3770                           
  3771                           ;lcd.c: 76:     send_nibble(0b0011);
  3772  000ED8  0E03               	movlw	3
  3773  000EDA  EC94  F008         	call	_send_nibble
  3774                           
  3775                           ;lcd.c: 77:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  3776  000EDE  0E7D               	movlw	125
  3777  000EE0                     u2527:
  3778  000EE0  2EE8               	decfsz	wreg,f,c
  3779  000EE2  D7FE               	bra	u2527
  3780                           
  3781                           ;lcd.c: 78:     send_byte(0b00110010);
  3782  000EE4  0E32               	movlw	50
  3783  000EE6  EC9F  F008         	call	_send_byte
  3784                           
  3785                           ;lcd.c: 80:     send_byte(0b00101000);
  3786  000EEA  0E28               	movlw	40
  3787  000EEC  EC9F  F008         	call	_send_byte
  3788                           
  3789                           ;lcd.c: 81:     send_byte(0b00001000);
  3790  000EF0  0E08               	movlw	8
  3791  000EF2  EC9F  F008         	call	_send_byte
  3792                           
  3793                           ;lcd.c: 82:     send_byte(0b00000001);
  3794  000EF6  0E01               	movlw	1
  3795  000EF8  EC9F  F008         	call	_send_byte
  3796                           
  3797                           ;lcd.c: 83:     _delay((unsigned long)((5)*(10000000/4000.0)));
  3798  000EFC  0E11               	movlw	17
  3799  000EFE  6E10               	movwf	??_initLCD& (0+255),c
  3800  000F00  0E3A               	movlw	58
  3801  000F02                     u2537:
  3802  000F02  2EE8               	decfsz	wreg,f,c
  3803  000F04  D7FE               	bra	u2537
  3804  000F06  2E10               	decfsz	??_initLCD& (0+255),f,c
  3805  000F08  D7FC               	bra	u2537
  3806  000F0A  D000               	nop2	
  3807                           
  3808                           ;lcd.c: 84:     send_byte(0b00000110);
  3809  000F0C  0E06               	movlw	6
  3810  000F0E  EC9F  F008         	call	_send_byte
  3811                           
  3812                           ;lcd.c: 87:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  3813  000F12  0E0F               	movlw	15
  3814  000F14  ECAE  F008         	call	_lcdInst
  3815  000F18  0012               	return		;funcret
  3816  000F1A                     __end_of_initLCD:
  3817                           	opt callstack 0
  3818                           
  3819 ;; *************** function _lcdInst *****************
  3820 ;; Defined at:
  3821 ;;		line 64 in file "lcd.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  data            1    wreg     unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  data            1   14[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;Total ram usage:        1 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    4
  3842 ;; This function calls:
  3843 ;;		_send_byte
  3844 ;; This function is called by:
  3845 ;;		_initLCD
  3846 ;;		_main
  3847 ;;		_lcd_shift_cursor
  3848 ;;		_lcd_shift_display
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text15
  3853  00115C                     __ptext15:
  3854                           	opt callstack 0
  3855  00115C                     _lcdInst:
  3856                           	opt callstack 26
  3857                           
  3858                           ;incstack = 0
  3859                           ;lcdInst@data stored from wreg
  3860  00115C  6E0F               	movwf	lcdInst@data,c
  3861                           
  3862                           ;lcd.c: 65:     LATDbits.LATD2 = 0;
  3863  00115E  948C               	bcf	3980,2,c	;volatile
  3864                           
  3865                           ;lcd.c: 66:     send_byte(data);
  3866  001160  500F               	movf	lcdInst@data,w,c
  3867  001162  EC9F  F008         	call	_send_byte
  3868  001166  0012               	return		;funcret
  3869  001168                     __end_of_lcdInst:
  3870                           	opt callstack 0
  3871                           
  3872 ;; *************** function _send_byte *****************
  3873 ;; Defined at:
  3874 ;;		line 55 in file "lcd.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  data            1    wreg     unsigned char 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  data            1   13[COMRAM] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;Total ram usage:        1 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    3
  3895 ;; This function calls:
  3896 ;;		_send_nibble
  3897 ;; This function is called by:
  3898 ;;		_lcdInst
  3899 ;;		_initLCD
  3900 ;;		_putch
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text16
  3905  00113E                     __ptext16:
  3906                           	opt callstack 0
  3907  00113E                     _send_byte:
  3908                           	opt callstack 22
  3909                           
  3910                           ;incstack = 0
  3911                           ;send_byte@data stored from wreg
  3912  00113E  6E0E               	movwf	send_byte@data,c
  3913                           
  3914                           ;lcd.c: 57:     send_nibble(data >> 4);
  3915  001140  380E               	swapf	send_byte@data,w,c
  3916  001142  0B0F               	andlw	15
  3917  001144  EC94  F008         	call	_send_nibble
  3918                           
  3919                           ;lcd.c: 60:     send_nibble(data);
  3920  001148  500E               	movf	send_byte@data,w,c
  3921  00114A  EC94  F008         	call	_send_nibble
  3922  00114E  0012               	return		;funcret
  3923  001150                     __end_of_send_byte:
  3924                           	opt callstack 0
  3925                           
  3926 ;; *************** function _send_nibble *****************
  3927 ;; Defined at:
  3928 ;;		line 44 in file "lcd.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  data            1    wreg     unsigned char 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  data            1   12[COMRAM] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:        1 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    2
  3949 ;; This function calls:
  3950 ;;		_pulse_e
  3951 ;; This function is called by:
  3952 ;;		_send_byte
  3953 ;;		_initLCD
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text17
  3958  001128                     __ptext17:
  3959                           	opt callstack 0
  3960  001128                     _send_nibble:
  3961                           	opt callstack 22
  3962                           
  3963                           ;incstack = 0
  3964                           ;send_nibble@data stored from wreg
  3965  001128  6E0D               	movwf	send_nibble@data,c
  3966                           
  3967                           ;lcd.c: 46:     LATD = (unsigned char)(LATD & 0x0F);
  3968  00112A  508C               	movf	3980,w,c	;volatile
  3969  00112C  0B0F               	andlw	15
  3970  00112E  6E8C               	movwf	3980,c	;volatile
  3971                           
  3972                           ;lcd.c: 47:     LATD = (unsigned char)((data << 4) | LATD);
  3973  001130  380D               	swapf	send_nibble@data,w,c
  3974  001132  0BF0               	andlw	240
  3975  001134  108C               	iorwf	3980,w,c	;volatile
  3976  001136  6E8C               	movwf	3980,c	;volatile
  3977                           
  3978                           ;lcd.c: 48:     pulse_e();
  3979  001138  EC6B  F008         	call	_pulse_e	;wreg free
  3980  00113C  0012               	return		;funcret
  3981  00113E                     __end_of_send_nibble:
  3982                           	opt callstack 0
  3983                           
  3984 ;; *************** function _pulse_e *****************
  3985 ;; Defined at:
  3986 ;;		line 28 in file "lcd.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  interruptSta    1   11[COMRAM] unsigned char 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;Total ram usage:        1 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_send_nibble
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text18
  4015  0010D6                     __ptext18:
  4016                           	opt callstack 0
  4017  0010D6                     _pulse_e:
  4018                           	opt callstack 22
  4019                           
  4020                           ;lcd.c: 29:     unsigned char interruptState = INTCONbits.GIE;
  4021                           
  4022                           ;incstack = 0
  4023  0010D6  0E00               	movlw	0
  4024  0010D8  BEF2               	btfsc	4082,7,c	;volatile
  4025  0010DA  0E01               	movlw	1
  4026  0010DC  6E0C               	movwf	pulse_e@interruptState,c
  4027                           
  4028                           ;lcd.c: 30:     (INTCONbits.GIE = 0);
  4029  0010DE  9EF2               	bcf	4082,7,c	;volatile
  4030                           
  4031                           ;lcd.c: 31:     LATDbits.LATD3 = 1;
  4032  0010E0  868C               	bsf	3980,3,c	;volatile
  4033                           
  4034                           ;lcd.c: 34:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  4035  0010E2  0E14               	movlw	20
  4036  0010E4                     u2547:
  4037  0010E4  2EE8               	decfsz	wreg,f,c
  4038  0010E6  D7FE               	bra	u2547
  4039  0010E8  D000               	nop2	
  4040                           
  4041                           ;lcd.c: 35:     LATDbits.LATD3 = 0;
  4042  0010EA  968C               	bcf	3980,3,c	;volatile
  4043                           
  4044                           ;lcd.c: 36:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  4045  0010EC  0E53               	movlw	83
  4046  0010EE                     u2557:
  4047  0010EE  2EE8               	decfsz	wreg,f,c
  4048  0010F0  D7FE               	bra	u2557
  4049  0010F2  F000               	nop	
  4050                           
  4051                           ;lcd.c: 37:     INTCONbits.GIE = interruptState;
  4052  0010F4  B00C               	btfsc	pulse_e@interruptState,0,c
  4053  0010F6  D002               	bra	u1635
  4054  0010F8  9EF2               	bcf	4082,7,c	;volatile
  4055  0010FA  D001               	bra	u1636
  4056  0010FC                     u1635:
  4057  0010FC  8EF2               	bsf	4082,7,c	;volatile
  4058  0010FE                     u1636:
  4059  0010FE  0012               	return		;funcret
  4060  001100                     __end_of_pulse_e:
  4061                           	opt callstack 0
  4062                           
  4063 ;; *************** function ___awmod *****************
  4064 ;; Defined at:
  4065 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  dividend        2   11[COMRAM] int 
  4068 ;;  divisor         2   13[COMRAM] int 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  sign            1   16[COMRAM] unsigned char 
  4071 ;;  counter         1   15[COMRAM] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  2   11[COMRAM] int 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;Total ram usage:        6 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    1
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text19
  4096  000DD4                     __ptext19:
  4097                           	opt callstack 0
  4098  000DD4                     ___awmod:
  4099                           	opt callstack 29
  4100                           
  4101                           ;incstack = 0
  4102  000DD4  0E00               	movlw	0
  4103  000DD6  6E11               	movwf	___awmod@sign,c
  4104  000DD8  AE0D               	btfss	___awmod@dividend+1,7,c
  4105  000DDA  D006               	goto	l1918
  4106  000DDC  6C0C               	negf	___awmod@dividend,c
  4107  000DDE  1E0D               	comf	___awmod@dividend+1,f,c
  4108  000DE0  B0D8               	btfsc	status,0,c
  4109  000DE2  2A0D               	incf	___awmod@dividend+1,f,c
  4110  000DE4  0E01               	movlw	1
  4111  000DE6  6E11               	movwf	___awmod@sign,c
  4112  000DE8                     l1918:
  4113  000DE8  AE0F               	btfss	___awmod@divisor+1,7,c
  4114  000DEA  D004               	goto	l1922
  4115  000DEC  6C0E               	negf	___awmod@divisor,c
  4116  000DEE  1E0F               	comf	___awmod@divisor+1,f,c
  4117  000DF0  B0D8               	btfsc	status,0,c
  4118  000DF2  2A0F               	incf	___awmod@divisor+1,f,c
  4119  000DF4                     l1922:
  4120  000DF4  500E               	movf	___awmod@divisor,w,c
  4121  000DF6  100F               	iorwf	___awmod@divisor+1,w,c
  4122  000DF8  B4D8               	btfsc	status,2,c
  4123  000DFA  D018               	goto	l1938
  4124  000DFC  0E01               	movlw	1
  4125  000DFE  6E10               	movwf	___awmod@counter,c
  4126  000E00  D004               	goto	l1928
  4127  000E02                     l1926:
  4128  000E02  90D8               	bcf	status,0,c
  4129  000E04  360E               	rlcf	___awmod@divisor,f,c
  4130  000E06  360F               	rlcf	___awmod@divisor+1,f,c
  4131  000E08  2A10               	incf	___awmod@counter,f,c
  4132  000E0A                     l1928:
  4133  000E0A  AE0F               	btfss	___awmod@divisor+1,7,c
  4134  000E0C  D7FA               	goto	l1926
  4135  000E0E                     u1320:
  4136  000E0E  500E               	movf	___awmod@divisor,w,c
  4137  000E10  5C0C               	subwf	___awmod@dividend,w,c
  4138  000E12  500F               	movf	___awmod@divisor+1,w,c
  4139  000E14  580D               	subwfb	___awmod@dividend+1,w,c
  4140  000E16  A0D8               	btfss	status,0,c
  4141  000E18  D004               	goto	l1934
  4142  000E1A  500E               	movf	___awmod@divisor,w,c
  4143  000E1C  5E0C               	subwf	___awmod@dividend,f,c
  4144  000E1E  500F               	movf	___awmod@divisor+1,w,c
  4145  000E20  5A0D               	subwfb	___awmod@dividend+1,f,c
  4146  000E22                     l1934:
  4147  000E22  90D8               	bcf	status,0,c
  4148  000E24  320F               	rrcf	___awmod@divisor+1,f,c
  4149  000E26  320E               	rrcf	___awmod@divisor,f,c
  4150  000E28  2E10               	decfsz	___awmod@counter,f,c
  4151  000E2A  D7F1               	goto	u1320
  4152  000E2C                     l1938:
  4153  000E2C  5011               	movf	___awmod@sign,w,c
  4154  000E2E  B4D8               	btfsc	status,2,c
  4155  000E30  D004               	goto	l1942
  4156  000E32  6C0C               	negf	___awmod@dividend,c
  4157  000E34  1E0D               	comf	___awmod@dividend+1,f,c
  4158  000E36  B0D8               	btfsc	status,0,c
  4159  000E38  2A0D               	incf	___awmod@dividend+1,f,c
  4160  000E3A                     l1942:
  4161  000E3A  C00C  F00C         	movff	___awmod@dividend,?___awmod
  4162  000E3E  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  4163  000E42  0012               	return		;funcret
  4164  000E44                     __end_of___awmod:
  4165                           	opt callstack 0
  4166                           
  4167 ;; *************** function _interruptHandler *****************
  4168 ;; Defined at:
  4169 ;;		line 227 in file "main.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  i               2    8[COMRAM] int 
  4174 ;;  keypress        1   10[COMRAM] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;Total ram usage:       11 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		Interrupt level 2
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	intcode
  4198  000008                     __pintcode:
  4199                           	opt callstack 0
  4200  000008                     _interruptHandler:
  4201                           	opt callstack 19
  4202                           
  4203                           ;incstack = 0
  4204  000008  8274               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4205  00000A  ED3A  F006         	call	int_func,f	;refresh shadow registers
  4206                           
  4207                           	psect	intcode_body
  4208  000C74                     __pintcode_body:
  4209                           	opt callstack 19
  4210  000C74                     int_func:
  4211                           	opt callstack 19
  4212  000C74  0006               	pop		; remove dummy address from shadow register refresh
  4213  000C76  CFF6 F005          	movff	tblptrl,??_interruptHandler+4
  4214  000C7A  CFF7 F006          	movff	tblptrh,??_interruptHandler+5
  4215  000C7E  CFF8 F007          	movff	tblptru,??_interruptHandler+6
  4216  000C82  CFF5 F008          	movff	tablat,??_interruptHandler+7
  4217                           
  4218                           ;main.c: 229:     if(INT1IF){
  4219  000C86  A0F0               	btfss	4080,0,c	;volatile
  4220  000C88  D050               	goto	i2u162_40
  4221                           
  4222                           ;main.c: 233:         INT1IF = 0;
  4223  000C8A  90F0               	bcf	4080,0,c	;volatile
  4224                           
  4225                           ;main.c: 235:         unsigned char keypress = (PORTB & 0xF0) >> 4;
  4226  000C8C  3881               	swapf	3969,w,c	;volatile
  4227  000C8E  0B0F               	andlw	15
  4228  000C90  0B0F               	andlw	15
  4229  000C92  6E0B               	movwf	interruptHandler@keypress,c
  4230                           
  4231                           ;main.c: 237:         if (keys[keypress] == 'A') {
  4232  000C94  0EC3               	movlw	low _keys
  4233  000C96  240B               	addwf	interruptHandler@keypress,w,c
  4234  000C98  6EF6               	movwf	tblptrl,c
  4235  000C9A  6AF7               	clrf	tblptrh,c
  4236  000C9C  0EFE               	movlw	high _keys
  4237  000C9E  22F7               	addwfc	tblptrh,f,c
  4238  000CA0                     	if	0	;There are less than 3 active tblptr bytes
  4239  000CA0                     	endif
  4240  000CA0  0008               	tblrd		*
  4241  000CA2  50F5               	movf	tablat,w,c
  4242  000CA4  0A41               	xorlw	65
  4243  000CA6  A4D8               	btfss	status,2,c
  4244  000CA8  D004               	goto	i2l2224
  4245                           
  4246                           ;main.c: 239:             start = 1;
  4247  000CAA  0E01               	movlw	1
  4248  000CAC  0100               	movlb	0	; () banked
  4249  000CAE  6FC2               	movwf	_start& (0+255),b	;volatile
  4250  000CB0  D03C               	goto	i2u162_40
  4251  000CB2                     i2l2224:
  4252                           
  4253                           ;main.c: 243:         if (keys[keypress] == '*') {
  4254  000CB2  0EC3               	movlw	low _keys
  4255  000CB4  240B               	addwf	interruptHandler@keypress,w,c
  4256  000CB6  6EF6               	movwf	tblptrl,c
  4257  000CB8  6AF7               	clrf	tblptrh,c
  4258  000CBA  0EFE               	movlw	high _keys
  4259  000CBC  22F7               	addwfc	tblptrh,f,c
  4260  000CBE                     	if	0	;There are less than 3 active tblptr bytes
  4261  000CBE                     	endif
  4262  000CBE  0008               	tblrd		*
  4263  000CC0  50F5               	movf	tablat,w,c
  4264  000CC2  0A2A               	xorlw	42
  4265  000CC4  A4D8               	btfss	status,2,c
  4266  000CC6  D004               	goto	i2l2230
  4267                           
  4268                           ;main.c: 245:             exit_key = 1;
  4269  000CC8  0E01               	movlw	1
  4270  000CCA  0100               	movlb	0	; () banked
  4271  000CCC  6FC3               	movwf	_exit_key& (0+255),b	;volatile
  4272  000CCE  D02D               	goto	i2u162_40
  4273  000CD0                     i2l2230:
  4274                           
  4275                           ;main.c: 249:         for ( int i = 0; i < Canister; i++ ) {
  4276  000CD0  0E00               	movlw	0
  4277  000CD2  6E0A               	movwf	interruptHandler@i+1,c
  4278  000CD4  0E00               	movlw	0
  4279  000CD6  6E09               	movwf	interruptHandler@i,c
  4280  000CD8  D01D               	goto	i2l2240
  4281  000CDA                     i2l2232:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;main.c: 251:             if ((char)i + '0' == keys[keypress]) {
  4285  000CDA  0EC3               	movlw	low _keys
  4286  000CDC  240B               	addwf	interruptHandler@keypress,w,c
  4287  000CDE  6EF6               	movwf	tblptrl,c
  4288  000CE0  6AF7               	clrf	tblptrh,c
  4289  000CE2  0EFE               	movlw	high _keys
  4290  000CE4  22F7               	addwfc	tblptrh,f,c
  4291  000CE6                     	if	0	;There are less than 3 active tblptr bytes
  4292  000CE6                     	endif
  4293  000CE6  0008               	tblrd		*
  4294  000CE8  50F5               	movf	tablat,w,c
  4295  000CEA  6E01               	movwf	??_interruptHandler& (0+255),c
  4296  000CEC  6A02               	clrf	(??_interruptHandler+1)& (0+255),c
  4297  000CEE  5009               	movf	interruptHandler@i,w,c
  4298  000CF0  6E03               	movwf	(??_interruptHandler+2)& (0+255),c
  4299  000CF2  6A04               	clrf	(??_interruptHandler+3)& (0+255),c
  4300  000CF4  0E30               	movlw	48
  4301  000CF6  2603               	addwf	??_interruptHandler+2,f,c
  4302  000CF8  0E00               	movlw	0
  4303  000CFA  2204               	addwfc	??_interruptHandler+3,f,c
  4304  000CFC  5001               	movf	??_interruptHandler,w,c
  4305  000CFE  1803               	xorwf	??_interruptHandler+2,w,c
  4306  000D00  E107               	bnz	i2l2238
  4307  000D02  5002               	movf	??_interruptHandler+1,w,c
  4308  000D04  1804               	xorwf	??_interruptHandler+3,w,c
  4309  000D06  A4D8               	btfss	status,2,c
  4310  000D08  D003               	goto	i2l2238
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;main.c: 252:                 key_was_pressed = 1;
  4314  000D0A  0E01               	movlw	1
  4315  000D0C  6FC4               	movwf	_key_was_pressed& (0+255),b	;volatile
  4316  000D0E  D00D               	goto	i2u162_40
  4317  000D10                     i2l2238:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;main.c: 256:         }
  4321  000D10  4A09               	infsnz	interruptHandler@i,f,c
  4322  000D12  2A0A               	incf	interruptHandler@i+1,f,c
  4323  000D14                     i2l2240:
  4324  000D14  0100               	movlb	0	; () banked
  4325  000D16  51BE               	movf	_Canister& (0+255),w,b
  4326  000D18  5C09               	subwf	interruptHandler@i,w,c
  4327  000D1A  500A               	movf	interruptHandler@i+1,w,c
  4328  000D1C  0A80               	xorlw	128
  4329  000D1E  6E01               	movwf	??_interruptHandler& (0+255),c
  4330  000D20  51BF               	movf	(_Canister+1)& (0+255),w,b
  4331  000D22  0A80               	xorlw	128
  4332  000D24  5801               	subwfb	??_interruptHandler& (0+255),w,c
  4333  000D26  A0D8               	btfss	status,0,c
  4334  000D28  D7D8               	goto	i2l2232
  4335  000D2A                     i2u162_40:
  4336  000D2A  C008  FFF5         	movff	??_interruptHandler+7,tablat
  4337  000D2E  C007  FFF8         	movff	??_interruptHandler+6,tblptru
  4338  000D32  C006  FFF7         	movff	??_interruptHandler+5,tblptrh
  4339  000D36  C005  FFF6         	movff	??_interruptHandler+4,tblptrl
  4340  000D3A  9274               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4341  000D3C  0011               	retfie		f
  4342  000D3E                     __end_of_interruptHandler:
  4343                           	opt callstack 0
  4344                           
  4345                           	psect	rparam
  4346  0000                     
  4347                           	psect	temp
  4348  000074                     btemp:
  4349                           	opt callstack 0
  4350  000074                     	ds	1
  4351  0000                     int$flags	set	btemp
  4352  0000                     wtemp8	set	btemp+1
  4353  0000                     ttemp5	set	btemp+1
  4354  0000                     ttemp6	set	btemp+4
  4355  0000                     ttemp7	set	btemp+8
  4356                           tosu	equ	0xFFF
  4357                           tosh	equ	0xFFE
  4358                           tosl	equ	0xFFD
  4359                           stkptr	equ	0xFFC
  4360                           pclatu	equ	0xFFB
  4361                           pclath	equ	0xFFA
  4362                           pcl	equ	0xFF9
  4363                           tblptru	equ	0xFF8
  4364                           tblptrh	equ	0xFF7
  4365                           tblptrl	equ	0xFF6
  4366                           tablat	equ	0xFF5
  4367                           prodh	equ	0xFF4
  4368                           prodl	equ	0xFF3
  4369                           indf0	equ	0xFEF
  4370                           postinc0	equ	0xFEE
  4371                           postdec0	equ	0xFED
  4372                           preinc0	equ	0xFEC
  4373                           plusw0	equ	0xFEB
  4374                           fsr0h	equ	0xFEA
  4375                           fsr0l	equ	0xFE9
  4376                           wreg	equ	0xFE8
  4377                           indf1	equ	0xFE7
  4378                           postinc1	equ	0xFE6
  4379                           postdec1	equ	0xFE5
  4380                           preinc1	equ	0xFE4
  4381                           plusw1	equ	0xFE3
  4382                           fsr1h	equ	0xFE2
  4383                           fsr1l	equ	0xFE1
  4384                           bsr	equ	0xFE0
  4385                           indf2	equ	0xFDF
  4386                           postinc2	equ	0xFDE
  4387                           postdec2	equ	0xFDD
  4388                           preinc2	equ	0xFDC
  4389                           plusw2	equ	0xFDB
  4390                           fsr2h	equ	0xFDA
  4391                           fsr2l	equ	0xFD9
  4392                           status	equ	0xFD8


Data Sizes:
    Strings     293
    Constant    23
    Data        66
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    107     115
    BANK0           128     21     122
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_28(CODE[10]), STR_27(CODE[14]), STR_26(CODE[11]), STR_25(CODE[12]), 
		 -> STR_24(CODE[10]), STR_23(CODE[15]), STR_22(CODE[14]), STR_21(CODE[12]), 
		 -> STR_20(CODE[10]), STR_19(CODE[15]), STR_18(CODE[12]), STR_17(CODE[15]), 
		 -> STR_16(CODE[12]), STR_15(CODE[16]), STR_14(CODE[9]), STR_13(CODE[9]), 
		 -> STR_12(CODE[11]), STR_11(CODE[13]), STR_10(CODE[15]), STR_9(CODE[11]), 
		 -> STR_8(CODE[15]), STR_7(CODE[9]), STR_6(CODE[12]), STR_5(CODE[10]), 
		 -> STR_4(CODE[15]), STR_3(CODE[17]), STR_2(CODE[13]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S788_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_28(CODE[10]), STR_27(CODE[14]), STR_26(CODE[11]), STR_25(CODE[12]), 
		 -> STR_24(CODE[10]), STR_23(CODE[15]), STR_22(CODE[14]), STR_21(CODE[12]), 
		 -> STR_20(CODE[10]), STR_19(CODE[15]), STR_18(CODE[12]), STR_17(CODE[15]), 
		 -> STR_16(CODE[12]), STR_15(CODE[16]), STR_14(CODE[9]), STR_13(CODE[9]), 
		 -> STR_12(CODE[11]), STR_11(CODE[13]), STR_10(CODE[15]), STR_9(CODE[11]), 
		 -> STR_8(CODE[15]), STR_7(CODE[9]), STR_6(CODE[12]), STR_5(CODE[10]), 
		 -> STR_4(CODE[15]), STR_3(CODE[17]), STR_2(CODE[13]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_28(CODE[10]), STR_27(CODE[14]), STR_26(CODE[11]), STR_25(CODE[12]), 
		 -> STR_24(CODE[10]), STR_23(CODE[15]), STR_22(CODE[14]), STR_21(CODE[12]), 
		 -> STR_20(CODE[10]), STR_19(CODE[15]), STR_18(CODE[12]), STR_17(CODE[15]), 
		 -> STR_16(CODE[12]), STR_15(CODE[16]), STR_14(CODE[9]), STR_13(CODE[9]), 
		 -> STR_12(CODE[11]), STR_11(CODE[13]), STR_10(CODE[15]), STR_9(CODE[11]), 
		 -> STR_8(CODE[15]), STR_7(CODE[9]), STR_6(CODE[12]), STR_5(CODE[10]), 
		 -> STR_4(CODE[15]), STR_3(CODE[17]), STR_2(CODE[13]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _initLCD->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e

Critical Paths under _interruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   17072
                                              4 BANK0     17    17      0
                            ___awmod
                            _initLCD
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   15266
                                            103 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12659
                                             95 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6   12177
                                             78 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6083
                                             42 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             29 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             11 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             11 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4096
                                             42 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3817
                                             31 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1602
                                             24 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1102
                                             15 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     158
                                             14 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                             15 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     158
                                             14 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (6) _send_byte                                            1     1      0     127
                                             13 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (7) _send_nibble                                          1     1      0      65
                                             12 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (8) _pulse_e                                              1     1      0      34
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _interruptHandler                                   11    11      0     113
                                              0 COMRAM    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     15      7A       5       95.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6B      73       1       91.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      ED      34        0.0%
DATA                 0      0      ED       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Feb  2 21:22:54 2019

              __CFG_CPD$ON 000000                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000                        l165 0D6C                        l183 0652  
                      l185 065A                        l896 10A2               __CFG_CPB$OFF 000000  
                      _abs 107A                        _pad 0D3E               ___awmod@sign 0011  
                      wreg 000FE8               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     ?_abs 001E                       l2302 0D64                       l2312 0DBA  
                     l2304 0D76                       l2308 0D8E                       l2404 0F7E  
                     l2340 0A82                       l2420 0636                       l2406 0F8A  
                     l2342 0A96                       l2334 0A5C                       l2502 0976  
                     l2360 0B2E                       l2352 0AF2                       l2328 0A34  
                     l2512 09BC                       l2282 1062                       l2434 0674  
                     l2610 007C                       l2268 0E5C                       l2356 0B08  
                     l2380 0BBA                       l2372 0B7C                       l2508 09B2  
                     l2278 104C                       l2286 10B6                       l2382 0BCE  
                     l2438 0684                       l2518 09D4                       l2534 0F2C  
                     l2288 10BA                       l2392 0C2C                       l2376 0BA0  
                     l2472 07F8                       l2448 077C                       l2536 0F50  
                     l1922 0DF4                       l2298 0D56                       l2730 0360  
                     l2396 0C52                       l2388 0C16                       l2468 07E0  
                     l2492 08C4                       l2812 0590                       l2660 01DE  
                     l1942 0E3A                       l1934 0E22                       l1926 0E02  
                     l1918 0DE8                       l2750 03F4                       l2718 031A  
                     l1928 0E0A                       l2808 057A                       l2816 05A0  
                     l1938 0E2C                       l2826 05CA                       l2790 0512  
                     l2766 046E                       l2774 0496                       l2678 023C  
                     ?_pad 0020                       l2792 051E                       l2768 047A  
                     l2698 02A8                       l2798 053A                       STR_1 FFC5  
                     STR_2 FF71                       STR_3 FEDA                       STR_4 FF0A  
                     STR_5 FFD0                       STR_6 FF97                       STR_7 FFE4  
                     STR_8 FF19                       STR_9 FFAF                       u2000 07BE  
                     u2020 07CA                       u1320 0E0E                       u2070 08F8  
                     _LATD 000F8C                       u2407 0176                       u2417 01A4  
                     u2337 0054                       u1650 0E54                       u1635 10FC  
                     u2507 0EB6                       u2427 01FC                       u2347 0092  
                     u1636 10FE                       u1740 1088                       u1900 060A  
                     u2517 0ECE                       u2437 025C                       u2357 00B4  
                     u1670 0E9C                       u2527 0EE0                       u2447 02C8  
                     u2367 00E0                       u2537 0F02                       u2457 037E  
                     u2377 00FC                       u1850 0BD2                       u1930 0648  
                     u2547 10E4                       u1771 0A62                       u2467 0412  
                     u2387 011E                       u2557 10EE                       u2477 04B6  
                     u2397 0150                       u1790 0A9A                       u1950 066E  
                     u2487 0586                       u1960 078A                       u2497 05D6  
                     u1890 0608                       u1980 07AC                       u1981 07AA  
                     u1990 07BA                       abs@a 001E                       _dbuf 00C5  
                     _ctoa 0F6C                       _main 0012                       _dtoa 05E0  
 __end_of_interruptHandler 0D3E                       _keys FEC3                       _prec 0070  
                     _time 00C0                       _nout 006C                       pad@i 0027  
                     pad@p 0024                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 0029  
                     fsr2l 000FD9                       btemp 0074                       start 000E  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000               ___param_bank 000000  
                    ??_abs 0020                      ??_pad 0026            __end_of___aodiv 0B50  
                    ?_ctoa 002B                      ?_main 0001                      ?_dtoa 002B  
          __end_of___aomod 0C74                      STR_10 FF37                      STR_11 FF7E  
                    STR_20 FFDA                      STR_12 FFBA                      STR_21 FF8B  
                    STR_13 FFED                      STR_14 FFF6                      STR_22 FF63  
                    STR_23 FF46                      STR_15 FEEB                      STR_24 FFDA  
                    STR_16 FFA3                      STR_25 FF8B                      STR_17 FEFB  
                    STR_26 FF58                      STR_18 FF8B                      STR_27 FF55  
                    STR_19 FF28                      STR_28 FFDA            __end_of___awmod 0E44  
             vfpfcnvrt@fmt 0051                      _PORTB 000F81                      _TRISD 000F95  
            __CFG_PWRT$OFF 000000               main@miniTick 00ED              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
          __end_of_lcdInst 1168             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000               main@keypress 00F3  
           __CFG_EBTR3$OFF 000000                      _State 00A8              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000                      _balls 00BC  
          __end_of_initLCD 0F1A             __CFG_EBTRB$OFF 000000                      _flags 0072  
            _BallDispensed 0080                      _fputc 0E44                      _fputs 1042  
                    pad@fp 0020                      _width 006E                      ctoa@c 002D  
                    _putch 1150                      _start 00C2                      ctoa@w 002E  
                    dtoa@d 002D                      dtoa@i 004D                      dtoa@n 0045  
                    dtoa@p 003F                      dtoa@s 0043                      dtoa@w 0041  
                    tablat 000FF5            send_nibble@data 000D            __end_of_pulse_e 1100  
                    ttemp5 0075                      ttemp6 0078                      ttemp7 007C  
                    status 000FD8                      wtemp8 0075             __CFG_PBADEN$ON 000000  
       main@number_pressed 00EF            __initialization 0FBA               __end_of_ctoa 0FBA  
             __end_of_main 05E0               __end_of_dtoa 0822               __end_of_keys FED4  
                   ??_ctoa 002E                     ??_main 00E9                     ??_dtoa 0035  
            __activetblptr 000002                     _ADCON1 000FC1               ?_send_nibble 0001  
                   ?_fputc 0010                     ?_fputs 0019                     ?_putch 0001  
                   _INT1IE 007F83                     _INT1IF 007F80                     i2l2230 0CD0  
                   i2l2232 0CDA                     i2l2240 0D14                     i2l2224 0CB2  
                   i2l2238 0D10              main@miniClear 00F1              main@miniState 00F4  
           __CFG_XINST$OFF 000000               vfprintf@cfmt 0066                  ??___aodiv 001C  
                ??___aomod 001C             __CFG_STVREN$ON 000000                  ??___awmod 0010  
                   clear_0 0FE0                     clear_1 0FEC            ___awmod@divisor 000E  
          ___awmod@counter 0010                  ??_lcdInst 000F                     _printf 1100  
                   pad@buf 0022                     ctoa@fp 002B                     dtoa@fp 002B  
                   _strlen 10AC                  ??_initLCD 0010                     fputc@c 0010  
                   fputs@c 001D                     fputs@i 001E                     fputs@s 0019  
             __mediumconst FEC2                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8           __end_of_vfprintf 0F6C                  ??_pulse_e 000C  
    pulse_e@interruptState 000C                 __accesstop 0080    __end_of__initialization 0FF2  
            ___rparam_used 000001             __pcstackCOMRAM 0001               __pidataBANK0 1000  
            __end_of_fputc 0EB0              __end_of_fputs 107A              __end_of_putch 115C  
          _key_was_pressed 00C4                    ??_fputc 0014                    ??_fputs 001D  
                  ??_putch 000F                 __pbssBANK0 00C2          ?_interruptHandler 0001  
       ??_interruptHandler 0001         __size_of_send_byte 0012                    ?_printf 0068  
                  ?_strlen 000C         __size_of_vfpfcnvrt 01E6       __size_of_send_nibble 0016  
         _DistanceCanister 0094                    __Hparam 0000                    __Lparam 0000  
                  ___aodiv 0A08                    ___aomod 0B50                    ___awmod 0DD4  
                ?_vfprintf 0060   interruptHandler@keypress 000B                    __pcinit 0FBA  
                  __ramtop 1000                    _lcdInst 115C                    __ptext0 0012  
                  __ptext1 1100                    __ptext2 0F1A                    __ptext3 0822  
                  __ptext4 05E0                    __ptext5 107A                    __ptext6 0B50  
                  __ptext7 0A08                    __ptext8 0F6C                    __ptext9 0D3E  
          __size_of_printf 0028            __size_of_strlen 002A                    _initLCD 0EB0  
             __size_of_abs 0032               __size_of_pad 0096           ___awmod@dividend 000C  
                  _pulse_e 10D6             __pintcode_body 0C74       end_of_initialization 0FF2  
    __end_of_LCD_SIZE_HORZ FEDA          __end_of_send_byte 1150      __end_of_LCD_SIZE_VERT FED9  
                  fputc@fp 0012              __Lmediumconst FEC2                    int_func 0C74  
                  fputs@fp 001B          __end_of_vfpfcnvrt 0A08                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_vfprintf 0066                    strlen@a 000E  
                  strlen@s 000C              send_byte@data 000E                vfpfcnvrt@ap 0053  
              vfpfcnvrt@fp 004F                vfpfcnvrt@ll 0057             __end_of_printf 1128  
           __end_of_strlen 10D6        start_initialization 0FBA                __end_of_abs 10AC  
              __end_of_pad 0DD4          interruptHandler@i 0009                vfprintf@fmt 0062  
              __pdataBANK0 0080           __CFG_LPT1OSC$OFF 000000                   ??_printf 006C  
__size_of_interruptHandler 0D36                   ??_strlen 000E                __pbssCOMRAM 006C  
            __pcstackBANK0 00E5           ___aodiv@dividend 000C          __CFG_CCP2MX$PORTC 000000  
                __pintcode 0008              __pmediumconst FEC2                   ?___aodiv 000C  
                 ?___aomod 000C           ___aodiv@quotient 001E                   ?___awmod 000C  
                 ?_lcdInst 0001          __size_of_vfprintf 0052                   ?_initLCD 0001  
            ??_send_nibble 000D                   ?_pulse_e 0001             __size_of_fputc 006C  
           __size_of_fputs 0038             __size_of_putch 000C                   _LATDbits 000F8C  
                _send_byte 113E             _LCD_LINE1_ADDR FED7             _LCD_LINE2_ADDR FED6  
           _LCD_LINE3_ADDR FED5             _LCD_LINE4_ADDR FED4                   i2u162_40 0D2A  
         __CFG_WDTPS$32768 000000                  _vfpfcnvrt 0822                  main@clear 00F6  
                 _Canister 00BE                  main@state 00F8                 vfpfcnvrt@c 005F  
                copy_data0 0FCE     __end_of_LCD_LINE1_ADDR FED8     __end_of_LCD_LINE2_ADDR FED7  
   __end_of_LCD_LINE3_ADDR FED6     __end_of_LCD_LINE4_ADDR FED5        __end_of_send_nibble 113E  
               ?_send_byte 0001                   __Hrparam 0000                 vfprintf@ap 0064  
                 __Lrparam 0000                 vfprintf@fp 0060         __CFG_BOREN$SBORDIS 000000  
         __size_of___aodiv 0148           __size_of___aomod 0124           __size_of___awmod 0070  
               ?_vfpfcnvrt 004F            ___aodiv@divisor 0014           _interruptHandler 0008  
          ___aodiv@counter 001C           __size_of_lcdInst 000C           __size_of_initLCD 006A  
                 _dtoa$327 003D                   __ptext10 10AC                   __ptext11 1042  
                 __ptext12 0E44                   __ptext13 1150                   __ptext14 0EB0  
                 __ptext15 115C                   __ptext16 113E                   __ptext17 1128  
                 __ptext18 10D6                   __ptext19 0DD4           __size_of_pulse_e 002A  
            __size_of_ctoa 004E              __size_of_main 05CE              __size_of_dtoa 0242  
                 _exit_key 00C3                   int$flags 0074                   _vfprintf 0F1A  
                printf@fmt 0068                   main@tick 00EB           ___aomod@dividend 000C  
                putch@data 000F                 _INTCONbits 000FF2                _send_nibble 1128  
                 intlevel2 0000              _LCD_SIZE_HORZ FED9              _LCD_SIZE_VERT FED8  
              ??_send_byte 000E                   printf@ap 00E7            ___aomod@divisor 0014  
              ??_vfpfcnvrt 0055                lcdInst@data 000F            ___aomod@counter 001C  
             ___aodiv@sign 001D               ___aomod@sign 001D  
